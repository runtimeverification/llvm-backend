#!/bin/bash
set -e

header=false
arity=false
output_file="$(mktemp tmp.out.XXXXXXXXXX)"
verbose=false

trap 'rm -rf "$output_file"' INT TERM EXIT

print_usage () {
cat <<HERE
Usage: $0 -i KORE [-k] [-a] -o OUTPUT
Strip binary KORE data from a file to support concatenative application of
terms. No validation is performed on the input file to ensure that the bytes
being stripped do in fact represent the correct information.

  -i, --input-file FILE   Read initial binary KORE from FILE.
  -k, --kore-header       Remove the KORE header '\xf7KORE' and version number from
                          the file by dropping the first 11 bytes.
  -a, --arity             Remove the arity of a KORE term by dropping the final two
                          bytes.
  -o, --output-file FILE  Write resulting binary term to FILE.
  -v, --verbose           Print commands executed 
  -h, --help              Display this help and exit.
HERE
}

while [[ $# -gt 0 ]]
do
  arg="$1"
  case $arg in
    -i|--input-file)
    input_file="$2"
    shift; shift
    ;;

    -k|--kore-header)
    header=true
    shift
    ;;

    -a|--arity)
    arity=true
    shift
    ;;

    -o|--output-file)
    real_output_file="$2"
    shift; shift
    ;;

    -v|--verbose)
    verbose=true
    shift
    ;;

    -h|--help)
    print_usage
    exit 0
    ;;

    *)
    print_usage
    exit 1
    ;;
  esac
done

if [ -z "$real_output_file" ]; then
  echo 'Must specify output file with -o' >&2
  exit 1
fi

if [ "$verbose" = "true" ]; then
  set -x
fi

if [ "$header" = "true" ]; then
  tail -c +12 "$input_file" > "$output_file"
else
  cp "$input_file" "$output_file"
fi

if [ "$arity" = "true" ]; then
  truncate -s -2 "$output_file"
fi

mv "$output_file" "$real_output_file"
