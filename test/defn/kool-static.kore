// RUN: %interpreter
// RUN: %check-diff
// RUN: %proof-interpreter
// RUN: %check-proof-out
[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}(), functional{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module KOOL-TYPED-STATIC

// imports
  import K []

// sorts
  sort SortCtenvCell{} []
  sort SortBaseClassCell{} []
  sort SortTCellFragment{} []
  sort SortTasksCellFragment{} []
  sort SortLValue{} []
  sort SortTenvCell{} []
  sort SortKCellOpt{} []
  sort SortTasksCellOpt{} []
  hooked-sort SortClassDataCellMap{} [element{}(LblClassDataCellMapItem{}()), cellCollection{}(), concat{}(Lbl'Unds'ClassDataCellMap'Unds'{}()), unit{}(Lbl'Stop'ClassDataCellMap{}()), hook{}("MAP.Map")]
  sort SortIOInt{} []
  sort SortBaseClassesCellOpt{} []
  sort SortClassesCell{} []
  sort SortGeneratedTopCellFragment{} []
  sort SortIOFile{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(723,3,723,32)")]
  sort SortClassDataCellFragment{} []
  sort SortTypes{} []
  sort SortKCell{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortTenvCellOpt{} []
  sort SortOutputCellOpt{} []
  sort SortCtenvTCell{} []
  sort SortParam{} []
  hooked-sort SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1291,3,1291,35)"), hook{}("FLOAT.Float"), hasDomainValues{}()]
  sort SortOutputCell{} []
  hooked-sort SortTaskCellSet{} [element{}(LblTaskCellSetItem{}()), cellCollection{}(), concat{}(Lbl'Unds'TaskCellSet'Unds'{}()), unit{}(Lbl'Stop'TaskCellSet{}()), hook{}("SET.Set")]
  sort SortTCellOpt{} []
  sort SortBaseClassCellOpt{} []
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)")]
  hooked-sort SortString{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1504,3,1504,38)"), hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  sort SortClassesCellOpt{} []
  sort SortTasksCell{} []
  sort SortBaseClassesCell{} []
  sort SortIOString{} []
  sort SortId{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2135,3,2135,20)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  sort SortBlock{} []
  sort SortFieldReference{} []
  sort SortTaskCellFragment{} []
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/kast.md)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), hasDomainValues{}()]
  sort SortReturnTypeCellOpt{} []
  sort SortExp{} []
  hooked-sort SortInt{} [hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(999,3,999,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  sort SortIOError{} []
  sort SortCtenvTCellOpt{} []
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(510,3,510,29)")]
  sort SortClassNameCellOpt{} []
  sort SortInClassCell{} []
  sort SortReturnTypeCell{} []
  sort SortArrayReference{} []
  sort SortClassesCellFragment{} []
  sort SortExps{} []
  sort SortTaskCell{} []
  sort SortClassNameCell{} []
  sort SortClassDataCell{} []
  sort SortType{} []
  sort SortInClassCellOpt{} []
  sort SortBlockOrStmtType{} []
  sort SortKResult{} []
  sort SortCtenvCellOpt{} []
  sort SortStream{} []
  sort SortTCell{} []
  sort SortStmt{} []
  hooked-sort SortBool{} [hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(878,3,878,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  sort SortParams{} []

// symbols
  symbol Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,18,180,50)"), left{}(), format{}("%c!%r %1"), injective{}()]
  symbol Lbl'Hash'E2BIG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#E2BIG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2317,22,2317,55)"), left{}(), format{}("%c#E2BIG%r"), injective{}()]
  symbol Lbl'Hash'EACCES{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EACCES"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2318,22,2318,57)"), left{}(), format{}("%c#EACCES%r"), injective{}()]
  symbol Lbl'Hash'EADDRINUSE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EADDRINUSE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2367,22,2367,65)"), left{}(), format{}("%c#EADDRINUSE%r"), injective{}()]
  symbol Lbl'Hash'EADDRNOTAVAIL{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EADDRNOTAVAIL"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2368,22,2368,71)"), left{}(), format{}("%c#EADDRNOTAVAIL%r"), injective{}()]
  symbol Lbl'Hash'EAFNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EAFNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2366,22,2366,69)"), left{}(), format{}("%c#EAFNOSUPPORT%r"), injective{}()]
  symbol Lbl'Hash'EAGAIN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EAGAIN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2319,22,2319,57)"), left{}(), format{}("%c#EAGAIN%r"), injective{}()]
  symbol Lbl'Hash'EALREADY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EALREADY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2356,22,2356,61)"), left{}(), format{}("%c#EALREADY%r"), injective{}()]
  symbol Lbl'Hash'EBADF{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EBADF"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2320,22,2320,55)"), left{}(), format{}("%c#EBADF%r"), injective{}()]
  symbol Lbl'Hash'EBUSY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EBUSY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2321,22,2321,55)"), left{}(), format{}("%c#EBUSY%r"), injective{}()]
  symbol Lbl'Hash'ECHILD{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ECHILD"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2322,22,2322,57)"), left{}(), format{}("%c#ECHILD%r"), injective{}()]
  symbol Lbl'Hash'ECONNABORTED{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ECONNABORTED"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2372,22,2372,69)"), left{}(), format{}("%c#ECONNABORTED%r"), injective{}()]
  symbol Lbl'Hash'ECONNREFUSED{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ECONNREFUSED"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2380,22,2380,69)"), left{}(), format{}("%c#ECONNREFUSED%r"), injective{}()]
  symbol Lbl'Hash'ECONNRESET{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ECONNRESET"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2373,22,2373,65)"), left{}(), format{}("%c#ECONNRESET%r"), injective{}()]
  symbol Lbl'Hash'EDEADLK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EDEADLK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2323,22,2323,59)"), left{}(), format{}("%c#EDEADLK%r"), injective{}()]
  symbol Lbl'Hash'EDESTADDRREQ{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EDESTADDRREQ"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2358,22,2358,69)"), left{}(), format{}("%c#EDESTADDRREQ%r"), injective{}()]
  symbol Lbl'Hash'EDOM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EDOM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2324,22,2324,53)"), left{}(), format{}("%c#EDOM%r"), injective{}()]
  symbol Lbl'Hash'EEXIST{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EEXIST"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2325,22,2325,57)"), left{}(), format{}("%c#EEXIST%r"), injective{}()]
  symbol Lbl'Hash'EFAULT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EFAULT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2326,22,2326,57)"), left{}(), format{}("%c#EFAULT%r"), injective{}()]
  symbol Lbl'Hash'EFBIG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EFBIG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2327,22,2327,55)"), left{}(), format{}("%c#EFBIG%r"), injective{}()]
  symbol Lbl'Hash'EHOSTDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EHOSTDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2381,22,2381,63)"), left{}(), format{}("%c#EHOSTDOWN%r"), injective{}()]
  symbol Lbl'Hash'EHOSTUNREACH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EHOSTUNREACH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2382,22,2382,69)"), left{}(), format{}("%c#EHOSTUNREACH%r"), injective{}()]
  symbol Lbl'Hash'EINPROGRESS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EINPROGRESS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2355,22,2355,67)"), left{}(), format{}("%c#EINPROGRESS%r"), injective{}()]
  symbol Lbl'Hash'EINTR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EINTR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2328,22,2328,55)"), left{}(), format{}("%c#EINTR%r"), injective{}()]
  symbol Lbl'Hash'EINVAL{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EINVAL"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2329,22,2329,57)"), left{}(), format{}("%c#EINVAL%r"), injective{}()]
  symbol Lbl'Hash'EIO{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EIO"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2330,22,2330,51)"), left{}(), format{}("%c#EIO%r"), injective{}()]
  symbol Lbl'Hash'EISCONN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EISCONN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2375,22,2375,59)"), left{}(), format{}("%c#EISCONN%r"), injective{}()]
  symbol Lbl'Hash'EISDIR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EISDIR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2331,22,2331,57)"), left{}(), format{}("%c#EISDIR%r"), injective{}()]
  symbol Lbl'Hash'ELOOP{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ELOOP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2383,22,2383,55)"), left{}(), format{}("%c#ELOOP%r"), injective{}()]
  symbol Lbl'Hash'EMFILE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EMFILE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2332,22,2332,57)"), left{}(), format{}("%c#EMFILE%r"), injective{}()]
  symbol Lbl'Hash'EMLINK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EMLINK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2333,22,2333,57)"), left{}(), format{}("%c#EMLINK%r"), injective{}()]
  symbol Lbl'Hash'EMSGSIZE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EMSGSIZE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2359,22,2359,61)"), left{}(), format{}("%c#EMSGSIZE%r"), injective{}()]
  symbol Lbl'Hash'ENAMETOOLONG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENAMETOOLONG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2334,22,2334,69)"), left{}(), format{}("%c#ENAMETOOLONG%r"), injective{}()]
  symbol Lbl'Hash'ENETDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENETDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2369,22,2369,61)"), left{}(), format{}("%c#ENETDOWN%r"), injective{}()]
  symbol Lbl'Hash'ENETRESET{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENETRESET"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2371,22,2371,63)"), left{}(), format{}("%c#ENETRESET%r"), injective{}()]
  symbol Lbl'Hash'ENETUNREACH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENETUNREACH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2370,22,2370,67)"), left{}(), format{}("%c#ENETUNREACH%r"), injective{}()]
  symbol Lbl'Hash'ENFILE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENFILE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2335,22,2335,57)"), left{}(), format{}("%c#ENFILE%r"), injective{}()]
  symbol Lbl'Hash'ENOBUFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOBUFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2374,22,2374,59)"), left{}(), format{}("%c#ENOBUFS%r"), injective{}()]
  symbol Lbl'Hash'ENODEV{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENODEV"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2336,22,2336,57)"), left{}(), format{}("%c#ENODEV%r"), injective{}()]
  symbol Lbl'Hash'ENOENT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOENT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2337,22,2337,57)"), left{}(), format{}("%c#ENOENT%r"), injective{}()]
  symbol Lbl'Hash'ENOEXEC{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOEXEC"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2338,22,2338,59)"), left{}(), format{}("%c#ENOEXEC%r"), injective{}()]
  symbol Lbl'Hash'ENOLCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOLCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2339,22,2339,57)"), left{}(), format{}("%c#ENOLCK%r"), injective{}()]
  symbol Lbl'Hash'ENOMEM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOMEM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2340,22,2340,57)"), left{}(), format{}("%c#ENOMEM%r"), injective{}()]
  symbol Lbl'Hash'ENOPROTOOPT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOPROTOOPT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2361,22,2361,67)"), left{}(), format{}("%c#ENOPROTOOPT%r"), injective{}()]
  symbol Lbl'Hash'ENOSPC{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOSPC"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2341,22,2341,57)"), left{}(), format{}("%c#ENOSPC%r"), injective{}()]
  symbol Lbl'Hash'ENOSYS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOSYS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2342,22,2342,57)"), left{}(), format{}("%c#ENOSYS%r"), injective{}()]
  symbol Lbl'Hash'ENOTCONN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTCONN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2376,22,2376,61)"), left{}(), format{}("%c#ENOTCONN%r"), injective{}()]
  symbol Lbl'Hash'ENOTDIR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTDIR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2343,22,2343,59)"), left{}(), format{}("%c#ENOTDIR%r"), injective{}()]
  symbol Lbl'Hash'ENOTEMPTY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTEMPTY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2344,22,2344,63)"), left{}(), format{}("%c#ENOTEMPTY%r"), injective{}()]
  symbol Lbl'Hash'ENOTSOCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTSOCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2357,22,2357,61)"), left{}(), format{}("%c#ENOTSOCK%r"), injective{}()]
  symbol Lbl'Hash'ENOTTY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENOTTY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2345,22,2345,57)"), left{}(), format{}("%c#ENOTTY%r"), injective{}()]
  symbol Lbl'Hash'ENXIO{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ENXIO"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2346,22,2346,55)"), left{}(), format{}("%c#ENXIO%r"), injective{}()]
  symbol Lbl'Hash'EOF{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EOF"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2316,22,2316,51)"), left{}(), format{}("%c#EOF%r"), injective{}()]
  symbol Lbl'Hash'EOPNOTSUPP{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EOPNOTSUPP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2364,22,2364,65)"), left{}(), format{}("%c#EOPNOTSUPP%r"), injective{}()]
  symbol Lbl'Hash'EOVERFLOW{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EOVERFLOW"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2384,22,2384,63)"), left{}(), format{}("%c#EOVERFLOW%r"), injective{}()]
  symbol Lbl'Hash'EPERM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPERM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2347,22,2347,55)"), left{}(), format{}("%c#EPERM%r"), injective{}()]
  symbol Lbl'Hash'EPFNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPFNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2365,22,2365,69)"), left{}(), format{}("%c#EPFNOSUPPORT%r"), injective{}()]
  symbol Lbl'Hash'EPIPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPIPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2348,22,2348,55)"), left{}(), format{}("%c#EPIPE%r"), injective{}()]
  symbol Lbl'Hash'EPROTONOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPROTONOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2362,22,2362,75)"), left{}(), format{}("%c#EPROTONOSUPPORT%r"), injective{}()]
  symbol Lbl'Hash'EPROTOTYPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EPROTOTYPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2360,22,2360,65)"), left{}(), format{}("%c#EPROTOTYPE%r"), injective{}()]
  symbol Lbl'Hash'ERANGE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ERANGE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2349,22,2349,57)"), left{}(), format{}("%c#ERANGE%r"), injective{}()]
  symbol Lbl'Hash'EROFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EROFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2350,22,2350,55)"), left{}(), format{}("%c#EROFS%r"), injective{}()]
  symbol Lbl'Hash'ESHUTDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ESHUTDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2377,22,2377,63)"), left{}(), format{}("%c#ESHUTDOWN%r"), injective{}()]
  symbol Lbl'Hash'ESOCKTNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ESOCKTNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2363,22,2363,75)"), left{}(), format{}("%c#ESOCKTNOSUPPORT%r"), injective{}()]
  symbol Lbl'Hash'ESPIPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ESPIPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2351,22,2351,57)"), left{}(), format{}("%c#ESPIPE%r"), injective{}()]
  symbol Lbl'Hash'ESRCH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ESRCH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2352,22,2352,55)"), left{}(), format{}("%c#ESRCH%r"), injective{}()]
  symbol Lbl'Hash'ETIMEDOUT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ETIMEDOUT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2379,22,2379,63)"), left{}(), format{}("%c#ETIMEDOUT%r"), injective{}()]
  symbol Lbl'Hash'ETOOMANYREFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#ETOOMANYREFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2378,22,2378,69)"), left{}(), format{}("%c#ETOOMANYREFS%r"), injective{}()]
  symbol Lbl'Hash'EWOULDBLOCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EWOULDBLOCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2354,22,2354,67)"), left{}(), format{}("%c#EWOULDBLOCK%r"), injective{}()]
  symbol Lbl'Hash'EXDEV{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}("#EXDEV"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2353,22,2353,55)"), left{}(), format{}("%c#EXDEV%r"), injective{}()]
  hooked-symbol Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.accept"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2482,20,2482,81)"), left{}(), format{}("%c#accept%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'argv'LParRParUnds'K-REFLECTION'Unds'List{}() : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111"), klabel{}("#argv"), hook{}("KREFLECTION.argv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2262,19,2262,61)"), left{}(), format{}("%c#argv%r %c(%r %c)%r"), function{}()]
  symbol Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(SortK{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#buffer"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2586,21,2586,31)"), left{}(), format{}("%c#buffer%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.close"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2456,16,2456,75)"), left{}(), format{}("%c#close%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'configuration'Unds'K-REFLECTION'Unds'K{}() : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), impure{}(), hook{}("KREFLECTION.configuration"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2251,16,2251,84)"), left{}(), format{}("%c#configuration%r"), function{}()]
  symbol Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer!__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer++__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_%%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_%%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("110101"), left{}(), format{}("%c#freezer__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps2_%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_instanceOf__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Id0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezeracquire_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("110101"), left{}(), format{}("%c#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block0_%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("110101"), left{}(), format{}("%c#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1_%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("110101"), left{}(), format{}("%c#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2_%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerjoin_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerltype(_)_KOOL-TYPED-STATIC_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezernew_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exps1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerprint(_);_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exps0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerrelease_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerrendezvous_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerreturn_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezersizeOf(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezerthrow_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(SortK{}, SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("110101"), left{}(), format{}("%c#freezertry_catch(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block0_%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezerwhile(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezerwhile(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1_%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'fresh'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#fresh"), hook{}("KREFLECTION.fresh"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2253,20,2253,80)"), left{}(), format{}("%c#fresh%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.getc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2437,20,2437,89)"), left{}(), format{}("%c#getc%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'getenv'LParUndsRParUnds'K-REFLECTION'Unds'K'Unds'String{}(SortString{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#getenv"), hook{}("KREFLECTION.getenv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2256,16,2256,76)"), left{}(), format{}("%c#getenv%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("ite"), right{}(), terminals{}("1010101"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2186,26,2186,121)"), left{}(), format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}()]
  symbol Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#istream"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2587,21,2587,34)"), left{}(), format{}("%c#istream%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'kompiledDirectory'LParRParUnds'K-REFLECTION'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111"), klabel{}("#kompiledDirectory"), hook{}("KREFLECTION.kompiledDir"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2258,21,2258,83)"), left{}(), format{}("%c#kompiledDirectory%r %c(%r %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.lock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2468,16,2468,91)"), left{}(), format{}("%c#lock%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'log{}(SortString{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), returnsUnit{}(), symbol'Kywd'{}(), priorities{}(), funtional{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#log"), hook{}("IO.logString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2562,16,2562,106)"), left{}(), format{}("%c#log%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'logToFile{}(SortString{}, SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), returnsUnit{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), impure{}(), klabel{}("#logToFile"), hook{}("IO.log"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2553,16,2553,116)"), left{}(), format{}("%c#logToFile%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(SortString{}) : SortIOFile{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#mkstemp"), hook{}("IO.mkstemp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2530,21,2530,84)"), left{}(), format{}("%c#mkstemp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'noParse{}(SortString{}) : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#noParse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2267,22,2267,74)"), left{}(), format{}("%c#noParse%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(SortString{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2407,20,2407,59)"), left{}(), format{}("%c#open%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.open"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2408,18,2408,97)"), left{}(), format{}("%c#open%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(SortInt{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#ostream"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2589,21,2589,34)"), left{}(), format{}("%c#ostream%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#parseInput"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2588,21,2588,48)"), left{}(), format{}("%c#parseInput%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.putc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2447,16,2447,93)"), left{}(), format{}("%c#putc%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortIOString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.read"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2438,23,2438,99)"), left{}(), format{}("%c#read%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#remove"), hook{}("IO.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2541,16,2541,80)"), left{}(), format{}("%c#remove%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.seek"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2423,16,2423,88)"), left{}(), format{}("%c#seek%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.seekEnd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2424,16,2424,96)"), left{}(), format{}("%c#seekEnd%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.shutdownWrite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2483,16,2483,91)"), left{}(), format{}("%c#shutdownWrite%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'sort'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'K{}(SortK{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#sort"), hook{}("KREFLECTION.sort"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2252,21,2252,64)"), left{}(), format{}("%c#sort%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2503,19,2503,46)"), left{}(), format{}("%c#stderr%r"), function{}()]
  symbol Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2501,18,2501,46)"), left{}(), format{}("%c#stdin%r"), function{}()]
  symbol Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2502,19,2502,46)"), left{}(), format{}("%c#stdout%r"), function{}()]
  hooked-symbol Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#system"), hook{}("IO.system"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2519,20,2519,74)"), left{}(), format{}("%c#system%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'systemResult{}(SortInt{}, SortString{}, SortString{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("#systemResult"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2520,20,2520,143)"), left{}(), format{}("%c#systemResult%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), hook{}("IO.tell"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2422,20,2422,77)"), left{}(), format{}("%c#tell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'tempFile{}(SortString{}, SortInt{}) : SortIOFile{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("#tempFile"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2532,21,2532,93)"), left{}(), format{}("%c#tempFile%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("111"), impure{}(), hook{}("IO.time"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2492,18,2492,67)"), left{}(), format{}("%c#time%r %c(%r %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'trace{}(SortKItem{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), returnsUnit{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#trace"), hook{}("IO.traceTerm"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2573,16,2573,103)"), left{}(), format{}("%c#trace%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'traceK{}(SortK{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), returnsUnit{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("#traceK"), hook{}("IO.traceTerm"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2574,16,2574,103)"), left{}(), format{}("%c#traceK%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbl'Hash'unknownIOError{}(SortInt{}) : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#unknownIOError"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2316,54,2316,90)"), left{}(), format{}("%c#unknownIOError%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.unlock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2469,16,2469,95)"), left{}(), format{}("%c#unlock%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'unparseKORE'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'Sort{SortSort}(SortSort) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("#unparseKORE"), hook{}("KREFLECTION.printKORE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2266,28,2266,86)"), left{}(), format{}("%c#unparseKORE%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(SortInt{}, SortString{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), impure{}(), hook{}("IO.write"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2448,16,2448,93)"), left{}(), format{}("%c#write%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(SortId{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("1010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(160,18,160,53)"), left{}(), format{}("%c(%r %1 %c)%r %2"), injective{}()]
  symbol Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(158,18,158,26)"), left{}(), format{}("%c++%r %1"), injective{}()]
  symbol Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(163,18,163,50)"), left{}(), format{}("%c-%r %1"), injective{}()]
  hooked-symbol Lbl'Stop'ClassDataCellMap{}() : SortClassDataCellMap{} [priorities{}(), right{}(), terminals{}("1"), hook{}("MAP.unit"), left{}(), format{}("%c.ClassDataCellMap%r"), function{}()]
  symbol Lbl'Stop'CtenvCell{}() : SortCtenvCell{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%c.CtenvCell%r"), injective{}()]
  symbol Lbl'Stop'CtenvTCell{}() : SortCtenvTCell{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%c.CtenvTCell%r"), injective{}()]
  symbol Lbl'Stop'InClassCell{}() : SortInClassCell{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%c.InClassCell%r"), injective{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_nil"), terminals{}("1"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(747,19,747,142)"), left{}(), format{}("%c.List%r"), function{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}() : SortExps{} [functional{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"exps\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,19,190,64)"), left{}(), format{}("%c.Exps%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}() : SortParams{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"_,__KOOL-TYPED-STATIC-SYNTAX\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,21,140,36)"), left{}(), format{}("%c.Params%r"), injective{}()]
  symbol Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}() : SortTypes{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1"), klabel{}(".List{\"exps\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,20,133,56)"), left{}(), format{}("%c.Types%r"), injective{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,124)"), left{}(), format{}("%c.Map%r"), function{}()]
  symbol Lbl'Stop'ReturnTypeCell{}() : SortReturnTypeCell{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%c.ReturnTypeCell%r"), injective{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(539,18,539,118)"), left{}(), format{}("%c.Set%r"), function{}()]
  symbol Lbl'Stop'TCell{}() : SortTCell{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%c.TCell%r"), injective{}()]
  hooked-symbol Lbl'Stop'TaskCellSet{}() : SortTaskCellSet{} [priorities{}(), right{}(), terminals{}("1"), hook{}("SET.unit"), left{}(), format{}("%c.TaskCellSet%r"), function{}()]
  symbol Lbl'Stop'TasksCell{}() : SortTasksCell{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%c.TasksCell%r"), injective{}()]
  symbol Lbl'Stop'TenvCell{}() : SortTenvCell{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%c.TenvCell%r"), injective{}()]
  symbol Lbl'-LT-'T'-GT-'{}(SortTasksCell{}, SortClassesCell{}) : SortTCell{} [unit{}(Lbl'Stop'TCell{}()), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("yellow"), cellName{}("T"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("1001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<T>%r%i%n%1%n%2%d%n%c</T>%r"), colors{}("yellow,yellow"), multiplicity{}("?"), injective{}(), cell{}()]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortTasksCellOpt{}, SortClassesCellOpt{}) : SortTCellFragment{} [functional{}(), constructor{}(), cellFragment{}("TCell"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%c<T>-fragment%r %1 %2 %c</T>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'baseClass'-GT-'{}(SortK{}) : SortBaseClassCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("Fuchsia"), cellName{}("baseClass"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<baseClass>%r%i%n%1%d%n%c</baseClass>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'baseClasses'-GT-'{}(SortSet{}) : SortBaseClassesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("Fuchsia"), cellName{}("baseClasses"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<baseClasses>%r%i%n%1%d%n%c</baseClasses>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'classData'-GT-'{}(SortClassNameCell{}, SortBaseClassCell{}, SortBaseClassesCell{}, SortCtenvCell{}) : SortClassDataCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cellName{}("classData"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("100001"), type{}("Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<classData>%r%i%n%1%n%2%n%3%n%4%d%n%c</classData>%r"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'classData'-GT-'-fragment{}(SortClassNameCellOpt{}, SortBaseClassCellOpt{}, SortBaseClassesCellOpt{}, SortCtenvCellOpt{}) : SortClassDataCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ClassDataCell"), priorities{}(), right{}(), terminals{}("100001"), left{}(), format{}("%c<classData>-fragment%r %1 %2 %3 %4 %c</classData>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'className'-GT-'{}(SortId{}) : SortClassNameCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("Fuchsia"), cellName{}("className"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<className>%r%i%n%1%d%n%c</className>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'classes'-GT-'{}(SortClassDataCellMap{}) : SortClassesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("Fuchsia"), cellName{}("classes"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<classes>%r%i%n%1%d%n%c</classes>%r"), colors{}("Fuchsia,Fuchsia"), injective{}(), cell{}()]
  symbol Lbl'-LT-'classes'-GT-'-fragment{}(SortClassDataCellMap{}) : SortClassesCellFragment{} [functional{}(), constructor{}(), cellFragment{}("ClassesCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<classes>-fragment%r %1 %c</classes>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'ctenv'-GT-'{}(SortMap{}) : SortCtenvCell{} [unit{}(Lbl'Stop'CtenvCell{}()), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("blue"), cellName{}("ctenv"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<ctenv>%r%i%n%1%d%n%c</ctenv>%r"), colors{}("blue,blue"), multiplicity{}("?"), injective{}(), cell{}()]
  symbol Lbl'-LT-'ctenvT'-GT-'{}(SortMap{}) : SortCtenvTCell{} [unit{}(Lbl'Stop'CtenvTCell{}()), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("blue"), cellName{}("ctenvT"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<ctenvT>%r%i%n%1%d%n%c</ctenvT>%r"), colors{}("blue,blue"), multiplicity{}("?"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}, SortOutputCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cellName{}("generatedTop"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("10001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<generatedTop>%r%i%n%1%n%3%d%n%c</generatedTop>%r"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortOutputCellOpt{}) : SortGeneratedTopCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'inClass'-GT-'{}(SortK{}) : SortInClassCell{} [unit{}(Lbl'Stop'InClassCell{}()), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("Fuchsia"), cellName{}("inClass"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<inClass>%r%i%n%1%d%n%c</inClass>%r"), colors{}("Fuchsia,Fuchsia"), multiplicity{}("?"), injective{}(), cell{}()]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("green"), cellName{}("k"), maincell{}(), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<k>%r%i%n%1%d%n%c</k>%r"), colors{}("green,green"), injective{}(), cell{}()]
  symbol Lbl'-LT-'output'-GT-'{}(SortList{}) : SortOutputCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("brown"), cellName{}("output"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), stream{}("stdout"), format{}("%c<output>%r%i%n%1%d%n%c</output>%r"), colors{}("brown,brown"), injective{}(), cell{}()]
  symbol Lbl'-LT-'returnType'-GT-'{}(SortType{}) : SortReturnTypeCell{} [unit{}(Lbl'Stop'ReturnTypeCell{}()), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("black"), cellName{}("returnType"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<returnType>%r%i%n%1%d%n%c</returnType>%r"), colors{}("black,black"), multiplicity{}("?"), injective{}(), cell{}()]
  symbol Lbl'-LT-'task'-GT-'{}(SortKCell{}, SortTenvCell{}, SortCtenvTCell{}, SortReturnTypeCell{}, SortInClassCell{}) : SortTaskCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("yellow"), cellName{}("task"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("1000001"), type{}("Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<task>%r%i%n%1%n%2%n%3%n%4%n%5%d%n%c</task>%r"), colors{}("yellow,yellow"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'task'-GT-'-fragment{}(SortKCellOpt{}, SortTenvCellOpt{}, SortCtenvTCellOpt{}, SortReturnTypeCellOpt{}, SortInClassCellOpt{}) : SortTaskCellFragment{} [functional{}(), constructor{}(), cellFragment{}("TaskCell"), priorities{}(), right{}(), terminals{}("1000001"), left{}(), format{}("%c<task>-fragment%r %1 %2 %3 %4 %5 %c</task>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'tasks'-GT-'{}(SortTaskCellSet{}) : SortTasksCell{} [unit{}(Lbl'Stop'TasksCell{}()), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("orange"), cellName{}("tasks"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<tasks>%r%i%n%1%d%n%c</tasks>%r"), colors{}("orange,orange"), multiplicity{}("?"), injective{}(), cell{}()]
  symbol Lbl'-LT-'tasks'-GT-'-fragment{}(SortTaskCellSet{}) : SortTasksCellFragment{} [functional{}(), constructor{}(), cellFragment{}("TasksCell"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<tasks>-fragment%r %1 %c</tasks>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'tenv'-GT-'{}(SortMap{}) : SortTenvCell{} [unit{}(Lbl'Stop'TenvCell{}()), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), color{}("cyan"), cellName{}("tenv"), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,17,304,71)"), left{}(), format{}("%c<tenv>%r%i%n%1%d%n%c</tenv>%r"), colors{}("cyan,cyan"), multiplicity{}("?"), injective{}(), cell{}()]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("Base2String"), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1633,21,1633,99)"), left{}(), format{}("%cBase2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(SortBool{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Bool2String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1583,21,1583,56)"), left{}(), format{}("%cBool2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblClassDataCellMap'Coln'in'Unds'keys{}(SortClassNameCell{}, SortClassDataCellMap{}) : SortBool{} [functional{}(), total{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol LblClassDataCellMapItem{}(SortClassNameCell{}, SortClassDataCell{}) : SortClassDataCellMap{} [priorities{}(), right{}(), terminals{}("110101"), hook{}("MAP.element"), left{}(), format{}("%2"), function{}()]
  symbol LblClassDataCellMapKey{}(SortClassDataCell{}) : SortClassNameCell{} [functional{}(), total{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cClassDataCellMapKey%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Float2String"), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1610,21,1610,101)"), left{}(), format{}("%cFloat2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("FloatFormat"), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1611,21,1611,122)"), left{}(), format{}("%cFloat2String%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(SortId{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Id2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2142,21,2142,85)"), left{}(), format{}("%cId2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Int2String"), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1632,21,1632,99)"), left{}(), format{}("%cInt2String%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(766,20,766,99)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(813,19,813,120)"), left{}(), format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_elem"), terminals{}("1101"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(755,19,755,132)"), left{}(), format{}("%cListItem%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,113)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), prefer{}(), right{}(), terminals{}("010101"), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,140)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(579,18,579,142)"), left{}(), format{}("%1 %c-Set%r %2"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,19,587,102)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,18,547,119)"), left{}(), format{}("%cSetItem%r %c(%r %1 %c)%r"), injective{}(), function{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("String2Base"), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1634,21,1634,99)"), left{}(), format{}("%cString2Base%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1589,19,1589,49)"), left{}(), format{}("%cString2Bool%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING-COMMON'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Float"), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1612,21,1612,94)"), left{}(), format{}("%cString2Float%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(SortString{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Id"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2143,17,2143,80)"), left{}(), format{}("%cString2Id%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("String2Int"), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1631,21,1631,92)"), left{}(), format{}("%cString2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblTaskCellSetItem{}(SortTaskCell{}) : SortTaskCellSet{} [priorities{}(), right{}(), terminals{}("1101"), hook{}("SET.element"), left{}(), format{}("%1"), function{}()]
  symbol Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), non-assoc{}(), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,18,179,61)"), left{}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c!=%r %2"), injective{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1047,18,1047,171)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %c%%Int%r %2"), function{}()]
  symbol Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,18,169,56)"), left{}(Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c%%%r %2"), injective{}()]
  symbol Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,18,182,56)"), left{}(Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c&&%r %2"), injective{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("andInt"), terminals{}("010"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1058,18,1058,184)"), left{}(Lbl'UndsAnd-'Int'Unds'{}()), format{}("%1 %c&Int%r %2"), function{}()]
  symbol Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("0101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,18,162,50)"), left{}(), format{}("%1 %c(%r %2 %c)%r"), injective{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("*"), right{}(), terminals{}("010"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1043,18,1043,183)"), left{}(Lbl'Unds'modInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c*Int%r %2"), function{}()]
  symbol Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,18,167,56)"), left{}(Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c*%r %2"), injective{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("+"), right{}(), terminals{}("010"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1052,18,1052,180)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c+Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1522,21,1522,135)"), left{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}()), format{}("%1 %c+String%r %2"), function{}()]
  symbol Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,18,171,56)"), left{}(Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c+%r %2"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortExps{} [functional{}(), userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,19,190,64)"), left{}(), format{}("%1 %c,%r %2"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(SortParam{}, SortParams{}) : SortParams{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,21,140,36)"), left{}(), format{}("%1 %c,%r %2"), injective{}()]
  symbol Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(SortType{}, SortTypes{}) : SortTypes{} [functional{}(), constructor{}(), userList{}("*"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("010"), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,20,133,56)"), left{}(), format{}("%1 %c,%r %2"), injective{}()]
  symbol Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(SortTypes{}, SortType{}) : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,19,131,34)"), left{}(), format{}("%1 %c->%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("-"), right{}(), terminals{}("010"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1053,18,1053,174)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c-Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,116)"), left{}(), format{}("%1 %c-Map%r %2"), function{}()]
  symbol Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,18,172,56)"), left{}(Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c-%r %2"), injective{}()]
  symbol Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(SortExp{}, SortId{}) : SortFieldReference{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,29,151,60)"), left{}(), format{}("%1 %c.%r %2"), injective{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1046,18,1046,173)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c/Int%r %2"), function{}()]
  symbol Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,18,168,56)"), left{}(Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c/%r %2"), injective{}()]
  symbol Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("01"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,19,200,67)"), left{}(), format{}("%1 %c;%r"), injective{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shlInt"), terminals{}("010"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1056,18,1056,173)"), left{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}()), format{}("%1 %c<<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<="), right{}(), terminals{}("010"), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1114,19,1114,172)"), left{}(Lbl'Unds-LT-Eqls'Int'Unds'{}()), format{}("%1 %c<=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,87)"), left{}(), format{}("%1 %c<=Map%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(596,19,596,81)"), left{}(), format{}("%1 %c<=Set%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1667,19,1667,78)"), left{}(), format{}("%1 %c<=String%r %2"), function{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), non-assoc{}(), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,18,175,61)"), left{}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c<=%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<"), right{}(), terminals{}("010"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1115,19,1115,167)"), left{}(Lbl'Unds-LT-'Int'Unds'{}()), format{}("%1 %c<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1666,19,1666,78)"), left{}(), format{}("%1 %c<String%r %2"), function{}()]
  symbol Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), non-assoc{}(), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,18,174,61)"), left{}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c<%r %2"), injective{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(919,19,919,128)"), left{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}()), format{}("%1 %c=/=Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1119,19,1119,184)"), left{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}()), format{}("%1 %c=/=Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), notEqualEqualK{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2182,19,2182,166)"), left{}(Lbl'UndsEqlsEqls'K'Unds'{}(),Lbl'UndsEqlsSlshEqls'K'Unds'{}()), format{}("%1 %c=/=K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1663,19,1663,90)"), left{}(Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}()), format{}("%1 %c=/=String%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(918,19,918,120)"), left{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), format{}("%1 %c==Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1118,19,1118,173)"), left{}(Lbl'UndsEqlsEqls'Int'Unds'{}()), format{}("%1 %c==Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("="), right{}(), terminals{}("010"), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2181,19,2181,152)"), left{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(),Lbl'UndsEqlsEqls'K'Unds'{}()), format{}("%1 %c==K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1662,19,1662,84)"), left{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}()), format{}("%1 %c==String%r %2"), function{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), non-assoc{}(), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,18,178,61)"), left{}(Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c==%r %2"), injective{}()]
  symbol Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,18,185,60)"), left{}(), format{}("%1 %c=%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">="), right{}(), terminals{}("010"), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1116,19,1116,172)"), left{}(Lbl'Unds-GT-Eqls'Int'Unds'{}()), format{}("%1 %c>=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1669,19,1669,78)"), left{}(), format{}("%1 %c>=String%r %2"), function{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), non-assoc{}(), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,18,177,61)"), left{}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c>=%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shrInt"), terminals{}("010"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1055,18,1055,173)"), left{}(Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}()), format{}("%1 %c>>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">"), right{}(), terminals{}("010"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1117,19,1117,167)"), left{}(Lbl'Unds-GT-'Int'Unds'{}()), format{}("%1 %c>Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1668,19,1668,78)"), left{}(), format{}("%1 %c>String%r %2"), function{}()]
  symbol Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), non-assoc{}(), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,18,176,61)"), left{}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c>%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'ClassDataCellMap'Unds'{}(SortClassDataCellMap{}, SortClassDataCellMap{}) : SortClassDataCellMap{} [unit{}(Lbl'Stop'ClassDataCellMap{}()), element{}(LblClassDataCellMapItem{}()), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("MAP.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<classData>")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(Lbl'Stop'List{}()), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), element{}(LblListItem{}()), symbol'Kywd'{}(), priorities{}(), right{}(), assoc{}(), smtlib{}("smt_seq_concat"), terminals{}("00"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(739,19,739,188)"), left{}(Lbl'Unds'List'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(Lbl'Stop'Map{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), symbol'Kywd'{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,173)"), left{}(Lbl'Unds'Map'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(Lbl'Stop'Set{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), symbol'Kywd'{}(), idem{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,18,531,165)"), left{}(Lbl'Unds'Set'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'TaskCellSet'Unds'{}(SortTaskCellSet{}, SortTaskCellSet{}) : SortTaskCellSet{} [unit{}(Lbl'Stop'TaskCellSet{}()), element{}(LblTaskCellSetItem{}()), idem{}(), comm{}(), priorities{}(), cellCollection{}(), right{}(), assoc{}(), terminals{}("00"), hook{}("SET.concat"), left{}(), format{}("%1 %2"), avoid{}(), function{}(), wrapElement{}("<task>")]
  symbol Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(SortType{}) : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("011"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,19,129,31)"), left{}(), format{}("%1 %c[%r %c]%r"), injective{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(775,19,775,108)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010111"), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,117)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}()]
  symbol Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(SortExp{}, SortExps{}) : SortArrayReference{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("0101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,29,152,57)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), injective{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010110"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,134)"), left{}(), format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("(mod (^ #1 #2) #3)"), right{}(), terminals{}("0100"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1041,18,1041,139)"), left{}(Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'UndsXor-'Int'Unds'{}()), format{}("%1 %c^%%Int%r %2 %3"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("^"), right{}(), terminals{}("010"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1040,18,1040,178)"), left{}(Lbl'UndsXor-'Int'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}()), format{}("%1 %c^Int%r %2"), function{}()]
  symbol Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(SortType{}, SortId{}, SortParams{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("001010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,19,143,47)"), left{}(), format{}("%1 %2 %c(%r %3 %c)%r %4"), injective{}()]
  symbol Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(SortType{}, SortExps{}) : SortStmt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), anywhere{}(), priorities{}(), right{}(), terminals{}("001"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,19,142,40)"), left{}(), format{}("%1 %2 %c;%r"), injective{}(), avoid{}()]
  symbol Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(SortType{}, SortId{}) : SortParam{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,20,139,27)"), left{}(), format{}("%1 %2"), injective{}()]
  symbol Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(SortStmt{}, SortStmt{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}()), terminals{}("00"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,19,215,74)"), left{}(), format{}("%1 %2"), injective{}(), seqstrict{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(911,19,911,185)"), left{}(Lbl'Unds'andBool'Unds'{}()), format{}("%1 %candBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(912,19,912,147)"), left{}(Lbl'Unds'andThenBool'Unds'{}()), format{}("%1 %candThenBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1049,18,1049,122)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}()), format{}("%1 %cdivInt%r %2"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1128,19,1128,53)"), left{}(), format{}("%1 %cdividesInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("=>"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(916,19,916,146)"), left{}(Lbl'Unds'impliesBool'Unds'{}()), format{}("%1 %cimpliesBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(822,19,822,97)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,89)"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  symbol Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(SortExp{}, SortId{}) : SortExp{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,18,159,53)"), left{}(), format{}("%1 %cinstanceOf%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1050,18,1050,122)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %cmodInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(914,19,914,180)"), left{}(Lbl'Unds'orBool'Unds'{}()), format{}("%1 %corBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(915,19,915,144)"), left{}(Lbl'Unds'orElseBool'Unds'{}()), format{}("%1 %corElseBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("xor"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,19,913,139)"), left{}(Lbl'Unds'xorBool'Unds'{}()), format{}("%1 %cxorBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("xorInt"), terminals{}("010"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1060,18,1060,190)"), left{}(Lbl'Unds'xorInt'Unds'{}()), format{}("%1 %cxorInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Stop'Map{}(),Lbl'Unds'Map'Unds'{}()), right{}(Lbl'UndsPipe'-'-GT-Unds'{}()), terminals{}("010"), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,151)"), left{}(Lbl'UndsPipe'-'-GT-Unds'{}()), format{}("%1 %c|->%r %2"), injective{}(), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(), right{}(), smtlib{}("orInt"), terminals{}("010"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1062,18,1062,181)"), left{}(Lbl'UndsPipe'Int'Unds'{}()), format{}("%1 %c|Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), comm{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.union"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,18,558,92)"), left{}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}()), format{}("%1 %c|Set%r %2"), function{}()]
  symbol Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(SortExp{}, SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,18,183,56)"), left{}(Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), format{}("%1 %c||%r %2"), injective{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), right{}(), terminals{}("1101"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1079,18,1079,119)"), left{}(), format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,19,211,67)"), left{}(), format{}("%cacquire%r %1 %c;%r"), injective{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1104,18,1104,103)"), left{}(), format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}() : SortBlockOrStmtType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(314,30,314,37)"), left{}(), format{}("%cblock%r"), injective{}()]
  symbol Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}() : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,36,127,42)"), left{}(), format{}("%cbool%r"), injective{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("categoryChar"), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1679,21,1679,81)"), left{}(), format{}("%ccategoryChar%r %c(%r %1 %c)%r"), function{}()]
  symbol LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(SortId{}, SortType{}, SortId{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("checkMethod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(890,20,890,43)"), left{}(), format{}("%ccheckMethod%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), injective{}()]
  symbol LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(SortTypes{}, SortTypes{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("checkSubtype"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(837,20,837,45)"), left{}(), format{}("%ccheckSubtype%r %c(%r %1 %c,%r %2 %c)%r"), injective{}()]
  symbol LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(SortTypes{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("checkType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(864,20,864,36)"), left{}(), format{}("%ccheckType%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(614,20,614,95)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("chrChar"), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1539,21,1539,70)"), left{}(), format{}("%cchrChar%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblclass{}(SortId{}) : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("0"), klabel{}("class"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,19,128,74)"), left{}(), format{}("%1"), injective{}(), avoid{}()]
  symbol Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(SortId{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,19,144,35)"), left{}(), format{}("%cclass%r %1 %2"), injective{}()]
  symbol Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(SortId{}, SortId{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("10100"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,19,145,48)"), left{}(), format{}("%cclass%r %1 %cextends%r %2 %3"), injective{}()]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("110101"), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1652,18,1652,146)"), left{}(), format{}("%ccountAllOccurrences%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("directionalityChar"), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1680,21,1680,87)"), left{}(), format{}("%cdirectionalityChar%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(911,20,911,29)"), left{}(), format{}("%cdiscard%r"), injective{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(803,19,803,100)"), left{}(), format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("findChar"), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1576,18,1576,116)"), left{}(), format{}("%cfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("findString"), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1565,18,1565,111)"), left{}(), format{}("%cfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblfor'LParUndsUndsSClnUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(SortStmt{}, SortExp{}, SortExp{}, SortBlock{}) : SortStmt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), macro{}(), priorities{}(), right{}(), terminals{}("11001010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(204,19,204,66)"), left{}(), format{}("%cfor%r %c(%r %1 %2 %c;%r %3 %c)%r %4"), injective{}()]
  symbol LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), freshGenerator{}(), klabel{}("freshId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2144,17,2144,75)"), left{}(), format{}("%cfreshId%r %c(%r %1 %c)%r"), private{}(), function{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1253,18,1253,77)"), left{}(), format{}("%cfreshInt%r %c(%r %1 %c)%r"), private{}(), function{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblgetKLabel'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'K{}(SortK{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("getKLabel"), hook{}("KREFLECTION.getKLabel"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2254,20,2254,73)"), left{}(), format{}("%cgetKLabel%r %c(%r %1 %c)%r"), function{}()]
  symbol LblgetTypes'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Types'Unds'Params{}(SortParams{}) : SortTypes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("getTypes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(417,20,417,48)"), left{}(), format{}("%cgetTypes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblif'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), macro{}(), priorities{}(), right{}(), terminals{}("11010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(202,19,202,66)"), left{}(), format{}("%cif%r %c(%r %1 %c)%r %2"), injective{}()]
  symbol Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(SortExp{}, SortBlock{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1101010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,19,201,74)"), left{}(), format{}("%cif%r %c(%r %1 %c)%r %2 %celse%r %3"), injective{}(), avoid{}()]
  symbol LblinitBaseClassCell{}() : SortBaseClassCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitBaseClassCell%r"), function{}()]
  symbol LblinitBaseClassesCell{}() : SortBaseClassesCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitBaseClassesCell%r"), function{}()]
  symbol LblinitClassDataCell{}() : SortClassDataCellMap{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitClassDataCell%r"), function{}()]
  symbol LblinitClassNameCell{}() : SortClassNameCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitClassNameCell%r"), function{}()]
  symbol LblinitClassesCell{}() : SortClassesCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitClassesCell%r"), function{}()]
  symbol LblinitCtenvCell{}() : SortCtenvCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitCtenvCell%r"), function{}()]
  symbol LblinitCtenvTCell{}() : SortCtenvTCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitCtenvTCell%r"), function{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGeneratedCounterCell%r"), function{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitInClassCell{}() : SortInClassCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitInClassCell%r"), function{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitKCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitOutputCell{}(SortMap{}) : SortOutputCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitOutputCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitReturnTypeCell{}() : SortReturnTypeCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitReturnTypeCell%r"), function{}()]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitTCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitTaskCell{}(SortMap{}) : SortTaskCellSet{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitTaskCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitTasksCell{}(SortMap{}) : SortTasksCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitTasksCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitTenvCell{}() : SortTenvCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitTenvCell%r"), function{}()]
  symbol Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}() : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,28,127,33)"), left{}(), format{}("%cint%r"), injective{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), comm{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(569,18,569,90)"), left{}(), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblisArrayReference{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ArrayReference"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisArrayReference%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBaseClassCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BaseClassCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBaseClassCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBaseClassCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BaseClassCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBaseClassCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBaseClassesCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BaseClassesCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBaseClassesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBaseClassesCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BaseClassesCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBaseClassesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBlock{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Block"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBlock%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBlockOrStmtType{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BlockOrStmtType"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBlockOrStmtType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Bool"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBool%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassDataCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassDataCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassDataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassDataCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassDataCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassDataCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassDataCellMap{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassDataCellMap"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassDataCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassNameCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassNameCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassNameCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassNameCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassNameCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassNameCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassesCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassesCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassesCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassesCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassesCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisClassesCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ClassesCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisClassesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCtenvCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CtenvCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCtenvCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCtenvCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CtenvCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCtenvCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCtenvTCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CtenvTCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCtenvTCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisCtenvTCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("CtenvTCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisCtenvTCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExp{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Exp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisExps{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Exps"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisExps%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFieldReference{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("FieldReference"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFieldReference%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Float"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisFloat%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedTopCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIOError{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IOError"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIOError%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIOFile{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IOFile"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIOFile%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIOInt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IOInt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIOInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisIOString{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("IOString"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisIOString%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisId{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Id"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisId%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInClassCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("InClassCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInClassCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInClassCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("InClassCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInClassCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Int"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("K"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisK%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KConfigVar"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKConfigVar%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KItem"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKItem%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKResult{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KResult"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKResult%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisLValue{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("LValue"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisLValue%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("List"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisList%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Map"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOutputCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("OutputCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOutputCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisOutputCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("OutputCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisOutputCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisParam{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Param"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisParam%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisParams{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Params"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisParams%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisReturnTypeCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ReturnTypeCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisReturnTypeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisReturnTypeCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("ReturnTypeCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisReturnTypeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Set"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisSet%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStmt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Stmt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStmt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisStream{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Stream"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisStream%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisString{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("String"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisString%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTaskCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TaskCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTaskCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTaskCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TaskCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTaskCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTaskCellSet{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TaskCellSet"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTaskCellSet%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTasksCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TasksCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTasksCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTasksCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TasksCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTasksCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTasksCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TasksCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTasksCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTenvCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TenvCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTenvCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTenvCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("TenvCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTenvCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisType{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Type"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisType%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisTypes{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Types"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisTypes%r %c(%r %1 %c)%r"), function{}()]
  symbol Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,19,210,67)"), left{}(), format{}("%cjoin%r %1 %c;%r"), injective{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,82)"), left{}(), format{}("%ckeys%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), hook{}("MAP.keys_list"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), left{}(), format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("lengthString"), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1530,18,1530,80)"), left{}(), format{}("%clengthString%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1090,18,1090,75)"), left{}(), format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("ltype"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(406,18,406,28)"), left{}(), format{}("%cltype%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(784,19,784,82)"), left{}(), format{}("%cmakeList%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 #2) #2 #1)"), right{}(), terminals{}("110101"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1071,18,1071,114)"), left{}(), format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 #2) #1 #2)"), right{}(), terminals{}("110101"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1070,18,1070,114)"), left{}(), format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblmkDecls'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Stmt'Unds'Params{}(SortParams{}) : SortStmt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("mkDecls"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,19,397,46)"), left{}(), format{}("%cmkDecls%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblnewUUID'Unds'STRING-COMMON'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1"), impure{}(), hook{}("STRING.uuid"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1682,21,1682,68)"), left{}(), format{}("%cnewUUID%r"), function{}()]
  symbol Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(SortId{}, SortExps{}) : SortExp{} [functional{}(), constructor{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(161,18,161,53)"), left{}(), format{}("%cnew%r %1 %c(%r %2 %c)%r"), injective{}()]
  symbol LblnoBaseClassCell{}() : SortBaseClassCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("BaseClassCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoBaseClassCell%r"), injective{}()]
  symbol LblnoBaseClassesCell{}() : SortBaseClassesCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("BaseClassesCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoBaseClassesCell%r"), injective{}()]
  symbol LblnoClassNameCell{}() : SortClassNameCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ClassNameCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoClassNameCell%r"), injective{}()]
  symbol LblnoClassesCell{}() : SortClassesCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ClassesCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoClassesCell%r"), injective{}()]
  symbol LblnoCtenvCell{}() : SortCtenvCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("CtenvCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoCtenvCell%r"), injective{}()]
  symbol LblnoCtenvTCell{}() : SortCtenvTCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("CtenvTCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoCtenvTCell%r"), injective{}()]
  symbol LblnoInClassCell{}() : SortInClassCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("InClassCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoInClassCell%r"), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("KCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoKCell%r"), injective{}()]
  symbol LblnoOutputCell{}() : SortOutputCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("OutputCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoOutputCell%r"), injective{}()]
  symbol LblnoReturnTypeCell{}() : SortReturnTypeCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("ReturnTypeCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoReturnTypeCell%r"), injective{}()]
  symbol LblnoTCell{}() : SortTCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTCell%r"), injective{}()]
  symbol LblnoTasksCell{}() : SortTasksCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TasksCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTasksCell%r"), injective{}()]
  symbol LblnoTenvCell{}() : SortTenvCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("TenvCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoTenvCell%r"), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("not"), boolOperation{}(), right{}(), terminals{}("10"), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(910,19,910,172)"), left{}(), format{}("%cnotBool%r %1"), function{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("ordChar"), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1540,18,1540,70)"), left{}(), format{}("%cordChar%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(SortExps{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("11011"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(207,19,207,67)"), left{}(), format{}("%cprint%r %c(%r %1 %c)%r %c;%r"), injective{}()]
  symbol Lblproject'ColnHash'tempFile'Coln'fd{}(SortIOFile{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cfd%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'ColnHash'tempFile'Coln'path{}(SortIOFile{}) : SortString{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cpath%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'ColnHash'unknownIOError'Coln'errno{}(SortIOError{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cerrno%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ArrayReference{}(SortK{}) : SortArrayReference{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ArrayReference%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BaseClassCell{}(SortK{}) : SortBaseClassCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BaseClassCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BaseClassCellOpt{}(SortK{}) : SortBaseClassCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BaseClassCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BaseClassesCell{}(SortK{}) : SortBaseClassesCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BaseClassesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BaseClassesCellOpt{}(SortK{}) : SortBaseClassesCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BaseClassesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Block{}(SortK{}) : SortBlock{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Block%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BlockOrStmtType{}(SortK{}) : SortBlockOrStmtType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BlockOrStmtType%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Bool%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassDataCell{}(SortK{}) : SortClassDataCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassDataCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassDataCellFragment{}(SortK{}) : SortClassDataCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassDataCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassDataCellMap{}(SortK{}) : SortClassDataCellMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassDataCellMap%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassNameCell{}(SortK{}) : SortClassNameCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassNameCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassNameCellOpt{}(SortK{}) : SortClassNameCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassNameCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassesCell{}(SortK{}) : SortClassesCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassesCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassesCellFragment{}(SortK{}) : SortClassesCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassesCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ClassesCellOpt{}(SortK{}) : SortClassesCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ClassesCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CtenvCell{}(SortK{}) : SortCtenvCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CtenvCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CtenvCellOpt{}(SortK{}) : SortCtenvCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CtenvCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CtenvTCell{}(SortK{}) : SortCtenvTCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CtenvTCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'CtenvTCellOpt{}(SortK{}) : SortCtenvTCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:CtenvTCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Exp{}(SortK{}) : SortExp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Exp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Exps{}(SortK{}) : SortExps{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Exps%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'FieldReference{}(SortK{}) : SortFieldReference{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:FieldReference%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Float%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IOError{}(SortK{}) : SortIOError{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IOError%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IOFile{}(SortK{}) : SortIOFile{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IOFile%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IOInt{}(SortK{}) : SortIOInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IOInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'IOString{}(SortK{}) : SortIOString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:IOString%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Id%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'InClassCell{}(SortK{}) : SortInClassCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:InClassCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'InClassCellOpt{}(SortK{}) : SortInClassCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:InClassCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:K%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KItem%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KResult%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'LValue{}(SortK{}) : SortLValue{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:LValue%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:List%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Map%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'OutputCell{}(SortK{}) : SortOutputCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:OutputCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'OutputCellOpt{}(SortK{}) : SortOutputCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:OutputCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Param{}(SortK{}) : SortParam{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Param%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Params{}(SortK{}) : SortParams{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Params%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ReturnTypeCell{}(SortK{}) : SortReturnTypeCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ReturnTypeCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'ReturnTypeCellOpt{}(SortK{}) : SortReturnTypeCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:ReturnTypeCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Set%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Stmt{}(SortK{}) : SortStmt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Stmt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Stream{}(SortK{}) : SortStream{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Stream%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:String%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TCell{}(SortK{}) : SortTCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TCellFragment{}(SortK{}) : SortTCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TCellOpt{}(SortK{}) : SortTCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TaskCell{}(SortK{}) : SortTaskCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TaskCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TaskCellFragment{}(SortK{}) : SortTaskCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TaskCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TaskCellSet{}(SortK{}) : SortTaskCellSet{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TaskCellSet%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TasksCell{}(SortK{}) : SortTasksCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TasksCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TasksCellFragment{}(SortK{}) : SortTasksCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TasksCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TasksCellOpt{}(SortK{}) : SortTasksCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TasksCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TenvCell{}(SortK{}) : SortTenvCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TenvCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'TenvCellOpt{}(SortK{}) : SortTenvCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:TenvCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Type{}(SortK{}) : SortType{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Type%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Types{}(SortK{}) : SortTypes{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Types%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1138,18,1138,65)"), left{}(), format{}("%crandInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}() : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("111"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(165,18,165,32)"), left{}(), format{}("%cread%r %c(%r %c)%r"), injective{}()]
  symbol Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,19,212,67)"), left{}(), format{}("%crelease%r %1 %c;%r"), injective{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,87)"), left{}(), format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,19,213,67)"), left{}(), format{}("%crendezvous%r %1 %c;%r"), injective{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), hook{}("STRING.replace"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1650,21,1650,146)"), left{}(), format{}("%creplace%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("11010101"), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1649,21,1649,149)"), left{}(), format{}("%creplaceAll%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("11010101"), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1651,21,1651,151)"), left{}(), format{}("%creplaceFirst%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}() : SortStmt{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,19,206,31)"), left{}(), format{}("%creturn%r %c;%r"), injective{}()]
  symbol Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,19,205,67)"), left{}(), format{}("%creturn%r %1 %c;%r"), injective{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("rfindChar"), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1577,18,1577,117)"), left{}(), format{}("%crfindChar%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("rfindString"), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1566,18,1566,112)"), left{}(), format{}("%crfindString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1105,18,1105,113)"), left{}(), format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), smtlib{}("smt_seq_len"), terminals{}("1101"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(830,18,830,117)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,99)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(604,18,604,76)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(SortExp{}) : SortExp{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("1101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(164,18,164,50)"), left{}(), format{}("%csizeOf%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(SortBlock{}) : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,18,184,31)"), left{}(), format{}("%cspawn%r %1"), injective{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1139,16,1139,65)"), left{}(), format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}() : SortBlockOrStmtType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(314,40,314,46)"), left{}(), format{}("%cstmt%r"), injective{}()]
  symbol Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}() : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,45,127,53)"), left{}(), format{}("%cstring%r"), injective{}()]
  symbol Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(SortK{}) : SortKItem{} [latex{}("\\framebox{${#1}$}"), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("stuck"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(909,20,909,56)"), left{}(), format{}("%cstuck%r %c(%r %1 %c)%r"), injective{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("substrString"), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1555,21,1555,117)"), left{}(), format{}("%csubstrString%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  symbol Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}() : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(156,18,156,25)"), left{}(), format{}("%csuper%r"), injective{}()]
  symbol Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}() : SortExp{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(),Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(),LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(),Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(),Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(),Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}()), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,18,155,24)"), left{}(), format{}("%cthis%r"), injective{}()]
  symbol Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(SortExp{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,19,209,67)"), left{}(), format{}("%cthrow%r %1 %c;%r"), injective{}()]
  symbol Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(SortBlock{}, SortParam{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("1011010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,19,208,70)"), left{}(), format{}("%ctry%r %1 %ccatch%r %c(%r %2 %c)%r %3"), injective{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(794,19,794,97)"), left{}(), format{}("%cupdateList%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,87)"), left{}(), format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), left{}(), format{}("%cvalues%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}() : SortType{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}()), right{}(), terminals{}("1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,19,127,25)"), left{}(), format{}("%cvoid%r"), injective{}()]
  symbol Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(SortExp{}, SortBlock{}) : SortStmt{} [functional{}(), constructor{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("11010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,19,203,67)"), left{}(), format{}("%cwhile%r %c(%r %1 %c)%r %2"), injective{}()]
  symbol Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(SortStmt{}) : SortBlock{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(197,19,197,31)"), left{}(), format{}("%c{%r %1 %c}%r"), injective{}()]
  symbol Lbl'LBraRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block{}() : SortBlock{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), priorities{}(), right{}(), terminals{}("11"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,20,196,27)"), left{}(), format{}("%c{%r %c}%r"), injective{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsXor-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smtlib{}("notInt"), terminals{}("10"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1038,18,1038,168)"), left{}(), format{}("%c~Int%r %1"), function{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, inj{SortTypes{}, SortExps{}} (From:SortTypes{}))) [subsort{SortTypes{}, SortExps{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLValue{}, \equals{SortLValue{}, R} (Val:SortLValue{}, inj{SortFieldReference{}, SortLValue{}} (From:SortFieldReference{}))) [subsort{SortFieldReference{}, SortLValue{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOString{}, SortKItem{}} (From:SortIOString{}))) [subsort{SortIOString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortBlockOrStmtType{}, SortStmt{}} (From:SortBlockOrStmtType{}))) [subsort{SortBlockOrStmtType{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassesCellOpt{}, SortKItem{}} (From:SortClassesCellOpt{}))) [subsort{SortClassesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortType{}, SortKItem{}} (From:SortType{}))) [subsort{SortType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTasksCellOpt{}, SortKItem{}} (From:SortTasksCellOpt{}))) [subsort{SortTasksCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParams{}, SortKItem{}} (From:SortParams{}))) [subsort{SortParams{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlockOrStmtType{}, SortKItem{}} (From:SortBlockOrStmtType{}))) [subsort{SortBlockOrStmtType{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortReturnTypeCell{}, SortKItem{}} (From:SortReturnTypeCell{}))) [subsort{SortReturnTypeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassDataCellFragment{}, SortKItem{}} (From:SortClassDataCellFragment{}))) [subsort{SortClassDataCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLValue{}, \equals{SortLValue{}, R} (Val:SortLValue{}, inj{SortArrayReference{}, SortLValue{}} (From:SortArrayReference{}))) [subsort{SortArrayReference{}, SortLValue{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, inj{SortBlockOrStmtType{}, SortBlock{}} (From:SortBlockOrStmtType{}))) [subsort{SortBlockOrStmtType{}, SortBlock{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassDataCellMap{}, SortKItem{}} (From:SortClassDataCellMap{}))) [subsort{SortClassDataCellMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBaseClassesCell{}, SortKItem{}} (From:SortBaseClassesCell{}))) [subsort{SortBaseClassesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, inj{SortBlockOrStmtType{}, SortType{}} (From:SortBlockOrStmtType{}))) [subsort{SortBlockOrStmtType{}, SortType{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOutputCellOpt{}, \equals{SortOutputCellOpt{}, R} (Val:SortOutputCellOpt{}, inj{SortOutputCell{}, SortOutputCellOpt{}} (From:SortOutputCell{}))) [subsort{SortOutputCell{}, SortOutputCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortIOError{}, SortIOInt{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBaseClassCell{}, SortKItem{}} (From:SortBaseClassCell{}))) [subsort{SortBaseClassCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOError{}, SortKItem{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTypes{}, SortKItem{}} (From:SortTypes{}))) [subsort{SortTypes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBlock{}, SortKItem{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortTypes{}, SortKResult{}} (From:SortTypes{}))) [subsort{SortTypes{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortInt{}, SortIOInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutputCellOpt{}, SortKItem{}} (From:SortOutputCellOpt{}))) [subsort{SortOutputCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTaskCellSet{}, \equals{SortTaskCellSet{}, R} (Val:SortTaskCellSet{}, inj{SortTaskCell{}, SortTaskCellSet{}} (From:SortTaskCell{}))) [subsort{SortTaskCell{}, SortTaskCellSet{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortString{}, SortExp{}} (From:SortString{}))) [subsort{SortString{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFieldReference{}, SortKItem{}} (From:SortFieldReference{}))) [subsort{SortFieldReference{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassDataCell{}, SortKItem{}} (From:SortClassDataCell{}))) [subsort{SortClassDataCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTasksCellFragment{}, SortKItem{}} (From:SortTasksCellFragment{}))) [subsort{SortTasksCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortArrayReference{}, SortKItem{}} (From:SortArrayReference{}))) [subsort{SortArrayReference{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBaseClassCellOpt{}, SortKItem{}} (From:SortBaseClassCellOpt{}))) [subsort{SortBaseClassCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortLValue{}, SortExp{}} (From:SortLValue{}))) [subsort{SortLValue{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExps{}, SortKItem{}} (From:SortExps{}))) [subsort{SortExps{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortReturnTypeCellOpt{}, SortKItem{}} (From:SortReturnTypeCellOpt{}))) [subsort{SortReturnTypeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCtenvTCellOpt{}, SortKItem{}} (From:SortCtenvTCellOpt{}))) [subsort{SortCtenvTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCtenvTCell{}, SortKItem{}} (From:SortCtenvTCell{}))) [subsort{SortCtenvTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStream{}, SortKItem{}} (From:SortStream{}))) [subsort{SortStream{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOFile{}, SortKItem{}} (From:SortIOFile{}))) [subsort{SortIOFile{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInClassCellOpt{}, \equals{SortInClassCellOpt{}, R} (Val:SortInClassCellOpt{}, inj{SortInClassCell{}, SortInClassCellOpt{}} (From:SortInClassCell{}))) [subsort{SortInClassCell{}, SortInClassCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInClassCellOpt{}, SortKItem{}} (From:SortInClassCellOpt{}))) [subsort{SortInClassCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLValue{}, SortKItem{}} (From:SortLValue{}))) [subsort{SortLValue{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassNameCellOpt{}, SortKItem{}} (From:SortClassNameCellOpt{}))) [subsort{SortClassNameCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOInt{}, SortKItem{}} (From:SortIOInt{}))) [subsort{SortIOInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCtenvCellOpt{}, \equals{SortCtenvCellOpt{}, R} (Val:SortCtenvCellOpt{}, inj{SortCtenvCell{}, SortCtenvCellOpt{}} (From:SortCtenvCell{}))) [subsort{SortCtenvCell{}, SortCtenvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTaskCell{}, SortKItem{}} (From:SortTaskCell{}))) [subsort{SortTaskCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortClassesCellOpt{}, \equals{SortClassesCellOpt{}, R} (Val:SortClassesCellOpt{}, inj{SortClassesCell{}, SortClassesCellOpt{}} (From:SortClassesCell{}))) [subsort{SortClassesCell{}, SortClassesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortFieldReference{}, SortExp{}} (From:SortFieldReference{}))) [subsort{SortFieldReference{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortReturnTypeCellOpt{}, \equals{SortReturnTypeCellOpt{}, R} (Val:SortReturnTypeCellOpt{}, inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}} (From:SortReturnTypeCell{}))) [subsort{SortReturnTypeCell{}, SortReturnTypeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBaseClassCellOpt{}, \equals{SortBaseClassCellOpt{}, R} (Val:SortBaseClassCellOpt{}, inj{SortBaseClassCell{}, SortBaseClassCellOpt{}} (From:SortBaseClassCell{}))) [subsort{SortBaseClassCell{}, SortBaseClassCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassNameCell{}, SortKItem{}} (From:SortClassNameCell{}))) [subsort{SortClassNameCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInClassCell{}, SortKItem{}} (From:SortInClassCell{}))) [subsort{SortInClassCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTasksCell{}, SortKItem{}} (From:SortTasksCell{}))) [subsort{SortTasksCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}} (From:SortKConfigVar{}))) [subsort{SortKConfigVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTaskCellSet{}, SortKItem{}} (From:SortTaskCellSet{}))) [subsort{SortTaskCellSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortString{}, SortIOString{}} (From:SortString{}))) [subsort{SortString{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, inj{SortBlock{}, SortStmt{}} (From:SortBlock{}))) [subsort{SortBlock{}, SortStmt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortType{}, SortExp{}} (From:SortType{}))) [subsort{SortType{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassesCell{}, SortKItem{}} (From:SortClassesCell{}))) [subsort{SortClassesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortLValue{}, \equals{SortLValue{}, R} (Val:SortLValue{}, inj{SortId{}, SortLValue{}} (From:SortId{}))) [subsort{SortId{}, SortLValue{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOutputCell{}, SortKItem{}} (From:SortOutputCell{}))) [subsort{SortOutputCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortId{}, SortExp{}} (From:SortId{}))) [subsort{SortId{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCtenvCellOpt{}, SortKItem{}} (From:SortCtenvCellOpt{}))) [subsort{SortCtenvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortArrayReference{}, SortExp{}} (From:SortArrayReference{}))) [subsort{SortArrayReference{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBaseClassesCellOpt{}, \equals{SortBaseClassesCellOpt{}, R} (Val:SortBaseClassesCellOpt{}, inj{SortBaseClassesCell{}, SortBaseClassesCellOpt{}} (From:SortBaseClassesCell{}))) [subsort{SortBaseClassesCell{}, SortBaseClassesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBaseClassesCellOpt{}, SortKItem{}} (From:SortBaseClassesCellOpt{}))) [subsort{SortBaseClassesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTasksCellOpt{}, \equals{SortTasksCellOpt{}, R} (Val:SortTasksCellOpt{}, inj{SortTasksCell{}, SortTasksCellOpt{}} (From:SortTasksCell{}))) [subsort{SortTasksCell{}, SortTasksCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortClassDataCellMap{}, \equals{SortClassDataCellMap{}, R} (Val:SortClassDataCellMap{}, inj{SortClassDataCell{}, SortClassDataCellMap{}} (From:SortClassDataCell{}))) [subsort{SortClassDataCell{}, SortClassDataCellMap{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParam{}, SortKItem{}} (From:SortParam{}))) [subsort{SortParam{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCtenvTCellOpt{}, \equals{SortCtenvTCellOpt{}, R} (Val:SortCtenvTCellOpt{}, inj{SortCtenvTCell{}, SortCtenvTCellOpt{}} (From:SortCtenvTCell{}))) [subsort{SortCtenvTCell{}, SortCtenvTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTenvCell{}, SortKItem{}} (From:SortTenvCell{}))) [subsort{SortTenvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortClassesCellFragment{}, SortKItem{}} (From:SortClassesCellFragment{}))) [subsort{SortClassesCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCtenvCell{}, SortKItem{}} (From:SortCtenvCell{}))) [subsort{SortCtenvCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTaskCellFragment{}, SortKItem{}} (From:SortTaskCellFragment{}))) [subsort{SortTaskCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExp{}, SortKItem{}} (From:SortExp{}))) [subsort{SortExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStmt{}, SortKItem{}} (From:SortStmt{}))) [subsort{SortStmt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortType{}, SortKResult{}} (From:SortType{}))) [subsort{SortType{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortInt{}, SortExp{}} (From:SortInt{}))) [subsort{SortInt{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortIOError{}, SortIOString{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, inj{SortBool{}, SortExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTenvCellOpt{}, \equals{SortTenvCellOpt{}, R} (Val:SortTenvCellOpt{}, inj{SortTenvCell{}, SortTenvCellOpt{}} (From:SortTenvCell{}))) [subsort{SortTenvCell{}, SortTenvCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, inj{SortIOError{}, SortIOFile{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOFile{}}()] // subsort
  axiom{R} \exists{R} (Val:SortClassNameCellOpt{}, \equals{SortClassNameCellOpt{}, R} (Val:SortClassNameCellOpt{}, inj{SortClassNameCell{}, SortClassNameCellOpt{}} (From:SortClassNameCell{}))) [subsort{SortClassNameCell{}, SortClassNameCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTenvCellOpt{}, SortKItem{}} (From:SortTenvCellOpt{}))) [subsort{SortTenvCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(Y0:SortId{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'E2BIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EACCES{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRINUSE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRNOTAVAIL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAGAIN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EALREADY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBADF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBUSY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECHILD{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNABORTED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNREFUSED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDEADLK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDESTADDRREQ{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDOM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EEXIST{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFAULT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFBIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINPROGRESS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINTR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINVAL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ELOOP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMLINK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMSGSIZE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENAMETOOLONG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOBUFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENODEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOENT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOEXEC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOLCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOMEM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOPROTOOPT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSPC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSYS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTEMPTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTSOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENXIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOPNOTSUPP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOVERFLOW{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPERM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTONOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTOTYPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ERANGE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EROFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESHUTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESOCKTNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESRCH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETIMEDOUT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETOOMANYREFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EWOULDBLOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EXDEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(Y0:SortK{})), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(Y0:SortK{}, Y1:SortK{})), Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}), \and{SortK{}} (X1:SortK{}, Y1:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'logToFile{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'noParse{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'noParse{}(Y0:SortString{})), Lbl'Hash'noParse{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Y0:SortInt{})), Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStream{}} (\and{SortStream{}} (Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(Y0:SortString{}, Y1:SortString{})), Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'systemResult{}(K0:SortInt{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{})), Lbl'Hash'systemResult{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}), \and{SortString{}} (X2:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, Lbl'Hash'tempFile{}(K0:SortString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOFile{}} (\and{SortIOFile{}} (Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}), Lbl'Hash'tempFile{}(Y0:SortString{}, Y1:SortInt{})), Lbl'Hash'tempFile{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'trace{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'traceK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'unknownIOError{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'unknownIOError{}(X0:SortInt{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{})), Lbl'Hash'unknownIOError{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(K0:SortId{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(Y0:SortId{}, Y1:SortExp{})), Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCtenvCell{}, \equals{SortCtenvCell{}, R} (Val:SortCtenvCell{}, Lbl'Stop'CtenvCell{}())) [functional{}()] // functional
  axiom{}\not{SortCtenvCell{}} (\and{SortCtenvCell{}} (Lbl'Stop'CtenvCell{}(), Lbl'-LT-'ctenv'-GT-'{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCtenvTCell{}, \equals{SortCtenvTCell{}, R} (Val:SortCtenvTCell{}, Lbl'Stop'CtenvTCell{}())) [functional{}()] // functional
  axiom{}\not{SortCtenvTCell{}} (\and{SortCtenvTCell{}} (Lbl'Stop'CtenvTCell{}(), Lbl'-LT-'ctenvT'-GT-'{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInClassCell{}, \equals{SortInClassCell{}, R} (Val:SortInClassCell{}, Lbl'Stop'InClassCell{}())) [functional{}()] // functional
  axiom{}\not{SortInClassCell{}} (\and{SortInClassCell{}} (Lbl'Stop'InClassCell{}(), Lbl'-LT-'inClass'-GT-'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())) [functional{}()] // functional
  axiom{}\not{SortExps{}} (\and{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortParams{}, \equals{SortParams{}, R} (Val:SortParams{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}())) [functional{}()] // functional
  axiom{}\not{SortParams{}} (\and{SortParams{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}(), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Y0:SortParam{}, Y1:SortParams{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())) [functional{}()] // functional
  axiom{}\not{SortTypes{}} (\and{SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Y0:SortType{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortReturnTypeCell{}, \equals{SortReturnTypeCell{}, R} (Val:SortReturnTypeCell{}, Lbl'Stop'ReturnTypeCell{}())) [functional{}()] // functional
  axiom{}\not{SortReturnTypeCell{}} (\and{SortReturnTypeCell{}} (Lbl'Stop'ReturnTypeCell{}(), Lbl'-LT-'returnType'-GT-'{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'Stop'TCell{}())) [functional{}()] // functional
  axiom{}\not{SortTCell{}} (\and{SortTCell{}} (Lbl'Stop'TCell{}(), Lbl'-LT-'T'-GT-'{}(Y0:SortTasksCell{}, Y1:SortClassesCell{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTasksCell{}, \equals{SortTasksCell{}, R} (Val:SortTasksCell{}, Lbl'Stop'TasksCell{}())) [functional{}()] // functional
  axiom{}\not{SortTasksCell{}} (\and{SortTasksCell{}} (Lbl'Stop'TasksCell{}(), Lbl'-LT-'tasks'-GT-'{}(Y0:SortTaskCellSet{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTenvCell{}, \equals{SortTenvCell{}, R} (Val:SortTenvCell{}, Lbl'Stop'TenvCell{}())) [functional{}()] // functional
  axiom{}\not{SortTenvCell{}} (\and{SortTenvCell{}} (Lbl'Stop'TenvCell{}(), Lbl'-LT-'tenv'-GT-'{}(Y0:SortMap{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortTasksCell{}, K1:SortClassesCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortTasksCell{}, X1:SortClassesCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortTasksCell{}, Y1:SortClassesCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortTasksCell{}} (X0:SortTasksCell{}, Y0:SortTasksCell{}), \and{SortClassesCell{}} (X1:SortClassesCell{}, Y1:SortClassesCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortTasksCellOpt{}, K1:SortClassesCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortTasksCellOpt{}, X1:SortClassesCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortTasksCellOpt{}, Y1:SortClassesCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortTasksCellOpt{}} (X0:SortTasksCellOpt{}, Y0:SortTasksCellOpt{}), \and{SortClassesCellOpt{}} (X1:SortClassesCellOpt{}, Y1:SortClassesCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBaseClassCell{}, \equals{SortBaseClassCell{}, R} (Val:SortBaseClassCell{}, Lbl'-LT-'baseClass'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortBaseClassCell{}} (\and{SortBaseClassCell{}} (Lbl'-LT-'baseClass'-GT-'{}(X0:SortK{}), Lbl'-LT-'baseClass'-GT-'{}(Y0:SortK{})), Lbl'-LT-'baseClass'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBaseClassesCell{}, \equals{SortBaseClassesCell{}, R} (Val:SortBaseClassesCell{}, Lbl'-LT-'baseClasses'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortBaseClassesCell{}} (\and{SortBaseClassesCell{}} (Lbl'-LT-'baseClasses'-GT-'{}(X0:SortSet{}), Lbl'-LT-'baseClasses'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'baseClasses'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassDataCell{}, \equals{SortClassDataCell{}, R} (Val:SortClassDataCell{}, Lbl'-LT-'classData'-GT-'{}(K0:SortClassNameCell{}, K1:SortBaseClassCell{}, K2:SortBaseClassesCell{}, K3:SortCtenvCell{}))) [functional{}()] // functional
  axiom{}\implies{SortClassDataCell{}} (\and{SortClassDataCell{}} (Lbl'-LT-'classData'-GT-'{}(X0:SortClassNameCell{}, X1:SortBaseClassCell{}, X2:SortBaseClassesCell{}, X3:SortCtenvCell{}), Lbl'-LT-'classData'-GT-'{}(Y0:SortClassNameCell{}, Y1:SortBaseClassCell{}, Y2:SortBaseClassesCell{}, Y3:SortCtenvCell{})), Lbl'-LT-'classData'-GT-'{}(\and{SortClassNameCell{}} (X0:SortClassNameCell{}, Y0:SortClassNameCell{}), \and{SortBaseClassCell{}} (X1:SortBaseClassCell{}, Y1:SortBaseClassCell{}), \and{SortBaseClassesCell{}} (X2:SortBaseClassesCell{}, Y2:SortBaseClassesCell{}), \and{SortCtenvCell{}} (X3:SortCtenvCell{}, Y3:SortCtenvCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassDataCellFragment{}, \equals{SortClassDataCellFragment{}, R} (Val:SortClassDataCellFragment{}, Lbl'-LT-'classData'-GT-'-fragment{}(K0:SortClassNameCellOpt{}, K1:SortBaseClassCellOpt{}, K2:SortBaseClassesCellOpt{}, K3:SortCtenvCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortClassDataCellFragment{}} (\and{SortClassDataCellFragment{}} (Lbl'-LT-'classData'-GT-'-fragment{}(X0:SortClassNameCellOpt{}, X1:SortBaseClassCellOpt{}, X2:SortBaseClassesCellOpt{}, X3:SortCtenvCellOpt{}), Lbl'-LT-'classData'-GT-'-fragment{}(Y0:SortClassNameCellOpt{}, Y1:SortBaseClassCellOpt{}, Y2:SortBaseClassesCellOpt{}, Y3:SortCtenvCellOpt{})), Lbl'-LT-'classData'-GT-'-fragment{}(\and{SortClassNameCellOpt{}} (X0:SortClassNameCellOpt{}, Y0:SortClassNameCellOpt{}), \and{SortBaseClassCellOpt{}} (X1:SortBaseClassCellOpt{}, Y1:SortBaseClassCellOpt{}), \and{SortBaseClassesCellOpt{}} (X2:SortBaseClassesCellOpt{}, Y2:SortBaseClassesCellOpt{}), \and{SortCtenvCellOpt{}} (X3:SortCtenvCellOpt{}, Y3:SortCtenvCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassNameCell{}, \equals{SortClassNameCell{}, R} (Val:SortClassNameCell{}, Lbl'-LT-'className'-GT-'{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortClassNameCell{}} (\and{SortClassNameCell{}} (Lbl'-LT-'className'-GT-'{}(X0:SortId{}), Lbl'-LT-'className'-GT-'{}(Y0:SortId{})), Lbl'-LT-'className'-GT-'{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassesCell{}, \equals{SortClassesCell{}, R} (Val:SortClassesCell{}, Lbl'-LT-'classes'-GT-'{}(K0:SortClassDataCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortClassesCell{}} (\and{SortClassesCell{}} (Lbl'-LT-'classes'-GT-'{}(X0:SortClassDataCellMap{}), Lbl'-LT-'classes'-GT-'{}(Y0:SortClassDataCellMap{})), Lbl'-LT-'classes'-GT-'{}(\and{SortClassDataCellMap{}} (X0:SortClassDataCellMap{}, Y0:SortClassDataCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortClassesCellFragment{}, \equals{SortClassesCellFragment{}, R} (Val:SortClassesCellFragment{}, Lbl'-LT-'classes'-GT-'-fragment{}(K0:SortClassDataCellMap{}))) [functional{}()] // functional
  axiom{}\implies{SortClassesCellFragment{}} (\and{SortClassesCellFragment{}} (Lbl'-LT-'classes'-GT-'-fragment{}(X0:SortClassDataCellMap{}), Lbl'-LT-'classes'-GT-'-fragment{}(Y0:SortClassDataCellMap{})), Lbl'-LT-'classes'-GT-'-fragment{}(\and{SortClassDataCellMap{}} (X0:SortClassDataCellMap{}, Y0:SortClassDataCellMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCtenvCell{}, \equals{SortCtenvCell{}, R} (Val:SortCtenvCell{}, Lbl'-LT-'ctenv'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortCtenvCell{}} (\and{SortCtenvCell{}} (Lbl'-LT-'ctenv'-GT-'{}(X0:SortMap{}), Lbl'-LT-'ctenv'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'ctenv'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCtenvTCell{}, \equals{SortCtenvTCell{}, R} (Val:SortCtenvTCell{}, Lbl'-LT-'ctenvT'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortCtenvTCell{}} (\and{SortCtenvTCell{}} (Lbl'-LT-'ctenvT'-GT-'{}(X0:SortMap{}), Lbl'-LT-'ctenvT'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'ctenvT'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}, K2:SortOutputCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}, X2:SortOutputCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{}, Y2:SortOutputCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}), \and{SortOutputCell{}} (X2:SortOutputCell{}, Y2:SortOutputCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortOutputCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortOutputCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortOutputCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortOutputCellOpt{}} (X1:SortOutputCellOpt{}, Y1:SortOutputCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInClassCell{}, \equals{SortInClassCell{}, R} (Val:SortInClassCell{}, Lbl'-LT-'inClass'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortInClassCell{}} (\and{SortInClassCell{}} (Lbl'-LT-'inClass'-GT-'{}(X0:SortK{}), Lbl'-LT-'inClass'-GT-'{}(Y0:SortK{})), Lbl'-LT-'inClass'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortOutputCell{}, \equals{SortOutputCell{}, R} (Val:SortOutputCell{}, Lbl'-LT-'output'-GT-'{}(K0:SortList{}))) [functional{}()] // functional
  axiom{}\implies{SortOutputCell{}} (\and{SortOutputCell{}} (Lbl'-LT-'output'-GT-'{}(X0:SortList{}), Lbl'-LT-'output'-GT-'{}(Y0:SortList{})), Lbl'-LT-'output'-GT-'{}(\and{SortList{}} (X0:SortList{}, Y0:SortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortReturnTypeCell{}, \equals{SortReturnTypeCell{}, R} (Val:SortReturnTypeCell{}, Lbl'-LT-'returnType'-GT-'{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortReturnTypeCell{}} (\and{SortReturnTypeCell{}} (Lbl'-LT-'returnType'-GT-'{}(X0:SortType{}), Lbl'-LT-'returnType'-GT-'{}(Y0:SortType{})), Lbl'-LT-'returnType'-GT-'{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTaskCell{}, \equals{SortTaskCell{}, R} (Val:SortTaskCell{}, Lbl'-LT-'task'-GT-'{}(K0:SortKCell{}, K1:SortTenvCell{}, K2:SortCtenvTCell{}, K3:SortReturnTypeCell{}, K4:SortInClassCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTaskCell{}} (\and{SortTaskCell{}} (Lbl'-LT-'task'-GT-'{}(X0:SortKCell{}, X1:SortTenvCell{}, X2:SortCtenvTCell{}, X3:SortReturnTypeCell{}, X4:SortInClassCell{}), Lbl'-LT-'task'-GT-'{}(Y0:SortKCell{}, Y1:SortTenvCell{}, Y2:SortCtenvTCell{}, Y3:SortReturnTypeCell{}, Y4:SortInClassCell{})), Lbl'-LT-'task'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortTenvCell{}} (X1:SortTenvCell{}, Y1:SortTenvCell{}), \and{SortCtenvTCell{}} (X2:SortCtenvTCell{}, Y2:SortCtenvTCell{}), \and{SortReturnTypeCell{}} (X3:SortReturnTypeCell{}, Y3:SortReturnTypeCell{}), \and{SortInClassCell{}} (X4:SortInClassCell{}, Y4:SortInClassCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTaskCellFragment{}, \equals{SortTaskCellFragment{}, R} (Val:SortTaskCellFragment{}, Lbl'-LT-'task'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortTenvCellOpt{}, K2:SortCtenvTCellOpt{}, K3:SortReturnTypeCellOpt{}, K4:SortInClassCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTaskCellFragment{}} (\and{SortTaskCellFragment{}} (Lbl'-LT-'task'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortTenvCellOpt{}, X2:SortCtenvTCellOpt{}, X3:SortReturnTypeCellOpt{}, X4:SortInClassCellOpt{}), Lbl'-LT-'task'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortTenvCellOpt{}, Y2:SortCtenvTCellOpt{}, Y3:SortReturnTypeCellOpt{}, Y4:SortInClassCellOpt{})), Lbl'-LT-'task'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortTenvCellOpt{}} (X1:SortTenvCellOpt{}, Y1:SortTenvCellOpt{}), \and{SortCtenvTCellOpt{}} (X2:SortCtenvTCellOpt{}, Y2:SortCtenvTCellOpt{}), \and{SortReturnTypeCellOpt{}} (X3:SortReturnTypeCellOpt{}, Y3:SortReturnTypeCellOpt{}), \and{SortInClassCellOpt{}} (X4:SortInClassCellOpt{}, Y4:SortInClassCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTasksCell{}, \equals{SortTasksCell{}, R} (Val:SortTasksCell{}, Lbl'-LT-'tasks'-GT-'{}(K0:SortTaskCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortTasksCell{}} (\and{SortTasksCell{}} (Lbl'-LT-'tasks'-GT-'{}(X0:SortTaskCellSet{}), Lbl'-LT-'tasks'-GT-'{}(Y0:SortTaskCellSet{})), Lbl'-LT-'tasks'-GT-'{}(\and{SortTaskCellSet{}} (X0:SortTaskCellSet{}, Y0:SortTaskCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTasksCellFragment{}, \equals{SortTasksCellFragment{}, R} (Val:SortTasksCellFragment{}, Lbl'-LT-'tasks'-GT-'-fragment{}(K0:SortTaskCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortTasksCellFragment{}} (\and{SortTasksCellFragment{}} (Lbl'-LT-'tasks'-GT-'-fragment{}(X0:SortTaskCellSet{}), Lbl'-LT-'tasks'-GT-'-fragment{}(Y0:SortTaskCellSet{})), Lbl'-LT-'tasks'-GT-'-fragment{}(\and{SortTaskCellSet{}} (X0:SortTaskCellSet{}, Y0:SortTaskCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTenvCell{}, \equals{SortTenvCell{}, R} (Val:SortTenvCell{}, Lbl'-LT-'tenv'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortTenvCell{}} (\and{SortTenvCell{}} (Lbl'-LT-'tenv'-GT-'{}(X0:SortMap{}), Lbl'-LT-'tenv'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'tenv'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblClassDataCellMap'Coln'in'Unds'keys{}(K0:SortClassNameCell{}, K1:SortClassDataCellMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortClassNameCell{}, \equals{SortClassNameCell{}, R} (Val:SortClassNameCell{}, LblClassDataCellMapKey{}(K0:SortClassDataCell{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsAnd-'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsAnd-'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsStar'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsStar'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsPlus'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsPlus'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExps{}, \equals{SortExps{}, R} (Val:SortExps{}, Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExps{}} (\and{SortExps{}} (Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortParams{}, \equals{SortParams{}, R} (Val:SortParams{}, Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(K0:SortParam{}, K1:SortParams{}))) [functional{}()] // functional
  axiom{}\implies{SortParams{}} (\and{SortParams{}} (Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(X0:SortParam{}, X1:SortParams{}), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Y0:SortParam{}, Y1:SortParams{})), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(\and{SortParam{}} (X0:SortParam{}, Y0:SortParam{}), \and{SortParams{}} (X1:SortParams{}, Y1:SortParams{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortTypes{}, \equals{SortTypes{}, R} (Val:SortTypes{}, Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(K0:SortType{}, K1:SortTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortTypes{}} (\and{SortTypes{}} (Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(X0:SortType{}, X1:SortTypes{}), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Y0:SortType{}, Y1:SortTypes{})), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortTypes{}} (X1:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(K0:SortTypes{}, K1:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(Y0:SortTypes{}, Y1:SortType{})), Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(\and{SortTypes{}} (X0:SortTypes{}, Y0:SortTypes{}), \and{SortType{}} (X1:SortType{}, Y1:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(Y0:SortType{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblclass{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}), Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortFieldReference{}, \equals{SortFieldReference{}, R} (Val:SortFieldReference{}, Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(K0:SortExp{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortFieldReference{}} (\and{SortFieldReference{}} (Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{})), Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortType{}, Y1:SortId{}, Y2:SortParams{}, Y3:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortClassDataCellMap{}, R} (Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(K1:SortClassDataCellMap{},K2:SortClassDataCellMap{}),K3:SortClassDataCellMap{}),Lbl'Unds'ClassDataCellMap'Unds'{}(K1:SortClassDataCellMap{},Lbl'Unds'ClassDataCellMap'Unds'{}(K2:SortClassDataCellMap{},K3:SortClassDataCellMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortClassDataCellMap{}, R} (Lbl'Unds'ClassDataCellMap'Unds'{}(K1:SortClassDataCellMap{},K2:SortClassDataCellMap{}),Lbl'Unds'ClassDataCellMap'Unds'{}(K2:SortClassDataCellMap{},K1:SortClassDataCellMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortClassDataCellMap{}, R} (Lbl'Unds'ClassDataCellMap'Unds'{}(K:SortClassDataCellMap{},Lbl'Stop'ClassDataCellMap{}()),K:SortClassDataCellMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortClassDataCellMap{}, R} (Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Stop'ClassDataCellMap{}(),K:SortClassDataCellMap{}),K:SortClassDataCellMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(K1:SortTaskCellSet{},K2:SortTaskCellSet{}),K3:SortTaskCellSet{}),Lbl'Unds'TaskCellSet'Unds'{}(K1:SortTaskCellSet{},Lbl'Unds'TaskCellSet'Unds'{}(K2:SortTaskCellSet{},K3:SortTaskCellSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(K1:SortTaskCellSet{},K2:SortTaskCellSet{}),Lbl'Unds'TaskCellSet'Unds'{}(K2:SortTaskCellSet{},K1:SortTaskCellSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(K:SortTaskCellSet{},K:SortTaskCellSet{}),K:SortTaskCellSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(K:SortTaskCellSet{},Lbl'Stop'TaskCellSet{}()),K:SortTaskCellSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortTaskCellSet{}, R} (Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Stop'TaskCellSet{}(),K:SortTaskCellSet{}),K:SortTaskCellSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(K0:SortType{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(Y0:SortType{})), Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblclass{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{}), Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortArrayReference{}, \equals{SortArrayReference{}, R} (Val:SortArrayReference{}, Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(K0:SortExp{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortArrayReference{}} (\and{SortArrayReference{}} (Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}), Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(Y0:SortExp{}, Y1:SortExps{})), Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(K0:SortType{}, K1:SortId{}, K2:SortParams{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(Y0:SortType{}, Y1:SortId{}, Y2:SortParams{}, Y3:SortBlock{})), Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}), \and{SortParams{}} (X2:SortParams{}, Y2:SortParams{}), \and{SortBlock{}} (X3:SortBlock{}, Y3:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(K0:SortType{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortParam{}, \equals{SortParam{}, R} (Val:SortParam{}, Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(K0:SortType{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortParam{}} (\and{SortParam{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(X0:SortType{}, X1:SortId{}), Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(Y0:SortType{}, Y1:SortId{})), Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(\and{SortType{}} (X0:SortType{}, Y0:SortType{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(K0:SortStmt{}, K1:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Y0:SortStmt{}, Y1:SortStmt{})), Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}), \and{SortStmt{}} (X1:SortStmt{}, Y1:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(K0:SortExp{}, K1:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(Y0:SortExp{}, Y1:SortId{})), Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \equals{SortInt{}, R} (Lbl'Unds'xorInt'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'Unds'xorInt'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsPipe'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsPipe'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \equals{SortSet{}, R} (Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K1:SortSet{},K2:SortSet{}),Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(K0:SortExp{}, K1:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(Y0:SortExp{}, Y1:SortExp{})), Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortExp{}} (X1:SortExp{}, Y1:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockOrStmtType{}, \equals{SortBlockOrStmtType{}, R} (Val:SortBlockOrStmtType{}, Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}())) [functional{}()] // functional
  axiom{}\not{SortBlockOrStmtType{}} (\and{SortBlockOrStmtType{}} (Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}(), Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblclass{}(Y0:SortId{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(K0:SortId{}, K1:SortType{}, K2:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(X0:SortId{}, X1:SortType{}, X2:SortId{}), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Y0:SortId{}, Y1:SortType{}, Y2:SortId{})), LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortType{}} (X1:SortType{}, Y1:SortType{}), \and{SortId{}} (X2:SortId{}, Y2:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(X0:SortId{}, X1:SortType{}, X2:SortId{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(X0:SortId{}, X1:SortType{}, X2:SortId{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(X0:SortId{}, X1:SortType{}, X2:SortId{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(X0:SortId{}, X1:SortType{}, X2:SortId{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(K0:SortTypes{}, K1:SortTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(X0:SortTypes{}, X1:SortTypes{}), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Y0:SortTypes{}, Y1:SortTypes{})), LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(\and{SortTypes{}} (X0:SortTypes{}, Y0:SortTypes{}), \and{SortTypes{}} (X1:SortTypes{}, Y1:SortTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(X0:SortTypes{}, X1:SortTypes{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(X0:SortTypes{}, X1:SortTypes{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(X0:SortTypes{}, X1:SortTypes{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(K0:SortTypes{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(X0:SortTypes{}), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Y0:SortTypes{})), LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(\and{SortTypes{}} (X0:SortTypes{}, Y0:SortTypes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(X0:SortTypes{}), Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(X0:SortTypes{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblclass{}(K0:SortId{}))) [functional{}()] // functional
  axiom{}\implies{SortType{}} (\and{SortType{}} (Lblclass{}(X0:SortId{}), Lblclass{}(Y0:SortId{})), Lblclass{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblclass{}(X0:SortId{}), Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblclass{}(X0:SortId{}), Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblclass{}(X0:SortId{}), Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(K0:SortId{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortBlock{})), Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(K0:SortId{}, K1:SortId{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(Y0:SortId{}, Y1:SortId{}, Y2:SortBlock{})), Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortId{}} (X1:SortId{}, Y1:SortId{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}(), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(K0:SortStmt{}, K1:SortExp{}, K2:SortExp{}, K3:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}, Y2:SortBlock{})), Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortSet{}, R} (LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K1:SortSet{},K2:SortSet{}),LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisArrayReference{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBaseClassCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBaseClassCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBaseClassesCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBaseClassesCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlock{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBlockOrStmtType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassDataCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassDataCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassDataCellMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassNameCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassNameCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassesCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassesCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisClassesCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCtenvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCtenvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCtenvTCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisCtenvTCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisExps{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFieldReference{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisFloat{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOError{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOFile{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisIOString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisId{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInClassCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInClassCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisLValue{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOutputCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisOutputCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisParam{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisParams{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisReturnTypeCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisReturnTypeCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStmt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisStream{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisString{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTaskCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTaskCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTaskCellSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTasksCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTasksCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTasksCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTenvCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTenvCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisType{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisTypes{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(K0:SortId{}, K1:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(Y0:SortId{}, Y1:SortExps{})), Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(\and{SortId{}} (X0:SortId{}, Y0:SortId{}), \and{SortExps{}} (X1:SortExps{}, Y1:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBaseClassCellOpt{}, \equals{SortBaseClassCellOpt{}, R} (Val:SortBaseClassCellOpt{}, LblnoBaseClassCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBaseClassesCellOpt{}, \equals{SortBaseClassesCellOpt{}, R} (Val:SortBaseClassesCellOpt{}, LblnoBaseClassesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortClassNameCellOpt{}, \equals{SortClassNameCellOpt{}, R} (Val:SortClassNameCellOpt{}, LblnoClassNameCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortClassesCellOpt{}, \equals{SortClassesCellOpt{}, R} (Val:SortClassesCellOpt{}, LblnoClassesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCtenvCellOpt{}, \equals{SortCtenvCellOpt{}, R} (Val:SortCtenvCellOpt{}, LblnoCtenvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCtenvTCellOpt{}, \equals{SortCtenvTCellOpt{}, R} (Val:SortCtenvTCellOpt{}, LblnoCtenvTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInClassCellOpt{}, \equals{SortInClassCellOpt{}, R} (Val:SortInClassCellOpt{}, LblnoInClassCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOutputCellOpt{}, \equals{SortOutputCellOpt{}, R} (Val:SortOutputCellOpt{}, LblnoOutputCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortReturnTypeCellOpt{}, \equals{SortReturnTypeCellOpt{}, R} (Val:SortReturnTypeCellOpt{}, LblnoReturnTypeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTasksCellOpt{}, \equals{SortTasksCellOpt{}, R} (Val:SortTasksCellOpt{}, LblnoTasksCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTenvCellOpt{}, \equals{SortTenvCellOpt{}, R} (Val:SortTenvCellOpt{}, LblnoTenvCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(K0:SortExps{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Y0:SortExps{})), Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(\and{SortExps{}} (X0:SortExps{}, Y0:SortExps{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}())) [functional{}()] // functional
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(Y0:SortExp{})), LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(K0:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(Y0:SortBlock{})), Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{}), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlockOrStmtType{}, \equals{SortBlockOrStmtType{}, R} (Val:SortBlockOrStmtType{}, Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{}\not{SortType{}} (\and{SortType{}} (Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(X0:SortK{}), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(Y0:SortK{})), Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{}\not{SortExp{}} (\and{SortExp{}} (Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(), Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortExp{}, \equals{SortExp{}, R} (Val:SortExp{}, Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(K0:SortExp{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Y0:SortExp{})), Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(K0:SortBlock{}, K1:SortParam{}, K2:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{}), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(Y0:SortBlock{}, Y1:SortParam{}, Y2:SortBlock{})), Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(\and{SortBlock{}} (X0:SortBlock{}, Y0:SortBlock{}), \and{SortParam{}} (X1:SortParam{}, Y1:SortParam{}), \and{SortBlock{}} (X2:SortBlock{}, Y2:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortStmt{}} (\and{SortStmt{}} (Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortType{}, \equals{SortType{}, R} (Val:SortType{}, Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStmt{}, \equals{SortStmt{}, R} (Val:SortStmt{}, Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(K0:SortExp{}, K1:SortBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortStmt{}} (\and{SortStmt{}} (Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(Y0:SortExp{}, Y1:SortBlock{})), Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(\and{SortExp{}} (X0:SortExp{}, Y0:SortExp{}), \and{SortBlock{}} (X1:SortBlock{}, Y1:SortBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(K0:SortStmt{}))) [functional{}()] // functional
  axiom{}\implies{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(Y0:SortStmt{})), Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(\and{SortStmt{}} (X0:SortStmt{}, Y0:SortStmt{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBlock{}} (\and{SortBlock{}} (Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{}), Lbl'LBraRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBlock{}, \equals{SortBlock{}, R} (Val:SortBlock{}, Lbl'LBraRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortReturnTypeCellOpt{}} (LblnoReturnTypeCell{}(), \or{SortReturnTypeCellOpt{}} (\exists{SortReturnTypeCellOpt{}} (Val:SortReturnTypeCell{}, inj{SortReturnTypeCell{}, SortReturnTypeCellOpt{}} (Val:SortReturnTypeCell{})), \bottom{SortReturnTypeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCtenvCell{}} (Lbl'Stop'CtenvCell{}(), \or{SortCtenvCell{}} (\exists{SortCtenvCell{}} (X0:SortMap{}, Lbl'-LT-'ctenv'-GT-'{}(X0:SortMap{})), \bottom{SortCtenvCell{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBaseClassesCellOpt{}} (LblnoBaseClassesCell{}(), \or{SortBaseClassesCellOpt{}} (\exists{SortBaseClassesCellOpt{}} (Val:SortBaseClassesCell{}, inj{SortBaseClassesCell{}, SortBaseClassesCellOpt{}} (Val:SortBaseClassesCell{})), \bottom{SortBaseClassesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInClassCellOpt{}} (LblnoInClassCell{}(), \or{SortInClassCellOpt{}} (\exists{SortInClassCellOpt{}} (Val:SortInClassCell{}, inj{SortInClassCell{}, SortInClassCellOpt{}} (Val:SortInClassCell{})), \bottom{SortInClassCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, \exists{SortKItem{}} (X1:SortK{}, Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(X0:SortK{}, X1:SortK{}))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortInt{}, \exists{SortKItem{}} (X1:SortString{}, \exists{SortKItem{}} (X2:SortString{}, Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{})))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortId{}, \exists{SortKItem{}} (X1:SortType{}, \exists{SortKItem{}} (X2:SortId{}, LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(X0:SortId{}, X1:SortType{}, X2:SortId{})))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortTypes{}, \exists{SortKItem{}} (X1:SortTypes{}, LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(X0:SortTypes{}, X1:SortTypes{}))), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortTypes{}, LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(X0:SortTypes{})), \or{SortKItem{}} (Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortReturnTypeCellOpt{}, inj{SortReturnTypeCellOpt{}, SortKItem{}} (Val:SortReturnTypeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCtenvCell{}, inj{SortCtenvCell{}, SortKItem{}} (Val:SortCtenvCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBaseClassesCellOpt{}, inj{SortBaseClassesCellOpt{}, SortKItem{}} (Val:SortBaseClassesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInClassCellOpt{}, inj{SortInClassCellOpt{}, SortKItem{}} (Val:SortInClassCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTenvCellOpt{}, inj{SortTenvCellOpt{}, SortKItem{}} (Val:SortTenvCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTaskCellFragment{}, inj{SortTaskCellFragment{}, SortKItem{}} (Val:SortTaskCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTaskCell{}, inj{SortTaskCell{}, SortKItem{}} (Val:SortTaskCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTypes{}, inj{SortTypes{}, SortKItem{}} (Val:SortTypes{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKConfigVar{}, inj{SortKConfigVar{}, SortKItem{}} (Val:SortKConfigVar{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOInt{}, inj{SortIOInt{}, SortKItem{}} (Val:SortIOInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCtenvCellOpt{}, inj{SortCtenvCellOpt{}, SortKItem{}} (Val:SortCtenvCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassNameCell{}, inj{SortClassNameCell{}, SortKItem{}} (Val:SortClassNameCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExp{}, inj{SortExp{}, SortKItem{}} (Val:SortExp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassDataCell{}, inj{SortClassDataCell{}, SortKItem{}} (Val:SortClassDataCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortKItem{}} (Val:SortBlockOrStmtType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTenvCell{}, inj{SortTenvCell{}, SortKItem{}} (Val:SortTenvCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortParam{}, inj{SortParam{}, SortKItem{}} (Val:SortParam{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassesCellOpt{}, inj{SortClassesCellOpt{}, SortKItem{}} (Val:SortClassesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBaseClassCell{}, inj{SortBaseClassCell{}, SortKItem{}} (Val:SortBaseClassCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStream{}, inj{SortStream{}, SortKItem{}} (Val:SortStream{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassNameCellOpt{}, inj{SortClassNameCellOpt{}, SortKItem{}} (Val:SortClassNameCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOFile{}, inj{SortIOFile{}, SortKItem{}} (Val:SortIOFile{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOutputCell{}, inj{SortOutputCell{}, SortKItem{}} (Val:SortOutputCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOutputCellOpt{}, inj{SortOutputCellOpt{}, SortKItem{}} (Val:SortOutputCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortParams{}, inj{SortParams{}, SortKItem{}} (Val:SortParams{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBaseClassCellOpt{}, inj{SortBaseClassCellOpt{}, SortKItem{}} (Val:SortBaseClassCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCtenvTCell{}, inj{SortCtenvTCell{}, SortKItem{}} (Val:SortCtenvTCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassesCellFragment{}, inj{SortClassesCellFragment{}, SortKItem{}} (Val:SortClassesCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLValue{}, inj{SortLValue{}, SortKItem{}} (Val:SortLValue{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBaseClassesCell{}, inj{SortBaseClassesCell{}, SortKItem{}} (Val:SortBaseClassesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStmt{}, inj{SortStmt{}, SortKItem{}} (Val:SortStmt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTaskCellSet{}, inj{SortTaskCellSet{}, SortKItem{}} (Val:SortTaskCellSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTasksCell{}, inj{SortTasksCell{}, SortKItem{}} (Val:SortTasksCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCtenvTCellOpt{}, inj{SortCtenvTCellOpt{}, SortKItem{}} (Val:SortCtenvTCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInClassCell{}, inj{SortInClassCell{}, SortKItem{}} (Val:SortInClassCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortType{}, inj{SortType{}, SortKItem{}} (Val:SortType{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassDataCellMap{}, inj{SortClassDataCellMap{}, SortKItem{}} (Val:SortClassDataCellMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTasksCellFragment{}, inj{SortTasksCellFragment{}, SortKItem{}} (Val:SortTasksCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBlock{}, inj{SortBlock{}, SortKItem{}} (Val:SortBlock{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFieldReference{}, inj{SortFieldReference{}, SortKItem{}} (Val:SortFieldReference{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExps{}, inj{SortExps{}, SortKItem{}} (Val:SortExps{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassesCell{}, inj{SortClassesCell{}, SortKItem{}} (Val:SortClassesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortClassDataCellFragment{}, inj{SortClassDataCellFragment{}, SortKItem{}} (Val:SortClassDataCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortArrayReference{}, inj{SortArrayReference{}, SortKItem{}} (Val:SortArrayReference{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOString{}, inj{SortIOString{}, SortKItem{}} (Val:SortIOString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTasksCellOpt{}, inj{SortTasksCellOpt{}, SortKItem{}} (Val:SortTasksCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortReturnTypeCell{}, inj{SortReturnTypeCell{}, SortKItem{}} (Val:SortReturnTypeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOError{}, inj{SortIOError{}, SortKItem{}} (Val:SortIOError{})), \bottom{SortKItem{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortTenvCellOpt{}} (LblnoTenvCell{}(), \or{SortTenvCellOpt{}} (\exists{SortTenvCellOpt{}} (Val:SortTenvCell{}, inj{SortTenvCell{}, SortTenvCellOpt{}} (Val:SortTenvCell{})), \bottom{SortTenvCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTaskCellFragment{}} (\exists{SortTaskCellFragment{}} (X0:SortKCellOpt{}, \exists{SortTaskCellFragment{}} (X1:SortTenvCellOpt{}, \exists{SortTaskCellFragment{}} (X2:SortCtenvTCellOpt{}, \exists{SortTaskCellFragment{}} (X3:SortReturnTypeCellOpt{}, \exists{SortTaskCellFragment{}} (X4:SortInClassCellOpt{}, Lbl'-LT-'task'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortTenvCellOpt{}, X2:SortCtenvTCellOpt{}, X3:SortReturnTypeCellOpt{}, X4:SortInClassCellOpt{})))))), \bottom{SortTaskCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortList{}}() [constructor{}()] // no junk
  axiom{} \or{SortTaskCell{}} (\exists{SortTaskCell{}} (X0:SortKCell{}, \exists{SortTaskCell{}} (X1:SortTenvCell{}, \exists{SortTaskCell{}} (X2:SortCtenvTCell{}, \exists{SortTaskCell{}} (X3:SortReturnTypeCell{}, \exists{SortTaskCell{}} (X4:SortInClassCell{}, Lbl'-LT-'task'-GT-'{}(X0:SortKCell{}, X1:SortTenvCell{}, X2:SortCtenvTCell{}, X3:SortReturnTypeCell{}, X4:SortInClassCell{})))))), \bottom{SortTaskCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTypes{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(), \or{SortTypes{}} (\exists{SortTypes{}} (X0:SortType{}, \exists{SortTypes{}} (X1:SortTypes{}, Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(X0:SortType{}, X1:SortTypes{}))), \bottom{SortTypes{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \or{SortTCellOpt{}} (\exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortTasksCellOpt{}, \exists{SortTCellFragment{}} (X1:SortClassesCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortTasksCellOpt{}, X1:SortClassesCellOpt{}))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortInt{}, inj{SortInt{}, SortIOInt{}} (Val:SortInt{})), \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOInt{}} (Val:SortIOError{})), \bottom{SortIOInt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTCell{}} (Lbl'Stop'TCell{}(), \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortTasksCell{}, \exists{SortTCell{}} (X1:SortClassesCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortTasksCell{}, X1:SortClassesCell{}))), \bottom{SortTCell{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCtenvCellOpt{}} (LblnoCtenvCell{}(), \or{SortCtenvCellOpt{}} (\exists{SortCtenvCellOpt{}} (Val:SortCtenvCell{}, inj{SortCtenvCell{}, SortCtenvCellOpt{}} (Val:SortCtenvCell{})), \bottom{SortCtenvCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortClassNameCell{}} (\exists{SortClassNameCell{}} (X0:SortId{}, Lbl'-LT-'className'-GT-'{}(X0:SortId{})), \bottom{SortClassNameCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortId{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(X0:SortId{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExps{}, Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortId{}, Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, \exists{SortExp{}} (X1:SortExp{}, Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(X0:SortExp{}, X1:SortExp{}))), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortId{}, \exists{SortExp{}} (X1:SortExps{}, Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(X0:SortId{}, X1:SortExps{}))), \or{SortExp{}} (Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(), \or{SortExp{}} (\exists{SortExp{}} (X0:SortExp{}, LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(X0:SortExp{})), \or{SortExp{}} (\exists{SortExp{}} (X0:SortBlock{}, Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(X0:SortBlock{})), \or{SortExp{}} (Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(), \or{SortExp{}} (Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(), \or{SortExp{}} (\exists{SortExp{}} (Val:SortString{}, inj{SortString{}, SortExp{}} (Val:SortString{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortExp{}} (Val:SortBlockOrStmtType{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortId{}, inj{SortId{}, SortExp{}} (Val:SortId{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortBool{}, inj{SortBool{}, SortExp{}} (Val:SortBool{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortLValue{}, inj{SortLValue{}, SortExp{}} (Val:SortLValue{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortInt{}, inj{SortInt{}, SortExp{}} (Val:SortInt{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortType{}, inj{SortType{}, SortExp{}} (Val:SortType{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortFieldReference{}, inj{SortFieldReference{}, SortExp{}} (Val:SortFieldReference{})), \or{SortExp{}} (\exists{SortExp{}} (Val:SortArrayReference{}, inj{SortArrayReference{}, SortExp{}} (Val:SortArrayReference{})), \bottom{SortExp{}}())))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortClassDataCell{}} (\exists{SortClassDataCell{}} (X0:SortClassNameCell{}, \exists{SortClassDataCell{}} (X1:SortBaseClassCell{}, \exists{SortClassDataCell{}} (X2:SortBaseClassesCell{}, \exists{SortClassDataCell{}} (X3:SortCtenvCell{}, Lbl'-LT-'classData'-GT-'{}(X0:SortClassNameCell{}, X1:SortBaseClassCell{}, X2:SortBaseClassesCell{}, X3:SortCtenvCell{}))))), \bottom{SortClassDataCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBlockOrStmtType{}} (Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}(), \or{SortBlockOrStmtType{}} (Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}(), \bottom{SortBlockOrStmtType{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTenvCell{}} (Lbl'Stop'TenvCell{}(), \or{SortTenvCell{}} (\exists{SortTenvCell{}} (X0:SortMap{}, Lbl'-LT-'tenv'-GT-'{}(X0:SortMap{})), \bottom{SortTenvCell{}}())) [constructor{}()] // no junk
  axiom{} \or{SortParam{}} (\exists{SortParam{}} (X0:SortType{}, \exists{SortParam{}} (X1:SortId{}, Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(X0:SortType{}, X1:SortId{}))), \bottom{SortParam{}}()) [constructor{}()] // no junk
  axiom{} \or{SortClassesCellOpt{}} (LblnoClassesCell{}(), \or{SortClassesCellOpt{}} (\exists{SortClassesCellOpt{}} (Val:SortClassesCell{}, inj{SortClassesCell{}, SortClassesCellOpt{}} (Val:SortClassesCell{})), \bottom{SortClassesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortBaseClassCell{}} (\exists{SortBaseClassCell{}} (X0:SortK{}, Lbl'-LT-'baseClass'-GT-'{}(X0:SortK{})), \bottom{SortBaseClassCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStream{}} (\exists{SortStream{}} (X0:SortK{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{})), \or{SortStream{}} (\exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'istream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \or{SortStream{}} (\exists{SortStream{}} (X0:SortInt{}, Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(X0:SortInt{})), \or{SortStream{}} (\exists{SortStream{}} (X0:SortString{}, \exists{SortStream{}} (X1:SortString{}, Lbl'Hash'parseInput'LParUndsCommUndsRParUnds'K-IO'Unds'Stream'Unds'String'Unds'String{}(X0:SortString{}, X1:SortString{}))), \bottom{SortStream{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortK{}}() [constructor{}()] // no junk
  axiom{} \or{SortClassNameCellOpt{}} (LblnoClassNameCell{}(), \or{SortClassNameCellOpt{}} (\exists{SortClassNameCellOpt{}} (Val:SortClassNameCell{}, inj{SortClassNameCell{}, SortClassNameCellOpt{}} (Val:SortClassNameCell{})), \bottom{SortClassNameCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIOFile{}} (\exists{SortIOFile{}} (X0:SortString{}, \exists{SortIOFile{}} (X1:SortInt{}, Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}))), \or{SortIOFile{}} (\exists{SortIOFile{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOFile{}} (Val:SortIOError{})), \bottom{SortIOFile{}}())) [constructor{}()] // no junk
  axiom{} \or{SortOutputCell{}} (\exists{SortOutputCell{}} (X0:SortList{}, Lbl'-LT-'output'-GT-'{}(X0:SortList{})), \bottom{SortOutputCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortTypes{}, inj{SortTypes{}, SortKResult{}} (Val:SortTypes{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortKResult{}} (Val:SortBlockOrStmtType{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortType{}, inj{SortType{}, SortKResult{}} (Val:SortType{})), \bottom{SortKResult{}}()))) [constructor{}()] // no junk
  axiom{} \bottom{SortMap{}}() [constructor{}()] // no junk
  axiom{} \or{SortOutputCellOpt{}} (LblnoOutputCell{}(), \or{SortOutputCellOpt{}} (\exists{SortOutputCellOpt{}} (Val:SortOutputCell{}, inj{SortOutputCell{}, SortOutputCellOpt{}} (Val:SortOutputCell{})), \bottom{SortOutputCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortParams{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}(), \or{SortParams{}} (\exists{SortParams{}} (X0:SortParam{}, \exists{SortParams{}} (X1:SortParams{}, Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(X0:SortParam{}, X1:SortParams{}))), \bottom{SortParams{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBaseClassCellOpt{}} (LblnoBaseClassCell{}(), \or{SortBaseClassCellOpt{}} (\exists{SortBaseClassCellOpt{}} (Val:SortBaseClassCell{}, inj{SortBaseClassCell{}, SortBaseClassCellOpt{}} (Val:SortBaseClassCell{})), \bottom{SortBaseClassCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCtenvTCell{}} (Lbl'Stop'CtenvTCell{}(), \or{SortCtenvTCell{}} (\exists{SortCtenvTCell{}} (X0:SortMap{}, Lbl'-LT-'ctenvT'-GT-'{}(X0:SortMap{})), \bottom{SortCtenvTCell{}}())) [constructor{}()] // no junk
  axiom{} \or{SortClassesCellFragment{}} (\exists{SortClassesCellFragment{}} (X0:SortClassDataCellMap{}, Lbl'-LT-'classes'-GT-'-fragment{}(X0:SortClassDataCellMap{})), \bottom{SortClassesCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortLValue{}} (\exists{SortLValue{}} (Val:SortId{}, inj{SortId{}, SortLValue{}} (Val:SortId{})), \or{SortLValue{}} (\exists{SortLValue{}} (Val:SortFieldReference{}, inj{SortFieldReference{}, SortLValue{}} (Val:SortFieldReference{})), \or{SortLValue{}} (\exists{SortLValue{}} (Val:SortArrayReference{}, inj{SortArrayReference{}, SortLValue{}} (Val:SortArrayReference{})), \bottom{SortLValue{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBaseClassesCell{}} (\exists{SortBaseClassesCell{}} (X0:SortSet{}, Lbl'-LT-'baseClasses'-GT-'{}(X0:SortSet{})), \bottom{SortBaseClassesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortType{}, \exists{SortStmt{}} (X1:SortId{}, \exists{SortStmt{}} (X2:SortParams{}, \exists{SortStmt{}} (X3:SortBlock{}, Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(X0:SortType{}, X1:SortId{}, X2:SortParams{}, X3:SortBlock{}))))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortType{}, \exists{SortStmt{}} (X1:SortExps{}, Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{}, X1:SortExps{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortStmt{}, Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(X0:SortStmt{}, X1:SortStmt{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortBlock{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortId{}, \exists{SortStmt{}} (X1:SortId{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(X0:SortId{}, X1:SortId{}, X2:SortBlock{})))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortStmt{}, \exists{SortStmt{}} (X1:SortExp{}, \exists{SortStmt{}} (X2:SortExp{}, \exists{SortStmt{}} (X3:SortBlock{}, Lblfor'LParUndsUndsSClnUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Exp'Unds'Exp'Unds'Block{}(X0:SortStmt{}, X1:SortExp{}, X2:SortExp{}, X3:SortBlock{}))))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblif'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, \exists{SortStmt{}} (X2:SortBlock{}, Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}, X2:SortBlock{})))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExps{}, Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(X0:SortExps{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}(), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(X0:SortExp{})), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortBlock{}, \exists{SortStmt{}} (X1:SortParam{}, \exists{SortStmt{}} (X2:SortBlock{}, Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(X0:SortBlock{}, X1:SortParam{}, X2:SortBlock{})))), \or{SortStmt{}} (\exists{SortStmt{}} (X0:SortExp{}, \exists{SortStmt{}} (X1:SortBlock{}, Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(X0:SortExp{}, X1:SortBlock{}))), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortStmt{}} (Val:SortBlockOrStmtType{})), \or{SortStmt{}} (\exists{SortStmt{}} (Val:SortBlock{}, inj{SortBlock{}, SortStmt{}} (Val:SortBlock{})), \bottom{SortStmt{}}()))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortTaskCellSet{}} (\exists{SortTaskCellSet{}} (Val:SortTaskCell{}, inj{SortTaskCell{}, SortTaskCellSet{}} (Val:SortTaskCell{})), \bottom{SortTaskCellSet{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortTasksCell{}} (Lbl'Stop'TasksCell{}(), \or{SortTasksCell{}} (\exists{SortTasksCell{}} (X0:SortTaskCellSet{}, Lbl'-LT-'tasks'-GT-'{}(X0:SortTaskCellSet{})), \bottom{SortTasksCell{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCtenvTCellOpt{}} (LblnoCtenvTCell{}(), \or{SortCtenvTCellOpt{}} (\exists{SortCtenvTCellOpt{}} (Val:SortCtenvTCell{}, inj{SortCtenvTCell{}, SortCtenvTCellOpt{}} (Val:SortCtenvTCell{})), \bottom{SortCtenvTCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInClassCell{}} (Lbl'Stop'InClassCell{}(), \or{SortInClassCell{}} (\exists{SortInClassCell{}} (X0:SortK{}, Lbl'-LT-'inClass'-GT-'{}(X0:SortK{})), \bottom{SortInClassCell{}}())) [constructor{}()] // no junk
  axiom{} \or{SortType{}} (\exists{SortType{}} (X0:SortTypes{}, \exists{SortType{}} (X1:SortType{}, Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(X0:SortTypes{}, X1:SortType{}))), \or{SortType{}} (\exists{SortType{}} (X0:SortType{}, Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(X0:SortType{})), \or{SortType{}} (Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), \or{SortType{}} (\exists{SortType{}} (X0:SortId{}, Lblclass{}(X0:SortId{})), \or{SortType{}} (Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), \or{SortType{}} (Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), \or{SortType{}} (Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(), \or{SortType{}} (\exists{SortType{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortType{}} (Val:SortBlockOrStmtType{})), \bottom{SortType{}}())))))))) [constructor{}()] // no junk
  axiom{} \or{SortClassDataCellMap{}} (\exists{SortClassDataCellMap{}} (Val:SortClassDataCell{}, inj{SortClassDataCell{}, SortClassDataCellMap{}} (Val:SortClassDataCell{})), \bottom{SortClassDataCellMap{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, \exists{SortGeneratedTopCell{}} (X2:SortOutputCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}, X2:SortOutputCell{})))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTasksCellFragment{}} (\exists{SortTasksCellFragment{}} (X0:SortTaskCellSet{}, Lbl'-LT-'tasks'-GT-'-fragment{}(X0:SortTaskCellSet{})), \bottom{SortTasksCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortBlock{}} (\exists{SortBlock{}} (X0:SortStmt{}, Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(X0:SortStmt{})), \or{SortBlock{}} (Lbl'LBraRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block{}(), \or{SortBlock{}} (\exists{SortBlock{}} (Val:SortBlockOrStmtType{}, inj{SortBlockOrStmtType{}, SortBlock{}} (Val:SortBlockOrStmtType{})), \bottom{SortBlock{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFieldReference{}} (\exists{SortFieldReference{}} (X0:SortExp{}, \exists{SortFieldReference{}} (X1:SortId{}, Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(X0:SortExp{}, X1:SortId{}))), \bottom{SortFieldReference{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortSet{}}() [constructor{}()] // no junk
  axiom{} \or{SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), \or{SortExps{}} (\exists{SortExps{}} (X0:SortExp{}, \exists{SortExps{}} (X1:SortExps{}, Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \or{SortExps{}} (\exists{SortExps{}} (Val:SortTypes{}, inj{SortTypes{}, SortExps{}} (Val:SortTypes{})), \bottom{SortExps{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortClassesCell{}} (\exists{SortClassesCell{}} (X0:SortClassDataCellMap{}, Lbl'-LT-'classes'-GT-'{}(X0:SortClassDataCellMap{})), \bottom{SortClassesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortClassDataCellFragment{}} (\exists{SortClassDataCellFragment{}} (X0:SortClassNameCellOpt{}, \exists{SortClassDataCellFragment{}} (X1:SortBaseClassCellOpt{}, \exists{SortClassDataCellFragment{}} (X2:SortBaseClassesCellOpt{}, \exists{SortClassDataCellFragment{}} (X3:SortCtenvCellOpt{}, Lbl'-LT-'classData'-GT-'-fragment{}(X0:SortClassNameCellOpt{}, X1:SortBaseClassCellOpt{}, X2:SortBaseClassesCellOpt{}, X3:SortCtenvCellOpt{}))))), \bottom{SortClassDataCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortArrayReference{}} (\exists{SortArrayReference{}} (X0:SortExp{}, \exists{SortArrayReference{}} (X1:SortExps{}, Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(X0:SortExp{}, X1:SortExps{}))), \bottom{SortArrayReference{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortString{}, inj{SortString{}, SortIOString{}} (Val:SortString{})), \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOString{}} (Val:SortIOError{})), \bottom{SortIOString{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTasksCellOpt{}} (LblnoTasksCell{}(), \or{SortTasksCellOpt{}} (\exists{SortTasksCellOpt{}} (Val:SortTasksCell{}, inj{SortTasksCell{}, SortTasksCellOpt{}} (Val:SortTasksCell{})), \bottom{SortTasksCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortOutputCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortOutputCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortReturnTypeCell{}} (Lbl'Stop'ReturnTypeCell{}(), \or{SortReturnTypeCell{}} (\exists{SortReturnTypeCell{}} (X0:SortType{}, Lbl'-LT-'returnType'-GT-'{}(X0:SortType{})), \bottom{SortReturnTypeCell{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIOError{}} (Lbl'Hash'E2BIG{}(), \or{SortIOError{}} (Lbl'Hash'EACCES{}(), \or{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), \or{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), \or{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EAGAIN{}(), \or{SortIOError{}} (Lbl'Hash'EALREADY{}(), \or{SortIOError{}} (Lbl'Hash'EBADF{}(), \or{SortIOError{}} (Lbl'Hash'EBUSY{}(), \or{SortIOError{}} (Lbl'Hash'ECHILD{}(), \or{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), \or{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), \or{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), \or{SortIOError{}} (Lbl'Hash'EDEADLK{}(), \or{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), \or{SortIOError{}} (Lbl'Hash'EDOM{}(), \or{SortIOError{}} (Lbl'Hash'EEXIST{}(), \or{SortIOError{}} (Lbl'Hash'EFAULT{}(), \or{SortIOError{}} (Lbl'Hash'EFBIG{}(), \or{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), \or{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), \or{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), \or{SortIOError{}} (Lbl'Hash'EINTR{}(), \or{SortIOError{}} (Lbl'Hash'EINVAL{}(), \or{SortIOError{}} (Lbl'Hash'EIO{}(), \or{SortIOError{}} (Lbl'Hash'EISCONN{}(), \or{SortIOError{}} (Lbl'Hash'EISDIR{}(), \or{SortIOError{}} (Lbl'Hash'ELOOP{}(), \or{SortIOError{}} (Lbl'Hash'EMFILE{}(), \or{SortIOError{}} (Lbl'Hash'EMLINK{}(), \or{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), \or{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), \or{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), \or{SortIOError{}} (Lbl'Hash'ENETRESET{}(), \or{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), \or{SortIOError{}} (Lbl'Hash'ENFILE{}(), \or{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), \or{SortIOError{}} (Lbl'Hash'ENODEV{}(), \or{SortIOError{}} (Lbl'Hash'ENOENT{}(), \or{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), \or{SortIOError{}} (Lbl'Hash'ENOLCK{}(), \or{SortIOError{}} (Lbl'Hash'ENOMEM{}(), \or{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), \or{SortIOError{}} (Lbl'Hash'ENOSPC{}(), \or{SortIOError{}} (Lbl'Hash'ENOSYS{}(), \or{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), \or{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), \or{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), \or{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), \or{SortIOError{}} (Lbl'Hash'ENOTTY{}(), \or{SortIOError{}} (Lbl'Hash'ENXIO{}(), \or{SortIOError{}} (Lbl'Hash'EOF{}(), \or{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), \or{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), \or{SortIOError{}} (Lbl'Hash'EPERM{}(), \or{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EPIPE{}(), \or{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), \or{SortIOError{}} (Lbl'Hash'ERANGE{}(), \or{SortIOError{}} (Lbl'Hash'EROFS{}(), \or{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), \or{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'ESPIPE{}(), \or{SortIOError{}} (Lbl'Hash'ESRCH{}(), \or{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), \or{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), \or{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), \or{SortIOError{}} (Lbl'Hash'EXDEV{}(), \or{SortIOError{}} (\exists{SortIOError{}} (X0:SortString{}, Lbl'Hash'noParse{}(X0:SortString{})), \or{SortIOError{}} (\exists{SortIOError{}} (X0:SortInt{}, Lbl'Hash'unknownIOError{}(X0:SortInt{})), \bottom{SortIOError{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{R} \equals{SortExps{}, R} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), inj{SortTypes{}, SortExps{}} (Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())) [symbol-overload{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(), Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())] // overloaded production
  axiom{R} \equals{SortExps{}, R} (Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}} (K0:SortType{}),inj{SortTypes{}, SortExps{}} (K1:SortTypes{})), inj{SortTypes{}, SortExps{}} (Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(K0:SortType{},K1:SortTypes{}))) [symbol-overload{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(), Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}())] // overloaded production

// rules
// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2222,8,2222,59)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2222,8,2222,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2223,8,2223,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2223,8,2223,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa")]

// rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9), org.kframework.attributes.Location(Location(2410,8,2410,48)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS:SortString{}
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(X0:SortString{}),
     \and{SortIOInt{}} (
       Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r+")),
        \top{SortIOInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2410,8,2410,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7ad2779cd54b9009119458217cae5138026cc4ff244e54c28e64db21100f63d9")]

// rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162), org.kframework.attributes.Location(Location(2507,8,2507,20)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("2"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2507,8,2507,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("75e0a8082acda4cf1e29caa6aaafb7f9a421e16421a41f2006943d6fab17a162")]

// rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3), org.kframework.attributes.Location(Location(2505,8,2505,19)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2505,8,2505,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c7ffdc9908c28a954521816d680f4e5ec44a679c7231a8dd09d4700f50b6d8c3")]

// rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c), org.kframework.attributes.Location(Location(2506,8,2506,20)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInt{},R} (
      Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}(),
     \and{SortInt{}} (
       \dv{SortInt{}}("1"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2506,8,2506,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4ad4f379ff9db687ff9dfd1b15052edbcd3342a2ed262ecdd38c769e177a592c")]

// rule `<generatedTop>`(_Gen1,_Gen2,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(N))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(S))))),_Gen0)))=>`<generatedTop>`(_Gen1,_Gen2,`<output>`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(`project:Int`(`#write(_,_)_K-IO_K_Int_String`(N,S)~>inj{Int,KItem}(N))))),`ListItem`(inj{String,KItem}(#token("\"on\"","String")))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(#token("\"\"","String")))))),_Gen0))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(829e7a581bda9035541ca05d9bfdcdc5eaaead3bd4adcbcd0064665c87d15682), label(STDOUT-STREAM.stdoutWrite), org.kframework.attributes.Location(Location(2724,8,2730,28)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), priority(30), stream]
  alias rule6LHS{}(SortInt{},SortString{},SortList{},SortTCell{},SortGeneratedCounterCell{}) : SortGeneratedTopCell{}
  where rule6LHS{}(VarN:SortInt{},VarS:SortString{},Var'Unds'Gen0:SortList{},Var'Unds'Gen1:SortTCell{},Var'Unds'Gen2:SortGeneratedCounterCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen1:SortTCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(VarN:SortInt{}))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()))))),Var'Unds'Gen0:SortList{})))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE25{}()),
      rule6LHS{}(VarN:SortInt{},VarS:SortString{},Var'Unds'Gen0:SortList{},Var'Unds'Gen1:SortTCell{},Var'Unds'Gen2:SortGeneratedCounterCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen1:SortTCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Lblproject'Coln'Int{}(append{}(Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(VarN:SortInt{},VarS:SortString{}),kseq{}(inj{SortInt{}, SortKItem{}}(VarN:SortInt{}),dotk{}())))))),LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("on")))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}()))))),Var'Unds'Gen0:SortList{})))))
  [label{}("STDOUT-STREAM.stdoutWrite"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2724,8,2730,28)"), stream{}(""), priority{}("30"), UNIQUE'Unds'ID{}("829e7a581bda9035541ca05d9bfdcdc5eaaead3bd4adcbcd0064665c87d15682")]

// rule `<generatedTop>`(_Gen3,_Gen4,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{Float,KItem}(F))),_Gen2)))=>`<generatedTop>`(_Gen3,_Gen4,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,`Float2String(_)_STRING-COMMON_String_Float`(F))))))),`.List`(.KList)),_Gen2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(89fef51abf440e0b5fb4f7e5124420710d920e33fd02d4b5f0a2bce24cf6bb6b), label(STDOUT-STREAM.stdoutBufferFloat), org.kframework.attributes.Location(Location(2692,8,2698,17)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  alias rule7LHS{}(SortString{},SortFloat{},SortInt{},SortKItem{},SortList{},SortTCell{},SortGeneratedCounterCell{}) : SortGeneratedTopCell{}
  where rule7LHS{}(VarBuffer:SortString{},VarF:SortFloat{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortFloat{}, SortKItem{}}(VarF:SortFloat{}))),Var'Unds'Gen2:SortList{})))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule7LHS{}(VarBuffer:SortString{},VarF:SortFloat{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},LblFloat2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Float{}(VarF:SortFloat{}))),dotk{}()))))),Lbl'Stop'List{}()),Var'Unds'Gen2:SortList{})))))
  [label{}("STDOUT-STREAM.stdoutBufferFloat"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2692,8,2698,17)"), stream{}(""), priority{}("25"), UNIQUE'Unds'ID{}("89fef51abf440e0b5fb4f7e5124420710d920e33fd02d4b5f0a2bce24cf6bb6b")]

// rule `<generatedTop>`(_Gen3,_Gen4,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{Int,KItem}(I))),_Gen2)))=>`<generatedTop>`(_Gen3,_Gen4,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,`Int2String(_)_STRING-COMMON_String_Int`(I))))))),`.List`(.KList)),_Gen2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1b7e635260c20311589d096311bc20689afe150d1fe517d0d5c90f2911983bb), label(STDOUT-STREAM.stdoutBufferInt), org.kframework.attributes.Location(Location(2702,8,2708,17)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  alias rule8LHS{}(SortString{},SortInt{},SortInt{},SortKItem{},SortList{},SortTCell{},SortGeneratedCounterCell{}) : SortGeneratedTopCell{}
  where rule8LHS{}(VarBuffer:SortString{},VarI:SortInt{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}))),Var'Unds'Gen2:SortList{})))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule8LHS{}(VarBuffer:SortString{},VarI:SortInt{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),dotk{}()))))),Lbl'Stop'List{}()),Var'Unds'Gen2:SortList{})))))
  [label{}("STDOUT-STREAM.stdoutBufferInt"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2702,8,2708,17)"), stream{}(""), priority{}("25"), UNIQUE'Unds'ID{}("f1b7e635260c20311589d096311bc20689afe150d1fe517d0d5c90f2911983bb")]

// rule `<generatedTop>`(_Gen3,_Gen4,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(Buffer))))),`ListItem`(inj{String,KItem}(S))),_Gen2)))=>`<generatedTop>`(_Gen3,_Gen4,`<output>`(`_List_`(`_List_`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(_Gen0))),`ListItem`(_Gen1)),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(Buffer,S)))))),`.List`(.KList)),_Gen2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0fe5129bd201b152b85e90ec5a8723a84094ae3ebdfc28487c9b99c7ea3fed9), label(STDOUT-STREAM.stdoutBufferString), org.kframework.attributes.Location(Location(2712,8,2718,17)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), stream]
  alias rule9LHS{}(SortString{},SortString{},SortInt{},SortKItem{},SortList{},SortTCell{},SortGeneratedCounterCell{}) : SortGeneratedTopCell{}
  where rule9LHS{}(VarBuffer:SortString{},VarS:SortString{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarBuffer:SortString{}),dotk{}()))))),LblListItem{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}))),Var'Unds'Gen2:SortList{})))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule9LHS{}(VarBuffer:SortString{},VarS:SortString{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Var'Unds'Gen0:SortInt{}))),LblListItem{}(Var'Unds'Gen1:SortKItem{})),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(VarBuffer:SortString{},VarS:SortString{})),dotk{}()))))),Lbl'Stop'List{}()),Var'Unds'Gen2:SortList{})))))
  [label{}("STDOUT-STREAM.stdoutBufferString"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2712,8,2718,17)"), stream{}(""), priority{}("25"), UNIQUE'Unds'ID{}("b0fe5129bd201b152b85e90ec5a8723a84094ae3ebdfc28487c9b99c7ea3fed9")]

// rule `<generatedTop>`(`<T>`(_DotVar1,`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(_Gen0,`<classData>`(_Gen0,`<baseClass>`(C),`<baseClasses>`(`.Set`(.KList)),_Gen1)),_DotVar2))),_Gen2,_Gen3)=>`<generatedTop>`(`<T>`(_DotVar1,`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(_Gen0,`<classData>`(_Gen0,`<baseClass>`(C),`<baseClasses>`(`SetItem`(C)),_Gen1)),_DotVar2))),_Gen2,_Gen3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cb4f63ae856fb7098d95f98e271ec82008ae819dd5530304345e098656297150), org.kframework.attributes.Location(Location(634,8,635,55)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25), structural]
  alias rule10LHS{}(SortKItem{},SortTasksCell{},SortClassDataCellMap{},SortClassNameCell{},SortCtenvCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule10LHS{}(VarC:SortKItem{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'Gen0:SortClassNameCell{},Var'Unds'Gen1:SortCtenvCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'DotVar1:SortTasksCell{},Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Var'Unds'Gen0:SortClassNameCell{},Lbl'-LT-'classData'-GT-'{}(Var'Unds'Gen0:SortClassNameCell{},Lbl'-LT-'baseClass'-GT-'{}(kseq{}(VarC:SortKItem{},dotk{}())),Lbl'-LT-'baseClasses'-GT-'{}(Lbl'Stop'Set{}()),Var'Unds'Gen1:SortCtenvCell{})),Var'Unds'DotVar2:SortClassDataCellMap{}))),Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule10LHS{}(VarC:SortKItem{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'Gen0:SortClassNameCell{},Var'Unds'Gen1:SortCtenvCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'DotVar1:SortTasksCell{},Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Var'Unds'Gen0:SortClassNameCell{},Lbl'-LT-'classData'-GT-'{}(Var'Unds'Gen0:SortClassNameCell{},Lbl'-LT-'baseClass'-GT-'{}(kseq{}(VarC:SortKItem{},dotk{}())),Lbl'-LT-'baseClasses'-GT-'{}(LblSetItem{}(VarC:SortKItem{})),Var'Unds'Gen1:SortCtenvCell{})),Var'Unds'DotVar2:SortClassDataCellMap{}))),Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(634,8,635,55)"), priority{}("25"), UNIQUE'Unds'ID{}("cb4f63ae856fb7098d95f98e271ec82008ae819dd5530304345e098656297150")]

// rule `<generatedTop>`(`<T>`(_DotVar1,`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen0,`<baseClasses>`(`_Set_`(`SetItem`(inj{Id,KItem}(C)),_DotVar4)),_Gen1)),_DotVar2))),_DotVar0,`<output>`(`_List_`(_DotVar5,`.List`(.KList))))=>`<generatedTop>`(`.TCell`(.KList),_DotVar0,`<output>`(`_List_`(_DotVar5,`ListItem`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"Class \\\"\"","String"),`Id2String(_)_ID-COMMON_String_Id`(C)),#token("\"\\\" is in a cycle!\\n\"","String"))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(74ec4abfecf4513d76433d23a5f4db0e94a35ca061ca5fb898a847c6fd8a122b), inheritance-cycle, org.kframework.attributes.Location(Location(643,8,648,75)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), priority(25)]
  alias rule11LHS{}(SortId{},SortGeneratedCounterCell{},SortTasksCell{},SortClassDataCellMap{},SortSet{},SortList{},SortBaseClassCell{},SortCtenvCell{}) : SortGeneratedTopCell{}
  where rule11LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'DotVar4:SortSet{},Var'Unds'DotVar5:SortList{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortCtenvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'DotVar1:SortTasksCell{},Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen0:SortBaseClassCell{},Lbl'-LT-'baseClasses'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortId{}, SortKItem{}}(VarC:SortId{})),Var'Unds'DotVar4:SortSet{})),Var'Unds'Gen1:SortCtenvCell{})),Var'Unds'DotVar2:SortClassDataCellMap{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar5:SortList{},Lbl'Stop'List{}())))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule11LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'DotVar4:SortSet{},Var'Unds'DotVar5:SortList{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortCtenvCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'Stop'TCell{}(),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar5:SortList{},LblListItem{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("Class \""),LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(VarC:SortId{})),\dv{SortString{}}("\" is in a cycle!\n")))))))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(643,8,648,75)"), priority{}("25"), UNIQUE'Unds'ID{}("74ec4abfecf4513d76433d23a5f4db0e94a35ca061ca5fb898a847c6fd8a122b"), inheritance-cycle{}()]

// rule `<generatedTop>`(`<T>`(_DotVar1,`<classes>`(`_ClassDataCellMap_`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(_Gen0,`<classData>`(_Gen0,_Gen1,`<baseClasses>`(`_Set_`(`_Set_`(`SetItem`(inj{Id,KItem}(C)),Cs),`.Set`(.KList))),_Gen2)),`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),`<baseClass>`(C'),_Gen3,_Gen4))),_DotVar2))),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(_DotVar1,`<classes>`(`_ClassDataCellMap_`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(_Gen0,`<classData>`(_Gen0,_Gen1,`<baseClasses>`(`_Set_`(`_Set_`(`SetItem`(inj{Id,KItem}(C)),Cs),`SetItem`(C'))),_Gen2)),`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),`<baseClass>`(C'),_Gen3,_Gen4))),_DotVar2))),_Gen5,_Gen6) requires `notBool_`(`Set:in`(C',`_Set_`(`SetItem`(inj{Id,KItem}(C)),Cs))) ensures #token("true","Bool") [UNIQUE_ID(6b8264ab45e738be65e79a6516ca84afe0a048d9d726029dda32ddf64afe9955), org.kframework.attributes.Location(Location(637,8,641,40)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]), priority(25), structural]
  alias rule12LHS{}(SortId{},SortKItem{},SortSet{},SortTasksCell{},SortClassDataCellMap{},SortClassNameCell{},SortBaseClassCell{},SortCtenvCell{},SortBaseClassesCell{},SortCtenvCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule12LHS{}(VarC:SortId{},VarC'Apos':SortKItem{},VarCs:SortSet{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'Gen0:SortClassNameCell{},Var'Unds'Gen1:SortBaseClassCell{},Var'Unds'Gen2:SortCtenvCell{},Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(VarC'Apos':SortKItem{},Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortId{}, SortKItem{}}(VarC:SortId{})),VarCs:SortSet{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'DotVar1:SortTasksCell{},Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Var'Unds'Gen0:SortClassNameCell{},Lbl'-LT-'classData'-GT-'{}(Var'Unds'Gen0:SortClassNameCell{},Var'Unds'Gen1:SortBaseClassCell{},Lbl'-LT-'baseClasses'-GT-'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortId{}, SortKItem{}}(VarC:SortId{})),VarCs:SortSet{}),Lbl'Stop'Set{}())),Var'Unds'Gen2:SortCtenvCell{})),LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(kseq{}(VarC'Apos':SortKItem{},dotk{}())),Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{}))),Var'Unds'DotVar2:SortClassDataCellMap{}))),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule12LHS{}(VarC:SortId{},VarC'Apos':SortKItem{},VarCs:SortSet{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'Gen0:SortClassNameCell{},Var'Unds'Gen1:SortBaseClassCell{},Var'Unds'Gen2:SortCtenvCell{},Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'DotVar1:SortTasksCell{},Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Var'Unds'Gen0:SortClassNameCell{},Lbl'-LT-'classData'-GT-'{}(Var'Unds'Gen0:SortClassNameCell{},Var'Unds'Gen1:SortBaseClassCell{},Lbl'-LT-'baseClasses'-GT-'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortId{}, SortKItem{}}(VarC:SortId{})),VarCs:SortSet{}),LblSetItem{}(VarC'Apos':SortKItem{}))),Var'Unds'Gen2:SortCtenvCell{})),LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(kseq{}(VarC'Apos':SortKItem{},dotk{}())),Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{}))),Var'Unds'DotVar2:SortClassDataCellMap{}))),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(637,8,641,40)"), priority{}("25"), UNIQUE'Unds'ID{}("6b8264ab45e738be65e79a6516ca84afe0a048d9d726029dda32ddf64afe9955")]

// rule `<generatedTop>`(`<T>`(_DotVar1,`<classes>`(`_ClassDataCellMap_`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen0,_Gen1,_Gen2)),`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen3,_Gen4,_Gen5))),_DotVar2))),_DotVar0,`<output>`(`_List_`(_DotVar5,`.List`(.KList))))=>`<generatedTop>`(`.TCell`(.KList),_DotVar0,`<output>`(`_List_`(_DotVar5,`ListItem`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"Class \\\"\"","String"),`Id2String(_)_ID-COMMON_String_Id`(C)),#token("\"\\\" declared twice!\\n\"","String"))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00ae600e063abb1291fc0ba13de1f13e4b4410f7b6b45b4aa749e94afe1e2fd0), org.kframework.attributes.Location(Location(618,8,623,76)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule13LHS{}(SortId{},SortGeneratedCounterCell{},SortTasksCell{},SortClassDataCellMap{},SortList{},SortBaseClassCell{},SortBaseClassesCell{},SortCtenvCell{},SortBaseClassCell{},SortBaseClassesCell{},SortCtenvCell{}) : SortGeneratedTopCell{}
  where rule13LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'DotVar5:SortList{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortBaseClassesCell{},Var'Unds'Gen2:SortCtenvCell{},Var'Unds'Gen3:SortBaseClassCell{},Var'Unds'Gen4:SortBaseClassesCell{},Var'Unds'Gen5:SortCtenvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Var'Unds'DotVar1:SortTasksCell{},Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortBaseClassesCell{},Var'Unds'Gen2:SortCtenvCell{})),LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen3:SortBaseClassCell{},Var'Unds'Gen4:SortBaseClassesCell{},Var'Unds'Gen5:SortCtenvCell{}))),Var'Unds'DotVar2:SortClassDataCellMap{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar5:SortList{},Lbl'Stop'List{}())))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule13LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'DotVar5:SortList{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortBaseClassesCell{},Var'Unds'Gen2:SortCtenvCell{},Var'Unds'Gen3:SortBaseClassCell{},Var'Unds'Gen4:SortBaseClassesCell{},Var'Unds'Gen5:SortCtenvCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'Stop'TCell{}(),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar5:SortList{},LblListItem{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("Class \""),LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(VarC:SortId{})),\dv{SortString{}}("\" declared twice!\n")))))))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(618,8,623,76)"), UNIQUE'Unds'ID{}("00ae600e063abb1291fc0ba13de1f13e4b4410f7b6b45b4aa749e94afe1e2fd0")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`.TaskCellSet`(.KList)),_DotVar1),_DotVar0,`<output>`(`_List_`(_DotVar2,`.List`(.KList))))=>`<generatedTop>`(`.TCell`(.KList),_DotVar0,`<output>`(`_List_`(_DotVar2,`ListItem`(inj{String,KItem}(#token("\"Type checked!\\n\"","String")))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ed99347f6a3ca4f4f43b741bdba217e6166c6713baff3650b84368802bea93c1), org.kframework.attributes.Location(Location(826,8,827,66)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule14LHS{}(SortGeneratedCounterCell{},SortClassesCell{},SortList{}) : SortGeneratedTopCell{}
  where rule14LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortList{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Stop'TaskCellSet{}()),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar2:SortList{},Lbl'Stop'List{}())))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule14LHS{}(Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortList{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'Stop'TCell{}(),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar2:SortList{},LblListItem{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("Type checked!\n"))))))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(826,8,827,66)"), UNIQUE'Unds'ID{}("ed99347f6a3ca4f4f43b741bdba217e6166c6713baff3650b84368802bea93c1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkMethod(_,_,_)_KOOL-TYPED-STATIC_KItem_Id_Type_Id`(F,T,C)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen4,_Gen5,`<ctenv>`(`_Map_`(`_|->_`(inj{Id,KItem}(F),inj{Type,KItem}(T')),_DotVar7)))),_DotVar5)) #as _Gen11),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T',`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen11),_Gen6,_Gen7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(514338c98367769cd774e824974d2e1f473e8158d0cd7f5205a89e9560a0adaf), org.kframework.attributes.Location(Location(892,8,894,44)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule15LHS{}(SortId{},SortId{},SortType{},SortType{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortMap{},SortTenvCell{},SortCtenvTCell{},SortClassesCell{},SortReturnTypeCell{},SortInClassCell{},SortBaseClassCell{},SortBaseClassesCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule15LHS{}(VarC:SortId{},VarF:SortId{},VarT:SortType{},VarT'Apos':SortType{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(VarF:SortId{},VarT:SortType{},VarC:SortId{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Lbl'-LT-'ctenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarF:SortId{}),inj{SortType{}, SortKItem{}}(VarT'Apos':SortType{})),Var'Unds'DotVar7:SortMap{})))),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen11:SortClassesCell{})),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule15LHS{}(VarC:SortId{},VarF:SortId{},VarT:SortType{},VarT'Apos':SortType{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT'Apos':SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen11:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(892,8,894,44)"), UNIQUE'Unds'ID{}("514338c98367769cd774e824974d2e1f473e8158d0cd7f5205a89e9560a0adaf")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkMethod(_,_,_)_KOOL-TYPED-STATIC_KItem_Id_Type_Id`(F,_T,C)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),`<baseClass>`(inj{Id,KItem}(C')),_DotVar6,`<ctenv>`(Rho))),_DotVar5)) #as _Gen9),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkMethod(_,_,_)_KOOL-TYPED-STATIC_KItem_Id_Type_Id`(F,_T,C')~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen9),_Gen4,_Gen5) requires `notBool_`(`Set:in`(inj{Id,KItem}(F),`keys(_)_MAP_Set_Map`(Rho))) ensures #token("true","Bool") [UNIQUE_ID(e29bd58d5fe54adfede35857c191f52d91d96b3d70a8fe149844dce0e3545ed1), org.kframework.attributes.Location(Location(897,8,901,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]), structural]
  alias rule16LHS{}(SortId{},SortId{},SortId{},SortMap{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortBaseClassesCell{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{},SortClassesCell{},SortType{}) : SortGeneratedTopCell{}
  where rule16LHS{}(VarC:SortId{},VarC'Apos':SortId{},VarF:SortId{},VarRho:SortMap{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar6:SortBaseClassesCell{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'Gen9:SortClassesCell{},Var'Unds'T:SortType{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarF:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarRho:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(VarF:SortId{},Var'Unds'T:SortType{},VarC:SortId{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC'Apos':SortId{}),dotk{}())),Var'Unds'DotVar6:SortBaseClassesCell{},Lbl'-LT-'ctenv'-GT-'{}(VarRho:SortMap{}))),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen9:SortClassesCell{})),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule16LHS{}(VarC:SortId{},VarC'Apos':SortId{},VarF:SortId{},VarRho:SortMap{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar6:SortBaseClassesCell{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'Gen9:SortClassesCell{},Var'Unds'T:SortType{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(VarF:SortId{},Var'Unds'T:SortType{},VarC'Apos':SortId{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen9:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(897,8,901,33)"), UNIQUE'Unds'ID{}("e29bd58d5fe54adfede35857c191f52d91d96b3d70a8fe149844dce0e3545ed1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkMethod(_,_,_)_KOOL-TYPED-STATIC_KItem_Id_Type_Id`(_Gen0,_Gen1,#token("Object","Id"))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_DotVar1),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_DotVar1),_Gen6,_Gen7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(33f3c7843639141fe5dd97b109948843d40f9be3da12d856487d13f461c653b4), org.kframework.attributes.Location(Location(903,8,903,39)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule17LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortId{},SortType{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule17LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortType{},Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortType{},\dv{SortId{}}("Object")),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule17LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortId{},Var'Unds'Gen1:SortType{},Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(903,8,903,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("33f3c7843639141fe5dd97b109948843d40f9be3da12d856487d13f461c653b4")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(137fa41e722bd1cdbd91f61f6bd634957b6952816744070a2e1e9945ec5b9e4a), org.kframework.attributes.Location(Location(855,8,855,40)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule18LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule18LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule18LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(855,8,855,40)"), UNIQUE'Unds'ID{}("137fa41e722bd1cdbd91f61f6bd634957b6952816744070a2e1e9945ec5b9e4a")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`void_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dfc9ab10024b3d222c38cbc54dd0dbf02bcc2d0ce0b6b6d0437f567104b7f11d), org.kframework.attributes.Location(Location(856,8,856,38)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule19LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule19LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}(),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule19LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(856,8,856,38)"), UNIQUE'Unds'ID{}("dfc9ab10024b3d222c38cbc54dd0dbf02bcc2d0ce0b6b6d0437f567104b7f11d")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,Ts),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T',Ts'))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T',`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(Ts,Ts')~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_=/=K_`(inj{Types,KItem}(Ts),inj{Types,KItem}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(05d0d063c3207b6024e7131149bd95cba63334d31f15b51dfc438328745b0d0e), org.kframework.attributes.Location(Location(851,8,853,24)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]), structural]
  alias rule20LHS{}(SortType{},SortType{},SortTypes{},SortTypes{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule20LHS{}(VarT:SortType{},VarT'Apos':SortType{},VarTs:SortTypes{},VarTs'Apos':SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortTypes{}, SortKItem{}}(VarTs:SortTypes{}),dotk{}()),kseq{}(inj{SortTypes{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},VarTs:SortTypes{}),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT'Apos':SortType{},VarTs'Apos':SortTypes{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule20LHS{}(VarT:SortType{},VarT'Apos':SortType{},VarTs:SortTypes{},VarTs'Apos':SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT'Apos':SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(VarTs:SortTypes{},VarTs'Apos':SortTypes{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(851,8,853,24)"), UNIQUE'Unds'ID{}("05d0d063c3207b6024e7131149bd95cba63334d31f15b51dfc438328745b0d0e")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a39a298ab082b5ae483fd1809d55f2264ab1bbb37cdda4af760429a79297907), org.kframework.attributes.Location(Location(839,8,839,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule21LHS{}(SortType{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule21LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule21LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(839,8,839,36)"), UNIQUE'Unds'ID{}("1a39a298ab082b5ae483fd1809d55f2264ab1bbb37cdda4af760429a79297907")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`_->__KOOL-TYPED-STATIC-SYNTAX_Type_Types_Type`(Ts1,T2),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`_->__KOOL-TYPED-STATIC-SYNTAX_Type_Types_Type`(Ts1',T2'),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T2,Ts1'),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T2',Ts1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d1499f4763f22e228c1eb8b9ec71b217668bcc95ddbf18ee524ba351b26f2ff), org.kframework.attributes.Location(Location(845,8,846,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule22LHS{}(SortType{},SortType{},SortTypes{},SortTypes{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule22LHS{}(VarT2:SortType{},VarT2'Apos':SortType{},VarTs1:SortTypes{},VarTs1'Apos':SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(VarTs1:SortTypes{},VarT2:SortType{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(VarTs1'Apos':SortTypes{},VarT2'Apos':SortType{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule22LHS{}(VarT2:SortType{},VarT2'Apos':SortType{},VarTs1:SortTypes{},VarTs1'Apos':SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT2:SortType{},VarTs1'Apos':SortTypes{}),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT2'Apos':SortType{},VarTs1:SortTypes{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(845,8,846,57)"), UNIQUE'Unds'ID{}("1d1499f4763f22e228c1eb8b9ec71b217668bcc95ddbf18ee524ba351b26f2ff")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(class(C),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(class(C'),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen4,`<baseClasses>`(`_Set_`(`SetItem`(inj{Id,KItem}(C')),_DotVar7)),_Gen5)),_DotVar5)) #as _Gen11),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen11),_Gen6,_Gen7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6a663eab51c1039ade9531381cb3785fd97c957a6fb4f15b5c2d7a683c370bcc), org.kframework.attributes.Location(Location(841,8,843,54)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule23LHS{}(SortId{},SortId{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortSet{},SortTenvCell{},SortCtenvTCell{},SortClassesCell{},SortReturnTypeCell{},SortInClassCell{},SortBaseClassCell{},SortCtenvCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule23LHS{}(VarC:SortId{},VarC'Apos':SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortSet{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortCtenvCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblclass{}(VarC:SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblclass{}(VarC'Apos':SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen4:SortBaseClassCell{},Lbl'-LT-'baseClasses'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortId{}, SortKItem{}}(VarC'Apos':SortId{})),Var'Unds'DotVar7:SortSet{})),Var'Unds'Gen5:SortCtenvCell{})),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen11:SortClassesCell{})),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule23LHS{}(VarC:SortId{},VarC'Apos':SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortSet{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortCtenvCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen11:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(841,8,843,54)"), UNIQUE'Unds'ID{}("6a663eab51c1039ade9531381cb3785fd97c957a6fb4f15b5c2d7a683c370bcc")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(020e6a7773bbfa99fd14d97294a7e383094c0b039c501de7d2d90009746f0cc0), org.kframework.attributes.Location(Location(868,8,868,30)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule24LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule24LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule24LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(868,8,868,30)"), UNIQUE'Unds'ID{}("020e6a7773bbfa99fd14d97294a7e383094c0b039c501de7d2d90009746f0cc0")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,Ts))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(Ts)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_=/=K_`(inj{Types,KItem}(Ts),inj{Types,KItem}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(87f669f5732a82a0a9ec7b4d22e7485750709186cb00cc7846723705ee9df8fb), org.kframework.attributes.Location(Location(866,8,867,24)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]), structural]
  alias rule25LHS{}(SortType{},SortTypes{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule25LHS{}(VarT:SortType{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortTypes{}, SortKItem{}}(VarTs:SortTypes{}),dotk{}()),kseq{}(inj{SortTypes{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},VarTs:SortTypes{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule25LHS{}(VarT:SortType{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(VarTs:SortTypes{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(866,8,867,24)"), UNIQUE'Unds'ID{}("87f669f5732a82a0a9ec7b4d22e7485750709186cb00cc7846723705ee9df8fb")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`_->__KOOL-TYPED-STATIC-SYNTAX_Type_Types_Type`(Ts,T),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,Ts))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55e9528da80e3c92d2cf73c6497cc73dbf7aa9af0a221b69ede9a098c0e502b8), org.kframework.attributes.Location(Location(876,8,876,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule26LHS{}(SortType{},SortTypes{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule26LHS{}(VarT:SortType{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(VarTs:SortTypes{},VarT:SortType{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule26LHS{}(VarT:SortType{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},VarTs:SortTypes{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(876,8,876,56)"), UNIQUE'Unds'ID{}("55e9528da80e3c92d2cf73c6497cc73dbf7aa9af0a221b69ede9a098c0e502b8")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`_[]_KOOL-TYPED-STATIC-SYNTAX_Type_Type`(T),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ccb4ee26646a2ea1bc9416bdb830e0047af938b0336b07a3fbd4469a92cdbfb0), org.kframework.attributes.Location(Location(877,8,877,43)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule27LHS{}(SortType{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule27LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule27LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(877,8,877,43)"), UNIQUE'Unds'ID{}("ccb4ee26646a2ea1bc9416bdb830e0047af938b0336b07a3fbd4469a92cdbfb0")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d2f0589d6879888fc7672b3205c5295e31172d9e17bcf6b4ad6a828dd918aff9), org.kframework.attributes.Location(Location(870,8,870,28)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule28LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule28LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule28LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(870,8,870,28)"), UNIQUE'Unds'ID{}("d2f0589d6879888fc7672b3205c5295e31172d9e17bcf6b4ad6a828dd918aff9")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(class(C),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen4,_Gen5,_Gen6)),_DotVar5)) #as _Gen12),_Gen7,_Gen8)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen12),_Gen7,_Gen8) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e0e39027442828f964e3eafeec52e49ea1a8e5c6268d0166bf3e708c65c20d17), org.kframework.attributes.Location(Location(873,8,873,76)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule29LHS{}(SortId{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortTenvCell{},SortCtenvTCell{},SortClassesCell{},SortReturnTypeCell{},SortInClassCell{},SortBaseClassCell{},SortBaseClassesCell{},SortCtenvCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule29LHS{}(VarC:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Var'Unds'Gen6:SortCtenvCell{},Var'Unds'Gen7:SortGeneratedCounterCell{},Var'Unds'Gen8:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblclass{}(VarC:SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Var'Unds'Gen6:SortCtenvCell{})),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen12:SortClassesCell{})),Var'Unds'Gen7:SortGeneratedCounterCell{},Var'Unds'Gen8:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule29LHS{}(VarC:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen12:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Var'Unds'Gen6:SortCtenvCell{},Var'Unds'Gen7:SortGeneratedCounterCell{},Var'Unds'Gen8:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen12:SortClassesCell{}),Var'Unds'Gen7:SortGeneratedCounterCell{},Var'Unds'Gen8:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(873,8,873,76)"), UNIQUE'Unds'ID{}("e0e39027442828f964e3eafeec52e49ea1a8e5c6268d0166bf3e708c65c20d17")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(class(#token("Object","Id")),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(87624f4257375081f3535ec65d4306b051032e841c27f2dd230968ee27e156ee), org.kframework.attributes.Location(Location(875,8,875,39)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule30LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule30LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblclass{}(\dv{SortId{}}("Object")),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule30LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(875,8,875,39)"), UNIQUE'Unds'ID{}("87624f4257375081f3535ec65d4306b051032e841c27f2dd230968ee27e156ee")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cadf504ed05fed1af28a2072c83306de9c064fe829a66e27b6d4acff37076b13), org.kframework.attributes.Location(Location(869,8,869,27)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule31LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule31LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule31LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(869,8,869,27)"), UNIQUE'Unds'ID{}("cadf504ed05fed1af28a2072c83306de9c064fe829a66e27b6d4acff37076b13")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`string_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(07717654d5de59360d7afc470165879d01a72fc13db0c196790b0b4d15ca331c), org.kframework.attributes.Location(Location(871,8,871,30)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule32LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule32LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule32LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(871,8,871,30)"), UNIQUE'Unds'ID{}("07717654d5de59360d7afc470165879d01a72fc13db0c196790b0b4d15ca331c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`void_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0f00dacc56701997bed5430a7a71c99f356c8bb51752ea73bc3bde12a441f45b), org.kframework.attributes.Location(Location(872,8,872,28)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule33LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule33LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule33LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(872,8,872,28)"), UNIQUE'Unds'ID{}("0f00dacc56701997bed5430a7a71c99f356c8bb51752ea73bc3bde12a441f45b")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`!__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(d63d29a5615a08e55b0f970d23d306144144ec10cec65b6b4d8395e6bd0c423d), cool, cool-like, org.kframework.attributes.Location(Location(180,18,180,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule34LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule34LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule34LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,18,180,50)"), UNIQUE'Unds'ID{}("d63d29a5615a08e55b0f970d23d306144144ec10cec65b6b4d8395e6bd0c423d")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(0095fa4d6c659d7d68b0c14448457288c55f0feebb05f03e672d9c214389f80e), cool, cool-like, org.kframework.attributes.Location(Location(160,18,160,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(2)]
  alias rule35LHS{}(SortExp{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule35LHS{}(VarHOLE:SortExp{},VarK0:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule35LHS{}(VarHOLE:SortExp{},VarK0:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarK0:SortId{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(160,18,160,53)"), UNIQUE'Unds'ID{}("0095fa4d6c659d7d68b0c14448457288c55f0feebb05f03e672d9c214389f80e")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(03ad3326d4ebe456bdac2c0e61fcdc617103fb6f24cddc28141e377acecee7a1), cool, cool-like, org.kframework.attributes.Location(Location(163,18,163,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule36LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule36LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule36LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(163,18,163,50)"), UNIQUE'Unds'ID{}("03ad3326d4ebe456bdac2c0e61fcdc617103fb6f24cddc28141e377acecee7a1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ce8a2934c152749397e2fe2a9146e3f054a30d5b4d5d6988aa44a73e3a722930), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(179,18,179,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule37LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule37LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule37LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,18,179,61)"), UNIQUE'Unds'ID{}("ce8a2934c152749397e2fe2a9146e3f054a30d5b4d5d6988aa44a73e3a722930")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(fecaea5ac7806e300da109ef1701c4fce3eadb111f32e0208c787bb1322d90cc), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(179,18,179,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule38LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule38LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule38LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,18,179,61)"), UNIQUE'Unds'ID{}("fecaea5ac7806e300da109ef1701c4fce3eadb111f32e0208c787bb1322d90cc")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(225501ca2658bb758939b4045e8cae35513bfd9a77929eb7d860896f1f46219f), cool, cool-like, left, org.kframework.attributes.Location(Location(169,18,169,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule39LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule39LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule39LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,18,169,56)"), UNIQUE'Unds'ID{}("225501ca2658bb758939b4045e8cae35513bfd9a77929eb7d860896f1f46219f")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e10cd7a2aa8a64c5a4440def5f2120574a1afeb0a22046b2fd5faca7a3b18756), cool, cool-like, left, org.kframework.attributes.Location(Location(169,18,169,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule40LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule40LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule40LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,18,169,56)"), UNIQUE'Unds'ID{}("e10cd7a2aa8a64c5a4440def5f2120574a1afeb0a22046b2fd5faca7a3b18756")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(66ab7809d8b3bed1c7f1c69b6533c4f7aa38b287695bf65cfeaacb0a54576ef9), cool, cool-like, left, org.kframework.attributes.Location(Location(182,18,182,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule41LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule41LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule41LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,18,182,56)"), UNIQUE'Unds'ID{}("66ab7809d8b3bed1c7f1c69b6533c4f7aa38b287695bf65cfeaacb0a54576ef9")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6760df03b979c70ba68cde10ef3b622a937d99cc86fa69712b7256dac1b3a2fa), cool, cool-like, left, org.kframework.attributes.Location(Location(182,18,182,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule42LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule42LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule42LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,18,182,56)"), UNIQUE'Unds'ID{}("6760df03b979c70ba68cde10ef3b622a937d99cc86fa69712b7256dac1b3a2fa")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(91b45fd327ef3acc4032b4c16e2772c20dba679fb4efaadc5c2ccaf674fe7ec8), cool, cool-like, org.kframework.attributes.Location(Location(162,18,162,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule43LHS{}(SortExp{},SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule43LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule43LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,18,162,50)"), UNIQUE'Unds'ID{}("91b45fd327ef3acc4032b4c16e2772c20dba679fb4efaadc5c2ccaf674fe7ec8")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(9e5a98fc11c2149f735166ffa63d9d0c3d23d9b1909690ec6f83f0148714470f), cool, cool-like, org.kframework.attributes.Location(Location(162,18,162,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule44LHS{}(SortExps{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule44LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule44LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,18,162,50)"), UNIQUE'Unds'ID{}("9e5a98fc11c2149f735166ffa63d9d0c3d23d9b1909690ec6f83f0148714470f")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(0c1ada73e9f4c6861333e86ea9173c3c9c55aee890865258008cd74ccd7e1feb), cool, cool-like, left, org.kframework.attributes.Location(Location(167,18,167,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule45LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule45LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule45LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,18,167,56)"), UNIQUE'Unds'ID{}("0c1ada73e9f4c6861333e86ea9173c3c9c55aee890865258008cd74ccd7e1feb")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5fa55b3b477edfd35cddbe23998b28ca2272c7ccc942f71fe55250273d4f351d), cool, cool-like, left, org.kframework.attributes.Location(Location(167,18,167,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule46LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule46LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule46LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,18,167,56)"), UNIQUE'Unds'ID{}("5fa55b3b477edfd35cddbe23998b28ca2272c7ccc942f71fe55250273d4f351d")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(606616579ca623a986260ad3a205de87f29370abb8443d1f1d79b8c577a4128e), cool, cool-like, left, org.kframework.attributes.Location(Location(171,18,171,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule47LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule47LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule47LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,18,171,56)"), UNIQUE'Unds'ID{}("606616579ca623a986260ad3a205de87f29370abb8443d1f1d79b8c577a4128e")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(63e5400b30526611e48b80966b11b941bc130bf1db71e4f3fae553a3868d2f5a), cool, cool-like, left, org.kframework.attributes.Location(Location(171,18,171,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule48LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule48LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule48LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,18,171,56)"), UNIQUE'Unds'ID{}("63e5400b30526611e48b80966b11b941bc130bf1db71e4f3fae553a3868d2f5a")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(286a64a0d703e51a9a59709c1c6ec7332364fbdb0e03dc3c64eb612ba1ac7cae), cool, cool-like, klabel(exps), org.kframework.attributes.Location(Location(190,19,190,64)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, strict, userList(*)]
  alias rule49LHS{}(SortExp{},SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule49LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule49LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), right{}(), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,19,190,64)"), UNIQUE'Unds'ID{}("286a64a0d703e51a9a59709c1c6ec7332364fbdb0e03dc3c64eb612ba1ac7cae")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(45ef08af575429ccea5e1dbd04be4a5842fab1d79c89e37ffa93dc3ef0588be4), cool, cool-like, klabel(exps), org.kframework.attributes.Location(Location(190,19,190,64)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, strict, userList(*)]
  alias rule50LHS{}(SortExps{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule50LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule50LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), right{}(), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,19,190,64)"), UNIQUE'Unds'ID{}("45ef08af575429ccea5e1dbd04be4a5842fab1d79c89e37ffa93dc3ef0588be4")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c01a4465f47dc1c79af4b6fc4b1e5bc15e4483190cf6867affe3b0a153efdea6), cool, cool-like, left, org.kframework.attributes.Location(Location(172,18,172,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule51LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule51LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule51LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,18,172,56)"), UNIQUE'Unds'ID{}("c01a4465f47dc1c79af4b6fc4b1e5bc15e4483190cf6867affe3b0a153efdea6")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ce7dfe911eb26390b7814847b77d08af30e7e97a3111036cc2851483f2ede90f), cool, cool-like, left, org.kframework.attributes.Location(Location(172,18,172,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule52LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule52LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule52LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,18,172,56)"), UNIQUE'Unds'ID{}("ce7dfe911eb26390b7814847b77d08af30e7e97a3111036cc2851483f2ede90f")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id0_`(inj{Id,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{FieldReference,KItem}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(68b1327580bbb0d449ee5e490557db2516452dc9d70de75a0b07522eddc33ea9), cool, cool-like, org.kframework.attributes.Location(Location(151,29,151,60)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(1)]
  alias rule53LHS{}(SortExp{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule53LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK1:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule53LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFieldReference{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},VarK1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,29,151,60)"), UNIQUE'Unds'ID{}("68b1327580bbb0d449ee5e490557db2516452dc9d70de75a0b07522eddc33ea9")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(0fc464af85a5c18c871ebab740bca9cd513774130c9abf5ad6713dbbebbbaa45), cool, cool-like, left, org.kframework.attributes.Location(Location(168,18,168,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule54LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule54LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule54LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,18,168,56)"), UNIQUE'Unds'ID{}("0fc464af85a5c18c871ebab740bca9cd513774130c9abf5ad6713dbbebbbaa45")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c14ba40ce9d1278a5e81103cc4f1e6b681fd3a4f9bfc4f06c92f674ad5225d5e), cool, cool-like, left, org.kframework.attributes.Location(Location(168,18,168,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule55LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule55LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule55LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,18,168,56)"), UNIQUE'Unds'ID{}("c14ba40ce9d1278a5e81103cc4f1e6b681fd3a4f9bfc4f06c92f674ad5225d5e")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4586dc494188943c4cd0ef0f430b5caad5c963b9c988c434f090fbc38958ed68), cool, cool-like, org.kframework.attributes.Location(Location(200,19,200,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule56LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule56LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule56LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,19,200,67)"), UNIQUE'Unds'ID{}("4586dc494188943c4cd0ef0f430b5caad5c963b9c988c434f090fbc38958ed68")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c6caad3afe11bc864f1b6803e6793d9ffc7b03edf5ba2df5eb7e10e94528bc6c), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(175,18,175,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule57LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule57LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule57LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,18,175,61)"), UNIQUE'Unds'ID{}("c6caad3afe11bc864f1b6803e6793d9ffc7b03edf5ba2df5eb7e10e94528bc6c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ae34b1815b567bd08d86e1e013ac0493a340ad454be606f9993c32020926a4b6), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(175,18,175,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule58LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule58LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule58LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,18,175,61)"), UNIQUE'Unds'ID{}("ae34b1815b567bd08d86e1e013ac0493a340ad454be606f9993c32020926a4b6")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6838f881cc037cc34d7d87affc3fddcbc318acc22dd526e4c3a13fdc7f997300), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(174,18,174,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule59LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule59LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule59LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,18,174,61)"), UNIQUE'Unds'ID{}("6838f881cc037cc34d7d87affc3fddcbc318acc22dd526e4c3a13fdc7f997300")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(cf50d6e23ee988099227e73a60bb26cf8343db2722ba5757a882b061b92771b0), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(174,18,174,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule60LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule60LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule60LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,18,174,61)"), UNIQUE'Unds'ID{}("cf50d6e23ee988099227e73a60bb26cf8343db2722ba5757a882b061b92771b0")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(a66bb93a40fc82ba2bd33774502f72e333079e60ff220fffef38b50447c8ccd3), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(178,18,178,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule61LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule61LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule61LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,18,178,61)"), UNIQUE'Unds'ID{}("a66bb93a40fc82ba2bd33774502f72e333079e60ff220fffef38b50447c8ccd3")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(9cc4a2181979bcdab5b11b6ceb3168cf2a64f2498784e64b12d6ee263b4e7ecb), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(178,18,178,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule62LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule62LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule62LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,18,178,61)"), UNIQUE'Unds'ID{}("9cc4a2181979bcdab5b11b6ceb3168cf2a64f2498784e64b12d6ee263b4e7ecb")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(fb09f09327c07ae66a0addd079274ed3b7f58bfcad70db8875cb32f44796296a), cool, cool-like, org.kframework.attributes.Location(Location(185,18,185,60)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, strict(2)]
  alias rule63LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule63LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule63LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,18,185,60)"), UNIQUE'Unds'ID{}("fb09f09327c07ae66a0addd079274ed3b7f58bfcad70db8875cb32f44796296a")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(c8b95aba1964e51ac2dfef6ba17a20d2c2d1231a31c2704d722150bb535a1dc4), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(177,18,177,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule64LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule64LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule64LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,18,177,61)"), UNIQUE'Unds'ID{}("c8b95aba1964e51ac2dfef6ba17a20d2c2d1231a31c2704d722150bb535a1dc4")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(9fdae56dfa61ee6cb6a7bb517f5c857234586466bc02bcfcbc3489c6495aff7c), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(177,18,177,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule65LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule65LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule65LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,18,177,61)"), UNIQUE'Unds'ID{}("9fdae56dfa61ee6cb6a7bb517f5c857234586466bc02bcfcbc3489c6495aff7c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(044823d1368ccd18b7b0f99c77c9fd9765bf2d16bed350b22b005f464fc242da), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(176,18,176,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule66LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule66LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule66LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,18,176,61)"), UNIQUE'Unds'ID{}("044823d1368ccd18b7b0f99c77c9fd9765bf2d16bed350b22b005f464fc242da")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(aea854925e6f6faa45a7f3c39b4b4d3c304f92e3129e5b223b6d378725f9defc), cool, cool-like, non-assoc, org.kframework.attributes.Location(Location(176,18,176,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule67LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule67LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule67LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,18,176,61)"), UNIQUE'Unds'ID{}("aea854925e6f6faa45a7f3c39b4b4d3c304f92e3129e5b223b6d378725f9defc")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{ArrayReference,KItem}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ed06388ad4213c7aeb1db71fd5142647714f0a26294de6f1edd53754897d5690), cool, cool-like, org.kframework.attributes.Location(Location(152,29,152,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule68LHS{}(SortExp{},SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule68LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule68LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortArrayReference{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,29,152,57)"), UNIQUE'Unds'ID{}("ed06388ad4213c7aeb1db71fd5142647714f0a26294de6f1edd53754897d5690")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{ArrayReference,KItem}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(4341a127520def3b257cbfd6038ba82d4a51f34afb5952a8e2bd69668c34561e), cool, cool-like, org.kframework.attributes.Location(Location(152,29,152,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule69LHS{}(SortExps{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule69LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule69LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortArrayReference{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,29,152,57)"), UNIQUE'Unds'ID{}("4341a127520def3b257cbfd6038ba82d4a51f34afb5952a8e2bd69668c34561e")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps2_`(inj{Type,KItem}(_Gen0),inj{Exp,KItem}(_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_DotVar1),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(_Gen0,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{ArrayReference,Exp}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(_Gen1,HOLE)),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_DotVar1),_Gen6,_Gen7) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(9053952872360dae7d8bc352fdd3fba88e69cc6276fdef726fd2e22cdc954e74), cool, cool-like, org.kframework.attributes.Location(Location(321,11,321,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule70LHS{}(SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortType{},SortExp{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule70LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortExp{},Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen0:SortType{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule70LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortExp{},Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Var'Unds'Gen0:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortArrayReference{}, SortExp{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(Var'Unds'Gen1:SortExp{},VarHOLE:SortExps{})),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,11,321,37)"), UNIQUE'Unds'ID{}("9053952872360dae7d8bc352fdd3fba88e69cc6276fdef726fd2e22cdc954e74")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(HOLE)~>`#freezer___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt0_`(inj{Stmt,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Stmt,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f193edb44592d6d855d4d979d2b9ab33f264ce9f1eb44ec46890234ffb1b4258), cool, cool-like, org.kframework.attributes.Location(Location(215,19,215,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, seqstrict]
  alias rule71LHS{}(SortStmt{},SortStmt{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule71LHS{}(VarHOLE:SortStmt{},VarK1:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK1:SortStmt{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule71LHS{}(VarHOLE:SortStmt{},VarK1:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarHOLE:SortStmt{},VarK1:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,19,215,74)"), UNIQUE'Unds'ID{}("f193edb44592d6d855d4d979d2b9ab33f264ce9f1eb44ec46890234ffb1b4258"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(HOLE)~>`#freezer___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1_`(inj{Stmt,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Stmt,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e689be4837c07cd744ca2ae1663fa118339a40cfb10b16978f5ed02c531afcac), cool, cool-like, org.kframework.attributes.Location(Location(215,19,215,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, seqstrict]
  alias rule72LHS{}(SortStmt{},SortStmt{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule72LHS{}(VarHOLE:SortStmt{},VarK0:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK0:SortStmt{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule72LHS{}(VarHOLE:SortStmt{},VarK0:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarK0:SortStmt{},VarHOLE:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,19,215,74)"), UNIQUE'Unds'ID{}("e689be4837c07cd744ca2ae1663fa118339a40cfb10b16978f5ed02c531afcac"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_instanceOf__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Id0_`(inj{Id,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Id`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(3d87eb30a78c8386ab128ba0a11f256b7cece34a0bcf927ab036d2c34b6121b9), cool, cool-like, org.kframework.attributes.Location(Location(159,18,159,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(1)]
  alias rule73LHS{}(SortExp{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule73LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK1:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule73LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},VarK1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,18,159,53)"), UNIQUE'Unds'ID{}("3d87eb30a78c8386ab128ba0a11f256b7cece34a0bcf927ab036d2c34b6121b9")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(1daab1fca921dc527b97d5c4183435e68630e022295585e676d085185b26fc62), cool, cool-like, left, org.kframework.attributes.Location(Location(183,18,183,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule74LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule74LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule74LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,18,183,56)"), UNIQUE'Unds'ID{}("1daab1fca921dc527b97d5c4183435e68630e022295585e676d085185b26fc62")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(51c08268be60c42eea829342e278333db0e4d944ceede30405b344c5c673bf8d), cool, cool-like, left, org.kframework.attributes.Location(Location(183,18,183,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule75LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule75LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule75LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,18,183,56)"), UNIQUE'Unds'ID{}("51c08268be60c42eea829342e278333db0e4d944ceede30405b344c5c673bf8d")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`acquire_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(aa90da323ece91b97baf65175c977411c91f1e103c5986292a1dc27d5548fa6b), cool, cool-like, org.kframework.attributes.Location(Location(211,19,211,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule76LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule76LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule76LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,19,211,67)"), UNIQUE'Unds'ID{}("aa90da323ece91b97baf65175c977411c91f1e103c5986292a1dc27d5548fa6b")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e99680c955949514fe5bdcfe5fe583c6d7f51626de96fe638ef5524163312cf1), avoid, cool, cool-like, org.kframework.attributes.Location(Location(201,19,201,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule77LHS{}(SortExp{},SortBlock{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule77LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule77LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,19,201,74)"), UNIQUE'Unds'ID{}("e99680c955949514fe5bdcfe5fe583c6d7f51626de96fe638ef5524163312cf1"), avoid{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1_`(inj{Exp,KItem}(K0),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(K0,HOLE,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Block,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(a6fdc739845ff9c9500fba83b5597679155effcb157ba0f1cfb0820e05dd7425), avoid, cool, cool-like, org.kframework.attributes.Location(Location(201,19,201,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule78LHS{}(SortBlock{},SortExp{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule78LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule78LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarK0:SortExp{},VarHOLE:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,19,201,74)"), UNIQUE'Unds'ID{}("a6fdc739845ff9c9500fba83b5597679155effcb157ba0f1cfb0820e05dd7425"), avoid{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2_`(inj{Exp,KItem}(K0),inj{Block,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(K0,K1,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Block,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(3f1cb3abfc20b5ce815a65cee75b6573fa4171984a0b1294fb851016d93f8b6c), avoid, cool, cool-like, org.kframework.attributes.Location(Location(201,19,201,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule79LHS{}(SortBlock{},SortExp{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule79LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},VarK1:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule79LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},VarK1:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarK0:SortExp{},VarK1:SortBlock{},VarHOLE:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,19,201,74)"), UNIQUE'Unds'ID{}("3f1cb3abfc20b5ce815a65cee75b6573fa4171984a0b1294fb851016d93f8b6c"), avoid{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`join_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(b32e4583275ff2c83758bac63cc530ce2cbb35c30c891b107585c4394dad57c3), cool, cool-like, org.kframework.attributes.Location(Location(210,19,210,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule80LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule80LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule80LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,19,210,67)"), UNIQUE'Unds'ID{}("b32e4583275ff2c83758bac63cc530ce2cbb35c30c891b107585c4394dad57c3")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerltype(_)_KOOL-TYPED-STATIC_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_KOOL-TYPED-STATIC_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(f3a89f27da22121522a13ec038f657e5feb2fe6377dd19b9085a9ed16b796ee0), cool, cool-like, org.kframework.attributes.Location(Location(410,11,410,42)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule81LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule81LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule81LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,11,410,42)"), UNIQUE'Unds'ID{}("f3a89f27da22121522a13ec038f657e5feb2fe6377dd19b9085a9ed16b796ee0")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezernew_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exps1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`new_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(660f668e651bfb61942c0ca82a33dfd9b830b8e82d6ff833d8ecc630c41247be), cool, cool-like, org.kframework.attributes.Location(Location(161,18,161,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(2)]
  alias rule82LHS{}(SortExps{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule82LHS{}(VarHOLE:SortExps{},VarK0:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule82LHS{}(VarHOLE:SortExps{},VarK0:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(VarK0:SortId{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(161,18,161,53)"), UNIQUE'Unds'ID{}("660f668e651bfb61942c0ca82a33dfd9b830b8e82d6ff833d8ecc630c41247be")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exps,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(14cb45e1f59a7de6635f8a0aac0b5fafc01dfdf651a63d64035c91a24b77c66e), cool, cool-like, org.kframework.attributes.Location(Location(207,19,207,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule83LHS{}(SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule83LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule83LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(207,19,207,67)"), UNIQUE'Unds'ID{}("14cb45e1f59a7de6635f8a0aac0b5fafc01dfdf651a63d64035c91a24b77c66e")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`release_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(e40a1cafc544f4efc338b3a9dd7a38ae4bd841815f044a4d3da0520ef8cdf186), cool, cool-like, org.kframework.attributes.Location(Location(212,19,212,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule84LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule84LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule84LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,19,212,67)"), UNIQUE'Unds'ID{}("e40a1cafc544f4efc338b3a9dd7a38ae4bd841815f044a4d3da0520ef8cdf186")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(43b538b123c4e451606e55630950760f6a8a923ef535822ff4ede29afc8e61a6), cool, cool-like, org.kframework.attributes.Location(Location(213,19,213,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule85LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule85LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule85LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,19,213,67)"), UNIQUE'Unds'ID{}("43b538b123c4e451606e55630950760f6a8a923ef535822ff4ede29afc8e61a6")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`return_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ee4d585cd122731c8991944c7b950c42c721101fb02e177dfc6509bd942d0d64), cool, cool-like, org.kframework.attributes.Location(Location(205,19,205,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule86LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule86LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule86LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,19,205,67)"), UNIQUE'Unds'ID{}("ee4d585cd122731c8991944c7b950c42c721101fb02e177dfc6509bd942d0d64")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6d7cdd68fa3a9b04ee407b09831e09a1c92e1644d1f720dd4a02cdcc27ea22bc), cool, cool-like, org.kframework.attributes.Location(Location(164,18,164,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule87LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule87LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule87LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(164,18,164,50)"), UNIQUE'Unds'ID{}("6d7cdd68fa3a9b04ee407b09831e09a1c92e1644d1f720dd4a02cdcc27ea22bc")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`throw_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(829ca524272fe6f6c591d2ab7429aaee8ffcfdcb32c262bf2f5607e9b187ae10), cool, cool-like, org.kframework.attributes.Location(Location(209,19,209,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule88LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule88LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule88LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,19,209,67)"), UNIQUE'Unds'ID{}("829ca524272fe6f6c591d2ab7429aaee8ffcfdcb32c262bf2f5607e9b187ae10")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezertry_catch(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block0_`(inj{Param,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`try_catch(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Block,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(5819475b89fc6bd56820a1f09f4a438fc7834a75aaed585dfa8591a5c86febbb), cool, cool-like, org.kframework.attributes.Location(Location(208,19,208,70)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(1)]
  alias rule89LHS{}(SortBlock{},SortParam{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule89LHS{}(VarHOLE:SortBlock{},VarK1:SortParam{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(kseq{}(inj{SortParam{}, SortKItem{}}(VarK1:SortParam{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule89LHS{}(VarHOLE:SortBlock{},VarK1:SortParam{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(VarHOLE:SortBlock{},VarK1:SortParam{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,19,208,70)"), UNIQUE'Unds'ID{}("5819475b89fc6bd56820a1f09f4a438fc7834a75aaed585dfa8591a5c86febbb")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerwhile(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block0_`(inj{Block,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(6080cea9fa45326338ecfee99b75e1224fc7f8d11827bf750c0e2fd5f9bf0027), cool, cool-like, org.kframework.attributes.Location(Location(203,19,203,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule90LHS{}(SortExp{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule90LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule90LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,19,203,67)"), UNIQUE'Unds'ID{}("6080cea9fa45326338ecfee99b75e1224fc7f8d11827bf750c0e2fd5f9bf0027")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerwhile(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Block,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(ffeca00908417f8db01bdade02b4258146cedd3a24332ca6d9a7806ea30d9e83), cool, cool-like, org.kframework.attributes.Location(Location(203,19,203,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule91LHS{}(SortBlock{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule91LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule91LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarK0:SortExp{},VarHOLE:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,19,203,67)"), UNIQUE'Unds'ID{}("ffeca00908417f8db01bdade02b4258146cedd3a24332ca6d9a7806ea30d9e83")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Id,KItem}(X)~>_DotVar4),_Gen0,`<ctenvT>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),T),_DotVar5)),_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(T~>_DotVar4),_Gen0,`<ctenvT>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),T),_DotVar5)),_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(717ab467fdf3d68916b27515ced6ffeeb918f2ffa5ddf3bb99126e281e6673c2), cool-like, org.kframework.attributes.Location(Location(716,8,717,40)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule92LHS{}(SortKItem{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortMap{},SortTenvCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule92LHS{}(VarT:SortKItem{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Lbl'-LT-'ctenvT'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarT:SortKItem{}),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule92LHS{}(VarT:SortKItem{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(VarT:SortKItem{},Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Lbl'-LT-'ctenvT'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarT:SortKItem{}),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(716,8,717,40)"), UNIQUE'Unds'ID{}("717ab467fdf3d68916b27515ced6ffeeb918f2ffa5ddf3bb99126e281e6673c2")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Id,KItem}(X)~>_DotVar4),`<tenv>`(Rho),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{FieldReference,KItem}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(`this_KOOL-TYPED-STATIC-SYNTAX_Exp`(.KList),X))~>_DotVar4),`<tenv>`(Rho),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Rho))) ensures #token("true","Bool") [UNIQUE_ID(92c2b41145be7a7d159ecca99ab84b6678d1b434ac2e7adf13a3900735c1ad52), cool-like, org.kframework.attributes.Location(Location(719,8,721,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule93LHS{}(SortMap{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule93LHS{}(VarRho:SortMap{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarRho:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule93LHS{}(VarRho:SortMap{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFieldReference{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}(),VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(719,8,721,33)"), UNIQUE'Unds'ID{}("92c2b41145be7a7d159ecca99ab84b6678d1b434ac2e7adf13a3900735c1ad52")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Id,KItem}(X)~>_DotVar4),`<tenv>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),T),_DotVar5)),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(T~>_DotVar4),`<tenv>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),T),_DotVar5)),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(95f6ee58c267097a0adde39f07eb233ebf9950f55b9fb86c45eb6dfb89d57940), cool-like, org.kframework.attributes.Location(Location(335,8,335,58)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule94LHS{}(SortKItem{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortMap{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule94LHS{}(VarT:SortKItem{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarT:SortKItem{}),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule94LHS{}(VarT:SortKItem{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortMap{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(VarT:SortKItem{},Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),VarT:SortKItem{}),Var'Unds'DotVar5:SortMap{})),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(335,8,335,58)"), UNIQUE'Unds'ID{}("95f6ee58c267097a0adde39f07eb233ebf9950f55b9fb86c45eb6dfb89d57940")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(_Gen0)),`<tenv>`(_Gen1),_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`.TaskCellSet`(.KList),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(950a38d0bc89f59c2342d9dc4425a3056c759c25b5d8cf929c92a5c4b9b06a28), org.kframework.attributes.Location(Location(327,8,327,80)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule95LHS{}(SortClassesCell{},SortTaskCellSet{},SortBlockOrStmtType{},SortMap{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule95LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'Gen0:SortBlockOrStmtType{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Var'Unds'Gen0:SortBlockOrStmtType{}),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(Var'Unds'Gen1:SortMap{}),Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule95LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'Gen0:SortBlockOrStmtType{},Var'Unds'Gen1:SortMap{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Stop'TaskCellSet{}(),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,8,327,80)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("950a38d0bc89f59c2342d9dc4425a3056c759c25b5d8cf929c92a5c4b9b06a28")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Bool,KItem}(_Gen0)~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f72137c5a969c08fce51fe693ee06812beac203530f7b16873244b2953e223c6), cool-like, org.kframework.attributes.Location(Location(331,8,331,22)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule96LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortBool{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule96LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortBool{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule96LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortBool{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,8,331,22)"), UNIQUE'Unds'ID{}("f72137c5a969c08fce51fe693ee06812beac203530f7b16873244b2953e223c6")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Int,KItem}(_Gen0)~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9eec81ae9cf3f9ac9bb5f750dbc2dde52b18a98f4f5eb4d9cb5fa279cde481d5), cool-like, org.kframework.attributes.Location(Location(330,8,330,20)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule97LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortInt{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule97LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen0:SortInt{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule97LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,8,330,20)"), UNIQUE'Unds'ID{}("9eec81ae9cf3f9ac9bb5f750dbc2dde52b18a98f4f5eb4d9cb5fa279cde481d5")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{String,KItem}(_Gen0)~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`string_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4a7d9d70c50f832b9457e36e61d28b4d54463a3abebeee01ea0e7bd209bf6c86), cool-like, org.kframework.attributes.Location(Location(332,8,332,26)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule98LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortString{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule98LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortString{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen0:SortString{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule98LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortString{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,8,332,26)"), UNIQUE'Unds'ID{}("4a7d9d70c50f832b9457e36e61d28b4d54463a3abebeee01ea0e7bd209bf6c86")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{KResult,KItem}(_Gen0)~>`discard_KOOL-TYPED-STATIC_KItem`(.KList)~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8358879e18d8eb1d1db0bb01e287aa83725432a384bd6a5942cfd2a6b51f9c6a), cool-like, org.kframework.attributes.Location(Location(912,8,912,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule99LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortKResult{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule99LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortKResult{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen0:SortKResult{}),kseq{}(Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule99LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortKResult{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(Var'Unds'DotVar4:SortK{}),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(912,8,912,33)"), UNIQUE'Unds'ID{}("8358879e18d8eb1d1db0bb01e287aa83725432a384bd6a5942cfd2a6b51f9c6a")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`!__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer!__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(ce8914dc8d40f18c830be4a666e162ed691cdf50568a41c66c73ed33785e8bc1), heat, org.kframework.attributes.Location(Location(180,18,180,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule100LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule100LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule100LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,18,180,50)"), UNIQUE'Unds'ID{}("ce8914dc8d40f18c830be4a666e162ed691cdf50568a41c66c73ed33785e8bc1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`!__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(inj{Type,Exp}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66e0553a67af882f58bef2e2c9ef97e8ed30c07fca62986e2e5b4cb9849ecaf3), org.kframework.attributes.Location(Location(355,8,355,22)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule101LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule101LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'BangUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule101LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,8,355,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("66e0553a67af882f58bef2e2c9ef97e8ed30c07fca62986e2e5b4cb9849ecaf3")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp`(C,inj{Type,Exp}(class(C))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(class(C))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c0504f19415293d16610710f530bcf76ffddcbff8fe84fe902f2f6db9131d925), org.kframework.attributes.Location(Location(754,8,754,39)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule102LHS{}(SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule102LHS{}(VarC:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarC:SortId{},inj{SortType{}, SortExp{}}(Lblclass{}(VarC:SortId{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule102LHS{}(VarC:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblclass{}(VarC:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(754,8,754,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c0504f19415293d16610710f530bcf76ffddcbff8fe84fe902f2f6db9131d925")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp`(C2,inj{Type,Exp}(class(C1))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C1),`<classData>`(`<className>`(C1),_Gen4,`<baseClasses>`(`_Set_`(`SetItem`(inj{Id,KItem}(C2)),_DotVar7)),_Gen5)),_DotVar5)) #as _Gen11),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(class(C2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen11),_Gen6,_Gen7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f66a5e2219a5eda5171f9f0b50b63fefb02b8035a16821833c913fd2960c79dd), org.kframework.attributes.Location(Location(755,8,757,52)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule103LHS{}(SortId{},SortId{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortSet{},SortTenvCell{},SortCtenvTCell{},SortClassesCell{},SortReturnTypeCell{},SortInClassCell{},SortBaseClassCell{},SortCtenvCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule103LHS{}(VarC1:SortId{},VarC2:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortSet{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortCtenvCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarC2:SortId{},inj{SortType{}, SortExp{}}(Lblclass{}(VarC1:SortId{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC1:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC1:SortId{}),Var'Unds'Gen4:SortBaseClassCell{},Lbl'-LT-'baseClasses'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortId{}, SortKItem{}}(VarC2:SortId{})),Var'Unds'DotVar7:SortSet{})),Var'Unds'Gen5:SortCtenvCell{})),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen11:SortClassesCell{})),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule103LHS{}(VarC1:SortId{},VarC2:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortSet{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortCtenvCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblclass{}(VarC2:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen11:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(755,8,757,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f66a5e2219a5eda5171f9f0b50b63fefb02b8035a16821833c913fd2960c79dd")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp`(C2,inj{Type,Exp}(class(C1))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C2),`<classData>`(`<className>`(C2),_Gen4,`<baseClasses>`(`_Set_`(`SetItem`(inj{Id,KItem}(C1)),_DotVar7)),_Gen5)),_DotVar5)) #as _Gen11),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(class(C2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen11),_Gen6,_Gen7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(557c235d504537b7465aeef5ef56505fd59e62f1f40a319090c7fd5d0a7255bf), org.kframework.attributes.Location(Location(758,8,760,52)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule104LHS{}(SortId{},SortId{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortSet{},SortTenvCell{},SortCtenvTCell{},SortClassesCell{},SortReturnTypeCell{},SortInClassCell{},SortBaseClassCell{},SortCtenvCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule104LHS{}(VarC1:SortId{},VarC2:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortSet{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortCtenvCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarC2:SortId{},inj{SortType{}, SortExp{}}(Lblclass{}(VarC1:SortId{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC2:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC2:SortId{}),Var'Unds'Gen4:SortBaseClassCell{},Lbl'-LT-'baseClasses'-GT-'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortId{}, SortKItem{}}(VarC1:SortId{})),Var'Unds'DotVar7:SortSet{})),Var'Unds'Gen5:SortCtenvCell{})),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen11:SortClassesCell{})),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule104LHS{}(VarC1:SortId{},VarC2:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortSet{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortCtenvCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblclass{}(VarC2:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen11:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(758,8,760,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("557c235d504537b7465aeef5ef56505fd59e62f1f40a319090c7fd5d0a7255bf")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp`(C2,inj{Type,Exp}(class(C1))))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),`<classes>`(`_ClassDataCellMap_`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C1),`<classData>`(`<className>`(C1),_Gen4,`<baseClasses>`(S1),_Gen5)),`ClassDataCellMapItem`(`<className>`(C2),`<classData>`(`<className>`(C2),_Gen6,`<baseClasses>`(S2),_Gen7))),_DotVar6)) #as _Gen11),_DotVar0,`<output>`(`_List_`(_DotVar1,`.List`(.KList))))=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`stuck(_)_KOOL-TYPED-STATIC_KItem_K`(inj{Exp,KItem}(`(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp`(C2,inj{Type,Exp}(class(C1)))))~>_DotVar5),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar3)),_Gen11),_DotVar0,`<output>`(`_List_`(_DotVar1,`ListItem`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"Classes \\\"\"","String"),`Id2String(_)_ID-COMMON_String_Id`(C1)),#token("\"\\\" and \\\"\"","String")),`Id2String(_)_ID-COMMON_String_Id`(C2)),#token("\"\\\" are incompatible!\\n\"","String"))))))) requires `_andBool_`(`notBool_`(`Set:in`(inj{Id,KItem}(C1),S2)),`notBool_`(`Set:in`(inj{Id,KItem}(C2),S1))) ensures #token("true","Bool") [UNIQUE_ID(8c4d57d6dd97caead2b58176b18351095c250258bb77aecf32e9924975d79e75), org.kframework.attributes.Location(Location(761,8,773,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]), transition]
  alias rule105LHS{}(SortId{},SortId{},SortSet{},SortSet{},SortGeneratedCounterCell{},SortList{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortTenvCell{},SortCtenvTCell{},SortClassesCell{},SortReturnTypeCell{},SortInClassCell{},SortBaseClassCell{},SortCtenvCell{},SortBaseClassCell{},SortCtenvCell{}) : SortGeneratedTopCell{}
  where rule105LHS{}(VarC1:SortId{},VarC2:SortId{},VarS1:SortSet{},VarS2:SortSet{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortList{},Var'Unds'DotVar3:SortTaskCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortClassDataCellMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortCtenvCell{},Var'Unds'Gen6:SortBaseClassCell{},Var'Unds'Gen7:SortCtenvCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarC1:SortId{}),VarS2:SortSet{})),LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarC2:SortId{}),VarS1:SortSet{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarC2:SortId{},inj{SortType{}, SortExp{}}(Lblclass{}(VarC1:SortId{})))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar3:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC1:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC1:SortId{}),Var'Unds'Gen4:SortBaseClassCell{},Lbl'-LT-'baseClasses'-GT-'{}(VarS1:SortSet{}),Var'Unds'Gen5:SortCtenvCell{})),LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC2:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC2:SortId{}),Var'Unds'Gen6:SortBaseClassCell{},Lbl'-LT-'baseClasses'-GT-'{}(VarS2:SortSet{}),Var'Unds'Gen7:SortCtenvCell{}))),Var'Unds'DotVar6:SortClassDataCellMap{})),Var'Unds'Gen11:SortClassesCell{})),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar1:SortList{},Lbl'Stop'List{}())))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule105LHS{}(VarC1:SortId{},VarC2:SortId{},VarS1:SortSet{},VarS2:SortSet{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortList{},Var'Unds'DotVar3:SortTaskCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortClassDataCellMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortCtenvCell{},Var'Unds'Gen6:SortBaseClassCell{},Var'Unds'Gen7:SortCtenvCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarC2:SortId{},inj{SortType{}, SortExp{}}(Lblclass{}(VarC1:SortId{})))),dotk{}())),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar3:SortTaskCellSet{})),Var'Unds'Gen11:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar1:SortList{},LblListItem{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("Classes \""),LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(VarC1:SortId{})),\dv{SortString{}}("\" and \"")),LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(VarC2:SortId{})),\dv{SortString{}}("\" are incompatible!\n")))))))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), transition{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(761,8,773,53)"), UNIQUE'Unds'ID{}("8c4d57d6dd97caead2b58176b18351095c250258bb77aecf32e9924975d79e75")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer(_)__KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exp1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(33c0e53c8a516c5c41592b730593aa24a2ad87abd1cc6e46f4990f61da7136c9), heat, org.kframework.attributes.Location(Location(160,18,160,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(2)]
  alias rule106LHS{}(SortExp{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule106LHS{}(VarHOLE:SortExp{},VarK0:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp{}(VarK0:SortId{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule106LHS{}(VarHOLE:SortExp{},VarK0:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exp1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(160,18,160,53)"), UNIQUE'Unds'ID{}("33c0e53c8a516c5c41592b730593aa24a2ad87abd1cc6e46f4990f61da7136c9")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`++__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_KOOL-TYPED-STATIC_Exp_Exp`(HOLE))~>`#freezer++__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(83d01daf4543ba448ca6c16a3bf411f29690df940c9a8c448a7ddf05baa33f67), heat, org.kframework.attributes.Location(Location(338,11,338,34)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule107LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule107LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule107LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),kseq{}(Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,11,338,34)"), UNIQUE'Unds'ID{}("83d01daf4543ba448ca6c16a3bf411f29690df940c9a8c448a7ddf05baa33f67")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`++__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c8e27ee3fc9bfca4053e45b860791f5774a44c1ab6d21d68154b257607a8012f), org.kframework.attributes.Location(Location(339,8,339,21)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule108LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule108LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule108LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(339,8,339,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c8e27ee3fc9bfca4053e45b860791f5774a44c1ab6d21d68154b257607a8012f")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(39b3b0465dd42dfe1d248717bb9b8f5045c521dccc04e4b08e395fbb88609bc1), heat, org.kframework.attributes.Location(Location(163,18,163,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule109LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule109LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule109LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(163,18,163,50)"), UNIQUE'Unds'ID{}("39b3b0465dd42dfe1d248717bb9b8f5045c521dccc04e4b08e395fbb88609bc1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(13c1cb046d0aff7aff514ae229125ff003d0803ae3c995de329d3eddc1c27b0e), org.kframework.attributes.Location(Location(346,8,346,20)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule110LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule110LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule110LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(346,8,346,20)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("13c1cb046d0aff7aff514ae229125ff003d0803ae3c995de329d3eddc1c27b0e")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(94bb1eaae7a0682372ba92a018b1c8d2826c51fb9f7d86f887407270bf4e228c), heat, non-assoc, org.kframework.attributes.Location(Location(179,18,179,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule111LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule111LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule111LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,18,179,61)"), UNIQUE'Unds'ID{}("94bb1eaae7a0682372ba92a018b1c8d2826c51fb9f7d86f887407270bf4e228c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b30aa692407a88aca3376a5fe624004e474191a8e4a226f368ab3a4589739ece), heat, non-assoc, org.kframework.attributes.Location(Location(179,18,179,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule112LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule112LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule112LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,18,179,61)"), UNIQUE'Unds'ID{}("b30aa692407a88aca3376a5fe624004e474191a8e4a226f368ab3a4589739ece")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_!=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(T),inj{Type,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4fa57a222939122f70421d2de5b9eced258f9602c51e37c8cf0d7e22f8220cfe), org.kframework.attributes.Location(Location(352,8,352,27)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule113LHS{}(SortType{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule113LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortType{}, SortExp{}}(VarT:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule113LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,8,352,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4fa57a222939122f70421d2de5b9eced258f9602c51e37c8cf0d7e22f8220cfe")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d096700b2899404057302c8b50390fcbf49afef41e9820dad13c161c673fc83d), heat, left, org.kframework.attributes.Location(Location(169,18,169,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule114LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule114LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule114LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,18,169,56)"), UNIQUE'Unds'ID{}("d096700b2899404057302c8b50390fcbf49afef41e9820dad13c161c673fc83d")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(070ddad2fd302cf504ab477d8c12aedb9a95b76d683bd5b2b6581fcb1e9a74b9), heat, left, org.kframework.attributes.Location(Location(169,18,169,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule115LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule115LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule115LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,18,169,56)"), UNIQUE'Unds'ID{}("070ddad2fd302cf504ab477d8c12aedb9a95b76d683bd5b2b6581fcb1e9a74b9")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_%__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(804f4d046974432b1faab6fdc666a69eb1958c270db7acd810ff6206170e434b), org.kframework.attributes.Location(Location(345,8,345,24)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule116LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule116LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule116LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(345,8,345,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("804f4d046974432b1faab6fdc666a69eb1958c270db7acd810ff6206170e434b")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f0ab81160236858fd88bcfea6717f5cd3a708c6f6b71c6bdc2e02a3e89e9863f), heat, left, org.kframework.attributes.Location(Location(182,18,182,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule117LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule117LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule117LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,18,182,56)"), UNIQUE'Unds'ID{}("f0ab81160236858fd88bcfea6717f5cd3a708c6f6b71c6bdc2e02a3e89e9863f")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(9f82063c6d003e37d6db85a48997792b2aed8d965ee2814bfc4d127b5df83174), heat, left, org.kframework.attributes.Location(Location(182,18,182,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule118LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule118LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule118LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,18,182,56)"), UNIQUE'Unds'ID{}("9f82063c6d003e37d6db85a48997792b2aed8d965ee2814bfc4d127b5df83174")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_&&__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(748dda90bfa0cfbfbfeb6a82e9479b52afdb17ce2248b76571412e53620c022c), org.kframework.attributes.Location(Location(353,8,353,28)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule119LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule119LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsAnd-And-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule119LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(353,8,353,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("748dda90bfa0cfbfbfeb6a82e9479b52afdb17ce2248b76571412e53620c022c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(187b322bd4721357fd234980beec40e6da34fec3d6564b6f82d4f50ad0a72954), heat, org.kframework.attributes.Location(Location(162,18,162,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule120LHS{}(SortExp{},SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule120LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule120LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,18,162,50)"), UNIQUE'Unds'ID{}("187b322bd4721357fd234980beec40e6da34fec3d6564b6f82d4f50ad0a72954")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(4b68e05a4ef972c45f2f41b5902c62aa0719be21851a04e7749bddbf7b20b142), heat, org.kframework.attributes.Location(Location(162,18,162,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule121LHS{}(SortExps{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule121LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule121LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,18,162,50)"), UNIQUE'Unds'ID{}("4b68e05a4ef972c45f2f41b5902c62aa0719be21851a04e7749bddbf7b20b142")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(inj{Type,Exp}(`_->__KOOL-TYPED-STATIC-SYNTAX_Type_Types_Type`(Ts,T)),inj{Types,Exps}(Ts')))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(Ts',Ts)~>inj{Type,KItem}(T)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b87e05716e0c4bd440600587b288e97effd33bd1d32fbe30ed38f0b526704bd9), org.kframework.attributes.Location(Location(522,8,522,69)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule122LHS{}(SortType{},SortTypes{},SortTypes{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule122LHS{}(VarT:SortType{},VarTs:SortTypes{},VarTs'Apos':SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(VarTs:SortTypes{},VarT:SortType{})),inj{SortTypes{}, SortExps{}}(VarTs'Apos':SortTypes{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule122LHS{}(VarT:SortType{},VarTs:SortTypes{},VarTs'Apos':SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(VarTs'Apos':SortTypes{},VarTs:SortTypes{}),kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(522,8,522,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b87e05716e0c4bd440600587b288e97effd33bd1d32fbe30ed38f0b526704bd9")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b6fe1248ef7fee40c528cb33bcc457f6c655a0641ddfda5fc3f4b26b7c93381c), heat, left, org.kframework.attributes.Location(Location(167,18,167,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule123LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule123LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule123LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,18,167,56)"), UNIQUE'Unds'ID{}("b6fe1248ef7fee40c528cb33bcc457f6c655a0641ddfda5fc3f4b26b7c93381c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(355f2fef503cc1924fbcd50e6c0f653fb16aeeca4471b44ffd0fcdb27c5268d5), heat, left, org.kframework.attributes.Location(Location(167,18,167,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule124LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule124LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule124LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,18,167,56)"), UNIQUE'Unds'ID{}("355f2fef503cc1924fbcd50e6c0f653fb16aeeca4471b44ffd0fcdb27c5268d5")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_*__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d84d2af7f678c8880b861e4840fa3f546975102d0bcef6d3c41085090bb132d3), org.kframework.attributes.Location(Location(343,8,343,24)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule125LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule125LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule125LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(343,8,343,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d84d2af7f678c8880b861e4840fa3f546975102d0bcef6d3c41085090bb132d3")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(01f9b3456cde1011f229a33793589405683457a3d31770ce371bff3d3ddada22), heat, left, org.kframework.attributes.Location(Location(171,18,171,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule126LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule126LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule126LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,18,171,56)"), UNIQUE'Unds'ID{}("01f9b3456cde1011f229a33793589405683457a3d31770ce371bff3d3ddada22")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a5f59eee504166f9ada0f14b1f6b7c9369477da7e98705a4369b651c4abab4e7), heat, left, org.kframework.attributes.Location(Location(171,18,171,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule127LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule127LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule127LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,18,171,56)"), UNIQUE'Unds'ID{}("a5f59eee504166f9ada0f14b1f6b7c9369477da7e98705a4369b651c4abab4e7")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b248d8a41c507c8913bf70427c16700a47ca30c8286c00699814b4609b8816b5), org.kframework.attributes.Location(Location(340,8,340,24)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule128LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule128LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule128LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,8,340,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b248d8a41c507c8913bf70427c16700a47ca30c8286c00699814b4609b8816b5")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_+__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`string_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`string_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`string_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(28bf232511e8e86ac3b2045597c7057f12af288c0f13796ee9283eba6097ae76), org.kframework.attributes.Location(Location(341,8,341,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule129LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule129LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule129LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,8,341,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("28bf232511e8e86ac3b2045597c7057f12af288c0f13796ee9283eba6097ae76")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f1cae5aa9c762f1be529894246a62ede8c58eaff223b20ac91a73ffea4346673), heat, klabel(exps), org.kframework.attributes.Location(Location(190,19,190,64)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, strict, userList(*)]
  alias rule130LHS{}(SortExp{},SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule130LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule130LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), right{}(), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,19,190,64)"), UNIQUE'Unds'ID{}("f1cae5aa9c762f1be529894246a62ede8c58eaff223b20ac91a73ffea4346673")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(467e83878ed71829ccf74c44c7f639c9793a3fa850e59046d909dd22bdf4a884), heat, klabel(exps), org.kframework.attributes.Location(Location(190,19,190,64)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, strict, userList(*)]
  alias rule131LHS{}(SortExps{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule131LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule131LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [userList{}("*"), strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), right{}(), klabel{}("exps"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,19,190,64)"), UNIQUE'Unds'ID{}("467e83878ed71829ccf74c44c7f639c9793a3fa850e59046d909dd22bdf4a884")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(52d48fed88ebb3fab0d2e40e316fd041e99f7197e4cc48f2c238c12f021bab69), heat, left, org.kframework.attributes.Location(Location(172,18,172,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule132LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule132LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule132LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,18,172,56)"), UNIQUE'Unds'ID{}("52d48fed88ebb3fab0d2e40e316fd041e99f7197e4cc48f2c238c12f021bab69")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(bb95baf7e371d6ac9642b75c551c5a17c7f92966f96c57b6827bcd0dd9e6eb19), heat, left, org.kframework.attributes.Location(Location(172,18,172,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule133LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule133LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule133LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(172,18,172,56)"), UNIQUE'Unds'ID{}("bb95baf7e371d6ac9642b75c551c5a17c7f92966f96c57b6827bcd0dd9e6eb19")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_-__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(447ad276156205bd510728b4c4064a1f88f1f52a1c6c1ec9cfcac8b0591f84b1), org.kframework.attributes.Location(Location(342,8,342,24)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule134LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule134LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule134LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,8,342,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("447ad276156205bd510728b4c4064a1f88f1f52a1c6c1ec9cfcac8b0591f84b1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{FieldReference,KItem}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id0_`(inj{Id,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c45607a69494508086d98d06822224c36305515fa7a61deb4c35b999947d4040), heat, org.kframework.attributes.Location(Location(151,29,151,60)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(1)]
  alias rule135LHS{}(SortExp{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule135LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFieldReference{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},VarK1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule135LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK1:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,29,151,60)"), UNIQUE'Unds'ID{}("c45607a69494508086d98d06822224c36305515fa7a61deb4c35b999947d4040")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{FieldReference,KItem}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(inj{Type,Exp}(class(C)),X))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen4,_Gen5,`<ctenv>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),inj{Type,KItem}(T)),_DotVar7)))),_DotVar5)) #as _Gen11),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(T)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen11),_Gen6,_Gen7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5aafd8ea4f2ce767e3935a287e210438e8b8a5c4f1913efb1e2355411f90ffb4), org.kframework.attributes.Location(Location(726,8,728,43)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule136LHS{}(SortId{},SortType{},SortId{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortMap{},SortTenvCell{},SortCtenvTCell{},SortClassesCell{},SortReturnTypeCell{},SortInClassCell{},SortBaseClassCell{},SortBaseClassesCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule136LHS{}(VarC:SortId{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFieldReference{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(inj{SortType{}, SortExp{}}(Lblclass{}(VarC:SortId{})),VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Lbl'-LT-'ctenv'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortType{}, SortKItem{}}(VarT:SortType{})),Var'Unds'DotVar7:SortMap{})))),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen11:SortClassesCell{})),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule136LHS{}(VarC:SortId{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar7:SortMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen11:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortBaseClassCell{},Var'Unds'Gen5:SortBaseClassesCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen11:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(726,8,728,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5aafd8ea4f2ce767e3935a287e210438e8b8a5c4f1913efb1e2355411f90ffb4")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{FieldReference,KItem}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(inj{Type,Exp}(class(C1)),X))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C1),`<classData>`(`<className>`(C1),`<baseClass>`(inj{Id,KItem}(C2)),_DotVar6,`<ctenv>`(Rho))),_DotVar5)) #as _Gen9),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{FieldReference,KItem}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(inj{Type,Exp}(class(C2)),X))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_Gen9),_Gen4,_Gen5) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Rho))) ensures #token("true","Bool") [UNIQUE_ID(5126788bf5eb5a845cf3952711a73a785b1deb41d0b764f85be4ea42ba747152), org.kframework.attributes.Location(Location(730,8,734,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol]), structural]
  alias rule137LHS{}(SortId{},SortId{},SortMap{},SortId{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortBaseClassesCell{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{},SortClassesCell{}) : SortGeneratedTopCell{}
  where rule137LHS{}(VarC1:SortId{},VarC2:SortId{},VarRho:SortMap{},VarX:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar6:SortBaseClassesCell{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'Gen9:SortClassesCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarRho:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFieldReference{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(inj{SortType{}, SortExp{}}(Lblclass{}(VarC1:SortId{})),VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC1:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC1:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC2:SortId{}),dotk{}())),Var'Unds'DotVar6:SortBaseClassesCell{},Lbl'-LT-'ctenv'-GT-'{}(VarRho:SortMap{}))),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen9:SortClassesCell{})),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule137LHS{}(VarC1:SortId{},VarC2:SortId{},VarRho:SortMap{},VarX:SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'DotVar6:SortBaseClassesCell{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'Gen9:SortClassesCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFieldReference{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(inj{SortType{}, SortExp{}}(Lblclass{}(VarC2:SortId{})),VarX:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen9:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(730,8,734,33)"), UNIQUE'Unds'ID{}("5126788bf5eb5a845cf3952711a73a785b1deb41d0b764f85be4ea42ba747152")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{FieldReference,KItem}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(inj{Type,Exp}(class(#token("Object","Id"))),X))~>_DotVar5),_Gen0,_Gen1,_Gen2,`<inClass>`(inj{Id,KItem}(C)))),_DotVar3)),_DotVar2),_DotVar0,`<output>`(`_List_`(_DotVar1,`.List`(.KList))))=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`stuck(_)_KOOL-TYPED-STATIC_KItem_K`(inj{FieldReference,KItem}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(inj{Type,Exp}(class(#token("Object","Id"))),X)))~>_DotVar5),_Gen0,_Gen1,_Gen2,`<inClass>`(inj{Id,KItem}(C)))),_DotVar3)),_DotVar2),_DotVar0,`<output>`(`_List_`(_DotVar1,`ListItem`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"Member \\\"\"","String"),`Id2String(_)_ID-COMMON_String_Id`(X)),#token("\"\\\" not declared! (see class \\\"\"","String")),`Id2String(_)_ID-COMMON_String_Id`(C)),#token("\"\\\")\\n\"","String"))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e5bc34ffe4fadbe0f1efa809e2527ff533734c04788b5767c2912b91cb381c51), org.kframework.attributes.Location(Location(736,8,741,78)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule138LHS{}(SortId{},SortId{},SortGeneratedCounterCell{},SortList{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{}) : SortGeneratedTopCell{}
  where rule138LHS{}(VarC:SortId{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortList{},Var'Unds'DotVar2:SortClassesCell{},Var'Unds'DotVar3:SortTaskCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortFieldReference{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(inj{SortType{}, SortExp{}}(Lblclass{}(\dv{SortId{}}("Object"))),VarX:SortId{})),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar3:SortTaskCellSet{})),Var'Unds'DotVar2:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar1:SortList{},Lbl'Stop'List{}())))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule138LHS{}(VarC:SortId{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortList{},Var'Unds'DotVar2:SortClassesCell{},Var'Unds'DotVar3:SortTaskCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(kseq{}(inj{SortFieldReference{}, SortKItem{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(inj{SortType{}, SortExp{}}(Lblclass{}(\dv{SortId{}}("Object"))),VarX:SortId{})),dotk{}())),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar3:SortTaskCellSet{})),Var'Unds'DotVar2:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar1:SortList{},LblListItem{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("Member \""),LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(VarX:SortId{})),\dv{SortString{}}("\" not declared! (see class \"")),LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(VarC:SortId{})),\dv{SortString{}}("\")\n")))))))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(736,8,741,78)"), UNIQUE'Unds'ID{}("e5bc34ffe4fadbe0f1efa809e2527ff533734c04788b5767c2912b91cb381c51")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(08e89daa93c38fafde9f12700dd38e3f279a9fdfaff8bb506157c775f7824117), heat, left, org.kframework.attributes.Location(Location(168,18,168,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule139LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule139LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule139LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,18,168,56)"), UNIQUE'Unds'ID{}("08e89daa93c38fafde9f12700dd38e3f279a9fdfaff8bb506157c775f7824117")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6a0f2f968dcac181b48baaef2e0ffd18543643d5a31c127e4503f369564a5ac8), heat, left, org.kframework.attributes.Location(Location(168,18,168,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule140LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule140LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule140LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,18,168,56)"), UNIQUE'Unds'ID{}("6a0f2f968dcac181b48baaef2e0ffd18543643d5a31c127e4503f369564a5ac8")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_/__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e947709127262c205cd6e499a73c46b5eac36790e04ead3714cb943ea6c4ac3a), org.kframework.attributes.Location(Location(344,8,344,24)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule141LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule141LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule141LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,8,344,24)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e947709127262c205cd6e499a73c46b5eac36790e04ead3714cb943ea6c4ac3a")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1983421d3244cfab349236c81567e3e411318ae38bf01bed54e490b43ffebd09), heat, org.kframework.attributes.Location(Location(200,19,200,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule142LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule142LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule142LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(200,19,200,67)"), UNIQUE'Unds'ID{}("1983421d3244cfab349236c81567e3e411318ae38bf01bed54e490b43ffebd09")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(570f4bb836fe3c78065d81c700e2a83b128108554eae369601403273c86ef3e2), org.kframework.attributes.Location(Location(381,8,381,23)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule143LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortType{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule143LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule143LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(381,8,381,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("570f4bb836fe3c78065d81c700e2a83b128108554eae369601403273c86ef3e2")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(787145c2e6fae43509c37c108eac784228cfe9636612bc68f93b5529b77c4e97), heat, non-assoc, org.kframework.attributes.Location(Location(175,18,175,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule144LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule144LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule144LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,18,175,61)"), UNIQUE'Unds'ID{}("787145c2e6fae43509c37c108eac784228cfe9636612bc68f93b5529b77c4e97")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3a39b04710125a7a9b00a21b38a0496aeaf2f88fcde2673d030089e480f703f6), heat, non-assoc, org.kframework.attributes.Location(Location(175,18,175,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule145LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule145LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule145LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,18,175,61)"), UNIQUE'Unds'ID{}("3a39b04710125a7a9b00a21b38a0496aeaf2f88fcde2673d030089e480f703f6")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c6ce86345c6bf7db02dd9fd3acbf863760486bf9e2ffe4926d8e1107a99e928a), org.kframework.attributes.Location(Location(348,8,348,26)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule146LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule146LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule146LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(348,8,348,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c6ce86345c6bf7db02dd9fd3acbf863760486bf9e2ffe4926d8e1107a99e928a")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3db0cd8a5e6ab12d6025a309f31b95b768872cbd22c77dc06ad646852f68486f), heat, non-assoc, org.kframework.attributes.Location(Location(174,18,174,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule147LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule147LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule147LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,18,174,61)"), UNIQUE'Unds'ID{}("3db0cd8a5e6ab12d6025a309f31b95b768872cbd22c77dc06ad646852f68486f")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(94f6da693fd914b6514c2daead15e638c67d1f03f9e0abf8aae542a3de448fd8), heat, non-assoc, org.kframework.attributes.Location(Location(174,18,174,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule148LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule148LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule148LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,18,174,61)"), UNIQUE'Unds'ID{}("94f6da693fd914b6514c2daead15e638c67d1f03f9e0abf8aae542a3de448fd8")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_<__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5436c1f07b200bd739a26f1c14db999c378ec004216c65dc4cfd0e504d04329c), org.kframework.attributes.Location(Location(347,8,347,25)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule149LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule149LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule149LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(347,8,347,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5436c1f07b200bd739a26f1c14db999c378ec004216c65dc4cfd0e504d04329c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(64326a49ff4d52821d27e09ff388658d40513de80d1efcbe3f6a4f9218ed2006), heat, non-assoc, org.kframework.attributes.Location(Location(178,18,178,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule150LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule150LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule150LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,18,178,61)"), UNIQUE'Unds'ID{}("64326a49ff4d52821d27e09ff388658d40513de80d1efcbe3f6a4f9218ed2006")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a5c594aef2698c1c1a2cf8b24dd061dae3129ed546b650b98a7973c5cb04b1a2), heat, non-assoc, org.kframework.attributes.Location(Location(178,18,178,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule151LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule151LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule151LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,18,178,61)"), UNIQUE'Unds'ID{}("a5c594aef2698c1c1a2cf8b24dd061dae3129ed546b650b98a7973c5cb04b1a2")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_==__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(T),inj{Type,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6ab4bc1d287c69ee7989a7d955544ec15b39f778c5f2c49de221a2c0ebdd1e78), org.kframework.attributes.Location(Location(351,8,351,27)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule152LHS{}(SortType{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule152LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortType{}, SortExp{}}(VarT:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule152LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,8,351,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6ab4bc1d287c69ee7989a7d955544ec15b39f778c5f2c49de221a2c0ebdd1e78")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_KOOL-TYPED-STATIC_Exp_Exp`(HOLE))~>`#freezer_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fdf292f43f14b9e74739e9124c671c61c3423e3ffb7922dd071341e53d97750c), heat, org.kframework.attributes.Location(Location(370,11,370,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule153LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortExp{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule153LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule153LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,11,370,36)"), UNIQUE'Unds'ID{}("fdf292f43f14b9e74739e9124c671c61c3423e3ffb7922dd071341e53d97750c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c6e7f31fe5e71d297bbb15e459f37f9da5293c837d05a49a39c712f6959750f8), heat, org.kframework.attributes.Location(Location(185,18,185,60)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, strict(2)]
  alias rule154LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule154LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule154LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,18,185,60)"), UNIQUE'Unds'ID{}("c6e7f31fe5e71d297bbb15e459f37f9da5293c837d05a49a39c712f6959750f8")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(T),inj{Type,Exp}(T')))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T',`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>inj{Type,KItem}(T)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df6583d799baab8e7ab3b8e050047e3017f3ab87f4fefdb9fac05eede14c12bb), org.kframework.attributes.Location(Location(514,8,514,52)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule155LHS{}(SortType{},SortType{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule155LHS{}(VarT:SortType{},VarT'Apos':SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortType{}, SortExp{}}(VarT'Apos':SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule155LHS{}(VarT:SortType{},VarT'Apos':SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT'Apos':SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(514,8,514,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("df6583d799baab8e7ab3b8e050047e3017f3ab87f4fefdb9fac05eede14c12bb")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(12ca1cc1c832944040fcbe563063449133cc6ee50bc9aa8d3e072079f40be3d6), heat, non-assoc, org.kframework.attributes.Location(Location(177,18,177,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule156LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule156LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule156LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,18,177,61)"), UNIQUE'Unds'ID{}("12ca1cc1c832944040fcbe563063449133cc6ee50bc9aa8d3e072079f40be3d6")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(f7e7d3d2782145b85ef4e528a1118771e208d4c2877d4d051596d65d85c533af), heat, non-assoc, org.kframework.attributes.Location(Location(177,18,177,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule157LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule157LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule157LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,18,177,61)"), UNIQUE'Unds'ID{}("f7e7d3d2782145b85ef4e528a1118771e208d4c2877d4d051596d65d85c533af")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e1111dbe7f5e24ac773192270ca6fa4f276d3891ab6b596deedd34f8611d9d9e), org.kframework.attributes.Location(Location(350,8,350,26)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule158LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule158LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule158LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,8,350,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e1111dbe7f5e24ac773192270ca6fa4f276d3891ab6b596deedd34f8611d9d9e")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e296d8fa8e4dc7520745289e5d85bd52e83b58b03c7af3a2b8f1d6f41867c3ff), heat, non-assoc, org.kframework.attributes.Location(Location(176,18,176,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule159LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule159LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule159LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,18,176,61)"), UNIQUE'Unds'ID{}("e296d8fa8e4dc7520745289e5d85bd52e83b58b03c7af3a2b8f1d6f41867c3ff")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7500933b48246f523216e62a01f85fa432481ed055058fbb6f672476c6971840), heat, non-assoc, org.kframework.attributes.Location(Location(176,18,176,61)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule160LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule160LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule160LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), non-assoc{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,18,176,61)"), UNIQUE'Unds'ID{}("7500933b48246f523216e62a01f85fa432481ed055058fbb6f672476c6971840")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_>__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(38d30c61797eaec1bb754f7353d9a11f0c8a83315e9e01e1d871a889897b21f7), org.kframework.attributes.Location(Location(349,8,349,25)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule161LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule161LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule161LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,8,349,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("38d30c61797eaec1bb754f7353d9a11f0c8a83315e9e01e1d871a889897b21f7")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{ArrayReference,KItem}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps0_`(inj{Exps,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1d42617d46ffbb2be395a0c4a972447056759cf5fcf00f9a6969a10787a38880), heat, org.kframework.attributes.Location(Location(152,29,152,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule162LHS{}(SortExp{},SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule162LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortArrayReference{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(VarHOLE:SortExp{},VarK1:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule162LHS{}(VarHOLE:SortExp{},VarK1:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps0'Unds'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarK1:SortExps{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,29,152,57)"), UNIQUE'Unds'ID{}("1d42617d46ffbb2be395a0c4a972447056759cf5fcf00f9a6969a10787a38880")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{ArrayReference,KItem}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a018bb4f6b4434f27885158b9bcaaaa9773e9c484971db7018c28cf4617ea1b6), heat, org.kframework.attributes.Location(Location(152,29,152,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule163LHS{}(SortExps{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule163LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortArrayReference{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(VarK0:SortExp{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule163LHS{}(VarHOLE:SortExps{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,29,152,57)"), UNIQUE'Unds'ID{}("a018bb4f6b4434f27885158b9bcaaaa9773e9c484971db7018c28cf4617ea1b6")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{ArrayReference,KItem}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(inj{Type,Exp}(T),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(T)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f6cf3628d44bfd8ab0b92f12b1b4cdf9a0a68a6926187e1cba726c2b2982a055), org.kframework.attributes.Location(Location(359,8,359,27)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule164LHS{}(SortType{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule164LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortArrayReference{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule164LHS{}(VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,8,359,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f6cf3628d44bfd8ab0b92f12b1b4cdf9a0a68a6926187e1cba726c2b2982a055")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{ArrayReference,KItem}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(inj{Type,Exp}(`_[]_KOOL-TYPED-STATIC-SYNTAX_Type_Type`(T)),inj{Types,Exps}(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList),Ts))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{ArrayReference,KItem}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(inj{Type,Exp}(T),inj{Types,Exps}(Ts)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(abb1ef0e770f7d88464d8bf7bd8072220a0e32a9ffa2e731cbf2854b03ee225c), org.kframework.attributes.Location(Location(358,8,358,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule165LHS{}(SortType{},SortTypes{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule165LHS{}(VarT:SortType{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortArrayReference{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{})),inj{SortTypes{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(),VarTs:SortTypes{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule165LHS{}(VarT:SortType{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortArrayReference{}, SortKItem{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),inj{SortTypes{}, SortExps{}}(VarTs:SortTypes{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(358,8,358,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("abb1ef0e770f7d88464d8bf7bd8072220a0e32a9ffa2e731cbf2854b03ee225c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,`<ctenvT>`(`_Map_`(Rho,`.Map`(.KList))),_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,`<ctenvT>`(`_Map_`(Rho,`_|->_`(inj{Id,KItem}(X),inj{Type,KItem}(T)))),_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4) requires `notBool_`(`Set:in`(inj{Id,KItem}(X),`keys(_)_MAP_Set_Map`(Rho))) ensures #token("true","Bool") [UNIQUE_ID(286e7a14354f03ff434129e1f18a556caaa1e74a45523d063d1567de95119132), org.kframework.attributes.Location(Location(460,8,462,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule166LHS{}(SortMap{},SortType{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule166LHS{}(VarRho:SortMap{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(VarRho:SortMap{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Lbl'-LT-'ctenvT'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarRho:SortMap{},Lbl'Stop'Map{}())),Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule166LHS{}(VarRho:SortMap{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Lbl'-LT-'ctenvT'-GT-'{}(Lbl'Unds'Map'Unds'{}(VarRho:SortMap{},Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortType{}, SortKItem{}}(VarT:SortType{})))),Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(460,8,462,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("286e7a14354f03ff434129e1f18a556caaa1e74a45523d063d1567de95119132")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),`<tenv>`(Rho),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),`<tenv>`(`Map:update`(Rho,inj{Id,KItem}(X),inj{Type,KItem}(T))),_Gen0,_Gen1,_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d4c0468f10c057d2bb532f40dd6631b096a70cc1fbda70665ba6196632773aaf), org.kframework.attributes.Location(Location(437,8,438,41)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule167LHS{}(SortMap{},SortType{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule167LHS{}(VarRho:SortMap{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule167LHS{}(VarRho:SortMap{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{}))),Lbl'-LT-'tenv'-GT-'{}(LblMap'Coln'update{}(VarRho:SortMap{},inj{SortId{}, SortKItem{}}(VarX:SortId{}),inj{SortType{}, SortKItem{}}(VarT:SortType{}))),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(437,8,438,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d4c0468f10c057d2bb532f40dd6631b096a70cc1fbda70665ba6196632773aaf")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar5),_Gen1,`<ctenvT>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),_Gen0),_DotVar6)),_Gen2,`<inClass>`(inj{Id,KItem}(C)))),_DotVar3)),_DotVar2),_DotVar0,`<output>`(`_List_`(_DotVar1,`.List`(.KList))))=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`stuck(_)_KOOL-TYPED-STATIC_KItem_K`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))))))~>_DotVar5),_Gen1,`<ctenvT>`(`_Map_`(`_|->_`(inj{Id,KItem}(X),_Gen0),_DotVar6)),_Gen2,`<inClass>`(inj{Id,KItem}(C)))),_DotVar3)),_DotVar2),_DotVar0,`<output>`(`_List_`(_DotVar1,`ListItem`(inj{String,KItem}(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"Member \\\"\"","String"),`Id2String(_)_ID-COMMON_String_Id`(X)),#token("\"\\\" declared twice in class \\\"\"","String")),`Id2String(_)_ID-COMMON_String_Id`(C)),#token("\"\\\"!\\n\"","String"))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(465e440ba17989f55628b02946c11b5f8d068095059f40217a6e18449b5f7444), org.kframework.attributes.Location(Location(464,8,470,78)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule168LHS{}(SortId{},SortType{},SortId{},SortGeneratedCounterCell{},SortList{},SortClassesCell{},SortTaskCellSet{},SortK{},SortMap{},SortKItem{},SortTenvCell{},SortReturnTypeCell{}) : SortGeneratedTopCell{}
  where rule168LHS{}(VarC:SortId{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortList{},Var'Unds'DotVar2:SortClassesCell{},Var'Unds'DotVar3:SortTaskCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortMap{},Var'Unds'Gen0:SortKItem{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortReturnTypeCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortTenvCell{},Lbl'-LT-'ctenvT'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'Gen0:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar3:SortTaskCellSet{})),Var'Unds'DotVar2:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar1:SortList{},Lbl'Stop'List{}())))) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule168LHS{}(VarC:SortId{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortList{},Var'Unds'DotVar2:SortClassesCell{},Var'Unds'DotVar3:SortTaskCellSet{},Var'Unds'DotVar5:SortK{},Var'Unds'DotVar6:SortMap{},Var'Unds'Gen0:SortKItem{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortReturnTypeCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lblstuck'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'K{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),dotk{}())),Var'Unds'DotVar5:SortK{})),Var'Unds'Gen1:SortTenvCell{},Lbl'-LT-'ctenvT'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortId{}, SortKItem{}}(VarX:SortId{}),Var'Unds'Gen0:SortKItem{}),Var'Unds'DotVar6:SortMap{})),Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar3:SortTaskCellSet{})),Var'Unds'DotVar2:SortClassesCell{}),Var'Unds'DotVar0:SortGeneratedCounterCell{},Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Var'Unds'DotVar1:SortList{},LblListItem{}(inj{SortString{}, SortKItem{}}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("Member \""),LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(VarX:SortId{})),\dv{SortString{}}("\" declared twice in class \"")),LblId2String'LParUndsRParUnds'ID-COMMON'Unds'String'Unds'Id{}(VarC:SortId{})),\dv{SortString{}}("\"!\n")))))))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(464,8,470,78)"), UNIQUE'Unds'ID{}("465e440ba17989f55628b02946c11b5f8d068095059f40217a6e18449b5f7444")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{ArrayReference,Exp}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(E,inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(E,inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9ff9b3a975137572eb4dd0f31c5a46696c20cba82c1d93e2c8eedabc1eeec21d), org.kframework.attributes.Location(Location(324,8,324,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule169LHS{}(SortExp{},SortType{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule169LHS{}(VarE:SortExp{},VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortArrayReference{}, SortExp{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(VarE:SortExp{},inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule169LHS{}(VarE:SortExp{},VarT:SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE:SortExp{},inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,8,324,37)"), UNIQUE'Unds'ID{}("9ff9b3a975137572eb4dd0f31c5a46696c20cba82c1d93e2c8eedabc1eeec21d")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{ArrayReference,Exp}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(E,inj{Types,Exps}(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList),Ts)))),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(`_[]_KOOL-TYPED-STATIC-SYNTAX_Type_Type`(T),`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{ArrayReference,Exp}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(E,inj{Types,Exps}(Ts))),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d056a9d1c4b1f81a7540e3343840ab3ed6038e4b99b9fee307808d1da5c1d8e7), org.kframework.attributes.Location(Location(323,8,323,49)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule170LHS{}(SortExp{},SortType{},SortTypes{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule170LHS{}(VarE:SortExp{},VarT:SortType{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortArrayReference{}, SortExp{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(VarE:SortExp{},inj{SortTypes{}, SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(),VarTs:SortTypes{})))),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule170LHS{}(VarE:SortExp{},VarT:SortType{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(VarT:SortType{}),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortArrayReference{}, SortExp{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(VarE:SortExp{},inj{SortTypes{}, SortExps{}}(VarTs:SortTypes{}))),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,8,323,49)"), UNIQUE'Unds'ID{}("d056a9d1c4b1f81a7540e3343840ab3ed6038e4b99b9fee307808d1da5c1d8e7")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(_Gen0,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{ArrayReference,Exp}(`_[_]_KOOL-TYPED-STATIC-SYNTAX_ArrayReference_Exp_Exps`(_Gen1,HOLE)),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_DotVar1),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezer__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps2_`(inj{Type,KItem}(_Gen0),inj{Exp,KItem}(_Gen1))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_DotVar1),_Gen6,_Gen7) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7f765ae0e1cc7d74a92574e904c27fbfd614bc80420ee6c9adb48b5eab15a5e6), heat, org.kframework.attributes.Location(Location(321,11,321,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule171LHS{}(SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortType{},SortExp{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule171LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortExp{},Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Var'Unds'Gen0:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortArrayReference{}, SortExp{}}(Lbl'UndsLSqBUndsRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'ArrayReference'Unds'Exp'Unds'Exps{}(Var'Unds'Gen1:SortExp{},VarHOLE:SortExps{})),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule171LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortExp{},Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezer'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps2'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen0:SortType{}),dotk{}()),kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,11,321,37)"), UNIQUE'Unds'ID{}("7f765ae0e1cc7d74a92574e904c27fbfd614bc80420ee6c9adb48b5eab15a5e6")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(HOLE)~>`#freezer___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt0_`(inj{Stmt,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Stmt,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1c3be81290d60585a3a1da24a7cdfb7bede2da3dd55a9c3858fa15c89d3313a0), heat, org.kframework.attributes.Location(Location(215,19,215,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, seqstrict]
  alias rule172LHS{}(SortStmt{},SortStmt{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule172LHS{}(VarHOLE:SortStmt{},VarK1:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarHOLE:SortStmt{},VarK1:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule172LHS{}(VarHOLE:SortStmt{},VarK1:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt0'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK1:SortStmt{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,19,215,74)"), UNIQUE'Unds'ID{}("1c3be81290d60585a3a1da24a7cdfb7bede2da3dd55a9c3858fa15c89d3313a0"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(HOLE)~>`#freezer___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt1_`(inj{Stmt,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(`_andBool_`(isKResult(inj{Stmt,KItem}(K0)),#token("true","Bool")),`notBool_`(isKResult(inj{Stmt,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2a2d3ff781870f25ba2737f5e522fa505203ac86756617cc3de7ded8e594f878), heat, org.kframework.attributes.Location(Location(215,19,215,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), right, seqstrict]
  alias rule173LHS{}(SortStmt{},SortStmt{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule173LHS{}(VarHOLE:SortStmt{},VarK0:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(Lbl'Unds'andBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK0:SortStmt{}),dotk{}())),\dv{SortBool{}}("true")),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(VarK0:SortStmt{},VarHOLE:SortStmt{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule173LHS{}(VarHOLE:SortStmt{},VarK0:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarHOLE:SortStmt{}),kseq{}(Lbl'Hash'freezer'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt1'Unds'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarK0:SortStmt{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), right{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,19,215,74)"), UNIQUE'Unds'ID{}("2a2d3ff781870f25ba2737f5e522fa505203ac86756617cc3de7ded8e594f878"), seqstrict{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(inj{BlockOrStmtType,Stmt}(_Gen0),inj{BlockOrStmtType,Stmt}(_Gen1)))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_DotVar1),_Gen6,_Gen7)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen2,_Gen3,_Gen4,_Gen5)),_DotVar2)),_DotVar1),_Gen6,_Gen7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9752346ebe211aaa635e9dee53a8b43972be3ecb129119b5ce6b47ff76a16d0), org.kframework.attributes.Location(Location(391,8,391,51)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule174LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortBlockOrStmtType{},SortBlockOrStmtType{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule174LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortBlockOrStmtType{},Var'Unds'Gen1:SortBlockOrStmtType{},Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(inj{SortBlockOrStmtType{}, SortStmt{}}(Var'Unds'Gen0:SortBlockOrStmtType{}),inj{SortBlockOrStmtType{}, SortStmt{}}(Var'Unds'Gen1:SortBlockOrStmtType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule174LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortBlockOrStmtType{},Var'Unds'Gen1:SortBlockOrStmtType{},Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{},Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen2:SortTenvCell{},Var'Unds'Gen3:SortCtenvTCell{},Var'Unds'Gen4:SortReturnTypeCell{},Var'Unds'Gen5:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen6:SortGeneratedCounterCell{},Var'Unds'Gen7:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,8,391,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a9752346ebe211aaa635e9dee53a8b43972be3ecb129119b5ce6b47ff76a16d0")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Id`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_instanceOf__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Id0_`(inj{Id,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3e22b929631375a6a6ce33c70ee2998920f8207b586e90103a67c7e00ea092ef), heat, org.kframework.attributes.Location(Location(159,18,159,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(1)]
  alias rule175LHS{}(SortExp{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule175LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(VarHOLE:SortExp{},VarK1:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule175LHS{}(VarHOLE:SortExp{},VarK1:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id0'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK1:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(159,18,159,53)"), UNIQUE'Unds'ID{}("3e22b929631375a6a6ce33c70ee2998920f8207b586e90103a67c7e00ea092ef")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_instanceOf__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Id`(inj{Type,Exp}(class(_C1)),_C2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8be308213bc5b4dcf8c5d7440be4e829f94ec37a0a953a0f5064767052080d82), org.kframework.attributes.Location(Location(753,8,753,49)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule176LHS{}(SortId{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule176LHS{}(Var'Unds'C1:SortId{},Var'Unds'C2:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'Unds'instanceOf'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Id{}(inj{SortType{}, SortExp{}}(Lblclass{}(Var'Unds'C1:SortId{})),Var'Unds'C2:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule176LHS{}(Var'Unds'C1:SortId{},Var'Unds'C2:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(753,8,753,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8be308213bc5b4dcf8c5d7440be4e829f94ec37a0a953a0f5064767052080d82")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(cc313fa0053d32f9f14cc56f142af292a8bcea02c32aa3c78cafdcab1b9da288), heat, left, org.kframework.attributes.Location(Location(183,18,183,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule177LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule177LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},VarK1:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule177LHS{}(VarHOLE:SortExp{},VarK1:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK1:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,18,183,56)"), UNIQUE'Unds'ID{}("cc313fa0053d32f9f14cc56f142af292a8bcea02c32aa3c78cafdcab1b9da288")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezer_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fd8c851aef51ea28e8aef43ea47aed211c122375a74e9f002c3a4ad37c113078), heat, left, org.kframework.attributes.Location(Location(183,18,183,56)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule178LHS{}(SortExp{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule178LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarK0:SortExp{},VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule178LHS{}(VarHOLE:SortExp{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezer'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), left{}(), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,18,183,56)"), UNIQUE'Unds'ID{}("fd8c851aef51ea28e8aef43ea47aed211c122375a74e9f002c3a4ad37c113078")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_||__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Type,Exp}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{Type,Exp}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f759edba4bbacf665bc56006c4d9efa1368ecfb23e73fc0a6ea20db3b592e093), org.kframework.attributes.Location(Location(354,8,354,28)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule179LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule179LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsPipePipeUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortType{}, SortExp{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule179LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,8,354,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f759edba4bbacf665bc56006c4d9efa1368ecfb23e73fc0a6ea20db3b592e093")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`acquire_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezeracquire_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(801fceca8822d51f407a1da66b02814a52abf1f3127c6a299a5840638c13342c), heat, org.kframework.attributes.Location(Location(211,19,211,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule180LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule180LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule180LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezeracquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,19,211,67)"), UNIQUE'Unds'ID{}("801fceca8822d51f407a1da66b02814a52abf1f3127c6a299a5840638c13342c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`acquire_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5afaafdc35653e843eccc6c3c60979a9dd80e8705d4ef621133cbf6cbaf8f986), org.kframework.attributes.Location(Location(386,8,386,31)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule181LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortType{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule181LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblacquire'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule181LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(386,8,386,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5afaafdc35653e843eccc6c3c60979a9dd80e8705d4ef621133cbf6cbaf8f986")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`class___KOOL-TYPED-STATIC-SYNTAX_Stmt_Id_Block`(C,S))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`class_extends___KOOL-TYPED-STATIC-SYNTAX_Stmt_Id_Id_Block`(C,#token("Object","Id"),S))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ccd9cb723950b72b211ec6bd2e17c9fdc9d3c9aa5e4269150066ec3a064331d5), org.kframework.attributes.Location(Location(226,8,226,48)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule182LHS{}(SortId{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule182LHS{}(VarC:SortId{},VarS:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblclass'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Block{}(VarC:SortId{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule182LHS{}(VarC:SortId{},VarS:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(VarC:SortId{},\dv{SortId{}}("Object"),VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(226,8,226,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("ccd9cb723950b72b211ec6bd2e17c9fdc9d3c9aa5e4269150066ec3a064331d5")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block0_`(inj{Block,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(41e9533b04afa70624d3764b1d95d5faaeb558ac7074f8df044320bf35b1902b), avoid, heat, org.kframework.attributes.Location(Location(201,19,201,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule183LHS{}(SortExp{},SortBlock{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule183LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule183LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,19,201,74)"), UNIQUE'Unds'ID{}("41e9533b04afa70624d3764b1d95d5faaeb558ac7074f8df044320bf35b1902b"), avoid{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(K0,HOLE,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block1_`(inj{Exp,KItem}(K0),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Block,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2fbe48cdfc67ab6b187866feb19d0d3861a015a2bcd951dbef9f764f5cb6ed3d), avoid, heat, org.kframework.attributes.Location(Location(201,19,201,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule184LHS{}(SortBlock{},SortExp{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule184LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarK0:SortExp{},VarHOLE:SortBlock{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule184LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,19,201,74)"), UNIQUE'Unds'ID{}("2fbe48cdfc67ab6b187866feb19d0d3861a015a2bcd951dbef9f764f5cb6ed3d"), avoid{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(K0,K1,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerif(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block2_`(inj{Exp,KItem}(K0),inj{Block,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Block,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(337eeb17da21fdc1d31dc6c2fb64f307710e5bb3e211764a9dc776031930c8c4), avoid, heat, org.kframework.attributes.Location(Location(201,19,201,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule185LHS{}(SortBlock{},SortExp{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule185LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},VarK1:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(VarK0:SortExp{},VarK1:SortBlock{},VarHOLE:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule185LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},VarK1:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block2'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(201,19,201,74)"), UNIQUE'Unds'ID{}("337eeb17da21fdc1d31dc6c2fb64f307710e5bb3e211764a9dc776031930c8c4"), avoid{}()]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`if(_)_else__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block_Block`(inj{Type,Exp}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{BlockOrStmtType,Block}(`block_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList)),inj{BlockOrStmtType,Block}(`block_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(96d6f4aa63ff5abdae91d924b9dc8a219fd9603eaea82ff32407c0bbf1aff341), org.kframework.attributes.Location(Location(382,8,382,42)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule186LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule186LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblif'LParUndsRParUnds'else'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block'Unds'Block{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule186LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(382,8,382,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("96d6f4aa63ff5abdae91d924b9dc8a219fd9603eaea82ff32407c0bbf1aff341")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`join_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerjoin_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fa20da675a3419a1f9ca6f55897e9e8167989aa756cd9b77ad12c93a25197e34), heat, org.kframework.attributes.Location(Location(210,19,210,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule187LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule187LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule187LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerjoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,19,210,67)"), UNIQUE'Unds'ID{}("fa20da675a3419a1f9ca6f55897e9e8167989aa756cd9b77ad12c93a25197e34")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`join_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3cb7e1acecd8719416cb3290b0105ac4312ee68034485319f3ccba04e9cea0fb), org.kframework.attributes.Location(Location(385,8,385,25)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule188LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule188LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbljoin'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule188LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,8,385,25)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3cb7e1acecd8719416cb3290b0105ac4312ee68034485319f3ccba04e9cea0fb")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_KOOL-TYPED-STATIC_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerltype(_)_KOOL-TYPED-STATIC_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(isLValue(inj{Exp,KItem}(HOLE)),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(60544cacd3ca522ceb68352594a3068566128a73bc756f8317c20704e7ad94eb), heat, org.kframework.attributes.Location(Location(410,11,410,42)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule189LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule189LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(LblisLValue{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule189LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,11,410,42)"), UNIQUE'Unds'ID{}("60544cacd3ca522ceb68352594a3068566128a73bc756f8317c20704e7ad94eb")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_KOOL-TYPED-STATIC_Exp_Exp`(HOLE))~>`#freezer++__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`++__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(8dd981ed35bf5535762b4569fe9492f48ccad9b476bcd2ec71e164c7d00f53d7), cool, org.kframework.attributes.Location(Location(338,11,338,34)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule190LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule190LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),kseq{}(Lbl'Hash'freezer'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule190LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'PlusPlusUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,11,338,34)"), UNIQUE'Unds'ID{}("8dd981ed35bf5535762b4569fe9492f48ccad9b476bcd2ec71e164c7d00f53d7")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`ltype(_)_KOOL-TYPED-STATIC_Exp_Exp`(HOLE))~>`#freezer_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp0_`(inj{Exp,KItem}(_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(HOLE,_Gen0))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires `_andBool_`(#token("true","Bool"),isKResult(inj{Exp,KItem}(HOLE))) ensures #token("true","Bool") [UNIQUE_ID(3d8208134d58d0c67b56dab9431ec91064642013aabda78efa4f4e69d36a89c5), cool, org.kframework.attributes.Location(Location(370,11,370,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule191LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortExp{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule191LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblltype'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),kseq{}(Lbl'Hash'freezer'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp0'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule191LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortExp{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{},Var'Unds'Gen0:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [cool{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(370,11,370,36)"), UNIQUE'Unds'ID{}("3d8208134d58d0c67b56dab9431ec91064642013aabda78efa4f4e69d36a89c5")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`new_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exps`(C,inj{Types,Exps}(Ts)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exps`(inj{FieldReference,Exp}(`_.__KOOL-TYPED-STATIC-SYNTAX_FieldReference_Exp_Id`(inj{Type,Exp}(class(C)),C)),inj{Types,Exps}(Ts)))~>`discard_KOOL-TYPED-STATIC_KItem`(.KList)~>inj{Type,KItem}(class(C))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9bf8903c04011d12c9c247a4ec2fa5d909664481068c6f32e42d40487d8bd666), org.kframework.attributes.Location(Location(662,8,662,74)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule192LHS{}(SortId{},SortTypes{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule192LHS{}(VarC:SortId{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(VarC:SortId{},inj{SortTypes{}, SortExps{}}(VarTs:SortTypes{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule192LHS{}(VarC:SortId{},VarTs:SortTypes{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lbl'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exps{}(inj{SortFieldReference{}, SortExp{}}(Lbl'UndsStopUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'FieldReference'Unds'Exp'Unds'Id{}(inj{SortType{}, SortExp{}}(Lblclass{}(VarC:SortId{})),VarC:SortId{})),inj{SortTypes{}, SortExps{}}(VarTs:SortTypes{}))),kseq{}(Lbldiscard'Unds'KOOL-TYPED-STATIC'Unds'KItem{}(),kseq{}(inj{SortType{}, SortKItem{}}(Lblclass{}(VarC:SortId{})),Var'Unds'DotVar4:SortK{})))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(662,8,662,74)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9bf8903c04011d12c9c247a4ec2fa5d909664481068c6f32e42d40487d8bd666")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`new_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exps`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezernew_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exps1_`(inj{Id,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0622dee0058ce7558d1c15d19901705e789af0111055a065cee180603499d579), heat, org.kframework.attributes.Location(Location(161,18,161,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(2)]
  alias rule193LHS{}(SortExps{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule193LHS{}(VarHOLE:SortExps{},VarK0:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(VarK0:SortId{},VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule193LHS{}(VarHOLE:SortExps{},VarK0:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezernew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps1'Unds'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK0:SortId{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}("2"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(161,18,161,53)"), UNIQUE'Unds'ID{}("0622dee0058ce7558d1c15d19901705e789af0111055a065cee180603499d579")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exps`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exps,KItem}(HOLE)~>`#freezerprint(_);_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exps0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exps,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(99f2d1df7b3d62bad663490924bb36971bf4083a18322f28ef8bab03e3f7de80), heat, org.kframework.attributes.Location(Location(207,19,207,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule194LHS{}(SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule194LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarHOLE:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule194LHS{}(VarHOLE:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExps{}, SortKItem{}}(VarHOLE:SortExps{}),kseq{}(Lbl'Hash'freezerprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(207,19,207,67)"), UNIQUE'Unds'ID{}("99f2d1df7b3d62bad663490924bb36971bf4083a18322f28ef8bab03e3f7de80")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exps`(`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Type,Exp}(T),Ts)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exps`(Ts))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_orBool_`(`_==K_`(inj{Type,KItem}(T),inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))),`_==K_`(inj{Type,KItem}(T),inj{Type,KItem}(`string_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)))) ensures #token("true","Bool") [UNIQUE_ID(5286e48b58315f437f1069ca7e3b252b575aabd43920f99406e0cf6153549295), org.kframework.attributes.Location(Location(366,8,366,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "when" Bool [klabel(#ruleRequires), symbol])]
  alias rule195LHS{}(SortType{},SortExps{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule195LHS{}(VarT:SortType{},VarTs:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'orBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),dotk{}())),Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortType{}, SortKItem{}}(VarT:SortType{}),dotk{}()),kseq{}(inj{SortType{}, SortKItem{}}(Lblstring'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortType{}, SortExp{}}(VarT:SortType{}),VarTs:SortExps{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule195LHS{}(VarT:SortType{},VarTs:SortExps{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(VarTs:SortExps{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(366,8,366,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"when\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("5286e48b58315f437f1069ca7e3b252b575aabd43920f99406e0cf6153549295")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`print(_);_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exps`(inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(708464d6d68e96b92238de12e080852c4d09b2fe874f48d927b02dc40daaff89), org.kframework.attributes.Location(Location(367,8,367,30)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule196LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule196LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblprint'LParUndsRParSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exps{}(inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule196LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(367,8,367,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("708464d6d68e96b92238de12e080852c4d09b2fe874f48d927b02dc40daaff89")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`read()_KOOL-TYPED-STATIC-SYNTAX_Exp`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(006cced76ba56a22527fa5bd417f279e76e986d5569d6a0679f8b6ee8c827458), org.kframework.attributes.Location(Location(364,8,364,21)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule197LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule197LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblread'LParRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule197LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,8,364,21)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("006cced76ba56a22527fa5bd417f279e76e986d5569d6a0679f8b6ee8c827458")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`release_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrelease_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(39ed1618a255daf946409200f670f167d58a4f87c4f4a2ecabe9aa758db512f8), heat, org.kframework.attributes.Location(Location(212,19,212,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule198LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule198LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule198LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,19,212,67)"), UNIQUE'Unds'ID{}("39ed1618a255daf946409200f670f167d58a4f87c4f4a2ecabe9aa758db512f8")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`release_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(707d644f0e67381865536cf8808efa2ad2903934d4e2b296b9c5fa098ef01f18), org.kframework.attributes.Location(Location(387,8,387,31)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule199LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortType{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule199LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrelease'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule199LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,8,387,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("707d644f0e67381865536cf8808efa2ad2903934d4e2b296b9c5fa098ef01f18")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerrendezvous_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(40ff00e63a002bfc36a41127bfb8333e10eb30b472f581b34d9827a79246fff3), heat, org.kframework.attributes.Location(Location(213,19,213,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule200LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule200LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule200LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,19,213,67)"), UNIQUE'Unds'ID{}("40ff00e63a002bfc36a41127bfb8333e10eb30b472f581b34d9827a79246fff3")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`rendezvous_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_Gen0)))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,_Gen3,_Gen4)),_DotVar2)),_DotVar1),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(deaed7b371ffcc7c4a7097841c2b467e06ce809184f6f5cbb38654860800dd47), org.kframework.attributes.Location(Location(388,8,388,34)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule201LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortType{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule201LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblrendezvous'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'Gen0:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule201LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortReturnTypeCell{},Var'Unds'Gen4:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,8,388,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("deaed7b371ffcc7c4a7097841c2b467e06ce809184f6f5cbb38654860800dd47")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`return;_KOOL-TYPED-STATIC-SYNTAX_Stmt`(.KList))~>_DotVar4),_Gen1,_Gen2,`<returnType>`(_Gen0),_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen1,_Gen2,`<returnType>`(_Gen0),_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(42c017f2342aab95c498c950867c4b27595f12b0b7d2586c6a90fa1fd4e5d9d5), org.kframework.attributes.Location(Location(373,8,373,64)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule202LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortType{},SortTenvCell{},SortCtenvTCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule202LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'SClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Lbl'-LT-'returnType'-GT-'{}(Var'Unds'Gen0:SortType{}),Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule202LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortType{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen2:SortCtenvTCell{},Lbl'-LT-'returnType'-GT-'{}(Var'Unds'Gen0:SortType{}),Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,8,373,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("42c017f2342aab95c498c950867c4b27595f12b0b7d2586c6a90fa1fd4e5d9d5")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`return_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerreturn_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7f46c3e94e797f65c3ca76bce3470757fca1608a524c056e19bf34887ae29975), heat, org.kframework.attributes.Location(Location(205,19,205,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule203LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule203LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule203LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,19,205,67)"), UNIQUE'Unds'ID{}("7f46c3e94e797f65c3ca76bce3470757fca1608a524c056e19bf34887ae29975")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`return_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(T)))~>_DotVar4),_Gen0,_Gen1,`<returnType>`(T'),_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(`checkSubtype(_,_)_KOOL-TYPED-STATIC_KItem_Types_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)),`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T',`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,`<returnType>`(T'),_Gen2)),_DotVar2)),_DotVar1),_Gen3,_Gen4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d414f0ef2172f6259fbed1a45806952848742cea718db3d202954419184c0b83), org.kframework.attributes.Location(Location(528,8,529,42)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule204LHS{}(SortType{},SortType{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule204LHS{}(VarT:SortType{},VarT'Apos':SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblreturn'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(VarT:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Lbl'-LT-'returnType'-GT-'{}(VarT'Apos':SortType{}),Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule204LHS{}(VarT:SortType{},VarT'Apos':SortType{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckSubtype'LParUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT'Apos':SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Lbl'-LT-'returnType'-GT-'{}(VarT'Apos':SortType{}),Var'Unds'Gen2:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(528,8,529,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d414f0ef2172f6259fbed1a45806952848742cea718db3d202954419184c0b83")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezersizeOf(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5a792b52a4a0d7c029dbd32a911426ec66ceee0eb0f027f64e9d41a13ebbb2ae), heat, org.kframework.attributes.Location(Location(164,18,164,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule205LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule205LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule205LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezersizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(164,18,164,50)"), UNIQUE'Unds'ID{}("5a792b52a4a0d7c029dbd32a911426ec66ceee0eb0f027f64e9d41a13ebbb2ae")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`sizeOf(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Exp`(inj{Type,Exp}(`_[]_KOOL-TYPED-STATIC-SYNTAX_Type_Type`(_T))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b4eb7e39f3b46d971b3b62091caa84ffd20fbf0240843243dacb20bbc1a75a28), org.kframework.attributes.Location(Location(361,8,361,27)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule206LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{},SortType{}) : SortGeneratedTopCell{}
  where rule206LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'T:SortType{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(LblsizeOf'LParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp{}(inj{SortType{}, SortExp{}}(Lbl'UndsLSqBRSqBUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Type{}(Var'Unds'T:SortType{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule206LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'T:SortType{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(361,8,361,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b4eb7e39f3b46d971b3b62091caa84ffd20fbf0240843243dacb20bbc1a75a28")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))),`.TenvCell`(.KList),`.CtenvTCell`(.KList),`.ReturnTypeCell`(.KList),`.InClassCell`(.KList))),_DotVar2)),_DotVar1),_Gen0,_Gen1)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(`new_(_)_KOOL-TYPED-STATIC-SYNTAX_Exp_Id_Exps`(#token("Main","Id"),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))),`<tenv>`(`.Map`(.KList)),`.CtenvTCell`(.KList),`<returnType>`(`void_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),`<inClass>`(inj{Id,KItem}(#token("Main","Id"))))),_DotVar2)),_DotVar1),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cd66fee760a89e9869283085c6d2fb276bd540edd7fde6d7502cc05afe6f9e42), org.kframework.attributes.Location(Location(798,8,802,15)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule207LHS{}(SortClassesCell{},SortTaskCellSet{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule207LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),dotk{}())),Lbl'Stop'TenvCell{}(),Lbl'Stop'CtenvTCell{}(),Lbl'Stop'ReturnTypeCell{}(),Lbl'Stop'InClassCell{}())),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule207LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Lblnew'UndsLParUndsRParUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Id'Unds'Exps{}(\dv{SortId{}}("Main"),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(Lbl'Stop'Map{}()),Lbl'Stop'CtenvTCell{}(),Lbl'-LT-'returnType'-GT-'{}(Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(\dv{SortId{}}("Main")),dotk{}())))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(798,8,802,15)"), UNIQUE'Unds'ID{}("cd66fee760a89e9869283085c6d2fb276bd540edd7fde6d7502cc05afe6f9e42")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))),`.TenvCell`(.KList),`<ctenvT>`(Rho),`.ReturnTypeCell`(.KList),`<inClass>`(inj{Id,KItem}(C)))),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen0,_Gen1,`.CtenvCell`(.KList))),_DotVar3))),_Gen2,_Gen3)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`.TaskCellSet`(.KList),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),_Gen0,_Gen1,`<ctenv>`(Rho))),_DotVar3))),_Gen2,_Gen3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(413c44974cefd5cda1869173360b37c0d5fec5163612b2aa4fcc0abb6eb7b667), org.kframework.attributes.Location(Location(807,8,813,39)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule208LHS{}(SortId{},SortMap{},SortTaskCellSet{},SortClassDataCellMap{},SortBaseClassCell{},SortBaseClassesCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule208LHS{}(VarC:SortId{},VarRho:SortMap{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar3:SortClassDataCellMap{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortBaseClassesCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),dotk{}())),Lbl'Stop'TenvCell{}(),Lbl'-LT-'ctenvT'-GT-'{}(VarRho:SortMap{}),Lbl'Stop'ReturnTypeCell{}(),Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar2:SortTaskCellSet{})),Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortBaseClassesCell{},Lbl'Stop'CtenvCell{}())),Var'Unds'DotVar3:SortClassDataCellMap{}))),Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule208LHS{}(VarC:SortId{},VarRho:SortMap{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar3:SortClassDataCellMap{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortBaseClassesCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Stop'TaskCellSet{}(),Var'Unds'DotVar2:SortTaskCellSet{})),Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortBaseClassesCell{},Lbl'-LT-'ctenv'-GT-'{}(VarRho:SortMap{}))),Var'Unds'DotVar3:SortClassDataCellMap{}))),Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(807,8,813,39)"), UNIQUE'Unds'ID{}("413c44974cefd5cda1869173360b37c0d5fec5163612b2aa4fcc0abb6eb7b667")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))),`<tenv>`(_Gen0),_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`.TaskCellSet`(.KList),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c11a1a05b71cd0eefc59f4490b3059f369fa38cf0008345fc79f85b6d6f0f97d), org.kframework.attributes.Location(Location(818,8,821,26)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule209LHS{}(SortClassesCell{},SortTaskCellSet{},SortMap{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule209LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(Var'Unds'Gen0:SortMap{}),Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule209LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Stop'TaskCellSet{}(),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(818,8,821,26)"), UNIQUE'Unds'ID{}("c11a1a05b71cd0eefc59f4490b3059f369fa38cf0008345fc79f85b6d6f0f97d")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`super_KOOL-TYPED-STATIC-SYNTAX_Exp`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,`<inClass>`(inj{Id,KItem}(C)))),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),`<baseClass>`(inj{Id,KItem}(C')),_Gen3,_Gen4)),_DotVar5)) #as _Gen10),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(class(C'))~>_DotVar4),_Gen0,_Gen1,_Gen2,`<inClass>`(inj{Id,KItem}(C)))),_DotVar2)),_Gen10),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d66e54de1531d8a758341871cb5944fc739443b30c9ae5d13381b580a0bec565), org.kframework.attributes.Location(Location(680,9,683,39)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule210LHS{}(SortId{},SortId{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortTenvCell{},SortCtenvTCell{},SortClassesCell{},SortReturnTypeCell{},SortBaseClassesCell{},SortCtenvCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule210LHS{}(VarC:SortId{},VarC'Apos':SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblsuper'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC'Apos':SortId{}),dotk{}())),Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{})),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen10:SortClassesCell{})),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule210LHS{}(VarC:SortId{},VarC'Apos':SortId{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblclass{}(VarC'Apos':SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen10:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(680,9,683,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d66e54de1531d8a758341871cb5944fc739443b30c9ae5d13381b580a0bec565")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`this_KOOL-TYPED-STATIC-SYNTAX_Exp`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,`<inClass>`(inj{Id,KItem}(C)))),_DotVar2)),_DotVar1),_Gen3,_Gen4)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(class(C))~>_DotVar4),_Gen0,_Gen1,_Gen2,`<inClass>`(inj{Id,KItem}(C)))),_DotVar2)),_DotVar1),_Gen3,_Gen4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6b38460568dfe776c0031bc4ab2f5911edffb772e75a94336572db91eb659ce5), org.kframework.attributes.Location(Location(670,8,671,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule211LHS{}(SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule211LHS{}(VarC:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblthis'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule211LHS{}(VarC:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblclass{}(VarC:SortId{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(670,8,671,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("6b38460568dfe776c0031bc4ab2f5911edffb772e75a94336572db91eb659ce5")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`throw_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerthrow_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp0_`(.KList)~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5209bc4c5e03ff2c55ee30be85491a15fdd9f37ecf5b941428cc0eda4b06116a), heat, org.kframework.attributes.Location(Location(209,19,209,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule212LHS{}(SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule212LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(VarHOLE:SortExp{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule212LHS{}(VarHOLE:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp0'Unds'{}(),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,19,209,67)"), UNIQUE'Unds'ID{}("5209bc4c5e03ff2c55ee30be85491a15fdd9f37ecf5b941428cc0eda4b06116a")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`throw_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(inj{Type,Exp}(_T)))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7ec078f35a5127e39f1bad3851eb5475c9b1164150b819a09d42e4d0e7376cc1), org.kframework.attributes.Location(Location(541,8,541,31)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule213LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{},SortType{}) : SortGeneratedTopCell{}
  where rule213LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'T:SortType{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblthrow'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(inj{SortType{}, SortExp{}}(Var'Unds'T:SortType{}))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule213LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{},Var'Unds'T:SortType{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,8,541,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7ec078f35a5127e39f1bad3851eb5475c9b1164150b819a09d42e4d0e7376cc1")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`try_catch(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block`(HOLE,K1,K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezertry_catch(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block0_`(inj{Param,KItem}(K1),inj{Block,KItem}(K2))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Block,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(864f7d761166082287795a88e23f3feed01d779005404ef0c1ba5dea0d1e6875), heat, org.kframework.attributes.Location(Location(208,19,208,70)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict(1)]
  alias rule214LHS{}(SortBlock{},SortParam{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule214LHS{}(VarHOLE:SortBlock{},VarK1:SortParam{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(VarHOLE:SortBlock{},VarK1:SortParam{},VarK2:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule214LHS{}(VarHOLE:SortBlock{},VarK1:SortParam{},VarK2:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezertry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block0'Unds'{}(kseq{}(inj{SortParam{}, SortKItem{}}(VarK1:SortParam{}),dotk{}()),kseq{}(inj{SortBlock{}, SortKItem{}}(VarK2:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}("1"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(208,19,208,70)"), UNIQUE'Unds'ID{}("864f7d761166082287795a88e23f3feed01d779005404ef0c1ba5dea0d1e6875")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`try_catch(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Block_Param_Block`(inj{BlockOrStmtType,Block}(`block_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList)),`___KOOL-TYPED-STATIC-SYNTAX_Param_Type_Id`(T,X),S))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(`{_}_KOOL-TYPED-STATIC-SYNTAX_Block_Stmt`(`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))),inj{Block,Stmt}(S))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eda1206e56058b66cbf385f7d0fb1e6fcffed5972350ce218331111013c5f601), org.kframework.attributes.Location(Location(540,8,540,50)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule215LHS{}(SortBlock{},SortType{},SortId{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule215LHS{}(VarS:SortBlock{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbltry'Unds'catch'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Block'Unds'Param'Unds'Block{}(inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},VarX:SortId{}),VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule215LHS{}(VarS:SortBlock{},VarT:SortType{},VarX:SortId{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),inj{SortBlock{}, SortStmt{}}(VarS:SortBlock{})))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(540,8,540,50)"), UNIQUE'Unds'ID{}("eda1206e56058b66cbf385f7d0fb1e6fcffed5972350ce218331111013c5f601")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(HOLE,K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(HOLE)~>`#freezerwhile(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block0_`(inj{Block,KItem}(K1))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Exp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(5928c50309800cffc7a42f1d41b66b2156665372016def1a9c631cd59c673a83), heat, org.kframework.attributes.Location(Location(203,19,203,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule216LHS{}(SortExp{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule216LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarHOLE:SortExp{},VarK1:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule216LHS{}(VarHOLE:SortExp{},VarK1:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarHOLE:SortExp{}),kseq{}(Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block0'Unds'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarK1:SortBlock{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,19,203,67)"), UNIQUE'Unds'ID{}("5928c50309800cffc7a42f1d41b66b2156665372016def1a9c631cd59c673a83")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(K0,HOLE))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(HOLE)~>`#freezerwhile(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block1_`(inj{Exp,KItem}(K0))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{Block,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(782c61a664b8b6918669d0f5bd27a74d3dd08095688a9d7efac96fc6571c4359), heat, org.kframework.attributes.Location(Location(203,19,203,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), strict]
  alias rule217LHS{}(SortBlock{},SortExp{},SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule217LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(VarK0:SortExp{},VarHOLE:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule217LHS{}(VarHOLE:SortBlock{},VarK0:SortExp{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarHOLE:SortBlock{}),kseq{}(Lbl'Hash'freezerwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block1'Unds'{}(kseq{}(inj{SortExp{}, SortKItem{}}(VarK0:SortExp{}),dotk{}())),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [strict{}(""), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,19,203,67)"), UNIQUE'Unds'ID{}("782c61a664b8b6918669d0f5bd27a74d3dd08095688a9d7efac96fc6571c4359")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`while(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp_Block`(inj{Type,Exp}(`bool_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)),inj{BlockOrStmtType,Block}(`block_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(84c3ec75ff826dde767bd9d7562c225a7c0ea39c8e0dbde53dfdbfccc6ee1118), org.kframework.attributes.Location(Location(383,8,383,34)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule218LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule218LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblwhile'LParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp'Unds'Block{}(inj{SortType{}, SortExp{}}(Lblbool'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),inj{SortBlockOrStmtType{}, SortBlock{}}(Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()))),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule218LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,8,383,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("84c3ec75ff826dde767bd9d7562c225a7c0ea39c8e0dbde53dfdbfccc6ee1118")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(`{}_KOOL-TYPED-STATIC-SYNTAX_Block`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`block_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar4),_Gen0,_Gen1,_Gen2,_Gen3)),_DotVar2)),_DotVar1),_Gen4,_Gen5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c94e44ef15db9a56a43ed064f3c71d0698859ab2dc646b178663120b7ad5e147), org.kframework.attributes.Location(Location(376,8,376,19)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule219LHS{}(SortClassesCell{},SortTaskCellSet{},SortK{},SortTenvCell{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule219LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule219LHS{}(Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{},Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen0:SortTenvCell{},Var'Unds'Gen1:SortCtenvTCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortInClassCell{})),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen4:SortGeneratedCounterCell{},Var'Unds'Gen5:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(376,8,376,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c94e44ef15db9a56a43ed064f3c71d0698859ab2dc646b178663120b7ad5e147")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`.TaskCellSet`(.KList),`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`__(_)__KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Id_Params_Block`(T,F,Ps,S))~>_DotVar4),_Gen1,`<ctenvT>`(_Gen0),_Gen2,`<inClass>`(inj{Id,KItem}(C))))),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),`<baseClass>`(inj{Id,KItem}(C')),_Gen3,_Gen4)),_DotVar5)) #as _Gen10),_Gen5,_Gen6)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`mkDecls(_)_KOOL-TYPED-STATIC_Stmt_Params`(Ps),inj{Block,Stmt}(S)))),`<tenv>`(`.Map`(.KList)),`.CtenvTCell`(.KList),`<returnType>`(T),`<inClass>`(inj{Id,KItem}(C)))),`TaskCellSetItem`(`<task>`(`<k>`(`checkMethod(_,_,_)_KOOL-TYPED-STATIC_KItem_Id_Type_Id`(F,`_->__KOOL-TYPED-STATIC-SYNTAX_Type_Types_Type`(`getTypes(_)_KOOL-TYPED-STATIC_Types_Params`(Ps),T),C')~>inj{Stmt,KItem}(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(`_->__KOOL-TYPED-STATIC-SYNTAX_Type_Types_Type`(`getTypes(_)_KOOL-TYPED-STATIC_Types_Params`(Ps),T),`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(F),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))))~>_DotVar4),_Gen1,`<ctenvT>`(_Gen0),_Gen2,`<inClass>`(inj{Id,KItem}(C))))),_DotVar2)),_Gen10),_Gen5,_Gen6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(752821bd50da16580d26371aa8bbef185204c4226c472dea6912844541d9db8c), org.kframework.attributes.Location(Location(490,8,504,22)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule220LHS{}(SortId{},SortId{},SortId{},SortParams{},SortBlock{},SortType{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortMap{},SortTenvCell{},SortClassesCell{},SortReturnTypeCell{},SortBaseClassesCell{},SortCtenvCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule220LHS{}(VarC:SortId{},VarC'Apos':SortId{},VarF:SortId{},VarPs:SortParams{},VarS:SortBlock{},VarT:SortType{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Stop'TaskCellSet{}(),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsLParUndsRParUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Id'Unds'Params'Unds'Block{}(VarT:SortType{},VarF:SortId{},VarPs:SortParams{},VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Var'Unds'Gen1:SortTenvCell{},Lbl'-LT-'ctenvT'-GT-'{}(Var'Unds'Gen0:SortMap{}),Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}()))))),Var'Unds'DotVar2:SortTaskCellSet{})),\and{SortClassesCell{}}(Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC'Apos':SortId{}),dotk{}())),Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{})),Var'Unds'DotVar5:SortClassDataCellMap{})),Var'Unds'Gen10:SortClassesCell{})),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule220LHS{}(VarC:SortId{},VarC'Apos':SortId{},VarF:SortId{},VarPs:SortParams{},VarS:SortBlock{},VarT:SortType{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'DotVar5:SortClassDataCellMap{},Var'Unds'Gen0:SortMap{},Var'Unds'Gen1:SortTenvCell{},Var'Unds'Gen10:SortClassesCell{},Var'Unds'Gen2:SortReturnTypeCell{},Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(LblmkDecls'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Stmt'Unds'Params{}(VarPs:SortParams{}),inj{SortBlock{}, SortStmt{}}(VarS:SortBlock{}))),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(Lbl'Stop'Map{}()),Lbl'Stop'CtenvTCell{}(),Lbl'-LT-'returnType'-GT-'{}(VarT:SortType{}),Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}())))),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckMethod'LParUndsCommUndsCommUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Id'Unds'Type'Unds'Id{}(VarF:SortId{},Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(LblgetTypes'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Types'Unds'Params{}(VarPs:SortParams{}),VarT:SortType{}),VarC'Apos':SortId{}),kseq{}(inj{SortStmt{}, SortKItem{}}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(Lbl'Unds'-'-GT-UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type'Unds'Types'Unds'Type{}(LblgetTypes'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Types'Unds'Params{}(VarPs:SortParams{}),VarT:SortType{}),Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarF:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())))),Var'Unds'DotVar4:SortK{}))),Var'Unds'Gen1:SortTenvCell{},Lbl'-LT-'ctenvT'-GT-'{}(Var'Unds'Gen0:SortMap{}),Var'Unds'Gen2:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}()))))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'Gen10:SortClassesCell{}),Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(490,8,504,22)"), UNIQUE'Unds'ID{}("752821bd50da16580d26371aa8bbef185204c4226c472dea6912844541d9db8c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`.TaskCellSet`(.KList),`TaskCellSetItem`(`<task>`(`<k>`(inj{Exp,KItem}(`spawn__KOOL-TYPED-STATIC-SYNTAX_Exp_Block`(S))~>_DotVar4),`<tenv>`(Rho),_Gen0,_Gen1,`<inClass>`(C)))),_DotVar2)),_DotVar1),_Gen2,_Gen3)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(S)),`<tenv>`(Rho),`.CtenvTCell`(.KList),`.ReturnTypeCell`(.KList),`<inClass>`(C))),`TaskCellSetItem`(`<task>`(`<k>`(inj{Type,KItem}(`int_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList))~>_DotVar4),`<tenv>`(Rho),_Gen0,_Gen1,`<inClass>`(C)))),_DotVar2)),_DotVar1),_Gen2,_Gen3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(02a4b2bb7592951f3f602e9415f2a36310051af40d31d78bc97a59202709651c), org.kframework.attributes.Location(Location(550,8,557,22)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule221LHS{}(SortK{},SortMap{},SortBlock{},SortClassesCell{},SortTaskCellSet{},SortK{},SortCtenvTCell{},SortReturnTypeCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule221LHS{}(VarC:SortK{},VarRho:SortMap{},VarS:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Stop'TaskCellSet{}(),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortExp{}, SortKItem{}}(Lblspawn'UndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Block{}(VarS:SortBlock{})),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(VarC:SortK{})))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule221LHS{}(VarC:SortK{},VarRho:SortMap{},VarS:SortBlock{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar4:SortK{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(VarS:SortBlock{}),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Lbl'Stop'CtenvTCell{}(),Lbl'Stop'ReturnTypeCell{}(),Lbl'-LT-'inClass'-GT-'{}(VarC:SortK{}))),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortType{}, SortKItem{}}(Lblint'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),Var'Unds'DotVar4:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Lbl'-LT-'inClass'-GT-'{}(VarC:SortK{})))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(550,8,557,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("02a4b2bb7592951f3f602e9415f2a36310051af40d31d78bc97a59202709651c")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(`class_extends___KOOL-TYPED-STATIC-SYNTAX_Stmt_Id_Id_Block`(C,C',`{_}_KOOL-TYPED-STATIC-SYNTAX_Block_Stmt`(S)))~>_DotVar3),`.TenvCell`(.KList),`.CtenvTCell`(.KList),`.ReturnTypeCell`(.KList),`.InClassCell`(.KList))),`.TaskCellSet`(.KList)),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`.ClassDataCellMap`(.KList),_DotVar4))),_Gen0,_Gen1)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`stmt_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar3),`.TenvCell`(.KList),`.CtenvTCell`(.KList),`.ReturnTypeCell`(.KList),`.InClassCell`(.KList))),`TaskCellSetItem`(`<task>`(`<k>`(`checkType(_)_KOOL-TYPED-STATIC_KItem_Types`(`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(class(C'),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))~>inj{Stmt,KItem}(S)),`.TenvCell`(.KList),`<ctenvT>`(`.Map`(.KList)),`.ReturnTypeCell`(.KList),`<inClass>`(inj{Id,KItem}(C))))),_DotVar2)),`<classes>`(`_ClassDataCellMap_`(`ClassDataCellMapItem`(`<className>`(C),`<classData>`(`<className>`(C),`<baseClass>`(inj{Id,KItem}(C')),initBaseClassesCell(.KList),`.CtenvCell`(.KList))),_DotVar4))),_Gen0,_Gen1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be3624e69e12e9c18686da706cf74e0d682cbd4724a1b0a63f4f3b3570b2a063), org.kframework.attributes.Location(Location(579,8,589,22)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]), structural]
  alias rule222LHS{}(SortId{},SortId{},SortStmt{},SortTaskCellSet{},SortK{},SortClassDataCellMap{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule222LHS{}(VarC:SortId{},VarC'Apos':SortId{},VarS:SortStmt{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar3:SortK{},Var'Unds'DotVar4:SortClassDataCellMap{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblclass'Unds'extends'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Id'Unds'Id'Unds'Block{}(VarC:SortId{},VarC'Apos':SortId{},Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{}))),Var'Unds'DotVar3:SortK{})),Lbl'Stop'TenvCell{}(),Lbl'Stop'CtenvTCell{}(),Lbl'Stop'ReturnTypeCell{}(),Lbl'Stop'InClassCell{}())),Lbl'Stop'TaskCellSet{}()),Var'Unds'DotVar2:SortTaskCellSet{})),Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(Lbl'Stop'ClassDataCellMap{}(),Var'Unds'DotVar4:SortClassDataCellMap{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule222LHS{}(VarC:SortId{},VarC'Apos':SortId{},VarS:SortStmt{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar3:SortK{},Var'Unds'DotVar4:SortClassDataCellMap{},Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblstmt'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar3:SortK{})),Lbl'Stop'TenvCell{}(),Lbl'Stop'CtenvTCell{}(),Lbl'Stop'ReturnTypeCell{}(),Lbl'Stop'InClassCell{}())),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcheckType'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'KItem'Unds'Types{}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblclass{}(VarC'Apos':SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}())),kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),dotk{}()))),Lbl'Stop'TenvCell{}(),Lbl'-LT-'ctenvT'-GT-'{}(Lbl'Stop'Map{}()),Lbl'Stop'ReturnTypeCell{}(),Lbl'-LT-'inClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC:SortId{}),dotk{}()))))),Var'Unds'DotVar2:SortTaskCellSet{})),Lbl'-LT-'classes'-GT-'{}(Lbl'Unds'ClassDataCellMap'Unds'{}(LblClassDataCellMapItem{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'classData'-GT-'{}(Lbl'-LT-'className'-GT-'{}(VarC:SortId{}),Lbl'-LT-'baseClass'-GT-'{}(kseq{}(inj{SortId{}, SortKItem{}}(VarC'Apos':SortId{}),dotk{}())),LblinitBaseClassesCell{}(),Lbl'Stop'CtenvCell{}())),Var'Unds'DotVar4:SortClassDataCellMap{}))),Var'Unds'Gen0:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), structural{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(579,8,589,22)"), UNIQUE'Unds'ID{}("be3624e69e12e9c18686da706cf74e0d682cbd4724a1b0a63f4f3b3570b2a063")]

// rule `<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{Block,KItem}(`{_}_KOOL-TYPED-STATIC-SYNTAX_Block_Stmt`(S))~>_DotVar3),`<tenv>`(Rho),_Gen0,_Gen1,_Gen2)),`.TaskCellSet`(.KList)),_DotVar2)),_DotVar1),_Gen3,_Gen4)=>`<generatedTop>`(`<T>`(`<tasks>`(`_TaskCellSet_`(`_TaskCellSet_`(`TaskCellSetItem`(`<task>`(`<k>`(inj{BlockOrStmtType,KItem}(`block_KOOL-TYPED-STATIC_BlockOrStmtType`(.KList))~>_DotVar3),`<tenv>`(Rho),_Gen0,_Gen1,_Gen2)),`TaskCellSetItem`(`<task>`(`<k>`(inj{Stmt,KItem}(S)),`<tenv>`(Rho),_Gen0,_Gen1,_Gen2))),_DotVar2)),_DotVar1),_Gen3,_Gen4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cae253a28e935426a8384fa69f3ac1d0ff3058dc0c4f6dd0fef876b2985f7a6c), org.kframework.attributes.Location(Location(378,8,379,64)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule223LHS{}(SortMap{},SortStmt{},SortClassesCell{},SortTaskCellSet{},SortK{},SortCtenvTCell{},SortReturnTypeCell{},SortInClassCell{},SortGeneratedCounterCell{},SortOutputCell{}) : SortGeneratedTopCell{}
  where rule223LHS{}(VarRho:SortMap{},VarS:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar3:SortK{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlock{}, SortKItem{}}(Lbl'LBraUndsRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block'Unds'Stmt{}(VarS:SortStmt{})),Var'Unds'DotVar3:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),Lbl'Stop'TaskCellSet{}()),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    \and{SortGeneratedTopCell{}}(
      \not{SortGeneratedTopCell{}}(priorityLE30{}()),
      rule223LHS{}(VarRho:SortMap{},VarS:SortStmt{},Var'Unds'DotVar1:SortClassesCell{},Var'Unds'DotVar2:SortTaskCellSet{},Var'Unds'DotVar3:SortK{},Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{},Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'tasks'-GT-'{}(Lbl'Unds'TaskCellSet'Unds'{}(Lbl'Unds'TaskCellSet'Unds'{}(LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Lblblock'Unds'KOOL-TYPED-STATIC'Unds'BlockOrStmtType{}()),Var'Unds'DotVar3:SortK{})),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{})),LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(VarS:SortStmt{}),dotk{}())),Lbl'-LT-'tenv'-GT-'{}(VarRho:SortMap{}),Var'Unds'Gen0:SortCtenvTCell{},Var'Unds'Gen1:SortReturnTypeCell{},Var'Unds'Gen2:SortInClassCell{}))),Var'Unds'DotVar2:SortTaskCellSet{})),Var'Unds'DotVar1:SortClassesCell{}),Var'Unds'Gen3:SortGeneratedCounterCell{},Var'Unds'Gen4:SortOutputCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,8,379,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cae253a28e935426a8384fa69f3ac1d0ff3058dc0c4f6dd0fef876b2985f7a6c")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("false","Bool"))=>#token("\"false\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f), org.kframework.attributes.Location(Location(1585,8,1585,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("false"),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1585,8,1585,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cca4780e4e7660055f781b9643f3125234a0f4f08ba76cacf8e5a18fe7fc999f")]

// rule `Bool2String(_)_STRING-COMMON_String_Bool`(#token("true","Bool"))=>#token("\"true\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d), org.kframework.attributes.Location(Location(1584,8,1584,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      LblBool2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Bool{}(X0:SortBool{}),
     \and{SortString{}} (
       \dv{SortString{}}("true"),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1584,8,1584,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("365df37345a5a44ac061f8741369c7bd74a49f0f6e7b716be0374806dd1add3d")]

// rule `ClassDataCellMapKey`(`<classData>`(Key,_Gen0,_Gen1,_Gen2))=>Key requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(747f7a06bd4c14145121771d9da7921eab078d66bfe799912fa06ede192a84e3)]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortClassDataCell{}, R} (
            X0:SortClassDataCell{},
            Lbl'-LT-'classData'-GT-'{}(VarKey:SortClassNameCell{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortBaseClassesCell{},Var'Unds'Gen2:SortCtenvCell{})
          ),
          \top{R} ()
        )),
    \equals{SortClassNameCell{},R} (
      LblClassDataCellMapKey{}(X0:SortClassDataCell{}),
     \and{SortClassNameCell{}} (
       VarKey:SortClassNameCell{},
        \top{SortClassNameCell{}}())))
  [UNIQUE'Unds'ID{}("747f7a06bd4c14145121771d9da7921eab078d66bfe799912fa06ede192a84e3")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"false\"","String"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835), org.kframework.attributes.Location(Location(1591,8,1591,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1591,8,1591,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b73b5c8e0ae45020f2b9b8170d366691fee01a63763b79653a2075703ec4e835")]

// rule `String2Bool(_)_STRING-COMMON_Bool_String`(#token("\"true\"","String"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8), org.kframework.attributes.Location(Location(1590,8,1590,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            \dv{SortString{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblString2Bool'LParUndsRParUnds'STRING-COMMON'Unds'Bool'Unds'String{}(X0:SortString{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1590,8,1590,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("27a5d1d7872d61f82556a4e44bda13846dde7dc2d9c54304d7858de9a8b9d6b8")]

// rule `_<=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80), org.kframework.attributes.Location(Location(1684,8,1684,63)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-LT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1684,8,1684,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9e50fb4dcba1212ee863c170298cb8b555f39fb3b4bcb649f3d1d8e321accc80")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(960,8,960,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(960,8,960,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1250,8,1250,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1250,8,1250,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2220,8,2220,45)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2220,8,2220,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c")]

// rule `_=/=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7), org.kframework.attributes.Location(Location(1664,8,1664,65)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1664,8,1664,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("f390a9b650f3de0e3a93773a46e65aae3decdeb2a10906058f204f031681c9b7")]

// rule `_>=String__STRING-COMMON_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING-COMMON_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17), org.kframework.attributes.Location(Location(1686,8,1686,63)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-Eqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1686,8,1686,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("b376ffb0925555ed27696d73fc8fe43306e2005e4cf6ad819e860958992f9f17")]

// rule `_>String__STRING-COMMON_Bool_String_String`(S1,S2)=>`_<String__STRING-COMMON_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0), org.kframework.attributes.Location(Location(1685,8,1685,52)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds-GT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortBool{}} (
       Lbl'Unds-LT-'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1685,8,1685,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("8e5353c0a58491f8613ad7a35d0833206c342df0c91773e42485e52f4dad0cd0")]

// rule `__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(`_=__KOOL-TYPED-STATIC-SYNTAX_Exp_Exp_Exp`(inj{Id,Exp}(X) #as _Gen2,E) #as _Gen1,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList) #as _Gen3))=>`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(_Gen2,_Gen3)),`_;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Exp`(_Gen1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8bf5eeb8bf21603a477662d9c51dca2c8b936c9834665ab165f292be95b05857), anywhere, org.kframework.attributes.Location(Location(224,8,224,39)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortType{}, R} (
            X0:SortType{},
            VarT:SortType{}
          ),\and{R} (
          \in{SortExps{}, R} (
            X1:SortExps{},
            Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(\and{SortExp{}}(Lbl'UndsEqlsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exp'Unds'Exp'Unds'Exp{}(\and{SortExp{}}(inj{SortId{}, SortExp{}}(VarX:SortId{}),Var'Unds'Gen2:SortExp{}),VarE:SortExp{}),Var'Unds'Gen1:SortExp{}),\and{SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}(),Var'Unds'Gen3:SortExps{}))
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{},X1:SortExps{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(Var'Unds'Gen2:SortExp{},Var'Unds'Gen3:SortExps{})),Lbl'UndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Exp{}(Var'Unds'Gen1:SortExp{})),
        \top{SortStmt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(224,8,224,39)"), UNIQUE'Unds'ID{}("8bf5eeb8bf21603a477662d9c51dca2c8b936c9834665ab165f292be95b05857")]

// rule `__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(E1,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(E2,Es) #as _Gen1))=>`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(E1,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps"}_Exps`(.KList))),`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,_Gen1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(01bafcacddcf404530bd4671e4593848facbf14f5f5d2e047b371f290008ed30), anywhere, org.kframework.attributes.Location(Location(223,8,223,58)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortType{}, R} (
            X0:SortType{},
            VarT:SortType{}
          ),\and{R} (
          \in{SortExps{}, R} (
            X1:SortExps{},
            Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},\and{SortExps{}}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE2:SortExp{},VarEs:SortExps{}),Var'Unds'Gen1:SortExps{}))
          ),
          \top{R} ()
        ))),
    \equals{SortStmt{},R} (
      Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(X0:SortType{},X1:SortExps{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(VarE1:SortExp{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps'QuotRBraUnds'Exps{}())),Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Var'Unds'Gen1:SortExps{})),
        \top{SortStmt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(223,8,223,58)"), UNIQUE'Unds'ID{}("01bafcacddcf404530bd4671e4593848facbf14f5f5d2e047b371f290008ed30")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(933,8,933,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(933,8,933,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(932,8,932,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(932,8,932,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98")]

// rule `_andBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(934,8,934,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(934,8,934,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca")]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(931,8,931,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(931,8,931,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(938,8,938,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(938,8,938,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(937,8,937,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,8,937,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c")]

// rule `_andThenBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(939,8,939,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(939,8,939,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2")]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(936,8,936,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(936,8,936,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1239,8,1240,23)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1239,8,1240,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1251,8,1251,58)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1251,8,1251,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(958,8,958,45)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(958,8,958,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96")]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(957,8,957,39)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(957,8,957,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712")]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(956,8,956,40)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,8,956,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(955,8,955,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(955,8,955,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1242,5,1245,23)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1242,5,1245,23)"), simplification{}(), UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6")]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(948,8,948,32)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(948,8,948,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26")]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(946,8,946,34)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(946,8,946,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3")]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(947,8,947,32)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(947,8,947,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(945,8,945,34)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,8,945,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(953,8,953,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,8,953,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480")]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(951,8,951,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(951,8,951,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(952,8,952,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(952,8,952,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(950,8,950,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(950,8,950,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(943,8,943,38)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(943,8,943,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(942,8,942,38)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(942,8,942,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(941,8,941,38)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(941,8,941,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), concrete, org.kframework.attributes.Location(Location(559,8,559,45)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(559,8,559,45)"), UNIQUE'Unds'ID{}("e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1235,8,1235,85)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1235,8,1235,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToCount)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e), org.kframework.attributes.Location(Location(1695,8,1696,60)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1695,8,1696,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("628cff029a6d79e4c99999c0309f91ab8cb12f0ba549bb3faa850f96304c970e")]

// rule `countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84), org.kframework.attributes.Location(Location(1693,8,1694,59)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToCount:SortString{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1693,8,1694,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("1c726cd81629c2e5f411539a7f9b4d297e8600e5d71a5d235d287e3001f3ec84")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)))) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295), org.kframework.attributes.Location(Location(1688,8,1688,431)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})))),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1688,8,1688,431)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("9a3b7d1924363894c859ceb6bcec34fb944f01a5e0c90679d41b8430990b7295")]

// rule `findChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117), org.kframework.attributes.Location(Location(1689,8,1689,32)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1689,8,1689,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5a6cf981f0ec2494854cd3e517b0cf645a1c9762c92a14849adfca9a6a553117")]

// rule `freshId(_)_ID-COMMON_Id_Int`(I)=>`String2Id(_)_ID-COMMON_Id_String`(`_+String__STRING-COMMON_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING-COMMON_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de), org.kframework.attributes.Location(Location(2146,8,2146,62)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      LblfreshId'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'Int{}(X0:SortInt{}),
     \and{SortId{}} (
       LblString2Id'LParUndsRParUnds'ID-COMMON'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING-COMMON'Unds'String'Unds'Int{}(VarI:SortInt{}))),
        \top{SortId{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2146,8,2146,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3965c8e65257ebae926d601fa8ac672d34e4c211d73ba594c571c6bc5960f3de")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1254,8,1254,28)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1254,8,1254,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b")]

// rule getGeneratedCounterCell(`<generatedTop>`(_Gen0,Cell,_Gen1))=>Cell requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'Gen0:SortTCell{},VarCell:SortGeneratedCounterCell{},Var'Unds'Gen1:SortOutputCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  []

// rule `getTypes(_)_KOOL-TYPED-STATIC_Types_Params`(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Params_Param_Params"}_Params`(.KList))=>`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(`void_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c80f8e239c5349395479ac96ca6feac63086d0b729cfe1d1b9a57a61c1877e2a), org.kframework.attributes.Location(Location(420,8,420,41)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}()
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}(),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),
        \top{SortTypes{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(420,8,420,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c80f8e239c5349395479ac96ca6feac63086d0b729cfe1d1b9a57a61c1877e2a")]

// rule `getTypes(_)_KOOL-TYPED-STATIC_Types_Params`(`_,__KOOL-TYPED-STATIC-SYNTAX_Params_Param_Params`(`___KOOL-TYPED-STATIC-SYNTAX_Param_Type_Id`(T,_Gen0),`_,__KOOL-TYPED-STATIC-SYNTAX_Params_Param_Params`(P,Ps) #as _Gen3))=>`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`getTypes(_)_KOOL-TYPED-STATIC_Types_Params`(_Gen3)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9d6c6703ae19112a288b69f1981e88ce410e0f9599e7cb8bda3d5e2b1e626c2), org.kframework.attributes.Location(Location(419,8,419,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},Var'Unds'Gen0:SortId{}),\and{SortParams{}}(Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(VarP:SortParam{},VarPs:SortParams{}),Var'Unds'Gen3:SortParams{}))
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},LblgetTypes'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Types'Unds'Params{}(Var'Unds'Gen3:SortParams{})),
        \top{SortTypes{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(419,8,419,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("a9d6c6703ae19112a288b69f1981e88ce410e0f9599e7cb8bda3d5e2b1e626c2")]

// rule `getTypes(_)_KOOL-TYPED-STATIC_Types_Params`(`_,__KOOL-TYPED-STATIC-SYNTAX_Params_Param_Params`(`___KOOL-TYPED-STATIC-SYNTAX_Param_Type_Id`(T,_Gen0),`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Params_Param_Params"}_Params`(.KList)))=>`_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types`(T,`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a72850fc11992a56d60c935c4a8afcf18e4f08b3b7699206d7a2e5ffddb22ac), org.kframework.attributes.Location(Location(418,8,418,42)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},Var'Unds'Gen0:SortId{}),Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      LblgetTypes'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Types'Unds'Params{}(X0:SortParams{}),
     \and{SortTypes{}} (
       Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types{}(VarT:SortType{},Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()),
        \top{SortTypes{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(418,8,418,42)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3a72850fc11992a56d60c935c4a8afcf18e4f08b3b7699206d7a2e5ffddb22ac")]

// rule initBaseClassCell(.KList)=>`<baseClass>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5a77ac924565d68a82dce413af4bc57b574c9cb944aac0b33e3afd032fb148f2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortBaseClassCell{},R} (
      LblinitBaseClassCell{}(),
     \and{SortBaseClassCell{}} (
       Lbl'-LT-'baseClass'-GT-'{}(dotk{}()),
        \top{SortBaseClassCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("5a77ac924565d68a82dce413af4bc57b574c9cb944aac0b33e3afd032fb148f2")]

// rule initBaseClassesCell(.KList)=>`<baseClasses>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ecb3e504bd6a9c977814fcaa529300c64431f7fb533ee3e9d3936537dfa6c869), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortBaseClassesCell{},R} (
      LblinitBaseClassesCell{}(),
     \and{SortBaseClassesCell{}} (
       Lbl'-LT-'baseClasses'-GT-'{}(Lbl'Stop'Set{}()),
        \top{SortBaseClassesCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("ecb3e504bd6a9c977814fcaa529300c64431f7fb533ee3e9d3936537dfa6c869")]

// rule initClassDataCell(.KList)=>`ClassDataCellMapItem`(initClassNameCell(.KList),`<classData>`(initClassNameCell(.KList),initBaseClassCell(.KList),initBaseClassesCell(.KList),`.CtenvCell`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(27f5ee73ca029d997fe3284a131699714e6586160df624c245342fb06398012e), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortClassDataCellMap{},R} (
      LblinitClassDataCell{}(),
     \and{SortClassDataCellMap{}} (
       LblClassDataCellMapItem{}(LblinitClassNameCell{}(),Lbl'-LT-'classData'-GT-'{}(LblinitClassNameCell{}(),LblinitBaseClassCell{}(),LblinitBaseClassesCell{}(),Lbl'Stop'CtenvCell{}())),
        \top{SortClassDataCellMap{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("27f5ee73ca029d997fe3284a131699714e6586160df624c245342fb06398012e")]

// rule initClassNameCell(.KList)=>`<className>`(#token("Object","Id")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22ab8017998d5c36367e1c708bb80190b474af5b588df44fe69e2f9d110fca3b), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortClassNameCell{},R} (
      LblinitClassNameCell{}(),
     \and{SortClassNameCell{}} (
       Lbl'-LT-'className'-GT-'{}(\dv{SortId{}}("Object")),
        \top{SortClassNameCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("22ab8017998d5c36367e1c708bb80190b474af5b588df44fe69e2f9d110fca3b")]

// rule initClassesCell(.KList)=>`<classes>`(`.ClassDataCellMap`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(58024c52e5dcf2e689098177b31234cad3ad529d21fe21007a1bee0fb69a5be2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortClassesCell{},R} (
      LblinitClassesCell{}(),
     \and{SortClassesCell{}} (
       Lbl'-LT-'classes'-GT-'{}(Lbl'Stop'ClassDataCellMap{}()),
        \top{SortClassesCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("58024c52e5dcf2e689098177b31234cad3ad529d21fe21007a1bee0fb69a5be2")]

// rule initCtenvCell(.KList)=>`<ctenv>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8a4b0a49a194beb9cabb626b055d4de284ad7f7ae29d1b8c7817ef858b748c9b), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortCtenvCell{},R} (
      LblinitCtenvCell{}(),
     \and{SortCtenvCell{}} (
       Lbl'-LT-'ctenv'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortCtenvCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("8a4b0a49a194beb9cabb626b055d4de284ad7f7ae29d1b8c7817ef858b748c9b")]

// rule initCtenvTCell(.KList)=>`<ctenvT>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55973687315fb1b62386459bcea44ed93be5e6530fa5a886dbec115fff52c58f), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortCtenvTCell{},R} (
      LblinitCtenvTCell{}(),
     \and{SortCtenvTCell{}} (
       Lbl'-LT-'ctenvT'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortCtenvTCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("55973687315fb1b62386459bcea44ed93be5e6530fa5a886dbec115fff52c58f")]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList),initOutputCell(Init)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b269f335e7525347232336956b71ded66f3498e875099d402daa36eaaeb4881d), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}(),LblinitOutputCell{}(VarInit:SortMap{})),
        \top{SortGeneratedTopCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("b269f335e7525347232336956b71ded66f3498e875099d402daa36eaaeb4881d")]

// rule initInClassCell(.KList)=>`<inClass>`(.K) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a7b8fb4d3d4d2be3481a070e5558cd4f896794d4b97c0da526af4d83ac61d766), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortInClassCell{},R} (
      LblinitInClassCell{}(),
     \and{SortInClassCell{}} (
       Lbl'-LT-'inClass'-GT-'{}(dotk{}()),
        \top{SortInClassCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("a7b8fb4d3d4d2be3481a070e5558cd4f896794d4b97c0da526af4d83ac61d766")]

// rule initKCell(Init)=>`<k>`(inj{Stmt,KItem}(`project:Stmt`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(22d54eca8d9ac85f814b9c78605ed3331a8a4d463df4bf0fa35d2c76bafb8855), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortStmt{}, SortKItem{}}(Lblproject'Coln'Stmt{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}())),
        \top{SortKCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("22d54eca8d9ac85f814b9c78605ed3331a8a4d463df4bf0fa35d2c76bafb8855")]

// rule initOutputCell(Init)=>`<output>`(`_List_`(`_List_`(`ListItem`(inj{Stream,KItem}(`#ostream(_)_K-IO_Stream_Int`(`#stdout_K-IO_Int`(.KList)))),`ListItem`(inj{String,KItem}(`project:String`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$IO","KConfigVar"))))))),`ListItem`(inj{Stream,KItem}(`#buffer(_)_K-IO_Stream_K`(inj{String,KItem}(#token("\"\"","String"))))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fe4bbac01b7ae18be478d157df9368bcc1dd048a5bfb0e334cd02c0fc7d3c6a2), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortOutputCell{},R} (
      LblinitOutputCell{}(X0:SortMap{}),
     \and{SortOutputCell{}} (
       Lbl'-LT-'output'-GT-'{}(Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'ostream'LParUndsRParUnds'K-IO'Unds'Stream'Unds'Int{}(Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}()))),LblListItem{}(inj{SortString{}, SortKItem{}}(Lblproject'Coln'String{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$IO"))),dotk{}()))))),LblListItem{}(inj{SortStream{}, SortKItem{}}(Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}())))))),
        \top{SortOutputCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("fe4bbac01b7ae18be478d157df9368bcc1dd048a5bfb0e334cd02c0fc7d3c6a2")]

// rule initReturnTypeCell(.KList)=>`<returnType>`(`void_KOOL-TYPED-STATIC-SYNTAX_Type`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9559b0e50efc5175bb3671d076ea98442dec1d7a79f9341fff1d6c3ea5bdee7), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortReturnTypeCell{},R} (
      LblinitReturnTypeCell{}(),
     \and{SortReturnTypeCell{}} (
       Lbl'-LT-'returnType'-GT-'{}(Lblvoid'Unds'KOOL-TYPED-STATIC-SYNTAX'Unds'Type{}()),
        \top{SortReturnTypeCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("f9559b0e50efc5175bb3671d076ea98442dec1d7a79f9341fff1d6c3ea5bdee7")]

// rule initTCell(Init)=>`<T>`(initTasksCell(Init),initClassesCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(793212ee3647cf67b6ccdfaa6cf3808821dfa3793a34a0fdbebeb6b3d632c739), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      LblinitTCell{}(X0:SortMap{}),
     \and{SortTCell{}} (
       Lbl'-LT-'T'-GT-'{}(LblinitTasksCell{}(VarInit:SortMap{}),LblinitClassesCell{}()),
        \top{SortTCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("793212ee3647cf67b6ccdfaa6cf3808821dfa3793a34a0fdbebeb6b3d632c739")]

// rule initTaskCell(Init)=>`TaskCellSetItem`(`<task>`(initKCell(Init),`.TenvCell`(.KList),`.CtenvTCell`(.KList),`.ReturnTypeCell`(.KList),`.InClassCell`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6e2f66acecbd0cb128f1e43757b9df44ffb0a7a8a3709ef326670db7d08a0116), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTaskCellSet{},R} (
      LblinitTaskCell{}(X0:SortMap{}),
     \and{SortTaskCellSet{}} (
       LblTaskCellSetItem{}(Lbl'-LT-'task'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),Lbl'Stop'TenvCell{}(),Lbl'Stop'CtenvTCell{}(),Lbl'Stop'ReturnTypeCell{}(),Lbl'Stop'InClassCell{}())),
        \top{SortTaskCellSet{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("6e2f66acecbd0cb128f1e43757b9df44ffb0a7a8a3709ef326670db7d08a0116")]

// rule initTasksCell(Init)=>`<tasks>`(initTaskCell(Init)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78dcfc88c47759829f2b516cb758148dd9bfc45479ed04984f2d9dd65899c39c), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortTasksCell{},R} (
      LblinitTasksCell{}(X0:SortMap{}),
     \and{SortTasksCell{}} (
       Lbl'-LT-'tasks'-GT-'{}(LblinitTaskCell{}(VarInit:SortMap{})),
        \top{SortTasksCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("78dcfc88c47759829f2b516cb758148dd9bfc45479ed04984f2d9dd65899c39c")]

// rule initTenvCell(.KList)=>`<tenv>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cd6b22b3d6bb426f7c29741db3d2806f9fb77c25b8dc5b9857b5549b5145b392), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortTenvCell{},R} (
      LblinitTenvCell{}(),
     \and{SortTenvCell{}} (
       Lbl'-LT-'tenv'-GT-'{}(Lbl'Stop'Map{}()),
        \top{SortTenvCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("cd6b22b3d6bb426f7c29741db3d2806f9fb77c25b8dc5b9857b5549b5145b392")]

// rule isArrayReference(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortArrayReference{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortArrayReference{}, SortKItem{}}(Var'Unds'Gen1:SortArrayReference{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisArrayReference{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isArrayReference(inj{ArrayReference,KItem}(ArrayReference))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortArrayReference{}, SortKItem{}}(VarArrayReference:SortArrayReference{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisArrayReference{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBaseClassCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBaseClassCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBaseClassCell{}, SortKItem{}}(Var'Unds'Gen1:SortBaseClassCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBaseClassCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBaseClassCell(inj{BaseClassCell,KItem}(BaseClassCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassCell{}, SortKItem{}}(VarBaseClassCell:SortBaseClassCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBaseClassCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBaseClassCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBaseClassCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBaseClassCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortBaseClassCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBaseClassCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBaseClassCellOpt(inj{BaseClassCellOpt,KItem}(BaseClassCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassCellOpt{}, SortKItem{}}(VarBaseClassCellOpt:SortBaseClassCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBaseClassCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBaseClassesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBaseClassesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBaseClassesCell{}, SortKItem{}}(Var'Unds'Gen1:SortBaseClassesCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBaseClassesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBaseClassesCell(inj{BaseClassesCell,KItem}(BaseClassesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassesCell{}, SortKItem{}}(VarBaseClassesCell:SortBaseClassesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBaseClassesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBaseClassesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBaseClassesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBaseClassesCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortBaseClassesCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBaseClassesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBaseClassesCellOpt(inj{BaseClassesCellOpt,KItem}(BaseClassesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassesCellOpt{}, SortKItem{}}(VarBaseClassesCellOpt:SortBaseClassesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBaseClassesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlock{}, SortKItem{}}(Var'Unds'Gen0:SortBlock{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBlock(inj{Block,KItem}(Block))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarBlock:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBlock{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBlockOrStmtType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortBlockOrStmtType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(Var'Unds'Gen1:SortBlockOrStmtType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBlockOrStmtType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBlockOrStmtType(inj{BlockOrStmtType,KItem}(BlockOrStmtType))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(VarBlockOrStmtType:SortBlockOrStmtType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBlockOrStmtType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassDataCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortClassDataCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassDataCell{}, SortKItem{}}(Var'Unds'Gen0:SortClassDataCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassDataCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassDataCell(inj{ClassDataCell,KItem}(ClassDataCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCell{}, SortKItem{}}(VarClassDataCell:SortClassDataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassDataCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassDataCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassDataCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassDataCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortClassDataCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassDataCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassDataCellFragment(inj{ClassDataCellFragment,KItem}(ClassDataCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCellFragment{}, SortKItem{}}(VarClassDataCellFragment:SortClassDataCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassDataCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassDataCellMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassDataCellMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassDataCellMap{}, SortKItem{}}(Var'Unds'Gen1:SortClassDataCellMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassDataCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassDataCellMap(inj{ClassDataCellMap,KItem}(ClassDataCellMap))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCellMap{}, SortKItem{}}(VarClassDataCellMap:SortClassDataCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassDataCellMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassNameCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassNameCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassNameCell{}, SortKItem{}}(Var'Unds'Gen1:SortClassNameCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassNameCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassNameCell(inj{ClassNameCell,KItem}(ClassNameCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassNameCell{}, SortKItem{}}(VarClassNameCell:SortClassNameCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassNameCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassNameCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassNameCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassNameCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortClassNameCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassNameCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassNameCellOpt(inj{ClassNameCellOpt,KItem}(ClassNameCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassNameCellOpt{}, SortKItem{}}(VarClassNameCellOpt:SortClassNameCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassNameCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassesCell{}, SortKItem{}}(Var'Unds'Gen1:SortClassesCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassesCell(inj{ClassesCell,KItem}(ClassesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCell{}, SortKItem{}}(VarClassesCell:SortClassesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassesCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassesCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassesCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassesCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortClassesCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassesCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassesCellFragment(inj{ClassesCellFragment,KItem}(ClassesCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCellFragment{}, SortKItem{}}(VarClassesCellFragment:SortClassesCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassesCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isClassesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortClassesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortClassesCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortClassesCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisClassesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isClassesCellOpt(inj{ClassesCellOpt,KItem}(ClassesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCellOpt{}, SortKItem{}}(VarClassesCellOpt:SortClassesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisClassesCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCtenvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortCtenvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCtenvCell{}, SortKItem{}}(Var'Unds'Gen1:SortCtenvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCtenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCtenvCell(inj{CtenvCell,KItem}(CtenvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCtenvCell{}, SortKItem{}}(VarCtenvCell:SortCtenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCtenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCtenvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCtenvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCtenvCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortCtenvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCtenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCtenvCellOpt(inj{CtenvCellOpt,KItem}(CtenvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCtenvCellOpt{}, SortKItem{}}(VarCtenvCellOpt:SortCtenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCtenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCtenvTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortCtenvTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCtenvTCell{}, SortKItem{}}(Var'Unds'Gen1:SortCtenvTCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCtenvTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCtenvTCell(inj{CtenvTCell,KItem}(CtenvTCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCtenvTCell{}, SortKItem{}}(VarCtenvTCell:SortCtenvTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCtenvTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isCtenvTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortCtenvTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortCtenvTCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortCtenvTCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisCtenvTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isCtenvTCellOpt(inj{CtenvTCellOpt,KItem}(CtenvTCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCtenvTCellOpt{}, SortKItem{}}(VarCtenvTCellOpt:SortCtenvTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisCtenvTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExp{}, SortKItem{}}(Var'Unds'Gen0:SortExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isExp(inj{Exp,KItem}(Exp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarExp:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isExps(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortExps{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortExps{}, SortKItem{}}(Var'Unds'Gen1:SortExps{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isExps(inj{Exps,KItem}(Exps))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarExps:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisExps{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isFieldReference(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFieldReference{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFieldReference{}, SortKItem{}}(Var'Unds'Gen1:SortFieldReference{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFieldReference{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isFieldReference(inj{FieldReference,KItem}(FieldReference))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFieldReference{}, SortKItem{}}(VarFieldReference:SortFieldReference{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFieldReference{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'Gen1:SortFloat{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisFloat{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIOError(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOError{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOError{}, SortKItem{}}(Var'Unds'Gen1:SortIOError{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIOError(inj{IOError,KItem}(IOError))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarIOError:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOError{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIOFile(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOFile{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOFile{}, SortKItem{}}(Var'Unds'Gen0:SortIOFile{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIOFile(inj{IOFile,KItem}(IOFile))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarIOFile:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOFile{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIOInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOInt{}, SortKItem{}}(Var'Unds'Gen0:SortIOInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIOInt(inj{IOInt,KItem}(IOInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarIOInt:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isIOString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortIOString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortIOString{}, SortKItem{}}(Var'Unds'Gen1:SortIOString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isIOString(inj{IOString,KItem}(IOString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarIOString:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisIOString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'Gen0:SortId{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisId{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isInClassCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInClassCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInClassCell{}, SortKItem{}}(Var'Unds'Gen0:SortInClassCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInClassCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isInClassCell(inj{InClassCell,KItem}(InClassCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInClassCell{}, SortKItem{}}(VarInClassCell:SortInClassCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInClassCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isInClassCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortInClassCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInClassCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortInClassCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInClassCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isInClassCellOpt(inj{InClassCellOpt,KItem}(InClassCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInClassCellOpt{}, SortKItem{}}(VarInClassCellOpt:SortInClassCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInClassCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen1:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen1:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen1:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen1:SortKResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isLValue(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortLValue{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortLValue{}, SortKItem{}}(Var'Unds'Gen0:SortLValue{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisLValue{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isLValue(inj{LValue,KItem}(LValue))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLValue{}, SortKItem{}}(VarLValue:SortLValue{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisLValue{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen0:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isOutputCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortOutputCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOutputCell{}, SortKItem{}}(Var'Unds'Gen0:SortOutputCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOutputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isOutputCell(inj{OutputCell,KItem}(OutputCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCell{}, SortKItem{}}(VarOutputCell:SortOutputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOutputCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isOutputCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortOutputCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortOutputCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisOutputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isOutputCellOpt(inj{OutputCellOpt,KItem}(OutputCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(VarOutputCellOpt:SortOutputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisOutputCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isParam(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortParam{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortParam{}, SortKItem{}}(Var'Unds'Gen1:SortParam{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisParam{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isParam(inj{Param,KItem}(Param))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParam{}, SortKItem{}}(VarParam:SortParam{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisParam{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isParams(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortParams{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortParams{}, SortKItem{}}(Var'Unds'Gen0:SortParams{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisParams{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isParams(inj{Params,KItem}(Params))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParams{}, SortKItem{}}(VarParams:SortParams{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisParams{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isReturnTypeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortReturnTypeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(Var'Unds'Gen1:SortReturnTypeCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisReturnTypeCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isReturnTypeCell(inj{ReturnTypeCell,KItem}(ReturnTypeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(VarReturnTypeCell:SortReturnTypeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisReturnTypeCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isReturnTypeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortReturnTypeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortReturnTypeCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isReturnTypeCellOpt(inj{ReturnTypeCellOpt,KItem}(ReturnTypeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(VarReturnTypeCellOpt:SortReturnTypeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen0:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStmt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortStmt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStmt{}, SortKItem{}}(Var'Unds'Gen0:SortStmt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStmt(inj{Stmt,KItem}(Stmt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarStmt:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStmt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isStream(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortStream{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortStream{}, SortKItem{}}(Var'Unds'Gen1:SortStream{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isStream(inj{Stream,KItem}(Stream))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarStream:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisStream{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'Gen1:SortString{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisString{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCell{}, SortKItem{}}(Var'Unds'Gen1:SortTCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortTCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTaskCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTaskCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTaskCell{}, SortKItem{}}(Var'Unds'Gen1:SortTaskCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTaskCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTaskCell(inj{TaskCell,KItem}(TaskCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCell{}, SortKItem{}}(VarTaskCell:SortTaskCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTaskCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTaskCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTaskCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTaskCellFragment{}, SortKItem{}}(Var'Unds'Gen1:SortTaskCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTaskCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTaskCellFragment(inj{TaskCellFragment,KItem}(TaskCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCellFragment{}, SortKItem{}}(VarTaskCellFragment:SortTaskCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTaskCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTaskCellSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTaskCellSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTaskCellSet{}, SortKItem{}}(Var'Unds'Gen0:SortTaskCellSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTaskCellSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTaskCellSet(inj{TaskCellSet,KItem}(TaskCellSet))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCellSet{}, SortKItem{}}(VarTaskCellSet:SortTaskCellSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTaskCellSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTasksCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTasksCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTasksCell{}, SortKItem{}}(Var'Unds'Gen0:SortTasksCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTasksCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTasksCell(inj{TasksCell,KItem}(TasksCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCell{}, SortKItem{}}(VarTasksCell:SortTasksCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTasksCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTasksCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTasksCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTasksCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortTasksCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTasksCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTasksCellFragment(inj{TasksCellFragment,KItem}(TasksCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCellFragment{}, SortKItem{}}(VarTasksCellFragment:SortTasksCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTasksCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTasksCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTasksCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTasksCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortTasksCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTasksCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTasksCellOpt(inj{TasksCellOpt,KItem}(TasksCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCellOpt{}, SortKItem{}}(VarTasksCellOpt:SortTasksCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTasksCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTenvCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTenvCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTenvCell{}, SortKItem{}}(Var'Unds'Gen0:SortTenvCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTenvCell(inj{TenvCell,KItem}(TenvCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTenvCell{}, SortKItem{}}(VarTenvCell:SortTenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTenvCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTenvCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortTenvCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTenvCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortTenvCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTenvCellOpt(inj{TenvCellOpt,KItem}(TenvCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTenvCellOpt{}, SortKItem{}}(VarTenvCellOpt:SortTenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTenvCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isType(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortType{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortType{}, SortKItem{}}(Var'Unds'Gen1:SortType{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isType(inj{Type,KItem}(Type))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarType:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisType{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isTypes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortTypes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortTypes{}, SortKItem{}}(Var'Unds'Gen0:SortTypes{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisTypes{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isTypes(inj{Types,KItem}(Types))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypes{}, SortKItem{}}(VarTypes:SortTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisTypes{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1247,8,1247,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1247,8,1247,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1248,8,1248,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1248,8,1248,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3")]

// rule `mkDecls(_)_KOOL-TYPED-STATIC_Stmt_Params`(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Params_Param_Params"}_Params`(.KList))=>inj{Block,Stmt}(`{}_KOOL-TYPED-STATIC-SYNTAX_Block`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c58e06fc90e4ea402b51293343d04ebaed5c9829d4a692fb4c2f1d81e1c00d8a), org.kframework.attributes.Location(Location(399,8,399,30)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params'QuotRBraUnds'Params{}()
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      LblmkDecls'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Stmt'Unds'Params{}(X0:SortParams{}),
     \and{SortStmt{}} (
       inj{SortBlock{}, SortStmt{}}(Lbl'LBraRBraUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Block{}()),
        \top{SortStmt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(399,8,399,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c58e06fc90e4ea402b51293343d04ebaed5c9829d4a692fb4c2f1d81e1c00d8a")]

// rule `mkDecls(_)_KOOL-TYPED-STATIC_Stmt_Params`(`_,__KOOL-TYPED-STATIC-SYNTAX_Params_Param_Params`(`___KOOL-TYPED-STATIC-SYNTAX_Param_Type_Id`(T,X),Ps))=>`___KOOL-TYPED-STATIC-SYNTAX_Stmt_Stmt_Stmt`(`__;_KOOL-TYPED-STATIC-SYNTAX_Stmt_Type_Exps`(T,`_,__KOOL-TYPED-STATIC-SYNTAX_Exps_Exp_Exps`(inj{Id,Exp}(X),inj{Types,Exps}(`.List{"_,__KOOL-TYPED-STATIC-SYNTAX_Types_Type_Types"}_Types`(.KList)))),`mkDecls(_)_KOOL-TYPED-STATIC_Stmt_Params`(Ps)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fc20e40b1feec5f52c8e1f7cb49fbdd6eae67308b3aa2294e6dfa1f081b35b8c), org.kframework.attributes.Location(Location(398,8,398,59)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortParams{}, R} (
            X0:SortParams{},
            Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Params'Unds'Param'Unds'Params{}(Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Param'Unds'Type'Unds'Id{}(VarT:SortType{},VarX:SortId{}),VarPs:SortParams{})
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      LblmkDecls'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Stmt'Unds'Params{}(X0:SortParams{}),
     \and{SortStmt{}} (
       Lbl'UndsUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Stmt'Unds'Stmt{}(Lbl'UndsUndsSClnUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Stmt'Unds'Type'Unds'Exps{}(VarT:SortType{},Lbl'UndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Exps'Unds'Exp'Unds'Exps{}(inj{SortId{}, SortExp{}}(VarX:SortId{}),inj{SortTypes{}, SortExps{}}(Lbl'Stop'List'LBraQuotUndsCommUndsUnds'KOOL-TYPED-STATIC-SYNTAX'Unds'Types'Unds'Type'Unds'Types'QuotRBraUnds'Types{}()))),LblmkDecls'LParUndsRParUnds'KOOL-TYPED-STATIC'Unds'Stmt'Unds'Params{}(VarPs:SortParams{})),
        \top{SortStmt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(398,8,398,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fc20e40b1feec5f52c8e1f7cb49fbdd6eae67308b3aa2294e6dfa1f081b35b8c")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(929,8,929,29)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,8,929,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(928,8,928,29)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(928,8,928,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c")]

// rule `project:#tempFile:fd`(#tempFile(K0,K1))=>K1 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'tempFile'Coln'fd{}(X0:SortIOFile{}),
     \and{SortInt{}} (
       VarK1:SortInt{},
        \top{SortInt{}}())))
  []

// rule `project:#tempFile:path`(#tempFile(K0,K1))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOFile{}, R} (
            X0:SortIOFile{},
            Lbl'Hash'tempFile{}(VarK0:SortString{},VarK1:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'ColnHash'tempFile'Coln'path{}(X0:SortIOFile{}),
     \and{SortString{}} (
       VarK0:SortString{},
        \top{SortString{}}())))
  []

// rule `project:#unknownIOError:errno`(#unknownIOError(K0))=>K0 requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortIOError{}, R} (
            X0:SortIOError{},
            Lbl'Hash'unknownIOError{}(VarK0:SortInt{})
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'ColnHash'unknownIOError'Coln'errno{}(X0:SortIOError{}),
     \and{SortInt{}} (
       VarK0:SortInt{},
        \top{SortInt{}}())))
  []

// rule `project:ArrayReference`(inj{ArrayReference,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortArrayReference{}, SortKItem{}}(VarK:SortArrayReference{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortArrayReference{},R} (
      Lblproject'Coln'ArrayReference{}(X0:SortK{}),
     \and{SortArrayReference{}} (
       VarK:SortArrayReference{},
        \top{SortArrayReference{}}())))
  [projection{}()]

// rule `project:BaseClassCell`(inj{BaseClassCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassCell{}, SortKItem{}}(VarK:SortBaseClassCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBaseClassCell{},R} (
      Lblproject'Coln'BaseClassCell{}(X0:SortK{}),
     \and{SortBaseClassCell{}} (
       VarK:SortBaseClassCell{},
        \top{SortBaseClassCell{}}())))
  [projection{}()]

// rule `project:BaseClassCellOpt`(inj{BaseClassCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassCellOpt{}, SortKItem{}}(VarK:SortBaseClassCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBaseClassCellOpt{},R} (
      Lblproject'Coln'BaseClassCellOpt{}(X0:SortK{}),
     \and{SortBaseClassCellOpt{}} (
       VarK:SortBaseClassCellOpt{},
        \top{SortBaseClassCellOpt{}}())))
  [projection{}()]

// rule `project:BaseClassesCell`(inj{BaseClassesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassesCell{}, SortKItem{}}(VarK:SortBaseClassesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBaseClassesCell{},R} (
      Lblproject'Coln'BaseClassesCell{}(X0:SortK{}),
     \and{SortBaseClassesCell{}} (
       VarK:SortBaseClassesCell{},
        \top{SortBaseClassesCell{}}())))
  [projection{}()]

// rule `project:BaseClassesCellOpt`(inj{BaseClassesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBaseClassesCellOpt{}, SortKItem{}}(VarK:SortBaseClassesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBaseClassesCellOpt{},R} (
      Lblproject'Coln'BaseClassesCellOpt{}(X0:SortK{}),
     \and{SortBaseClassesCellOpt{}} (
       VarK:SortBaseClassesCellOpt{},
        \top{SortBaseClassesCellOpt{}}())))
  [projection{}()]

// rule `project:Block`(inj{Block,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlock{}, SortKItem{}}(VarK:SortBlock{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBlock{},R} (
      Lblproject'Coln'Block{}(X0:SortK{}),
     \and{SortBlock{}} (
       VarK:SortBlock{},
        \top{SortBlock{}}())))
  [projection{}()]

// rule `project:BlockOrStmtType`(inj{BlockOrStmtType,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBlockOrStmtType{}, SortKItem{}}(VarK:SortBlockOrStmtType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBlockOrStmtType{},R} (
      Lblproject'Coln'BlockOrStmtType{}(X0:SortK{}),
     \and{SortBlockOrStmtType{}} (
       VarK:SortBlockOrStmtType{},
        \top{SortBlockOrStmtType{}}())))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [projection{}()]

// rule `project:ClassDataCell`(inj{ClassDataCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCell{}, SortKItem{}}(VarK:SortClassDataCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassDataCell{},R} (
      Lblproject'Coln'ClassDataCell{}(X0:SortK{}),
     \and{SortClassDataCell{}} (
       VarK:SortClassDataCell{},
        \top{SortClassDataCell{}}())))
  [projection{}()]

// rule `project:ClassDataCellFragment`(inj{ClassDataCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCellFragment{}, SortKItem{}}(VarK:SortClassDataCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassDataCellFragment{},R} (
      Lblproject'Coln'ClassDataCellFragment{}(X0:SortK{}),
     \and{SortClassDataCellFragment{}} (
       VarK:SortClassDataCellFragment{},
        \top{SortClassDataCellFragment{}}())))
  [projection{}()]

// rule `project:ClassDataCellMap`(inj{ClassDataCellMap,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassDataCellMap{}, SortKItem{}}(VarK:SortClassDataCellMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassDataCellMap{},R} (
      Lblproject'Coln'ClassDataCellMap{}(X0:SortK{}),
     \and{SortClassDataCellMap{}} (
       VarK:SortClassDataCellMap{},
        \top{SortClassDataCellMap{}}())))
  [projection{}()]

// rule `project:ClassNameCell`(inj{ClassNameCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassNameCell{}, SortKItem{}}(VarK:SortClassNameCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassNameCell{},R} (
      Lblproject'Coln'ClassNameCell{}(X0:SortK{}),
     \and{SortClassNameCell{}} (
       VarK:SortClassNameCell{},
        \top{SortClassNameCell{}}())))
  [projection{}()]

// rule `project:ClassNameCellOpt`(inj{ClassNameCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassNameCellOpt{}, SortKItem{}}(VarK:SortClassNameCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassNameCellOpt{},R} (
      Lblproject'Coln'ClassNameCellOpt{}(X0:SortK{}),
     \and{SortClassNameCellOpt{}} (
       VarK:SortClassNameCellOpt{},
        \top{SortClassNameCellOpt{}}())))
  [projection{}()]

// rule `project:ClassesCell`(inj{ClassesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCell{}, SortKItem{}}(VarK:SortClassesCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassesCell{},R} (
      Lblproject'Coln'ClassesCell{}(X0:SortK{}),
     \and{SortClassesCell{}} (
       VarK:SortClassesCell{},
        \top{SortClassesCell{}}())))
  [projection{}()]

// rule `project:ClassesCellFragment`(inj{ClassesCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCellFragment{}, SortKItem{}}(VarK:SortClassesCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassesCellFragment{},R} (
      Lblproject'Coln'ClassesCellFragment{}(X0:SortK{}),
     \and{SortClassesCellFragment{}} (
       VarK:SortClassesCellFragment{},
        \top{SortClassesCellFragment{}}())))
  [projection{}()]

// rule `project:ClassesCellOpt`(inj{ClassesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortClassesCellOpt{}, SortKItem{}}(VarK:SortClassesCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortClassesCellOpt{},R} (
      Lblproject'Coln'ClassesCellOpt{}(X0:SortK{}),
     \and{SortClassesCellOpt{}} (
       VarK:SortClassesCellOpt{},
        \top{SortClassesCellOpt{}}())))
  [projection{}()]

// rule `project:CtenvCell`(inj{CtenvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCtenvCell{}, SortKItem{}}(VarK:SortCtenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCtenvCell{},R} (
      Lblproject'Coln'CtenvCell{}(X0:SortK{}),
     \and{SortCtenvCell{}} (
       VarK:SortCtenvCell{},
        \top{SortCtenvCell{}}())))
  [projection{}()]

// rule `project:CtenvCellOpt`(inj{CtenvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCtenvCellOpt{}, SortKItem{}}(VarK:SortCtenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCtenvCellOpt{},R} (
      Lblproject'Coln'CtenvCellOpt{}(X0:SortK{}),
     \and{SortCtenvCellOpt{}} (
       VarK:SortCtenvCellOpt{},
        \top{SortCtenvCellOpt{}}())))
  [projection{}()]

// rule `project:CtenvTCell`(inj{CtenvTCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCtenvTCell{}, SortKItem{}}(VarK:SortCtenvTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCtenvTCell{},R} (
      Lblproject'Coln'CtenvTCell{}(X0:SortK{}),
     \and{SortCtenvTCell{}} (
       VarK:SortCtenvTCell{},
        \top{SortCtenvTCell{}}())))
  [projection{}()]

// rule `project:CtenvTCellOpt`(inj{CtenvTCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortCtenvTCellOpt{}, SortKItem{}}(VarK:SortCtenvTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortCtenvTCellOpt{},R} (
      Lblproject'Coln'CtenvTCellOpt{}(X0:SortK{}),
     \and{SortCtenvTCellOpt{}} (
       VarK:SortCtenvTCellOpt{},
        \top{SortCtenvTCellOpt{}}())))
  [projection{}()]

// rule `project:Exp`(inj{Exp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExp{}, SortKItem{}}(VarK:SortExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExp{},R} (
      Lblproject'Coln'Exp{}(X0:SortK{}),
     \and{SortExp{}} (
       VarK:SortExp{},
        \top{SortExp{}}())))
  [projection{}()]

// rule `project:Exps`(inj{Exps,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortExps{}, SortKItem{}}(VarK:SortExps{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortExps{},R} (
      Lblproject'Coln'Exps{}(X0:SortK{}),
     \and{SortExps{}} (
       VarK:SortExps{},
        \top{SortExps{}}())))
  [projection{}()]

// rule `project:FieldReference`(inj{FieldReference,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFieldReference{}, SortKItem{}}(VarK:SortFieldReference{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFieldReference{},R} (
      Lblproject'Coln'FieldReference{}(X0:SortK{}),
     \and{SortFieldReference{}} (
       VarK:SortFieldReference{},
        \top{SortFieldReference{}}())))
  [projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortFloat{},R} (
      Lblproject'Coln'Float{}(X0:SortK{}),
     \and{SortFloat{}} (
       VarK:SortFloat{},
        \top{SortFloat{}}())))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [projection{}()]

// rule `project:IOError`(inj{IOError,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOError{}, SortKItem{}}(VarK:SortIOError{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOError{},R} (
      Lblproject'Coln'IOError{}(X0:SortK{}),
     \and{SortIOError{}} (
       VarK:SortIOError{},
        \top{SortIOError{}}())))
  [projection{}()]

// rule `project:IOFile`(inj{IOFile,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOFile{}, SortKItem{}}(VarK:SortIOFile{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOFile{},R} (
      Lblproject'Coln'IOFile{}(X0:SortK{}),
     \and{SortIOFile{}} (
       VarK:SortIOFile{},
        \top{SortIOFile{}}())))
  [projection{}()]

// rule `project:IOInt`(inj{IOInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOInt{}, SortKItem{}}(VarK:SortIOInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOInt{},R} (
      Lblproject'Coln'IOInt{}(X0:SortK{}),
     \and{SortIOInt{}} (
       VarK:SortIOInt{},
        \top{SortIOInt{}}())))
  [projection{}()]

// rule `project:IOString`(inj{IOString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortIOString{}, SortKItem{}}(VarK:SortIOString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortIOString{},R} (
      Lblproject'Coln'IOString{}(X0:SortK{}),
     \and{SortIOString{}} (
       VarK:SortIOString{},
        \top{SortIOString{}}())))
  [projection{}()]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortId{},R} (
      Lblproject'Coln'Id{}(X0:SortK{}),
     \and{SortId{}} (
       VarK:SortId{},
        \top{SortId{}}())))
  [projection{}()]

// rule `project:InClassCell`(inj{InClassCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInClassCell{}, SortKItem{}}(VarK:SortInClassCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInClassCell{},R} (
      Lblproject'Coln'InClassCell{}(X0:SortK{}),
     \and{SortInClassCell{}} (
       VarK:SortInClassCell{},
        \top{SortInClassCell{}}())))
  [projection{}()]

// rule `project:InClassCellOpt`(inj{InClassCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInClassCellOpt{}, SortKItem{}}(VarK:SortInClassCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInClassCellOpt{},R} (
      Lblproject'Coln'InClassCellOpt{}(X0:SortK{}),
     \and{SortInClassCellOpt{}} (
       VarK:SortInClassCellOpt{},
        \top{SortInClassCellOpt{}}())))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [projection{}()]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKResult{},R} (
      Lblproject'Coln'KResult{}(X0:SortK{}),
     \and{SortKResult{}} (
       VarK:SortKResult{},
        \top{SortKResult{}}())))
  [projection{}()]

// rule `project:LValue`(inj{LValue,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortLValue{}, SortKItem{}}(VarK:SortLValue{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortLValue{},R} (
      Lblproject'Coln'LValue{}(X0:SortK{}),
     \and{SortLValue{}} (
       VarK:SortLValue{},
        \top{SortLValue{}}())))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [projection{}()]

// rule `project:OutputCell`(inj{OutputCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCell{}, SortKItem{}}(VarK:SortOutputCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOutputCell{},R} (
      Lblproject'Coln'OutputCell{}(X0:SortK{}),
     \and{SortOutputCell{}} (
       VarK:SortOutputCell{},
        \top{SortOutputCell{}}())))
  [projection{}()]

// rule `project:OutputCellOpt`(inj{OutputCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortOutputCellOpt{}, SortKItem{}}(VarK:SortOutputCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortOutputCellOpt{},R} (
      Lblproject'Coln'OutputCellOpt{}(X0:SortK{}),
     \and{SortOutputCellOpt{}} (
       VarK:SortOutputCellOpt{},
        \top{SortOutputCellOpt{}}())))
  [projection{}()]

// rule `project:Param`(inj{Param,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParam{}, SortKItem{}}(VarK:SortParam{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortParam{},R} (
      Lblproject'Coln'Param{}(X0:SortK{}),
     \and{SortParam{}} (
       VarK:SortParam{},
        \top{SortParam{}}())))
  [projection{}()]

// rule `project:Params`(inj{Params,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortParams{}, SortKItem{}}(VarK:SortParams{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortParams{},R} (
      Lblproject'Coln'Params{}(X0:SortK{}),
     \and{SortParams{}} (
       VarK:SortParams{},
        \top{SortParams{}}())))
  [projection{}()]

// rule `project:ReturnTypeCell`(inj{ReturnTypeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCell{}, SortKItem{}}(VarK:SortReturnTypeCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortReturnTypeCell{},R} (
      Lblproject'Coln'ReturnTypeCell{}(X0:SortK{}),
     \and{SortReturnTypeCell{}} (
       VarK:SortReturnTypeCell{},
        \top{SortReturnTypeCell{}}())))
  [projection{}()]

// rule `project:ReturnTypeCellOpt`(inj{ReturnTypeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortReturnTypeCellOpt{}, SortKItem{}}(VarK:SortReturnTypeCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortReturnTypeCellOpt{},R} (
      Lblproject'Coln'ReturnTypeCellOpt{}(X0:SortK{}),
     \and{SortReturnTypeCellOpt{}} (
       VarK:SortReturnTypeCellOpt{},
        \top{SortReturnTypeCellOpt{}}())))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [projection{}()]

// rule `project:Stmt`(inj{Stmt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStmt{}, SortKItem{}}(VarK:SortStmt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStmt{},R} (
      Lblproject'Coln'Stmt{}(X0:SortK{}),
     \and{SortStmt{}} (
       VarK:SortStmt{},
        \top{SortStmt{}}())))
  [projection{}()]

// rule `project:Stream`(inj{Stream,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortStream{}, SortKItem{}}(VarK:SortStream{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortStream{},R} (
      Lblproject'Coln'Stream{}(X0:SortK{}),
     \and{SortStream{}} (
       VarK:SortStream{},
        \top{SortStream{}}())))
  [projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortString{},R} (
      Lblproject'Coln'String{}(X0:SortK{}),
     \and{SortString{}} (
       VarK:SortString{},
        \top{SortString{}}())))
  [projection{}()]

// rule `project:TCell`(inj{TCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCell{}, SortKItem{}}(VarK:SortTCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCell{},R} (
      Lblproject'Coln'TCell{}(X0:SortK{}),
     \and{SortTCell{}} (
       VarK:SortTCell{},
        \top{SortTCell{}}())))
  [projection{}()]

// rule `project:TCellFragment`(inj{TCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarK:SortTCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellFragment{},R} (
      Lblproject'Coln'TCellFragment{}(X0:SortK{}),
     \and{SortTCellFragment{}} (
       VarK:SortTCellFragment{},
        \top{SortTCellFragment{}}())))
  [projection{}()]

// rule `project:TCellOpt`(inj{TCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarK:SortTCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTCellOpt{},R} (
      Lblproject'Coln'TCellOpt{}(X0:SortK{}),
     \and{SortTCellOpt{}} (
       VarK:SortTCellOpt{},
        \top{SortTCellOpt{}}())))
  [projection{}()]

// rule `project:TaskCell`(inj{TaskCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCell{}, SortKItem{}}(VarK:SortTaskCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTaskCell{},R} (
      Lblproject'Coln'TaskCell{}(X0:SortK{}),
     \and{SortTaskCell{}} (
       VarK:SortTaskCell{},
        \top{SortTaskCell{}}())))
  [projection{}()]

// rule `project:TaskCellFragment`(inj{TaskCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCellFragment{}, SortKItem{}}(VarK:SortTaskCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTaskCellFragment{},R} (
      Lblproject'Coln'TaskCellFragment{}(X0:SortK{}),
     \and{SortTaskCellFragment{}} (
       VarK:SortTaskCellFragment{},
        \top{SortTaskCellFragment{}}())))
  [projection{}()]

// rule `project:TaskCellSet`(inj{TaskCellSet,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTaskCellSet{}, SortKItem{}}(VarK:SortTaskCellSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTaskCellSet{},R} (
      Lblproject'Coln'TaskCellSet{}(X0:SortK{}),
     \and{SortTaskCellSet{}} (
       VarK:SortTaskCellSet{},
        \top{SortTaskCellSet{}}())))
  [projection{}()]

// rule `project:TasksCell`(inj{TasksCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCell{}, SortKItem{}}(VarK:SortTasksCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTasksCell{},R} (
      Lblproject'Coln'TasksCell{}(X0:SortK{}),
     \and{SortTasksCell{}} (
       VarK:SortTasksCell{},
        \top{SortTasksCell{}}())))
  [projection{}()]

// rule `project:TasksCellFragment`(inj{TasksCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCellFragment{}, SortKItem{}}(VarK:SortTasksCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTasksCellFragment{},R} (
      Lblproject'Coln'TasksCellFragment{}(X0:SortK{}),
     \and{SortTasksCellFragment{}} (
       VarK:SortTasksCellFragment{},
        \top{SortTasksCellFragment{}}())))
  [projection{}()]

// rule `project:TasksCellOpt`(inj{TasksCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTasksCellOpt{}, SortKItem{}}(VarK:SortTasksCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTasksCellOpt{},R} (
      Lblproject'Coln'TasksCellOpt{}(X0:SortK{}),
     \and{SortTasksCellOpt{}} (
       VarK:SortTasksCellOpt{},
        \top{SortTasksCellOpt{}}())))
  [projection{}()]

// rule `project:TenvCell`(inj{TenvCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTenvCell{}, SortKItem{}}(VarK:SortTenvCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTenvCell{},R} (
      Lblproject'Coln'TenvCell{}(X0:SortK{}),
     \and{SortTenvCell{}} (
       VarK:SortTenvCell{},
        \top{SortTenvCell{}}())))
  [projection{}()]

// rule `project:TenvCellOpt`(inj{TenvCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTenvCellOpt{}, SortKItem{}}(VarK:SortTenvCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTenvCellOpt{},R} (
      Lblproject'Coln'TenvCellOpt{}(X0:SortK{}),
     \and{SortTenvCellOpt{}} (
       VarK:SortTenvCellOpt{},
        \top{SortTenvCellOpt{}}())))
  [projection{}()]

// rule `project:Type`(inj{Type,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortType{}, SortKItem{}}(VarK:SortType{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortType{},R} (
      Lblproject'Coln'Type{}(X0:SortK{}),
     \and{SortType{}} (
       VarK:SortType{},
        \top{SortType{}}())))
  [projection{}()]

// rule `project:Types`(inj{Types,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortTypes{}, SortKItem{}}(VarK:SortTypes{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortTypes{},R} (
      Lblproject'Coln'Types{}(X0:SortK{}),
     \and{SortTypes{}} (
       VarK:SortTypes{},
        \top{SortTypes{}}())))
  [projection{}()]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9), org.kframework.attributes.Location(Location(1705,8,1708,30)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            VarCount:SortInt{}
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1705,8,1708,30)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("311b80d2cb12d368f230eba968464e1fc926bd57e304059b282b82af4d9626d9")]

// rule `replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,_Gen0,_Gen1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5), org.kframework.attributes.Location(Location(1709,8,1709,49)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen1:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X3:SortInt{},
            \dv{SortInt{}}("0")
          ),
          \top{R} ()
        ))))),
    \equals{SortString{},R} (
      Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortString{},X3:SortInt{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1709,8,1709,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4367434b0f61c404f7a2e926426bd23874dd547de689c5d15089967fbab2b3d5")]

// rule `replaceAll(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING-COMMON_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING-COMMON_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5), org.kframework.attributes.Location(Location(1710,8,1710,154)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{})),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1710,8,1710,154)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("262167183c3ec2e214d12bac6e639d7ac1a9f973582e16eca6c1af1da7ecc0a5")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING-COMMON_String_String_String`(`_+String__STRING-COMMON_String_String_String`(`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING-COMMON_Int_String`(ToReplace)),`lengthString(_)_STRING-COMMON_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c), org.kframework.attributes.Location(Location(1698,8,1700,66)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            VarReplacement:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarSource:SortString{}))),
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1698,8,1700,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e290042e5b5b2f620c0ca1871e708c3713c62b63b283e317bb7568e13968fe0c")]

// rule `replaceFirst(_,_,_)_STRING-COMMON_String_String_String_String`(Source,ToReplace,_Gen0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING-COMMON_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34), org.kframework.attributes.Location(Location(1701,8,1702,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarSource:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarToReplace:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X2:SortString{},
            Var'Unds'Gen0:SortString{}
          ),
          \top{R} ()
        )))),
    \equals{SortString{},R} (
      LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'String'Unds'String{}(X0:SortString{},X1:SortString{},X2:SortString{}),
     \and{SortString{}} (
       VarSource:SortString{},
        \top{SortString{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1701,8,1702,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("8fbd1c8efb9988236eddc95fc2af4a3e74f6ec94d696ee47209543fd0826dd34")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING-COMMON_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING-COMMON_Int_String`(S2)),I)) requires `_=/=String__STRING-COMMON_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205), org.kframework.attributes.Location(Location(1690,8,1690,182)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING-COMMON'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            VarS1:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            VarS2:SortString{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1690,8,1690,182)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("b7f740050d72a847424b022a9c8217325aba8a154a42831aa3c7a3b0727f3205")]

// rule `rfindChar(_,_,_)_STRING-COMMON_Int_String_String_Int`(_Gen0,#token("\"\"","String"),_Gen1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6), org.kframework.attributes.Location(Location(1691,8,1691,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortString{}, R} (
            X0:SortString{},
            Var'Unds'Gen0:SortString{}
          ),\and{R} (
          \in{SortString{}, R} (
            X1:SortString{},
            \dv{SortString{}}("")
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            Var'Unds'Gen1:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING-COMMON'Unds'Int'Unds'String'Unds'String'Unds'Int{}(X0:SortString{},X1:SortString{},X2:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("-1"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1691,8,1691,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("23b9fa88124c547d94aed32124d1ccd1069732b059f4c8b430ab4617979690f6")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1237,8,1237,164)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1237,8,1237,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f")]


// priority groups
  alias priorityLE25{}() : SortGeneratedTopCell{}
  where priorityLE25{}() := \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarBuffer:SortString{},\exists{SortGeneratedTopCell{}}(VarF:SortFloat{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen0:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen1:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen2:SortList{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen3:SortTCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen4:SortGeneratedCounterCell{},rule7LHS{}(VarBuffer:SortString{},VarF:SortFloat{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarBuffer:SortString{},\exists{SortGeneratedTopCell{}}(VarI:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen0:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen1:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen2:SortList{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen3:SortTCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen4:SortGeneratedCounterCell{},rule8LHS{}(VarBuffer:SortString{},VarI:SortInt{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarBuffer:SortString{},\exists{SortGeneratedTopCell{}}(VarS:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen0:SortInt{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen1:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen2:SortList{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen3:SortTCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen4:SortGeneratedCounterCell{},rule9LHS{}(VarBuffer:SortString{},VarS:SortString{},Var'Unds'Gen0:SortInt{},Var'Unds'Gen1:SortKItem{},Var'Unds'Gen2:SortList{},Var'Unds'Gen3:SortTCell{},Var'Unds'Gen4:SortGeneratedCounterCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC:SortKItem{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar1:SortTasksCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar2:SortClassDataCellMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen0:SortClassNameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen1:SortCtenvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen2:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen3:SortOutputCell{},rule10LHS{}(VarC:SortKItem{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'Gen0:SortClassNameCell{},Var'Unds'Gen1:SortCtenvCell{},Var'Unds'Gen2:SortGeneratedCounterCell{},Var'Unds'Gen3:SortOutputCell{})))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC:SortId{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar0:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar1:SortTasksCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar2:SortClassDataCellMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar4:SortSet{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar5:SortList{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen0:SortBaseClassCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen1:SortCtenvCell{},rule11LHS{}(VarC:SortId{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'DotVar4:SortSet{},Var'Unds'DotVar5:SortList{},Var'Unds'Gen0:SortBaseClassCell{},Var'Unds'Gen1:SortCtenvCell{}))))))))), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarC:SortId{},\exists{SortGeneratedTopCell{}}(VarC'Apos':SortKItem{},\exists{SortGeneratedTopCell{}}(VarCs:SortSet{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar1:SortTasksCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'DotVar2:SortClassDataCellMap{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen0:SortClassNameCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen1:SortBaseClassCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen2:SortCtenvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen3:SortBaseClassesCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen4:SortCtenvCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen5:SortGeneratedCounterCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen6:SortOutputCell{},rule12LHS{}(VarC:SortId{},VarC'Apos':SortKItem{},VarCs:SortSet{},Var'Unds'DotVar1:SortTasksCell{},Var'Unds'DotVar2:SortClassDataCellMap{},Var'Unds'Gen0:SortClassNameCell{},Var'Unds'Gen1:SortBaseClassCell{},Var'Unds'Gen2:SortCtenvCell{},Var'Unds'Gen3:SortBaseClassesCell{},Var'Unds'Gen4:SortCtenvCell{},Var'Unds'Gen5:SortGeneratedCounterCell{},Var'Unds'Gen6:SortOutputCell{}))))))))))))), \bottom{SortGeneratedTopCell{}}())))))) []

  alias priorityLE30{}() : SortGeneratedTopCell{}
  where priorityLE30{}() := \or{SortGeneratedTopCell{}}(
    priorityLE25{}(), \or{SortGeneratedTopCell{}}(
    \exists{SortGeneratedTopCell{}}(VarN:SortInt{},\exists{SortGeneratedTopCell{}}(VarS:SortString{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen0:SortList{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen1:SortTCell{},\exists{SortGeneratedTopCell{}}(Var'Unds'Gen2:SortGeneratedCounterCell{},rule6LHS{}(VarN:SortInt{},VarS:SortString{},Var'Unds'Gen0:SortList{},Var'Unds'Gen1:SortTCell{},Var'Unds'Gen2:SortGeneratedCounterCell{})))))), \bottom{SortGeneratedTopCell{}}())) []

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(239,1,914,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/pl-tutorial/2_languages/2_kool/2_typed/2_static/kool-typed-static.md)")]
