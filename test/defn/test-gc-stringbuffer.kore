// RUN: %interpreter
// RUN: %check-diff
[topCellInitializer{}(LblinitGeneratedTopCell{}())]

module BASIC-K
  sort SortK{} []
  sort SortKItem{} []
endmodule []

module KSEQ
  import BASIC-K []

  symbol kseq{}(SortKItem{}, SortK{}) : SortK{} []
  symbol append{}(SortK{}, SortK{}) : SortK{} [function{}()]
  symbol dotk{}() : SortK{} []

  axiom{R}
    \equals{SortK{},R}(
      append{}(dotk{}(),K2:SortK{}),
      K2:SortK{})
  []

  axiom{R}
    \equals{SortK{},R}(
      append{}(kseq{}(K1:SortKItem{},K2:SortK{}),K3:SortK{}),
      kseq{}(K1:SortKItem{},append{}(K2:SortK{},K3:SortK{})))
  []

endmodule []

module INJ
  symbol inj{From,To}(From) : To [sortInjection{}()]
 
  axiom{S1,S2,S3,R} 
    \equals{S3,R}(
      inj{S2,S3}(inj{S1,S2}(T:S1)),
      inj{S1,S3}(T:S1))
  []

endmodule []

module K
  import KSEQ []
  import INJ []
endmodule []

module TEST

// imports
  import K []

// sorts
  sort SortBufferCell{} []
  hooked-sort SortList{} [element{}(LblListItem{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,3,206,31)"), concat{}(Lbl'Unds'List'Unds'{}()), hook{}("LIST.List"), unit{}(Lbl'Stop'List{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  sort SortTCellOpt{} []
  sort SortTCellFragment{} []
  hooked-sort SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(497,3,497,37)"), hook{}("STRING.String")]
  hooked-sort SortStringBuffer{} [hook{}("BUFFER.StringBuffer"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(597,3,597,49)")]
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,3,12,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/kast.k)"), token{}()]
  sort SortTCell{} []
  sort SortGeneratedCounterCellOpt{} []
  sort SortGeneratedCounterCell{} []
  sort SortCell{} []
  hooked-sort SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(280,3,280,31)")]
  sort SortKCell{} []
  sort SortCmd{} []
  sort SortKResult{} []
  hooked-sort SortMap{} [element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,3,96,28)"), concat{}(Lbl'Unds'Map'Unds'{}()), hook{}("MAP.Map"), unit{}(Lbl'Stop'Map{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  sort SortBufferCellOpt{} []
  sort SortKCellOpt{} []
  hooked-sort SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(337,3,337,28)"), hook{}("INT.Int")]
  hooked-sort SortFloat{} [hook{}("FLOAT.Float"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(419,3,419,34)")]
  sort SortGeneratedTopCell{} []
  sort SortPgm{} []
  hooked-sort SortSet{} [element{}(LblSetItem{}()), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,3,162,28)"), concat{}(Lbl'Unds'Set'Unds'{}()), hook{}("SET.Set"), unit{}(Lbl'Stop'Set{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  sort SortGeneratedTopCellFragment{} []

// symbols
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [initializer{}(), function{}(), noThread{}(), originalPrd{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), klabel{}(".Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(170,18,170,122)"), productionID{}("1323531427"), symbol'Kywd'{}(), functional{}(), hook{}("SET.unit"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [klabel{}("bitRangeInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(381,18,381,108)"), productionID{}("839771540"), hook{}("INT.bitRange"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'UndsUnds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,19,141,79)"), productionID{}("34073107"), hook{}("MAP.keys_list"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(401,19,401,149)"), productionID{}("443713699"), functional{}(), hook{}("INT.ge"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}(">=")]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(509,19,509,88)"), productionID{}("172794870"), functional{}(), hook{}("STRING.eq"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisCmd{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cmd"), originalPrd{}()]
  hooked-symbol Lbl'Unds'xorInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,146)"), productionID{}("1585571244"), functional{}(), hook{}("INT.xor"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisKResult{}(SortK{}) : SortBool{} [function{}(), predicate{}("KResult"), originalPrd{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(405,19,405,52)"), productionID{}("1717433286"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'UndsUnds'Map{}(SortMap{}) : SortInt{} [klabel{}("sizeMap"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,18,149,103)"), productionID{}("1478995734"), functional{}(), hook{}("MAP.size"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,19,404,160)"), productionID{}("1751403001"), functional{}(), hook{}("INT.ne"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("distinct")]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(533,18,533,132)"), productionID{}("476579021"), functional{}(), hook{}("STRING.countAllOccurrences"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING'UndsUnds'Int{}(SortInt{}) : SortString{} [klabel{}("chrChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(512,21,512,69)"), productionID{}("833240229"), hook{}("STRING.chr"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lbl'-LT-'buffer'-GT-'{}(SortStringBuffer{}) : SortBufferCell{} [format{}("%1%i%n%2%d%n%3"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,17,15,21)"), functional{}(), cell{}(), constructor{}(), cellName{}("buffer"), originalPrd{}(), contentStartLine{}("12"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING'UndsUnds'String{}(SortString{}) : SortFloat{} [klabel{}("String2Float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(523,21,523,93)"), productionID{}("893523498"), hook{}("STRING.string2float"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'UndsUnds'Map{}(SortMap{}) : SortKItem{} [klabel{}("Map:choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,20,155,100)"), productionID{}("1456061400"), hook{}("MAP.choice"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT'UndsUnds'Int{}(SortInt{}) : SortInt{} [klabel{}("randInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,18,414,56)"), productionID{}("1078262677"), hook{}("INT.rand"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'UndsUnds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [klabel{}("List:set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(251,19,251,93)"), productionID{}("864326906"), hook{}("LIST.update"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(532,21,532,124)"), productionID{}("1198197478"), functional{}(), hook{}("STRING.replaceFirst"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(399,19,399,149)"), productionID{}("180316302"), functional{}(), hook{}("INT.le"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("<=")]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), klabel{}("_==K_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(759,19,759,154)"), productionID{}("702500163"), symbol'Kywd'{}(), functional{}(), hook{}("KEQUAL.eq"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), equalEqualK{}(), smtlib{}("=")]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT'UndsUnds'Int{}(SortInt{}) : SortInt{} [klabel{}("log2Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(379,18,379,74)"), productionID{}("1614133563"), hook{}("INT.log2"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'UndsUnds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [klabel{}("_inList_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(263,19,263,101)"), productionID{}("26928827"), functional{}(), hook{}("LIST.in"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisTCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("TCellOpt"), originalPrd{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(539,19,539,82)"), productionID{}("1419332030"), functional{}(), hook{}("STRING.lt"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING'UndsUnds'String{}(SortString{}) : SortInt{} [klabel{}("ordChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(513,18,513,69)"), productionID{}("1167088639"), hook{}("STRING.ord"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lbl'Stop'List'LBraQuotUndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm'QuotRBraUnds'Pgm{}() : SortPgm{} [klabel{}(".List{\"_;__TEST\"}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,18,8,31)"), productionID{}("706665172"), functional{}(), userList{}("*"), constructor{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)")]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCellOpt"), originalPrd{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'UndsUnds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [klabel{}("updateList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(255,19,255,78)"), productionID{}("1972143064"), hook{}("LIST.updateAll"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisBufferCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("BufferCellOpt"), originalPrd{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), klabel{}("_+Int_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,18,365,176)"), productionID{}("94830685"), symbol'Kywd'{}(), functional{}(), hook{}("INT.add"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("+")]
  symbol LblisBool{}(SortK{}) : SortBool{} [function{}(), predicate{}("Bool"), originalPrd{}()]
  hooked-symbol Lbl'UndsAnd'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(371,18,371,142)"), productionID{}("1217312754"), functional{}(), hook{}("INT.and"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(507,21,507,139)"), productionID{}("1429483328"), functional{}(), hook{}("STRING.concat"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), klabel{}("_|->_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,18,111,144)"), productionID{}("2078641942"), symbol'Kywd'{}(), functional{}(), hook{}("MAP.element"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'UndsUnds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [klabel{}("fillList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,19,257,77)"), productionID{}("312168418"), hook{}("LIST.fill"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(540,19,540,82)"), productionID{}("1262110193"), functional{}(), hook{}("STRING.le"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisTCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("TCell"), originalPrd{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortTCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [cellFragment{}("GeneratedTopCell"), originalPrd{}(), constructor{}(), functional{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'MAP'UndsUnds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,18,122,104)"), productionID{}("935160003"), functional{}(), hook{}("MAP.update"), function{}(), prefer{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT'UndsUnds'Int{}(SortInt{}) : SortK{} [klabel{}("srandInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(415,16,415,56)"), productionID{}("178604517"), hook{}("INT.srand"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds'orBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(292,19,292,156)"), productionID{}("1765702"), functional{}(), hook{}("BOOL.or"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), boolOperation{}(), smtlib{}("or")]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'UndsUnds'Map{}(SortMap{}) : SortList{} [klabel{}("values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(146,19,146,76)"), productionID{}("1658512704"), hook{}("MAP.values"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [klabel{}("_[_<-undef]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,18,125,121)"), productionID{}("1626852381"), symbol'Kywd'{}(), functional{}(), hook{}("MAP.remove"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds'andThenBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,19,290,118)"), productionID{}("482307698"), functional{}(), hook{}("BOOL.andThen"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), boolOperation{}(), smtlib{}("and")]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [klabel{}("SetItem"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,18,175,112)"), productionID{}("1170788511"), symbol'Kywd'{}(), functional{}(), hook{}("SET.element"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'UndsUnds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [klabel{}("makeList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(253,19,253,66)"), productionID{}("1348115836"), hook{}("LIST.make"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [element{}("_|->_"), format{}("%1%n%2"), klabel{}("_Map_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(104,18,104,172)"), productionID{}("1028145537"), comm{}(), symbol'Kywd'{}(), unit{}(".Map"), hook{}("MAP.concat"), assoc{}(), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), index{}("0")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [element{}("ListItem"), format{}("%1%n%2"), klabel{}("_List_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(239,19,239,192)"), productionID{}("2031377754"), symbol'Kywd'{}(), functional{}(), unit{}(".List"), hook{}("LIST.concat"), assoc{}(), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("smt_seq_concat")]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING'UndsUnds'Int{}(SortInt{}) : SortString{} [klabel{}("Int2String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(525,21,525,103)"), productionID{}("1108517064"), functional{}(), hook{}("STRING.int2string"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [klabel{}("findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(518,18,518,89)"), productionID{}("751608431"), hook{}("STRING.findChar"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblinitBufferCell{}() : SortBufferCell{} [initializer{}(), function{}(), noThread{}(), originalPrd{}()]
  hooked-symbol Lbl'Unds'divInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,18,362,93)"), productionID{}("1648700617"), hook{}("INT.ediv"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("div")]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUndsUnds'INT'UndsUnds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,18,354,110)"), productionID{}("2029780820"), hook{}("INT.powmod"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("(mod (^ #1 #2) #3)")]
  hooked-symbol Lbl'UndsEqlsEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), klabel{}("_==Int_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,19,403,167)"), productionID{}("1493042329"), functional{}(), hook{}("INT.eq"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("=")]
  hooked-symbol Lbl'UndsPerc'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(360,18,360,144)"), productionID{}("1172535934"), hook{}("INT.tmod"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("mod")]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [klabel{}("Base2String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(526,21,526,92)"), productionID{}("511354923"), hook{}("STRING.base2string"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCellOpt"), originalPrd{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [klabel{}("ListItem"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(244,19,244,136)"), productionID{}("1280124872"), symbol'Kywd'{}(), functional{}(), hook{}("LIST.element"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("smt_seq_elem")]
  symbol Lbl'-LT-'T'-GT-'-fragment{}(SortKCellOpt{}, SortBufferCellOpt{}) : SortTCellFragment{} [cellFragment{}("TCell"), originalPrd{}(), constructor{}(), functional{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'UndsUnds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,19,143,93)"), productionID{}("1275009283"), functional{}(), hook{}("MAP.in_keys"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblnoTCell{}() : SortTCellOpt{} [cellOptAbsent{}("TCell"), originalPrd{}(), constructor{}(), functional{}()]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(530,21,530,122)"), productionID{}("1540894701"), functional{}(), hook{}("STRING.replaceAll"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Stop'StringBuffer'Unds'STRING-BUFFER-HOOKED'Unds'{}() : SortStringBuffer{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(598,27,598,92)"), productionID{}("1114335860"), functional{}(), hook{}("BUFFER.empty"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,19,535,94)"), productionID{}("106297322"), functional{}(), hook{}("STRING.ne"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'UndsUnds'Set{}(SortSet{}) : SortInt{} [klabel{}("size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,18,190,80)"), productionID{}("404947798"), functional{}(), hook{}("SET.size"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT'UndsUnds'Int{}(SortInt{}) : SortInt{} [klabel{}("absInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,18,378,102)"), productionID{}("1862994526"), functional{}(), hook{}("INT.abs"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("int_abs")]
  symbol LblisK{}(SortK{}) : SortBool{} [function{}(), predicate{}("K"), originalPrd{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING'UndsUnds'String{}(SortString{}) : SortString{} [klabel{}("categoryChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(544,21,544,80)"), productionID{}("547441493"), hook{}("STRING.category"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), klabel{}(".List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(241,19,241,146)"), productionID{}("523211332"), symbol'Kywd'{}(), functional{}(), hook{}("LIST.unit"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("smt_seq_nil")]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,21,531,107)"), productionID{}("203149502"), hook{}("STRING.replace"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("Map"), originalPrd{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'UndsUnds'Int{}(SortInt{}) : SortInt{} [klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,18,411,72)"), productionID{}("1756819670"), functional{}(), function{}(), freshGenerator{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortTCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [topcell{}(), format{}("%2"), functional{}(), cell{}(), constructor{}(), cellName{}("generatedTop"), originalPrd{}()]
  symbol LblisTCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("TCellFragment"), originalPrd{}()]
  hooked-symbol Lbl'Tild'Int'UndsUnds'INT'UndsUnds'Int{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,18,351,133)"), productionID{}("1057507014"), functional{}(), hook{}("INT.not"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'UndsUnds'Bool'Unds'K'Unds'K{SortS0}(SortBool{}, SortS0, SortS0) : SortS0 [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(780,16,780,122)"), productionID{}("1617174216"), functional{}(), hook{}("KEQUAL.ite"), poly{}("0, 2, 3"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("ite")]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,19,541,82)"), productionID{}("396918327"), functional{}(), hook{}("STRING.gt"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblnewUUID'Unds'STRING'Unds'{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,21,547,67)"), productionID{}("1839206329"), hook{}("STRING.uuid"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [klabel{}("rfindString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(517,18,517,86)"), productionID{}("1799635803"), hook{}("STRING.rfind"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LbladdStr'LParUndsRParUnds'TEST'UndsUnds'String{}(SortString{}) : SortCmd{} [klabel{}("addStr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(7,18,7,31)"), productionID{}("355885103"), functional{}(), constructor{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)")]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCell"), originalPrd{}()]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING'UndsUnds'Float{}(SortFloat{}) : SortString{} [klabel{}("Float2String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,21,521,105)"), productionID{}("893640573"), functional{}(), hook{}("STRING.float2string"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING'UndsUnds'String{}(SortString{}) : SortInt{} [klabel{}("String2Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(524,21,524,91)"), productionID{}("1770070706"), hook{}("STRING.string2int"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds-LT--LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(369,18,369,131)"), productionID{}("1964434661"), hook{}("INT.shl"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(SortCmd{}, SortPgm{}) : SortPgm{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,18,8,31)"), productionID{}("706665172"), functional{}(), userList{}("*"), constructor{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)"), right{}()]
  symbol Lbl'UndsColnEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [klabel{}("_:=K_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(772,19,772,98)"), productionID{}("1087072654"), symbol'Kywd'{}(), functional{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), equalsEqualsK{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(297,19,297,103)"), productionID{}("1920305914"), functional{}(), hook{}("BOOL.ne"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("distinct")]
  symbol Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(SortInt{}) : SortCmd{} [klabel{}("loop"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(7,35,7,43)"), productionID{}("1321115948"), functional{}(), constructor{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)")]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [klabel{}("signExtendBitRangeInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(382,18,382,118)"), productionID{}("1037163664"), hook{}("INT.signExtendBitRange"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblinitTCell{}(SortMap{}) : SortTCell{} [initializer{}(), function{}(), noThread{}(), originalPrd{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [function{}(), predicate{}("Set"), originalPrd{}()]
  symbol LblisStringBuffer{}(SortK{}) : SortBool{} [function{}(), predicate{}("StringBuffer"), originalPrd{}()]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(SortString{}) : SortInt{} [klabel{}("lengthString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(511,18,511,84)"), productionID{}("1927963027"), functional{}(), hook{}("STRING.length"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisString{}(SortK{}) : SortBool{} [function{}(), predicate{}("String"), originalPrd{}()]
  hooked-symbol Lbl'Unds'xorBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,19,291,114)"), productionID{}("1793899405"), functional{}(), hook{}("BOOL.xor"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), boolOperation{}(), smtlib{}("xor")]
  hooked-symbol Lbl'Unds'modInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(363,18,363,93)"), productionID{}("1765900922"), hook{}("INT.emod"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("mod")]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'UndsUnds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,18,129,120)"), productionID{}("300604602"), functional{}(), hook{}("MAP.difference"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblStringBuffer2String'LParUndsRParUnds'STRING-BUFFER-HOOKED'UndsUnds'StringBuffer{}(SortStringBuffer{}) : SortString{} [klabel{}("StringBuffer2String"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(600,21,600,102)"), productionID{}("137533655"), functional{}(), hook{}("BUFFER.toString"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("Int"), originalPrd{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [initializer{}(), function{}(), noThread{}(), originalPrd{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [klabel{}("substrString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(515,21,515,99)"), productionID{}("707531688"), functional{}(), hook{}("STRING.substr"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsPipe'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,18,375,140)"), productionID{}("1099552523"), functional{}(), hook{}("INT.or"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'UndsUnds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [klabel{}("updateMap"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,18,134,91)"), productionID{}("1193398802"), functional{}(), hook{}("MAP.updateAll"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cell"), originalPrd{}()]
  hooked-symbol Lbl'Unds'orElseBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(293,19,293,116)"), productionID{}("1302725372"), functional{}(), hook{}("BOOL.orElse"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), boolOperation{}(), smtlib{}("or")]
  symbol LblnoBufferCell{}() : SortBufferCellOpt{} [cellOptAbsent{}("BufferCell"), originalPrd{}(), constructor{}(), functional{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'UndsUnds'Set{}(SortSet{}) : SortKItem{} [klabel{}("Set:choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(193,20,193,94)"), productionID{}("226690498"), hook{}("SET.choice"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCell"), originalPrd{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [initializer{}(), function{}(), noThread{}(), originalPrd{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [format{}("%1%i%n%2%d%n%3"), functional{}(), cell{}(), constructor{}(), cellName{}("generatedCounter"), originalPrd{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), klabel{}("notBool_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,19,288,174)"), productionID{}("2072130509"), symbol'Kywd'{}(), functional{}(), hook{}("BOOL.not"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), boolOperation{}(), smtlib{}("not")]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [cellOptAbsent{}("GeneratedCounterCell"), originalPrd{}(), constructor{}(), functional{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'UndsUnds'Map{}(SortMap{}) : SortSet{} [klabel{}("keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,18,140,86)"), productionID{}("1171255580"), functional{}(), hook{}("MAP.keys"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [klabel{}("List:range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(260,19,260,98)"), productionID{}("95369743"), symbol'Kywd'{}(), hook{}("LIST.range"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds'impliesBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(294,19,294,117)"), productionID{}("713898436"), functional{}(), hook{}("BOOL.implies"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), boolOperation{}(), smtlib{}("=>")]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'UndsUnds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,19,152,91)"), productionID{}("1699578227"), functional{}(), hook{}("MAP.inclusion"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(542,19,542,82)"), productionID{}("1055601039"), functional{}(), hook{}("STRING.ge"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'UndsUnds'List{}(SortList{}) : SortInt{} [klabel{}("sizeList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,18,266,121)"), productionID{}("278476563"), functional{}(), hook{}("LIST.size"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("smt_seq_len")]
  hooked-symbol Lbl'Unds-GT--GT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(368,18,368,131)"), productionID{}("270661321"), hook{}("INT.shr"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisList{}(SortK{}) : SortBool{} [function{}(), predicate{}("List"), originalPrd{}()]
  hooked-symbol Lbl'UndsStar'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(356,18,356,155)"), productionID{}("65080774"), functional{}(), hook{}("INT.mul"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("*")]
  hooked-symbol Lbl'Unds-GT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(402,19,402,145)"), productionID{}("695530017"), functional{}(), hook{}("INT.gt"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}(">")]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING'UndsUnds'String{}(SortString{}) : SortString{} [klabel{}("directionalityChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(545,21,545,86)"), productionID{}("967677821"), hook{}("STRING.directionality"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsSlsh'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,18,359,146)"), productionID{}("2116179210"), hook{}("INT.tdiv"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("div")]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), klabel{}("_=/=K_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(760,19,760,168)"), productionID{}("1574509514"), symbol'Kywd'{}(), functional{}(), hook{}("KEQUAL.ne"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), notEqualEqualK{}(), smtlib{}("distinct")]
  symbol Lbl'UndsColnSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [notEqualsEqualsK{}(), klabel{}("_:/=K_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(773,19,773,102)"), productionID{}("864221358"), symbol'Kywd'{}(), functional{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING-BUFFER-HOOKED'UndsUnds'StringBuffer'Unds'String{}(SortStringBuffer{}, SortString{}) : SortStringBuffer{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(599,27,599,112)"), productionID{}("80026551"), avoid{}(), functional{}(), hook{}("BUFFER.concat"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [klabel{}("rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(519,18,519,90)"), productionID{}("1723290893"), hook{}("STRING.rfindChar"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), klabel{}(".Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,18,106,128)"), productionID{}("1628551735"), symbol'Kywd'{}(), functional{}(), hook{}("MAP.unit"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(376,18,376,102)"), productionID{}("66724371"), functional{}(), hook{}("INT.min"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("int_min")]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'UndsUnds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [klabel{}("intersectSet"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,18,178,88)"), productionID{}("1400973979"), functional{}(), hook{}("SET.intersection"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds-LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(400,19,400,145)"), productionID{}("1200546947"), functional{}(), hook{}("INT.lt"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("<")]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [klabel{}("List:get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(249,20,249,98)"), productionID{}("1747053097"), symbol'Kywd'{}(), hook{}("LIST.get"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisKItem{}(SortK{}) : SortBool{} [function{}(), predicate{}("KItem"), originalPrd{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), klabel{}("Set:difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,18,181,146)"), productionID{}("347091104"), symbol'Kywd'{}(), functional{}(), hook{}("SET.difference"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [klabel{}("findString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(516,18,516,85)"), productionID{}("191568263"), hook{}("STRING.find"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'UndsUnds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,19,187,85)"), productionID{}("1110195322"), functional{}(), hook{}("SET.inclusion"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'UndsUnds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [klabel{}("removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,18,137,91)"), productionID{}("453398853"), functional{}(), hook{}("MAP.removeAll"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [function{}(), predicate{}("KConfigVar"), originalPrd{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCellFragment"), originalPrd{}()]
  symbol Lbl'-LT-'T'-GT-'{}(SortKCell{}, SortBufferCell{}) : SortTCell{} [topcell{}(), format{}("%1%i%n%2%n%3%d%n%4"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,17,15,21)"), functional{}(), cell{}(), constructor{}(), cellName{}("T"), originalPrd{}(), contentStartLine{}("12"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(296,19,296,96)"), productionID{}("632475595"), functional{}(), hook{}("BOOL.eq"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("=")]
  symbol LblnoKCell{}() : SortKCellOpt{} [cellOptAbsent{}("KCell"), originalPrd{}(), constructor{}(), functional{}()]
  hooked-symbol Lbl'Unds'-Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(366,18,366,152)"), productionID{}("1539947037"), functional{}(), hook{}("INT.sub"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("-")]
  symbol LblisKCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCell"), originalPrd{}()]
  symbol LblisPgm{}(SortK{}) : SortBool{} [function{}(), predicate{}("Pgm"), originalPrd{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(377,18,377,102)"), productionID{}("1047934137"), functional{}(), hook{}("INT.max"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("int_max")]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [format{}("%1%i%n%2%d%n%3"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,17,15,21)"), functional{}(), cell{}(), constructor{}(), cellName{}("k"), originalPrd{}(), contentStartLine{}("12"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)"), maincell{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), klabel{}("_andBool_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(289,19,289,187)"), productionID{}("1260440107"), symbol'Kywd'{}(), functional{}(), hook{}("BOOL.and"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), boolOperation{}(), smtlib{}("and")]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [element{}("SetItem"), format{}("%1%n%2"), klabel{}("_Set_"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,18,168,176)"), productionID{}("1594039997"), comm{}(), symbol'Kywd'{}(), idem{}(), functional{}(), unit{}(".Set"), hook{}("SET.concat"), assoc{}(), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [klabel{}("String2Base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(527,21,527,92)"), productionID{}("992743048"), hook{}("STRING.string2base"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING'UndsUnds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [klabel{}("FloatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(522,21,522,113)"), productionID{}("2085886997"), hook{}("STRING.floatFormat"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsXor-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(353,18,353,151)"), productionID{}("2007599722"), hook{}("INT.pow"), left{}(), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("^")]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [klabel{}("Map:lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,20,117,112)"), productionID{}("606775513"), symbol'Kywd'{}(), hook{}("MAP.lookup"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'UndsUnds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [klabel{}("Map:lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,20,119,138)"), productionID{}("1527882132"), functional{}(), hook{}("MAP.lookupOrDefault"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lblproject'Coln'Pgm{}(SortK{}) : SortPgm{} [function{}(), projection{}(), originalPrd{}()]
  symbol LblisFloat{}(SortK{}) : SortBool{} [function{}(), predicate{}("Float"), originalPrd{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [klabel{}("Set:in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,19,184,106)"), productionID{}("1105416433"), symbol'Kywd'{}(), functional{}(), hook{}("SET.in"), function{}(), originalPrd{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol LblisBufferCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("BufferCell"), originalPrd{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'UndsUnds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBufferCell{}, \equals{SortBufferCell{}, R} (Val:SortBufferCell{}, Lbl'-LT-'buffer'-GT-'{}(K0:SortStringBuffer{}))) [functional{}()] // functional
  axiom{}\implies{SortBufferCell{}} (\and{SortBufferCell{}} (Lbl'-LT-'buffer'-GT-'{}(X0:SortStringBuffer{}), Lbl'-LT-'buffer'-GT-'{}(Y0:SortStringBuffer{})), Lbl'-LT-'buffer'-GT-'{}(\and{SortStringBuffer{}} (X0:SortStringBuffer{}, Y0:SortStringBuffer{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPgm{}, SortKItem{}} (From:SortPgm{}))) [subsort{SortPgm{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortKCell{}, SortCell{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'UndsUnds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPgm{}, \equals{SortPgm{}, R} (Val:SortPgm{}, Lbl'Stop'List'LBraQuotUndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm'QuotRBraUnds'Pgm{}())) [functional{}()] // functional
  axiom{}\not{SortPgm{}} (\and{SortPgm{}} (Lbl'Stop'List'LBraQuotUndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm'QuotRBraUnds'Pgm{}(), Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(Y0:SortCmd{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortTCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortTCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortTCellOpt{}} (X0:SortTCellOpt{}, Y0:SortTCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'MAP'UndsUnds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBufferCellOpt{}, \equals{SortBufferCellOpt{}, R} (Val:SortBufferCellOpt{}, inj{SortBufferCell{}, SortBufferCellOpt{}} (From:SortBufferCell{}))) [subsort{SortBufferCell{}, SortBufferCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING'UndsUnds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellFragment{}, \equals{SortTCellFragment{}, R} (Val:SortTCellFragment{}, Lbl'-LT-'T'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortBufferCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortTCellFragment{}} (\and{SortTCellFragment{}} (Lbl'-LT-'T'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortBufferCellOpt{}), Lbl'-LT-'T'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortBufferCellOpt{})), Lbl'-LT-'T'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortBufferCellOpt{}} (X1:SortBufferCellOpt{}, Y1:SortBufferCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'UndsUnds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, LblnoTCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStringBuffer{}, \equals{SortStringBuffer{}, R} (Val:SortStringBuffer{}, Lbl'Stop'StringBuffer'Unds'STRING-BUFFER-HOOKED'Unds'{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'UndsUnds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT'UndsUnds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCell{}, SortKItem{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'UndsUnds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortTCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortTCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortTCell{}} (X0:SortTCell{}, Y0:SortTCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'UndsUnds'INT'UndsUnds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R, SortS0} \exists{R} (Val:SortS0, \equals{SortS0, R} (Val:SortS0, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'UndsUnds'Bool'Unds'K'Unds'K{SortS0}(K0:SortBool{}, K1:SortS0, K2:SortS0))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCmd{}, \equals{SortCmd{}, R} (Val:SortCmd{}, LbladdStr'LParUndsRParUnds'TEST'UndsUnds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortCmd{}} (\and{SortCmd{}} (LbladdStr'LParUndsRParUnds'TEST'UndsUnds'String{}(X0:SortString{}), LbladdStr'LParUndsRParUnds'TEST'UndsUnds'String{}(Y0:SortString{})), LbladdStr'LParUndsRParUnds'TEST'UndsUnds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortCmd{}} (\and{SortCmd{}} (LbladdStr'LParUndsRParUnds'TEST'UndsUnds'String{}(X0:SortString{}), Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING'UndsUnds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCellOpt{}, \equals{SortTCellOpt{}, R} (Val:SortTCellOpt{}, inj{SortTCell{}, SortTCellOpt{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortTCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortPgm{}, \equals{SortPgm{}, R} (Val:SortPgm{}, Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(K0:SortCmd{}, K1:SortPgm{}))) [functional{}()] // functional
  axiom{}\implies{SortPgm{}} (\and{SortPgm{}} (Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(X0:SortCmd{}, X1:SortPgm{}), Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(Y0:SortCmd{}, Y1:SortPgm{})), Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(\and{SortCmd{}} (X0:SortCmd{}, Y0:SortCmd{}), \and{SortPgm{}} (X1:SortPgm{}, Y1:SortPgm{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsColnEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCmd{}, \equals{SortCmd{}, R} (Val:SortCmd{}, Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortCmd{}} (\and{SortCmd{}} (Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(X0:SortInt{}), Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(Y0:SortInt{})), Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellFragment{}, SortKItem{}} (From:SortTCellFragment{}))) [subsort{SortTCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, inj{SortKItem{}, SortK{}} (From:SortKItem{}))) [subsort{SortKItem{}, SortK{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortTCell{}, SortCell{}} (From:SortTCell{}))) [subsort{SortTCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'UndsUnds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblStringBuffer2String'LParUndsRParUnds'STRING-BUFFER-HOOKED'UndsUnds'StringBuffer{}(K0:SortStringBuffer{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'UndsUnds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBufferCellOpt{}, \equals{SortBufferCellOpt{}, R} (Val:SortBufferCellOpt{}, LblnoBufferCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBufferCell{}, SortKItem{}} (From:SortBufferCell{}))) [subsort{SortBufferCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'UndsUnds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCmd{}, SortKItem{}} (From:SortCmd{}))) [subsort{SortCmd{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'UndsUnds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCell{}, SortKItem{}} (From:SortCell{}))) [subsort{SortCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'UndsUnds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortBufferCell{}, SortCell{}} (From:SortBufferCell{}))) [subsort{SortBufferCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStringBuffer{}, SortKItem{}} (From:SortStringBuffer{}))) [subsort{SortStringBuffer{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsColnSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStringBuffer{}, \equals{SortStringBuffer{}, R} (Val:SortStringBuffer{}, Lbl'UndsPlus'String'UndsUnds'STRING-BUFFER-HOOKED'UndsUnds'StringBuffer'Unds'String{}(K0:SortStringBuffer{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBufferCellOpt{}, SortKItem{}} (From:SortBufferCellOpt{}))) [subsort{SortBufferCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'UndsUnds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'UndsUnds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'UndsUnds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTCell{}, \equals{SortTCell{}, R} (Val:SortTCell{}, Lbl'-LT-'T'-GT-'{}(K0:SortKCell{}, K1:SortBufferCell{}))) [functional{}()] // functional
  axiom{}\implies{SortTCell{}} (\and{SortTCell{}} (Lbl'-LT-'T'-GT-'{}(X0:SortKCell{}, X1:SortBufferCell{}), Lbl'-LT-'T'-GT-'{}(Y0:SortKCell{}, Y1:SortBufferCell{})), Lbl'-LT-'T'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortBufferCell{}} (X1:SortBufferCell{}, Y1:SortBufferCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortString{}, SortKResult{}} (From:SortString{}))) [subsort{SortString{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTCellOpt{}, SortKItem{}} (From:SortTCellOpt{}))) [subsort{SortTCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'UndsUnds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{} \or{SortBufferCell{}} (\exists{SortBufferCell{}} (X0:SortStringBuffer{}, Lbl'-LT-'buffer'-GT-'{}(X0:SortStringBuffer{})), \bottom{SortBufferCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBufferCell{}, inj{SortBufferCell{}, SortKItem{}} (Val:SortBufferCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortKItem{}} (Val:SortTCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortKItem{}} (Val:SortTCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStringBuffer{}, inj{SortStringBuffer{}, SortKItem{}} (Val:SortStringBuffer{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTCell{}, inj{SortTCell{}, SortKItem{}} (Val:SortTCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCell{}, inj{SortCell{}, SortKItem{}} (Val:SortCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCmd{}, inj{SortCmd{}, SortKItem{}} (Val:SortCmd{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBufferCellOpt{}, inj{SortBufferCellOpt{}, SortKItem{}} (Val:SortBufferCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPgm{}, inj{SortPgm{}, SortKItem{}} (Val:SortPgm{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \bottom{SortKItem{}}()))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \bottom{SortList{}}() [constructor{}()] // no junk
  axiom{} \or{SortTCellOpt{}} (LblnoTCell{}(), \or{SortTCellOpt{}} (\exists{SortTCellOpt{}} (Val:SortTCell{}, inj{SortTCell{}, SortTCellOpt{}} (Val:SortTCell{})), \bottom{SortTCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortTCellFragment{}} (\exists{SortTCellFragment{}} (X0:SortKCellOpt{}, \exists{SortTCellFragment{}} (X1:SortBufferCellOpt{}, Lbl'-LT-'T'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortBufferCellOpt{}))), \bottom{SortTCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \bottom{SortStringBuffer{}}() [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortTCell{}} (\exists{SortTCell{}} (X0:SortKCell{}, \exists{SortTCell{}} (X1:SortBufferCell{}, Lbl'-LT-'T'-GT-'{}(X0:SortKCell{}, X1:SortBufferCell{}))), \bottom{SortTCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \or{SortGeneratedCounterCellOpt{}} (\exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCell{}} (\exists{SortCell{}} (Val:SortBufferCell{}, inj{SortBufferCell{}, SortCell{}} (Val:SortBufferCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortTCell{}, inj{SortTCell{}, SortCell{}} (Val:SortTCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortKCell{}, inj{SortKCell{}, SortCell{}} (Val:SortKCell{})), \bottom{SortCell{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortK{}} (\exists{SortK{}} (Val:SortBufferCell{}, inj{SortBufferCell{}, SortK{}} (Val:SortBufferCell{})), \or{SortK{}} (\exists{SortK{}} (Val:SortKItem{}, inj{SortKItem{}, SortK{}} (Val:SortKItem{})), \or{SortK{}} (\exists{SortK{}} (Val:SortList{}, inj{SortList{}, SortK{}} (Val:SortList{})), \or{SortK{}} (\exists{SortK{}} (Val:SortTCellOpt{}, inj{SortTCellOpt{}, SortK{}} (Val:SortTCellOpt{})), \or{SortK{}} (\exists{SortK{}} (Val:SortTCellFragment{}, inj{SortTCellFragment{}, SortK{}} (Val:SortTCellFragment{})), \or{SortK{}} (\exists{SortK{}} (Val:SortString{}, inj{SortString{}, SortK{}} (Val:SortString{})), \or{SortK{}} (\exists{SortK{}} (Val:SortStringBuffer{}, inj{SortStringBuffer{}, SortK{}} (Val:SortStringBuffer{})), \or{SortK{}} (\exists{SortK{}} (Val:SortTCell{}, inj{SortTCell{}, SortK{}} (Val:SortTCell{})), \or{SortK{}} (\exists{SortK{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortK{}} (Val:SortGeneratedCounterCellOpt{})), \or{SortK{}} (\exists{SortK{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortK{}} (Val:SortGeneratedCounterCell{})), \or{SortK{}} (\exists{SortK{}} (Val:SortCell{}, inj{SortCell{}, SortK{}} (Val:SortCell{})), \or{SortK{}} (\exists{SortK{}} (Val:SortBool{}, inj{SortBool{}, SortK{}} (Val:SortBool{})), \or{SortK{}} (\exists{SortK{}} (Val:SortKCell{}, inj{SortKCell{}, SortK{}} (Val:SortKCell{})), \or{SortK{}} (\exists{SortK{}} (Val:SortCmd{}, inj{SortCmd{}, SortK{}} (Val:SortCmd{})), \or{SortK{}} (\exists{SortK{}} (Val:SortKResult{}, inj{SortKResult{}, SortK{}} (Val:SortKResult{})), \or{SortK{}} (\exists{SortK{}} (Val:SortMap{}, inj{SortMap{}, SortK{}} (Val:SortMap{})), \or{SortK{}} (\exists{SortK{}} (Val:SortBufferCellOpt{}, inj{SortBufferCellOpt{}, SortK{}} (Val:SortBufferCellOpt{})), \or{SortK{}} (\exists{SortK{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortK{}} (Val:SortKCellOpt{})), \or{SortK{}} (\exists{SortK{}} (Val:SortInt{}, inj{SortInt{}, SortK{}} (Val:SortInt{})), \or{SortK{}} (\exists{SortK{}} (Val:SortFloat{}, inj{SortFloat{}, SortK{}} (Val:SortFloat{})), \or{SortK{}} (\exists{SortK{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortK{}} (Val:SortGeneratedTopCell{})), \or{SortK{}} (\exists{SortK{}} (Val:SortPgm{}, inj{SortPgm{}, SortK{}} (Val:SortPgm{})), \or{SortK{}} (\exists{SortK{}} (Val:SortSet{}, inj{SortSet{}, SortK{}} (Val:SortSet{})), \or{SortK{}} (\exists{SortK{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortK{}} (Val:SortGeneratedTopCellFragment{})), \bottom{SortK{}}())))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortCmd{}} (\exists{SortCmd{}} (X0:SortString{}, LbladdStr'LParUndsRParUnds'TEST'UndsUnds'String{}(X0:SortString{})), \or{SortCmd{}} (\exists{SortCmd{}} (X0:SortInt{}, Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(X0:SortInt{})), \bottom{SortCmd{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortString{}, inj{SortString{}, SortKResult{}} (Val:SortString{})), \bottom{SortKResult{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortMap{}}() [constructor{}()] // no junk
  axiom{} \or{SortBufferCellOpt{}} (LblnoBufferCell{}(), \or{SortBufferCellOpt{}} (\exists{SortBufferCellOpt{}} (Val:SortBufferCell{}, inj{SortBufferCell{}, SortBufferCellOpt{}} (Val:SortBufferCell{})), \bottom{SortBufferCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortTCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortTCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortPgm{}} (Lbl'Stop'List'LBraQuotUndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm'QuotRBraUnds'Pgm{}(), \or{SortPgm{}} (\exists{SortPgm{}} (X0:SortCmd{}, \exists{SortPgm{}} (X1:SortPgm{}, Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(X0:SortCmd{}, X1:SortPgm{}))), \bottom{SortPgm{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortSet{}}() [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortTCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortTCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk

// rules
// rule `_xorBool__BOOL__Bool_Bool`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(312) org.kframework.attributes.Location(Location(312,8,312,38)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(312,8,312,38)"), contentStartLine{}("312"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_andBool_`(#token("false","Bool") #as _10,_0)=>_10 requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(304) org.kframework.attributes.Location(Location(304,8,304,37)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'10:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'10:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(304,8,304,37)"), contentStartLine{}("304"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_andBool_`(#token("true","Bool") #as _44,B)=>B requires _44 ensures _44 [contentStartColumn(8) contentStartLine(302) org.kframework.attributes.Location(Location(302,8,302,37)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'44:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'44:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'44:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(302,8,302,37)"), contentStartLine{}("302"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarCell:SortCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCell{}, SortKItem{}}(VarCell:SortCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `_impliesBool__BOOL__Bool_Bool`(#token("true","Bool") #as _36,B)=>B requires _36 ensures _36 [contentStartColumn(8) contentStartLine(327) org.kframework.attributes.Location(Location(327,8,327,36)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'36:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'36:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'36:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,8,327,36)"), contentStartLine{}("327"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isTCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarTCellOpt:SortTCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCmd(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarCmd:SortCmd{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCmd{}, SortKItem{}}(VarCmd:SortCmd{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCmd{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_orBool__BOOL__Bool_Bool`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(320) org.kframework.attributes.Location(Location(320,8,320,32)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,8,320,32)"), contentStartLine{}("320"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `replace(_,_,_,_)_STRING__String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING__String_String`(`_+String__STRING__String_String`(`substrString(_,_,_)_STRING__String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING__String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING__String_String_String_Int`(`substrString(_,_,_)_STRING__String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING__String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING__String`(ToReplace)),`lengthString(_)_STRING__String`(Source)),ToReplace,Replacement,`_-Int__INT__Int_Int`(Count,#token("1","Int")))) requires `_>Int__INT__Int_Int`(Count,#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(570) org.kframework.attributes.Location(Location(570,8,573,30)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},VarCount:SortInt{}),
        Lbl'UndsPlus'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarCount:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(570,8,573,30)"), contentStartLine{}("570"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `_=/=Bool__BOOL__Bool_Bool`(B1,B2)=>`notBool_`(`_==Bool__BOOL__Bool_Bool`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(332) org.kframework.attributes.Location(Location(332,8,332,57)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Bool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarB1:SortBool{},VarB2:SortBool{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarB1:SortBool{},VarB2:SortBool{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,8,332,57)"), contentStartLine{}("332"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Pgm,KItem}(`.List{"_;__TEST__Cmd_Pgm"}_Pgm`(.KList))),`<buffer>`(SB) #as _141),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{String,KItem}(`StringBuffer2String(_)_STRING-BUFFER-HOOKED__StringBuffer`(SB))),_141),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(25) org.kframework.attributes.Location(Location(25,8,26,42)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/llvm-backend/./test.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(Lbl'Stop'List'LBraQuotUndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm'QuotRBraUnds'Pgm{}()),dotk{}())),\and{SortBufferCell{}}(Lbl'-LT-'buffer'-GT-'{}(VarSB:SortStringBuffer{}),Var'Unds'141:SortBufferCell{})),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortString{}, SortKItem{}}(LblStringBuffer2String'LParUndsRParUnds'STRING-BUFFER-HOOKED'UndsUnds'StringBuffer{}(VarSB:SortStringBuffer{})),dotk{}())),Var'Unds'141:SortBufferCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,8,26,42)"), contentStartLine{}("25"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_orElseBool__BOOL__Bool_Bool`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(325) org.kframework.attributes.Location(Location(325,8,325,37)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarK:SortBool{},\dv{SortBool{}}("false")),
        VarK:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(325,8,325,37)"), contentStartLine{}("325"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblinitGeneratedCounterCell{}(),
        Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Pgm,KItem}(`_;__TEST__Cmd_Pgm`(`loop(_)_TEST__Int`(I),Cmds))),DotVar1),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Pgm,KItem}(`_;__TEST__Cmd_Pgm`(`loop(_)_TEST__Int`(`_-Int__INT__Int_Int`(I,#token("1","Int"))),Cmds))),DotVar1),DotVar0) requires `_>Int__INT__Int_Int`(I,#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(20) org.kframework.attributes.Location(Location(20,8,21,22)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/llvm-backend/./test.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds-GT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(VarI:SortInt{}),VarCmds:SortPgm{})),dotk{}())),VarDotVar1:SortBufferCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(Lbl'Unds'-Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI:SortInt{},\dv{SortInt{}}("1"))),VarCmds:SortPgm{})),dotk{}())),VarDotVar1:SortBufferCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,8,21,22)"), contentStartLine{}("20"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule initBufferCell(.KList)=>`<buffer>`(`.StringBuffer_STRING-BUFFER-HOOKED_`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBufferCell{},R} (
        LblinitBufferCell{}(),
        Lbl'-LT-'buffer'-GT-'{}(Lbl'Stop'StringBuffer'Unds'STRING-BUFFER-HOOKED'Unds'{}())),
      \top{R}()))
  [initializer{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `countAllOccurrences(_,_)_STRING__String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING__String_String`(`substrString(_,_,_)_STRING__String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING__String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING__String`(ToCount)),`lengthString(_)_STRING__String`(Source)),ToCount)) requires `_>=Int__INT__Int_Int`(`findString(_,_,_)_STRING__String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(560) org.kframework.attributes.Location(Location(560,8,561,60)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarSource:SortString{})),VarToCount:SortString{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(560,8,561,60)"), contentStartLine{}("560"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `_andThenBool__BOOL__Bool_Bool`(_8,#token("false","Bool") #as _40)=>_40 requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(310) org.kframework.attributes.Location(Location(310,8,310,36)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(Var'Unds'8:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'40:SortBool{})),
        Var'Unds'40:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(310,8,310,36)"), contentStartLine{}("310"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `#if_#then_#else_#fi_K-EQUAL__Bool_K_K`(C,_11,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(783) org.kframework.attributes.Location(Location(783,8,783,67)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'UndsUnds'Bool'Unds'K'Unds'K{SortK{}}(VarC:SortBool{},Var'Unds'11:SortK{},VarB2:SortK{}),
        VarB2:SortK{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(783,8,783,67)"), contentStartLine{}("783"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule isTCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarTCellFragment:SortTCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarList:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initTCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        LblinitGeneratedTopCell{}(VarInit:SortMap{}),
        Lbl'-LT-'generatedTop'-GT-'{}(LblinitTCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}())),
      \top{R}()))
  [initializer{}()]

// rule `rfindChar(_,_,_)_STRING__String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT__Int_Int`(`rfindString(_,_,_)_STRING__String_String_Int`(S1,`substrString(_,_,_)_STRING__String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING__String_String_Int`(S1,`substrString(_,_,_)_STRING__String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING__String`(S2)),I)) requires `_=/=String__STRING__String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(555) org.kframework.attributes.Location(Location(555,8,555,182)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        LblmaxInt'LParUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarS2:SortString{})),VarI:SortInt{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(555,8,555,182)"), contentStartLine{}("555"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `findChar(_,_,_)_STRING__String_String_Int`(_13,#token("\"\"","String"),_14)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(554) org.kframework.attributes.Location(Location(554,8,554,32)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(Var'Unds'13:SortString{},\dv{SortString{}}(""),Var'Unds'14:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(554,8,554,32)"), contentStartLine{}("554"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisK{}(VarK:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarKConfigVar:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_andThenBool__BOOL__Bool_Bool`(#token("true","Bool") #as _29,K)=>K requires _29 ensures _29 [contentStartColumn(8) contentStartLine(307) org.kframework.attributes.Location(Location(307,8,307,37)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'29:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'29:SortBool{}),VarK:SortBool{}),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'29:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(307,8,307,37)"), contentStartLine{}("307"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_xorBool__BOOL__Bool_Bool`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(313) org.kframework.attributes.Location(Location(313,8,313,38)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(313,8,313,38)"), contentStartLine{}("313"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarBool:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarKItem:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(VarKItem:SortKItem{},dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_>String__STRING__String_String`(S1,S2)=>`_<String__STRING__String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(550) org.kframework.attributes.Location(Location(550,8,550,52)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'Unds-LT-'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(550,8,550,52)"), contentStartLine{}("550"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_<=String__STRING__String_String`(S1,S2)=>`notBool_`(`_<String__STRING__String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(549) org.kframework.attributes.Location(Location(549,8,549,63)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(549,8,549,63)"), contentStartLine{}("549"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `notBool_`(#token("true","Bool") #as _8)=>#token("false","Bool") requires _8 ensures _8 [contentStartColumn(8) contentStartLine(299) org.kframework.attributes.Location(Location(299,8,299,29)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'8:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'8:SortBool{})),
        \dv{SortBool{}}("false")),
      \equals{SortBool{},R}(
        Var'Unds'8:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,8,299,29)"), contentStartLine{}("299"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `countAllOccurrences(_,_)_STRING__String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int__INT__Int_Int`(`findString(_,_,_)_STRING__String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(558) org.kframework.attributes.Location(Location(558,8,559,59)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,8,559,59)"), contentStartLine{}("558"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `_impliesBool__BOOL__Bool_Bool`(#token("false","Bool"),_2)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(328) org.kframework.attributes.Location(Location(328,8,328,40)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,8,328,40)"), contentStartLine{}("328"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarSet:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `findChar(_,_,_)_STRING__String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL__Bool_K_K`(`_==Int__INT__Int_Int`(`findString(_,_,_)_STRING__String_String_Int`(S1,`substrString(_,_,_)_STRING__String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING__String_String_Int`(S1,`substrString(_,_,_)_STRING__String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING__String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL__Bool_K_K`(`_==Int__INT__Int_Int`(`findChar(_,_,_)_STRING__String_String_Int`(S1,`substrString(_,_,_)_STRING__String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING__String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING__String_String_Int`(S1,`substrString(_,_,_)_STRING__String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT__Int_Int`(`findString(_,_,_)_STRING__String_String_Int`(S1,`substrString(_,_,_)_STRING__String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING__String_String_Int`(S1,`substrString(_,_,_)_STRING__String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING__String`(S2)),I)))) requires `_=/=String__STRING__String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(553) org.kframework.attributes.Location(Location(553,8,553,431)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'UndsUnds'Bool'Unds'K'Unds'K{SortInt{}}(Lbl'UndsEqlsEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'UndsUnds'Bool'Unds'K'Unds'K{SortInt{}}(Lbl'UndsEqlsEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarS2:SortString{})),VarI:SortInt{}))))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(553,8,553,431)"), contentStartLine{}("553"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `replaceFirst(_,_,_)_STRING__String_String_String`(Source,ToReplace,_12)=>Source requires `_<Int__INT__Int_Int`(`findString(_,_,_)_STRING__String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(566) org.kframework.attributes.Location(Location(566,8,567,57)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},Var'Unds'12:SortString{}),
        VarSource:SortString{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(566,8,567,57)"), contentStartLine{}("566"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `_xorBool__BOOL__Bool_Bool`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(314) org.kframework.attributes.Location(Location(314,8,314,38)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarB:SortBool{},VarB:SortBool{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(314,8,314,38)"), contentStartLine{}("314"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_>=String__STRING__String_String`(S1,S2)=>`notBool_`(`_<String__STRING__String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(551) org.kframework.attributes.Location(Location(551,8,551,63)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(551,8,551,63)"), contentStartLine{}("551"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarString:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_modInt__INT__Int_Int`(I1,I2)=>`_%Int__INT__Int_Int`(`_+Int_`(`_%Int__INT__Int_Int`(I1,`absInt(_)_INT__Int`(I2)),`absInt(_)_INT__Int`(I2)),`absInt(_)_INT__Int`(I2)) requires `_=/=Int__INT__Int_Int`(I2,#token("0","Int")) ensures #token("true","Bool") [concrete() contentStartColumn(5) contentStartLine(391) org.kframework.attributes.Location(Location(391,5,394,23)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsPerc'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT'UndsUnds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT'UndsUnds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT'UndsUnds'Int{}(VarI2:SortInt{}))),
      \top{R}()))
  [contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,5,394,23)"), concrete{}(), contentStartLine{}("391"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `replace(_,_,_,_)_STRING__String_String_String_Int`(Source,_17,_18,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(574) org.kframework.attributes.Location(Location(574,8,574,49)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},Var'Unds'17:SortString{},Var'Unds'18:SortString{},\dv{SortInt{}}("0")),
        VarSource:SortString{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(574,8,574,49)"), contentStartLine{}("574"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isStringBuffer(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarStringBuffer:SortStringBuffer{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStringBuffer{}, SortKItem{}}(VarStringBuffer:SortStringBuffer{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStringBuffer{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPgm(inj{Pgm,KItem}(Pgm))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPgm{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarPgm:SortPgm{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `_dividesInt__INT__Int_Int`(I1,I2)=>`_==Int__INT__Int_Int`(`_%Int__INT__Int_Int`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(409) org.kframework.attributes.Location(Location(409,8,409,58)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'dividesInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(Lbl'UndsPerc'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0"))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(409,8,409,58)"), contentStartLine{}("409"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isBufferCell(inj{BufferCell,KItem}(BufferCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBufferCell{}(kseq{}(inj{SortBufferCell{}, SortKItem{}}(VarBufferCell:SortBufferCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(kseq{}(VarKItem:SortKItem{},dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `_orElseBool__BOOL__Bool_Bool`(#token("true","Bool") #as _27,_6)=>_27 requires _27 ensures _27 [contentStartColumn(8) contentStartLine(322) org.kframework.attributes.Location(Location(322,8,322,33)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'27:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'27:SortBool{}),Var'Unds'6:SortBool{}),
        Var'Unds'27:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'27:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,8,322,33)"), contentStartLine{}("322"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarKCell:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarGeneratedCounterCell:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_orElseBool__BOOL__Bool_Bool`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(324) org.kframework.attributes.Location(Location(324,8,324,37)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"),VarK:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,8,324,37)"), contentStartLine{}("324"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_orBool__BOOL__Bool_Bool`(_9,#token("true","Bool") #as _38)=>_38 requires _38 ensures _38 [contentStartColumn(8) contentStartLine(318) org.kframework.attributes.Location(Location(318,8,318,34)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'38:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(Var'Unds'9:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'38:SortBool{})),
        Var'Unds'38:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'38:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,8,318,34)"), contentStartLine{}("318"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `#if_#then_#else_#fi_K-EQUAL__Bool_K_K`(C,B1,_10)=>B1 requires C ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(782) org.kframework.attributes.Location(Location(782,8,782,59)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'UndsUnds'Bool'Unds'K'Unds'K{SortK{}}(VarC:SortBool{},VarB1:SortK{},Var'Unds'10:SortK{}),
        VarB1:SortK{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(782,8,782,59)"), contentStartLine{}("782"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `_orBool__BOOL__Bool_Bool`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(319) org.kframework.attributes.Location(Location(319,8,319,32)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(319,8,319,32)"), contentStartLine{}("319"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Pgm,KItem}(`_;__TEST__Cmd_Pgm`(`loop(_)_TEST__Int`(I),Cmds))),DotVar1),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Pgm,KItem}(Cmds)),DotVar1),DotVar0) requires `_==Int__INT__Int_Int`(I,#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(22) org.kframework.attributes.Location(Location(22,8,23,23)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/llvm-backend/./test.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(Lblloop'LParUndsRParUnds'TEST'UndsUnds'Int{}(VarI:SortInt{}),VarCmds:SortPgm{})),dotk{}())),VarDotVar1:SortBufferCell{}),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarCmds:SortPgm{}),dotk{}())),VarDotVar1:SortBufferCell{}),VarDotVar0:SortGeneratedCounterCell{})))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(22,8,23,23)"), contentStartLine{}("22"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule isCmd(inj{Cmd,KItem}(Cmd))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCmd{}(kseq{}(inj{SortCmd{}, SortKItem{}}(VarCmd:SortCmd{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKResult{}(kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarTCell:SortTCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarMap:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_==Int__INT__Int_Int`(I1,I2)=>`_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(407) org.kframework.attributes.Location(Location(407,8,407,40)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(407,8,407,40)"), contentStartLine{}("407"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarKCellOpt:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_orElseBool__BOOL__Bool_Bool`(_5,#token("true","Bool") #as _33)=>_33 requires _33 ensures _33 [contentStartColumn(8) contentStartLine(323) org.kframework.attributes.Location(Location(323,8,323,33)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'33:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(Var'Unds'5:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'33:SortBool{})),
        Var'Unds'33:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'33:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,8,323,33)"), contentStartLine{}("323"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarGeneratedTopCell:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_andThenBool__BOOL__Bool_Bool`(#token("false","Bool") #as _50,_4)=>_50 requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(309) org.kframework.attributes.Location(Location(309,8,309,36)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'50:SortBool{}),Var'Unds'4:SortBool{}),
        Var'Unds'50:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(309,8,309,36)"), contentStartLine{}("309"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(300) org.kframework.attributes.Location(Location(300,8,300,29)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\dv{SortBool{}}("false")),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(300,8,300,29)"), contentStartLine{}("300"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_xorBool__BOOL__Bool_Bool`(B1,B2)=>`notBool_`(`_==Bool__BOOL__Bool_Bool`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(315) org.kframework.attributes.Location(Location(315,8,315,57)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarB1:SortBool{},VarB2:SortBool{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarB1:SortBool{},VarB2:SortBool{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(315,8,315,57)"), contentStartLine{}("315"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_==String__STRING__String_String`(S1,S2)=>`_==K_`(inj{String,KItem}(S1),inj{String,KItem}(S2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(537) org.kframework.attributes.Location(Location(537,8,537,49)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS1:SortString{}),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(VarS2:SortString{}),dotk{}()))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(537,8,537,49)"), contentStartLine{}("537"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTCellFragment(inj{TCellFragment,KItem}(TCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCellFragment{}(kseq{}(inj{SortTCellFragment{}, SortKItem{}}(VarTCellFragment:SortTCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `_==Bool__BOOL__Bool_Bool`(K1,K2)=>`_==K_`(inj{Bool,KItem}(K1),inj{Bool,KItem}(K2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(778) org.kframework.attributes.Location(Location(778,8,778,43)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Bool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarK1:SortBool{},VarK2:SortBool{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}),dotk{}()),kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}),dotk{}()))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(778,8,778,43)"), contentStartLine{}("778"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isTCell(inj{TCell,KItem}(TCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCell{}(kseq{}(inj{SortTCell{}, SortKItem{}}(VarTCell:SortTCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `rfindChar(_,_,_)_STRING__String_String_Int`(_15,#token("\"\"","String"),_16)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(556) org.kframework.attributes.Location(Location(556,8,556,33)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(Var'Unds'15:SortString{},\dv{SortString{}}(""),Var'Unds'16:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(556,8,556,33)"), contentStartLine{}("556"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isBufferCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarBufferCellOpt:SortBufferCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBufferCellOpt{}, SortKItem{}}(VarBufferCellOpt:SortBufferCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBufferCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarFloat:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `signExtendBitRangeInt(_,_,_)_INT__Int_Int_Int`(I,IDX,LEN)=>`_-Int__INT__Int_Int`(`_modInt__INT__Int_Int`(`_+Int_`(`bitRangeInt(_,_,_)_INT__Int_Int_Int`(I,IDX,LEN),`_<<Int__INT__Int_Int`(#token("1","Int"),`_-Int__INT__Int_Int`(LEN,#token("1","Int")))),`_<<Int__INT__Int_Int`(#token("1","Int"),LEN)),`_<<Int__INT__Int_Int`(#token("1","Int"),`_-Int__INT__Int_Int`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(386) org.kframework.attributes.Location(Location(386,8,386,164)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'-Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(Lbl'Unds'modInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarLEN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(386,8,386,164)"), contentStartLine{}("386"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `replaceFirst(_,_,_)_STRING__String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING__String_String`(`_+String__STRING__String_String`(`substrString(_,_,_)_STRING__String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING__String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING__String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING__String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING__String`(ToReplace)),`lengthString(_)_STRING__String`(Source))) requires `_>=Int__INT__Int_Int`(`findString(_,_,_)_STRING__String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(563) org.kframework.attributes.Location(Location(563,8,565,66)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lbl'UndsPlus'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING'UndsUnds'String{}(VarSource:SortString{})))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(563,8,565,66)"), contentStartLine{}("563"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarInt:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `_andBool_`(_3,#token("false","Bool") #as _25)=>_25 requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(305) org.kframework.attributes.Location(Location(305,8,305,37)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(Var'Unds'3:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'25:SortBool{})),
        Var'Unds'25:SortBool{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(305,8,305,37)"), contentStartLine{}("305"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(776) org.kframework.attributes.Location(Location(776,8,776,45)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(776,8,776,45)"), contentStartLine{}("776"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isBufferCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarBufferCell:SortBufferCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBufferCell{}, SortKItem{}}(VarBufferCell:SortBufferCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBufferCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTCellOpt(inj{TCellOpt,KItem}(TCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTCellOpt{}(kseq{}(inj{SortTCellOpt{}, SortKItem{}}(VarTCellOpt:SortTCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPgm(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarPgm:SortPgm{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPgm{}, SortKItem{}}(VarPgm:SortPgm{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPgm{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `project:Pgm`(inj{Pgm,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPgm{},R} (
        Lblproject'Coln'Pgm{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarK:SortPgm{}),dotk{}())),
        VarK:SortPgm{}),
      \top{R}()))
  [projection{}()]

// rule isBufferCellOpt(inj{BufferCellOpt,KItem}(BufferCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBufferCellOpt{}(kseq{}(inj{SortBufferCellOpt{}, SortKItem{}}(VarBufferCellOpt:SortBufferCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `replaceAll(_,_,_)_STRING__String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING__String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING__String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(575) org.kframework.attributes.Location(Location(575,8,575,154)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'UndsUnds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(575,8,575,154)"), contentStartLine{}("575"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_divInt__INT__Int_Int`(I1,I2)=>`_/Int__INT__Int_Int`(`_-Int__INT__Int_Int`(I1,`_modInt__INT__Int_Int`(I1,I2)),I2) requires `_=/=Int__INT__Int_Int`(I2,#token("0","Int")) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(388) org.kframework.attributes.Location(Location(388,8,389,23)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'divInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsSlsh'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(Lbl'Unds'-Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},Lbl'Unds'modInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{})),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,8,389,23)"), contentStartLine{}("388"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarKResult:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKResult{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `freshInt(_)_INT__Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(412) org.kframework.attributes.Location(Location(412,8,412,28)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfreshInt'LParUndsRParUnds'INT'UndsUnds'Int{}(VarI:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(412,8,412,28)"), contentStartLine{}("412"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule initTCell(Init)=>`<T>`(initKCell(Init),initBufferCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTCell{},R} (
        LblinitTCell{}(VarInit:SortMap{}),
        Lbl'-LT-'T'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitBufferCell{}())),
      \top{R}()))
  [initializer{}()]

// rule `_andThenBool__BOOL__Bool_Bool`(K,#token("true","Bool") #as _42)=>K requires _42 ensures _42 [contentStartColumn(8) contentStartLine(308) org.kframework.attributes.Location(Location(308,8,308,37)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'42:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarK:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'42:SortBool{})),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'42:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(308,8,308,37)"), contentStartLine{}("308"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `_=/=String__STRING__String_String`(S1,S2)=>`notBool_`(`_==String__STRING__String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(536) org.kframework.attributes.Location(Location(536,8,536,65)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING'UndsUnds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(536,8,536,65)"), contentStartLine{}("536"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isCell(inj{Cell,KItem}(Cell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarCell:SortCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStringBuffer(inj{StringBuffer,KItem}(StringBuffer))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStringBuffer{}(kseq{}(inj{SortStringBuffer{}, SortKItem{}}(VarStringBuffer:SortStringBuffer{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `_andBool_`(B,#token("true","Bool") #as _19)=>B requires _19 ensures _19 [contentStartColumn(8) contentStartLine(303) org.kframework.attributes.Location(Location(303,8,303,37)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'19:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(VarB:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'19:SortBool{})),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'19:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(303,8,303,37)"), contentStartLine{}("303"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule initKCell(Init)=>`<k>`(inj{Pgm,KItem}(`project:Pgm`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        LblinitKCell{}(VarInit:SortMap{}),
        Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(Lblproject'Coln'Pgm{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}()))),dotk{}()))),
      \top{R}()))
  [initializer{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `_impliesBool__BOOL__Bool_Bool`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(330) org.kframework.attributes.Location(Location(330,8,330,45)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        LblnotBool'Unds'{}(VarB:SortBool{})),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,8,330,45)"), contentStartLine{}("330"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `<generatedTop>`(`<T>`(`<k>`(inj{Pgm,KItem}(`_;__TEST__Cmd_Pgm`(`addStr(_)_TEST__String`(S),Cmds))),`<buffer>`(SB)),DotVar0)=>`<generatedTop>`(`<T>`(`<k>`(inj{Pgm,KItem}(Cmds)),`<buffer>`(`_+String__STRING-BUFFER-HOOKED__StringBuffer_String`(SB,S))),DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(17) org.kframework.attributes.Location(Location(17,8,18,58)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/llvm-backend/./test.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(Lbl'UndsSClnUndsUnds'TEST'UndsUnds'Cmd'Unds'Pgm{}(LbladdStr'LParUndsRParUnds'TEST'UndsUnds'String{}(VarS:SortString{}),VarCmds:SortPgm{})),dotk{}())),Lbl'-LT-'buffer'-GT-'{}(VarSB:SortStringBuffer{})),VarDotVar0:SortGeneratedCounterCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'T'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarCmds:SortPgm{}),dotk{}())),Lbl'-LT-'buffer'-GT-'{}(Lbl'UndsPlus'String'UndsUnds'STRING-BUFFER-HOOKED'UndsUnds'StringBuffer'Unds'String{}(VarSB:SortStringBuffer{},VarS:SortString{}))),VarDotVar0:SortGeneratedCounterCell{})))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,8,18,58)"), contentStartLine{}("17"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `minInt(_,_)_INT__Int_Int`(I1,I2)=>I2 requires `_>=Int__INT__Int_Int`(I1,I2) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(397) org.kframework.attributes.Location(Location(397,8,397,57)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI2:SortInt{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(397,8,397,57)"), contentStartLine{}("397"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `_impliesBool__BOOL__Bool_Bool`(_1,#token("true","Bool") #as _46)=>_46 requires _46 ensures _46 [contentStartColumn(8) contentStartLine(329) org.kframework.attributes.Location(Location(329,8,329,39)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'46:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(Var'Unds'1:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'46:SortBool{})),
        Var'Unds'46:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'46:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(329,8,329,39)"), contentStartLine{}("329"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `bitRangeInt(_,_,_)_INT__Int_Int_Int`(I,IDX,LEN)=>`_modInt__INT__Int_Int`(`_>>Int__INT__Int_Int`(I,IDX),`_<<Int__INT__Int_Int`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(384) org.kframework.attributes.Location(Location(384,8,384,85)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'modInt'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(Lbl'Unds-GT--GT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(\dv{SortInt{}}("1"),VarLEN:SortInt{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(384,8,384,85)"), contentStartLine{}("384"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `minInt(_,_)_INT__Int_Int`(I1,I2)=>I1 requires `_<=Int__INT__Int_Int`(I1,I2) ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(396) org.kframework.attributes.Location(Location(396,8,396,57)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI1:SortInt{}),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(396,8,396,57)"), contentStartLine{}("396"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K")]

// rule `_orBool__BOOL__Bool_Bool`(#token("true","Bool") #as _12,_7)=>_12 requires _12 ensures _12 [contentStartColumn(8) contentStartLine(317) org.kframework.attributes.Location(Location(317,8,317,34)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'12:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'UndsUnds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'12:SortBool{}),Var'Unds'7:SortBool{}),
        Var'Unds'12:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'12:SortBool{},
        \dv{SortBool{}}("true"))))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,8,317,34)"), contentStartLine{}("317"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

// rule `_=/=Int__INT__Int_Int`(I1,I2)=>`notBool_`(`_==Int__INT__Int_Int`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [contentStartColumn(8) contentStartLine(408) org.kframework.attributes.Location(Location(408,8,408,53)) org.kframework.attributes.Source(Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody)]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'UndsUnds'INT'UndsUnds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}))),
      \top{R}()))
  [contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,8,408,53)"), contentStartLine{}("408"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/evm-semantics/.build/k/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1,1,27,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/ubuntu/builds/llvm-backend/./test.k)")]
