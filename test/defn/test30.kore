// RUN: %interpreter
// RUN: %check-dir-diff
[topCellInitializer{}(LblinitGeneratedTopCell{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)")]

module BASIC-K
    sort SortK{} []
    sort SortKItem{} []
endmodule
[]
module KSEQ
    import BASIC-K []
    symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol dotk{}() : SortK{} [constructor{}(), functional{}(), injective{}()]
    symbol append{}(SortK{}, SortK{}) : SortK{} [function{}(), functional{}()]
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, dotk{}()),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                TAIL:SortK{},
                \top{SortK{}}()
            )
        )
    ) []
    axiom {R} \implies{R}(
        \and{R}(
            \top{R}(),
            \and{R}(
                \in{SortK{}, R}(X0:SortK{}, kseq{}(K:SortKItem{}, KS:SortK{})),
            \and{R}(
                \in{SortK{}, R}(X1:SortK{}, TAIL:SortK{}),
                \top{R}()
            ))
        ),
        \equals{SortK{}, R}(
            append{}(X0:SortK{}, X1:SortK{}),
            \and{SortK{}}(
                kseq{}(K:SortKItem{}, append{}(KS:SortK{}, TAIL:SortK{})),
                \top{SortK{}}()
            )
        )
    ) []
endmodule
[]
module INJ
    symbol inj{From, To}(From) : To [sortInjection{}()]
    axiom {S1, S2, S3, R} \equals{S3, R}(inj{S2, S3}(inj{S1, S2}(T:S1)), inj{S1, S3}(T:S1)) [simplification{}()]
endmodule
[]
module K
    import KSEQ []
    import INJ []
    alias weakExistsFinally{A}(A) : A where weakExistsFinally{A}(@X:A) := @X:A []
    alias weakAlwaysFinally{A}(A) : A where weakAlwaysFinally{A}(@X:A) := @X:A []
    alias allPathGlobally{A}(A) : A where allPathGlobally{A}(@X:A) := @X:A []
endmodule
[]

module TEST

// imports
  import K []

// sorts
  sort SortKCellOpt{} []
  sort SortNumber{} []
  sort SortGeneratedTopCellFragment{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(695,3,695,32)")]
  sort SortKCell{} []
  sort SortGeneratedTopCell{} []
  sort SortGeneratedCounterCell{} []
  sort SortAExp{} []
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,3,218,29)")]
  sort SortGeneratedCounterCellOpt{} []
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/kast.md)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,3,40,28)"), hasDomainValues{}()]
  sort SortBExp{} []
  hooked-sort SortInt{} [hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(971,3,971,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(482,3,482,29)")]
  sort SortKResult{} []
  sort Sort8{} [nat{}("8")]
  hooked-sort SortBool{} [hook{}("BOOL.Bool"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(850,3,850,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), hasDomainValues{}()]
  hooked-sort SortMInt{SortS0} [hook{}("MINT.MInt"), hasDomainValues{}()]

// symbols
  symbol Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer-__TEST_AExp_AExp0_%r %c(%r %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_!=__TEST_BExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_!=__TEST_BExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_%%__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_%%__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_&__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_&__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_*__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_*__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_+__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_+__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_-__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_-__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_/__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_/__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<<__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<<__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<=__TEST_BExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<=__TEST_BExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<__TEST_BExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_<__TEST_BExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_==__TEST_BExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_==__TEST_BExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>=__TEST_BExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>=__TEST_BExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>>__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>>__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>__TEST_BExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_>__TEST_BExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_^__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_^__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_|__TEST_AExp_AExp_AExp0_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(SortK{}) : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%c#freezer_|__TEST_AExp_AExp_AExp1_%r %c(%r %1 %c)%r"), injective{}()]
  symbol Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}() : SortKItem{} [functional{}(), constructor{}(), priorities{}(), right{}(), terminals{}("111"), left{}(), format{}("%c#freezer~__TEST_AExp_AExp0_%r %c(%r %c)%r"), injective{}()]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("ite"), right{}(), terminals{}("1010101"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2046,26,2046,121)"), left{}(), format{}("%c#if%r %1 %c#then%r %2 %c#else%r %3 %c#fi%r"), function{}()]
  hooked-symbol Lbl--MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvuminus"), right{}(), terminals{}("10"), hook{}("MINT.neg"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2713,34,2713,108)"), left{}(), format{}("%c--MInt%r %1"), function{}()]
  symbol Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,19,10,36)"), left{}(), format{}("%c-%r %1"), injective{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_nil"), terminals{}("1"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(719,19,719,142)"), left{}(), format{}("%c.List%r"), function{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,18,248,124)"), left{}(), format{}("%c.Map%r"), function{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1"), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(511,18,511,118)"), left{}(), format{}("%c.Set%r"), function{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), priorities{}(), right{}(), terminals{}("101"), left{}(), format{}("%c<generatedCounter>%r%i%n%1%d%n%c</generatedCounter>%r"), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortKCell{}, SortGeneratedCounterCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), cellName{}("generatedTop"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%1"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortKCellOpt{}, SortGeneratedCounterCellOpt{}) : SortGeneratedTopCellFragment{} [functional{}(), constructor{}(), cellFragment{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1001"), left{}(), format{}("%c<generatedTop>-fragment%r %1 %2 %c</generatedTop>-fragment%r"), injective{}()]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/kast.md)"), cellName{}("k"), maincell{}(), priorities{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), right{}(), terminals{}("101"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(535,17,535,32)"), left{}(), format{}("%c<k>%r%i%n%1%d%n%c</k>%r"), injective{}(), cell{}(), topcell{}()]
  hooked-symbol LblInt2MInt'LParUndsRParUnds'MINT'Unds'MInt'Unds'Int{SortWidth}(SortInt{}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("int2bv"), right{}(), terminals{}("1101"), klabel{}("Int2MInt"), hook{}("MINT.integer"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2648,34,2648,103)"), left{}(), format{}("%cInt2MInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(738,20,738,99)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(785,19,785,120)"), left{}(), format{}("%crange%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), smtlib{}("smt_seq_elem"), terminals{}("1101"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(727,19,727,132)"), left{}(), format{}("%cListItem%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblMInt2Signed'LParUndsRParUnds'MINT'Unds'Int'Unds'MInt{SortWidth}(SortMInt{SortWidth}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("MInt2Signed"), hook{}("MINT.svalue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2645,26,2645,91)"), left{}(), format{}("%cMInt2Signed%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblMInt2Unsigned'LParUndsRParUnds'MINT'Unds'Int'Unds'MInt{SortWidth}(SortMInt{SortWidth}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bv2int"), right{}(), terminals{}("1101"), klabel{}("MInt2Unsigned"), hook{}("MINT.uvalue"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2646,26,2646,111)"), left{}(), format{}("%cMInt2Unsigned%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("0101"), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,20,271,113)"), left{}(), format{}("%1 %c[%r %2 %c]%r"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), prefer{}(), right{}(), terminals{}("010101"), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(290,18,290,140)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(551,18,551,142)"), left{}(), format{}("%1 %c-Set%r %2"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(559,19,559,102)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(519,18,519,119)"), left{}(), format{}("%cSetItem%r %c(%r %1 %c)%r"), injective{}(), function{}()]
  symbol Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,19,28,42)"), left{}(), format{}("%1 %c!=%r %2"), injective{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1019,18,1019,171)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %c%%Int%r %2"), function{}()]
  symbol Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,19,13,41)"), left{}(), format{}("%1 %c%%%r %2"), injective{}()]
  hooked-symbol Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvsrem"), right{}(), terminals{}("010"), hook{}("MINT.srem"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2717,34,2717,112)"), left{}(Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c%%sMInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsPerc'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvurem"), right{}(), terminals{}("010"), hook{}("MINT.urem"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2719,34,2719,112)"), left{}(Lbl'UndsPerc'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c%%uMInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("andInt"), terminals{}("010"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1030,18,1030,184)"), left{}(Lbl'UndsAnd-'Int'Unds'{}()), format{}("%1 %c&Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvand"), right{}(), terminals{}("010"), hook{}("MINT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2728,34,2728,116)"), left{}(Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c&MInt%r %2"), function{}()]
  symbol Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,19,18,41)"), left{}(), format{}("%1 %c&%r %2"), injective{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("*"), right{}(), terminals{}("010"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1015,18,1015,183)"), left{}(Lbl'Unds'modInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c*Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvmul"), right{}(), terminals{}("010"), hook{}("MINT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2715,34,2715,116)"), left{}(Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c*MInt%r %2"), function{}()]
  symbol Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,19,11,41)"), left{}(), format{}("%1 %c*%r %2"), injective{}()]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("+"), right{}(), terminals{}("010"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1024,18,1024,180)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c+Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvadd"), right{}(), terminals{}("010"), hook{}("MINT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2721,34,2721,116)"), left{}(Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c+MInt%r %2"), function{}()]
  symbol Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,19,14,41)"), left{}(), format{}("%1 %c+%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), smt-hook{}("-"), right{}(), terminals{}("010"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1025,18,1025,174)"), left{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), format{}("%1 %c-Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvsub"), right{}(), terminals{}("010"), hook{}("MINT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2722,34,2722,116)"), left{}(Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c-MInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(311,18,311,116)"), left{}(), format{}("%1 %c-Map%r %2"), function{}()]
  symbol Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,19,15,41)"), left{}(), format{}("%1 %c-%r %2"), injective{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1018,18,1018,173)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}()), format{}("%1 %c/Int%r %2"), function{}()]
  symbol Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,19,12,41)"), left{}(), format{}("%1 %c/%r %2"), injective{}()]
  hooked-symbol Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvsdiv"), right{}(), terminals{}("010"), hook{}("MINT.sdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2716,34,2716,112)"), left{}(Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c/sMInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsSlsh'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvudiv"), right{}(), terminals{}("010"), hook{}("MINT.udiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2718,34,2718,112)"), left{}(Lbl'UndsSlsh'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c/uMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shlInt"), terminals{}("010"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1028,18,1028,173)"), left{}(Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}()), format{}("%1 %c<<Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvshl"), right{}(), terminals{}("010"), hook{}("MINT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2724,34,2724,110)"), left{}(Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c<<MInt%r %2"), function{}()]
  symbol Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,19,17,42)"), left{}(), format{}("%1 %c<<%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<="), right{}(), terminals{}("010"), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1086,19,1086,172)"), left{}(Lbl'Unds-LT-Eqls'Int'Unds'{}()), format{}("%1 %c<=Int%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,19,383,87)"), left{}(), format{}("%1 %c<=Map%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(568,19,568,81)"), left{}(), format{}("%1 %c<=Set%r %2"), function{}()]
  symbol Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,19,24,42)"), left{}(), format{}("%1 %c<=%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvsle"), right{}(), terminals{}("010"), hook{}("MINT.sle"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2745,27,2745,111)"), left{}(), format{}("%1 %c<=sMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'uMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvule"), right{}(), terminals{}("010"), hook{}("MINT.ule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2746,27,2746,111)"), left{}(), format{}("%1 %c<=uMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("<"), right{}(), terminals{}("010"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1087,19,1087,167)"), left{}(Lbl'Unds-LT-'Int'Unds'{}()), format{}("%1 %c<Int%r %2"), function{}()]
  symbol Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,19,23,41)"), left{}(), format{}("%1 %c<%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-LT-'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvslt"), right{}(), terminals{}("010"), hook{}("MINT.slt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2743,27,2743,110)"), left{}(), format{}("%1 %c<sMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-LT-'uMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvult"), right{}(), terminals{}("010"), hook{}("MINT.ult"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2744,27,2744,110)"), left{}(), format{}("%1 %c<uMInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(891,19,891,128)"), left{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}()), format{}("%1 %c=/=Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1091,19,1091,184)"), left{}(Lbl'UndsEqlsSlshEqls'Int'Unds'{}()), format{}("%1 %c=/=Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), notEqualEqualK{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("distinct"), right{}(), terminals{}("010"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2042,19,2042,166)"), left{}(Lbl'UndsEqlsEqls'K'Unds'{}(),Lbl'UndsEqlsSlshEqls'K'Unds'{}()), format{}("%1 %c=/=K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'MInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("distinct"), right{}(), terminals{}("010"), hook{}("MINT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2752,27,2752,113)"), left{}(), format{}("%1 %c=/=MInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(890,19,890,120)"), left{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), format{}("%1 %c==Bool%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1090,19,1090,173)"), left{}(Lbl'UndsEqlsEqls'Int'Unds'{}()), format{}("%1 %c==Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),LblnotBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("="), right{}(), terminals{}("010"), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2041,19,2041,152)"), left{}(Lbl'UndsEqlsSlshEqls'K'Unds'{}(),Lbl'UndsEqlsEqls'K'Unds'{}()), format{}("%1 %c==K%r %2"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'MInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("="), right{}(), terminals{}("010"), hook{}("MINT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2751,27,2751,105)"), left{}(), format{}("%1 %c==MInt%r %2"), function{}()]
  symbol Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,19,27,42)"), left{}(), format{}("%1 %c==%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">="), right{}(), terminals{}("010"), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1088,19,1088,172)"), left{}(Lbl'Unds-GT-Eqls'Int'Unds'{}()), format{}("%1 %c>=Int%r %2"), function{}()]
  symbol Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,19,26,42)"), left{}(), format{}("%1 %c>=%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvsge"), right{}(), terminals{}("010"), hook{}("MINT.sge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2749,27,2749,111)"), left{}(), format{}("%1 %c>=sMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'uMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvuge"), right{}(), terminals{}("010"), hook{}("MINT.uge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2750,27,2750,111)"), left{}(), format{}("%1 %c>=uMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("shrInt"), terminals{}("010"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1027,18,1027,173)"), left{}(Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}()), format{}("%1 %c>>Int%r %2"), function{}()]
  symbol Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,19,16,42)"), left{}(), format{}("%1 %c>>%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvashr"), right{}(), terminals{}("010"), hook{}("MINT.ashr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2725,34,2725,113)"), left{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c>>aMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvlshr"), right{}(), terminals{}("010"), hook{}("MINT.lshr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2726,34,2726,113)"), left{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c>>lMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), smt-hook{}(">"), right{}(), terminals{}("010"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1089,19,1089,167)"), left{}(Lbl'Unds-GT-'Int'Unds'{}()), format{}("%1 %c>Int%r %2"), function{}()]
  symbol Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortBExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,19,25,41)"), left{}(), format{}("%1 %c>%r %2"), injective{}()]
  hooked-symbol Lbl'Unds-GT-'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvsgt"), right{}(), terminals{}("010"), hook{}("MINT.sgt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2747,27,2747,110)"), left{}(), format{}("%1 %c>sMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds-GT-'uMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvugt"), right{}(), terminals{}("010"), hook{}("MINT.ugt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2748,27,2748,110)"), left{}(), format{}("%1 %c>uMInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(Lbl'Stop'List{}()), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), element{}(LblListItem{}()), symbol'Kywd'{}(), priorities{}(), right{}(), assoc{}(), smtlib{}("smt_seq_concat"), terminals{}("00"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(711,19,711,188)"), left{}(Lbl'Unds'List'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(Lbl'Stop'Map{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), symbol'Kywd'{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,18,240,173)"), left{}(Lbl'Unds'Map'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(Lbl'Stop'Set{}()), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), element{}(LblSetItem{}()), symbol'Kywd'{}(), idem{}(), comm{}(), priorities{}(), right{}(), assoc{}(), terminals{}("00"), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(503,18,503,165)"), left{}(Lbl'Unds'Set'Unds'{}()), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010101"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(747,19,747,108)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %3 %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(), right{}(), terminals{}("010111"), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(299,18,299,117)"), left{}(), format{}("%1 %c[%r %2 %c<-%r %cundef%r %c]%r"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010110"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,20,281,134)"), left{}(), format{}("%1 %c[%r %2 %c]%r %corDefault%r %3"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("(mod (^ #1 #2) #3)"), right{}(), terminals{}("0100"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1013,18,1013,139)"), left{}(Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'UndsXor-'Int'Unds'{}()), format{}("%1 %c^%%Int%r %2 %3"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("^"), right{}(), terminals{}("010"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,18,1012,178)"), left{}(Lbl'UndsXor-'Int'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}()), format{}("%1 %c^Int%r %2"), function{}()]
  symbol Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,19,19,41)"), left{}(), format{}("%1 %c^%r %2"), injective{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(883,19,883,185)"), left{}(Lbl'Unds'andBool'Unds'{}()), format{}("%1 %candBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("and"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(884,19,884,147)"), left{}(Lbl'Unds'andThenBool'Unds'{}()), format{}("%1 %candThenBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("div"), right{}(), terminals{}("010"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1021,18,1021,122)"), left{}(Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}()), format{}("%1 %cdivInt%r %2"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1100,19,1100,53)"), left{}(), format{}("%1 %cdividesInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("=>"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(888,19,888,146)"), left{}(Lbl'Unds'impliesBool'Unds'{}()), format{}("%1 %cimpliesBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("010"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(794,19,794,97)"), left{}(), format{}("%1 %cin%r %2"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("01101"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,19,357,89)"), left{}(), format{}("%1 %cin_keys%r %c(%r %2 %c)%r"), function{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'-Int'Unds'{}()), smt-hook{}("mod"), right{}(), terminals{}("010"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1022,18,1022,122)"), left{}(Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}()), format{}("%1 %cmodInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(886,19,886,180)"), left{}(Lbl'Unds'orBool'Unds'{}()), format{}("%1 %corBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("or"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(887,19,887,144)"), left{}(Lbl'Unds'orElseBool'Unds'{}()), format{}("%1 %corElseBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}()), smt-hook{}("xor"), boolOperation{}(), right{}(), terminals{}("010"), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(885,19,885,139)"), left{}(Lbl'Unds'xorBool'Unds'{}()), format{}("%1 %cxorBool%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(Lbl'UndsPipe'Int'Unds'{}()), right{}(), smtlib{}("xorInt"), terminals{}("010"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1032,18,1032,190)"), left{}(Lbl'Unds'xorInt'Unds'{}()), format{}("%1 %cxorInt%r %2"), function{}()]
  hooked-symbol Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvxor"), right{}(), terminals{}("010"), hook{}("MINT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2730,34,2730,118)"), left{}(Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %cxorMInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Stop'Map{}(),Lbl'Unds'Map'Unds'{}()), right{}(Lbl'UndsPipe'-'-GT-Unds'{}()), terminals{}("010"), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,18,257,151)"), left{}(Lbl'UndsPipe'-'-GT-Unds'{}()), format{}("%1 %c|->%r %2"), injective{}(), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), comm{}(), priorities{}(), right{}(), smtlib{}("orInt"), terminals{}("010"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1034,18,1034,181)"), left{}(Lbl'UndsPipe'Int'Unds'{}()), format{}("%1 %c|Int%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("bvor"), right{}(), terminals{}("010"), hook{}("MINT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2732,34,2732,114)"), left{}(Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), format{}("%1 %c|MInt%r %2"), function{}()]
  hooked-symbol Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), comm{}(), priorities{}(), right{}(), terminals{}("010"), hook{}("SET.union"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(530,18,530,92)"), left{}(Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}()), format{}("%1 %c|Set%r %2"), function{}()]
  symbol Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(SortAExp{}, SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(), right{}(), terminals{}("010"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,19,20,41)"), left{}(), format{}("%1 %c|%r %2"), injective{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 0) (- 0 #1) #1)"), right{}(), terminals{}("1101"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1051,18,1051,119)"), left{}(), format{}("%cabsInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1076,18,1076,103)"), left{}(), format{}("%cbitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblbitwidthMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'MInt{SortWidth}(SortMInt{SortWidth}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("bitwidthMInt"), hook{}("MINT.bitwidth"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2628,26,2628,92)"), left{}(), format{}("%cbitwidthMInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,20,393,101)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(586,20,586,95)"), left{}(), format{}("%cchoice%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101010101"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(775,19,775,100)"), left{}(), format{}("%cfillList%r %c(%r %1 %c,%r %2 %c,%r %3 %c,%r %4 %c)%r"), function{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1216,18,1216,77)"), left{}(), format{}("%cfreshInt%r %c(%r %1 %c)%r"), private{}(), function{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cgetGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1"), left{}(), initializer{}(), format{}("%cinitGeneratedCounterCell%r"), function{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [noThread{}(), priorities{}(), right{}(), terminals{}("1101"), left{}(), initializer{}(), format{}("%cinitKCell%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), comm{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(541,18,541,90)"), left{}(), format{}("%cintersectSet%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol Lblis8{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("8"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cis8%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisAExp{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("AExp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisAExp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBExp{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("BExp"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBExp%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisBool{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Bool"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisBool%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedCounterCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedCounterCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedTopCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("GeneratedTopCellFragment"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisGeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisInt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Int"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisK{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("K"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisK%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKCell{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KCell"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKCell%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KCellOpt"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KConfigVar"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKConfigVar%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKItem{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KItem"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKItem%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisKResult{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("KResult"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisKResult%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisList{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("List"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisList%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMInt'LBra'8'RBra'{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("MInt{8}"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMInt{8}%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisMap{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Map"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisMap%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisNumber{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Number"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisNumber%r %c(%r %1 %c)%r"), function{}()]
  symbol LblisSet{}(SortK{}) : SortBool{} [functional{}(), total{}(), predicate{}("Set"), priorities{}(), right{}(), terminals{}("1101"), left{}(), format{}("%cisSet%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,18,341,82)"), left{}(), format{}("%ckeys%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), hook{}("MAP.keys_list"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,19,349,80)"), left{}(), format{}("%ckeys_list%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1062,18,1062,75)"), left{}(), format{}("%clog2Int%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(756,19,756,82)"), left{}(), format{}("%cmakeList%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 #2) #2 #1)"), right{}(), terminals{}("110101"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1043,18,1043,114)"), left{}(), format{}("%cmaxInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (< #1 #2) #1 #2)"), right{}(), terminals{}("110101"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1042,18,1042,114)"), left{}(), format{}("%cminInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblnoGeneratedCounterCell{}() : SortGeneratedCounterCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("GeneratedCounterCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoGeneratedCounterCell%r"), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [functional{}(), constructor{}(), cellOptAbsent{}("KCell"), priorities{}(), right{}(), terminals{}("1"), left{}(), format{}("%cnoKCell%r"), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'Unds'orElseBool'Unds'{}(),Lbl'Unds'orBool'Unds'{}(),Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(),Lbl'Unds'andThenBool'Unds'{}(),Lbl'Unds'impliesBool'Unds'{}(),Lbl'UndsEqlsEqls'Bool'Unds'{}(),Lbl'Unds'andBool'Unds'{}(),Lbl'Unds'xorBool'Unds'{}()), smt-hook{}("not"), boolOperation{}(), right{}(), terminals{}("10"), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(882,19,882,172)"), left{}(), format{}("%cnotBool%r %1"), function{}()]
  symbol Lblproject'Coln'AExp{}(SortK{}) : SortAExp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:AExp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'BExp{}(SortK{}) : SortBExp{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:BExp%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Bool%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedCounterCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedCounterCellOpt{}(SortK{}) : SortGeneratedCounterCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedCounterCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:GeneratedTopCellFragment%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Int%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'K{}(SortK{}) : SortK{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:K%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KCell%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KCellOpt%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KItem%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'KResult{}(SortK{}) : SortKResult{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:KResult%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:List%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'MInt'LBra'8'RBra'{}(SortK{}) : SortMInt{Sort8{}} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:MInt{8}%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Map%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Number{}(SortK{}) : SortNumber{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Number%r %c(%r %1 %c)%r"), function{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [priorities{}(), right{}(), terminals{}("1101"), projection{}(), left{}(), format{}("%cproject:Set%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1110,18,1110,65)"), left{}(), format{}("%crandInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,18,333,87)"), left{}(), format{}("%cremoveAll%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblroundMInt'LParUndsRParUnds'MINT'Unds'MInt'Unds'MInt{SortWidth1, SortWidth2}(SortMInt{SortWidth2}) : SortMInt{SortWidth1} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("roundMInt"), hook{}("MINT.round"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2777,44,2777,103)"), left{}(), format{}("%croundMInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LblsMaxMInt'LParUndsCommUndsRParUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (bvslt #1 #2) #2 #1)"), right{}(), terminals{}("110101"), klabel{}("sMaxMInt"), hook{}("MINT.smax"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2762,34,2762,140)"), left{}(), format{}("%csMaxMInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblsMinMInt'LParUndsCommUndsRParUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (bvslt #1 #2) #1 #2)"), right{}(), terminals{}("110101"), klabel{}("sMinMInt"), hook{}("MINT.smin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2763,34,2763,140)"), left{}(), format{}("%csMinMInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1077,18,1077,113)"), left{}(), format{}("%csignExtendBitRangeInt%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), smtlib{}("smt_seq_len"), terminals{}("1101"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(802,18,802,117)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,18,373,99)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("1101"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(576,18,576,76)"), left{}(), format{}("%csize%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsmaxMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("smaxMInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2659,18,2659,45)"), left{}(), format{}("%csmaxMInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsminMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("sminMInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2658,18,2658,45)"), left{}(), format{}("%csminMInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LblsoverflowMInt'LParUndsCommUndsRParUnds'MINT'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("soverflowMInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2675,19,2675,62)"), left{}(), format{}("%csoverflowMInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT-COMMON'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), impure{}(), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1111,16,1111,65)"), left{}(), format{}("%csrandInt%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol LbluMaxMInt'LParUndsCommUndsRParUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (bvult #1 #2) #2 #1)"), right{}(), terminals{}("110101"), klabel{}("uMaxMInt"), hook{}("MINT.umax"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2764,34,2764,140)"), left{}(), format{}("%cuMaxMInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LbluMinMInt'LParUndsCommUndsRParUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}, SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), smt-hook{}("(ite (bvult #1 #2) #1 #2)"), right{}(), terminals{}("110101"), klabel{}("uMinMInt"), hook{}("MINT.umin"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2765,34,2765,140)"), left{}(), format{}("%cuMinMInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  symbol LblumaxMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("umaxMInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2661,18,2661,45)"), left{}(), format{}("%cumaxMInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LbluminMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("uminMInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2660,18,2660,45)"), left{}(), format{}("%cuminMInt%r %c(%r %1 %c)%r"), function{}()]
  symbol LbluoverflowMInt'LParUndsCommUndsRParUnds'MINT'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("110101"), klabel{}("uoverflowMInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2676,19,2676,62)"), left{}(), format{}("%cuoverflowMInt%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("11010101"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(766,19,766,97)"), left{}(), format{}("%cupdateList%r %c(%r %1 %c,%r %2 %c,%r %3 %c)%r"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(), right{}(), terminals{}("110101"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,18,324,87)"), left{}(), format{}("%cupdateMap%r %c(%r %1 %c,%r %2 %c)%r"), function{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), priorities{}(), right{}(), terminals{}("1101"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(365,19,365,77)"), left{}(), format{}("%cvalues%r %c(%r %1 %c)%r"), function{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), symbol'Kywd'{}(), priorities{}(Lbl'UndsPlus'Int'Unds'{}(),Lbl'Unds'divInt'Unds'{}(),Lbl'UndsPerc'Int'Unds'{}(),Lbl'Unds-GT--GT-'Int'Unds'{}(),Lbl'Unds'xorInt'Unds'{}(),Lbl'UndsSlsh'Int'Unds'{}(),Lbl'UndsAnd-'Int'Unds'{}(),Lbl'UndsXor-'Int'Unds'{}(),Lbl'Unds-LT--LT-'Int'Unds'{}(),Lbl'UndsStar'Int'Unds'{}(),Lbl'UndsPipe'Int'Unds'{}(),Lbl'Unds'modInt'Unds'{}(),Lbl'UndsXor-Perc'Int'UndsUnds'{}(),Lbl'Unds'-Int'Unds'{}()), right{}(), smtlib{}("notInt"), terminals{}("10"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1010,18,1010,168)"), left{}(), format{}("%c~Int%r %1"), function{}()]
  hooked-symbol Lbl'Tild'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt{SortWidth}(SortMInt{SortWidth}) : SortMInt{SortWidth} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), total{}(), priorities{}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsSlsh'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'Unds-GT--GT-'lMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'uMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}(),Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{}()), smt-hook{}("bvnot"), right{}(), terminals{}("10"), hook{}("MINT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2712,34,2712,104)"), left{}(), format{}("%c~MInt%r %1"), function{}()]
  symbol Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(SortAExp{}) : SortAExp{} [functional{}(), constructor{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), priorities{}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(),Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}()), right{}(), terminals{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,19,9,36)"), left{}(), format{}("%c~%r %1"), injective{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortNumber{}, \equals{SortNumber{}, R} (Val:SortNumber{}, inj{SortInt{}, SortNumber{}} (From:SortInt{}))) [subsort{SortInt{}, SortNumber{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAExp{}, SortKItem{}} (From:SortAExp{}))) [subsort{SortAExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (From:SortGeneratedCounterCellOpt{}))) [subsort{SortGeneratedCounterCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKResult{}, SortKItem{}} (From:SortKResult{}))) [subsort{SortKResult{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, inj{SortBool{}, SortBExp{}} (From:SortBool{}))) [subsort{SortBool{}, SortBExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, inj{SortNumber{}, SortAExp{}} (From:SortNumber{}))) [subsort{SortNumber{}, SortAExp{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNumber{}, SortKItem{}} (From:SortNumber{}))) [subsort{SortNumber{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMInt{Sort8{}}, SortKItem{}} (From:SortMInt{Sort8{}}))) [subsort{SortMInt{Sort8{}}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (From:SortGeneratedCounterCell{}))) [subsort{SortGeneratedCounterCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNumber{}, \equals{SortNumber{}, R} (Val:SortNumber{}, inj{SortMInt{Sort8{}}, SortNumber{}} (From:SortMInt{Sort8{}}))) [subsort{SortMInt{Sort8{}}, SortNumber{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortMInt{Sort8{}}, SortKResult{}} (From:SortMInt{Sort8{}}))) [subsort{SortMInt{Sort8{}}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKConfigVar{}, SortKItem{}} (From:SortKConfigVar{}))) [subsort{SortKConfigVar{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBExp{}, SortKItem{}} (From:SortBExp{}))) [subsort{SortBExp{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKResult{}, \equals{SortKResult{}, R} (Val:SortKResult{}, inj{SortBool{}, SortKResult{}} (From:SortBool{}))) [subsort{SortBool{}, SortKResult{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(Y0:SortK{})), Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{}), Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}())) [functional{}()] // functional
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, Lbl--MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(K0:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{})), Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortKCell{}, K1:SortGeneratedCounterCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortKCell{}, X1:SortGeneratedCounterCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortKCell{}, Y1:SortGeneratedCounterCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortGeneratedCounterCell{}} (X1:SortGeneratedCounterCell{}, Y1:SortGeneratedCounterCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortGeneratedCounterCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortGeneratedCounterCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortGeneratedCounterCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortGeneratedCounterCellOpt{}} (X1:SortGeneratedCounterCellOpt{}, Y1:SortGeneratedCounterCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, LblInt2MInt'LParUndsRParUnds'MINT'Unds'MInt'Unds'Int{SortWidth}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblMInt2Signed'LParUndsRParUnds'MINT'Unds'Int'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblMInt2Unsigned'LParUndsRParUnds'MINT'Unds'Int'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsAnd-'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsAnd-'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsStar'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsStar'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsPlus'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsPlus'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'uMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'uMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'MInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'MInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'uMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBExp{}, \equals{SortBExp{}, R} (Val:SortBExp{}, Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortBExp{}} (\and{SortBExp{}} (Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'uMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \equals{SortInt{}, R} (Lbl'Unds'xorInt'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'Unds'xorInt'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \equals{SortInt{}, R} (Lbl'UndsPipe'Int'Unds'{}(K1:SortInt{},K2:SortInt{}),Lbl'UndsPipe'Int'Unds'{}(K2:SortInt{},K1:SortInt{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \equals{SortSet{}, R} (Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K1:SortSet{},K2:SortSet{}),Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(K0:SortAExp{}, K1:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}, Y1:SortAExp{})), Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}), \and{SortAExp{}} (X1:SortAExp{}, Y1:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAExp{}} (\and{SortAExp{}} (Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblbitwidthMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \equals{SortSet{}, R} (LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K1:SortSet{},K2:SortSet{}),LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lblis8{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisAExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBExp{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisBool{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedCounterCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisGeneratedTopCellFragment{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisInt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisK{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCell{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKCellOpt{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKConfigVar{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKItem{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisKResult{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisList{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMInt'LBra'8'RBra'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisMap{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisNumber{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblisSet{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortGeneratedCounterCellOpt{}, \equals{SortGeneratedCounterCellOpt{}, R} (Val:SortGeneratedCounterCellOpt{}, LblnoGeneratedCounterCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R, SortWidth1, SortWidth2} \exists{R} (Val:SortMInt{SortWidth1}, \equals{SortMInt{SortWidth1}, R} (Val:SortMInt{SortWidth1}, LblroundMInt'LParUndsRParUnds'MINT'Unds'MInt'Unds'MInt{SortWidth1, SortWidth2}(K0:SortMInt{SortWidth2}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, LblsMaxMInt'LParUndsCommUndsRParUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, LblsMinMInt'LParUndsCommUndsRParUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, LbluMaxMInt'LParUndsCommUndsRParUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, LbluMinMInt'LParUndsCommUndsRParUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}, K1:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R, SortWidth} \exists{R} (Val:SortMInt{SortWidth}, \equals{SortMInt{SortWidth}, R} (Val:SortMInt{SortWidth}, Lbl'Tild'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt{SortWidth}(K0:SortMInt{SortWidth}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAExp{}, \equals{SortAExp{}, R} (Val:SortAExp{}, Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(K0:SortAExp{}))) [functional{}()] // functional
  axiom{}\implies{SortAExp{}} (\and{SortAExp{}} (Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{}), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(Y0:SortAExp{})), Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(\and{SortAExp{}} (X0:SortAExp{}, Y0:SortAExp{}))) [constructor{}()] // no confusion same constructor
  axiom{} \or{SortKItem{}} (Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(X0:SortK{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortK{}, Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(X0:SortK{})), \or{SortKItem{}} (Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKConfigVar{}, inj{SortKConfigVar{}, SortKItem{}} (Val:SortKConfigVar{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBExp{}, inj{SortBExp{}, SortKItem{}} (Val:SortBExp{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCellOpt{}, inj{SortGeneratedCounterCellOpt{}, SortKItem{}} (Val:SortGeneratedCounterCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortKItem{}} (Val:SortGeneratedCounterCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNumber{}, inj{SortNumber{}, SortKItem{}} (Val:SortNumber{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKResult{}, inj{SortKResult{}, SortKItem{}} (Val:SortKResult{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMInt{Sort8{}}, inj{SortMInt{Sort8{}}, SortKItem{}} (Val:SortMInt{Sort8{}})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAExp{}, inj{SortAExp{}, SortKItem{}} (Val:SortAExp{})), \bottom{SortKItem{}}()))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (X0:SortAExp{}, \exists{SortBExp{}} (X1:SortAExp{}, Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortBExp{}} (\exists{SortBExp{}} (Val:SortBool{}, inj{SortBool{}, SortBExp{}} (Val:SortBool{})), \bottom{SortBExp{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCellOpt{}} (LblnoGeneratedCounterCell{}(), \or{SortGeneratedCounterCellOpt{}} (\exists{SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{}, inj{SortGeneratedCounterCell{}, SortGeneratedCounterCellOpt{}} (Val:SortGeneratedCounterCell{})), \bottom{SortGeneratedCounterCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortInt{}, inj{SortInt{}, SortNumber{}} (Val:SortInt{})), \or{SortNumber{}} (\exists{SortNumber{}} (Val:SortMInt{Sort8{}}, inj{SortMInt{Sort8{}}, SortNumber{}} (Val:SortMInt{Sort8{}})), \bottom{SortNumber{}}())) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortBool{}, inj{SortBool{}, SortKResult{}} (Val:SortBool{})), \or{SortKResult{}} (\exists{SortKResult{}} (Val:SortMInt{Sort8{}}, inj{SortMInt{Sort8{}}, SortKResult{}} (Val:SortMInt{Sort8{}})), \bottom{SortKResult{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortKCell{}, \exists{SortGeneratedTopCell{}} (X1:SortGeneratedCounterCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortKCell{}, X1:SortGeneratedCounterCell{}))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortMInt{Sort8{}}} (\top{SortMInt{Sort8{}}}(), \bottom{SortMInt{Sort8{}}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortKCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortGeneratedCounterCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortGeneratedCounterCellOpt{}))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{})), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, \exists{SortAExp{}} (X1:SortAExp{}, Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(X0:SortAExp{}, X1:SortAExp{}))), \or{SortAExp{}} (\exists{SortAExp{}} (X0:SortAExp{}, Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(X0:SortAExp{})), \or{SortAExp{}} (\exists{SortAExp{}} (Val:SortNumber{}, inj{SortNumber{}, SortAExp{}} (Val:SortNumber{})), \or{SortAExp{}} (\exists{SortAExp{}} (Val:SortInt{}, inj{SortInt{}, SortAExp{}} (Val:SortInt{})), \or{SortAExp{}} (\exists{SortAExp{}} (Val:SortMInt{Sort8{}}, inj{SortMInt{Sort8{}}, SortAExp{}} (Val:SortMInt{Sort8{}})), \bottom{SortAExp{}}()))))))))))))))) [constructor{}()] // no junk

// rules
// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,B1,_Gen0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2), org.kframework.attributes.Location(Location(2073,8,2073,59)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarB1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            Var'Unds'Gen0:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB1:SortK{},
        \top{SortK{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2073,8,2073,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("2b32069ac3f589174502fa507ebc88fab7c902854c0a9baa8ab09beb551232e2")]

// rule `#if_#then_#else_#fi_K-EQUAL-SYNTAX_Sort_Bool_Sort_Sort`{K}(C,_Gen0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa), org.kframework.attributes.Location(Location(2074,8,2074,67)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarC:SortBool{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            Var'Unds'Gen0:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X2:SortK{},
            VarB2:SortK{}
          ),
          \top{R} ()
        )))),
    \equals{SortK{},R} (
      Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL-SYNTAX'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(X0:SortBool{},X1:SortK{},X2:SortK{}),
     \and{SortK{}} (
       VarB2:SortK{},
        \top{SortK{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2074,8,2074,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("651bff3fa53d464ac7dd7aa77e1ef6071e14c959eb6df97baa325e2ad300daaa")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer-__TEST_AExp_AExp0_`(.KList)~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`-__TEST_AExp_AExp`(HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(c91a88b9813cde77f638111d4ff921995ab743e7ae4b2189cb1df1dd6e51088c), cool, cool-like, org.kframework.attributes.Location(Location(10,19,10,36)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule2LHS{}(SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule2LHS{}(VarHOLE:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule2LHS{}(VarHOLE:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,19,10,36)"), UNIQUE'Unds'ID{}("c91a88b9813cde77f638111d4ff921995ab743e7ae4b2189cb1df1dd6e51088c")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_!=__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(22dfa597d34984ce77bf645e9eec877a43c49c132b5a109cee0ff0164102c0c6), cool, cool-like, org.kframework.attributes.Location(Location(28,19,28,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule3LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule3LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule3LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,19,28,42)"), UNIQUE'Unds'ID{}("22dfa597d34984ce77bf645e9eec877a43c49c132b5a109cee0ff0164102c0c6")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_!=__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(1e94f8bd826b2b2e4ef92e8d8f85f46e3e119283e35e08caa9e0ad1161bf559b), cool, cool-like, org.kframework.attributes.Location(Location(28,19,28,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule4LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule4LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule4LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,19,28,42)"), UNIQUE'Unds'ID{}("1e94f8bd826b2b2e4ef92e8d8f85f46e3e119283e35e08caa9e0ad1161bf559b")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_%__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_%__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(239dae5f45b80ce8dc6a59c406ddee7f36eda756065e563e38b42334f58615ad), cool, cool-like, org.kframework.attributes.Location(Location(13,19,13,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule5LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule5LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule5LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,19,13,41)"), UNIQUE'Unds'ID{}("239dae5f45b80ce8dc6a59c406ddee7f36eda756065e563e38b42334f58615ad")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_%__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_%__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(8f640e8e34c037f5a3c986ae0510f01f1c6c426b27aa9cb156c6b0b1651fba74), cool, cool-like, org.kframework.attributes.Location(Location(13,19,13,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule6LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule6LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule6LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,19,13,41)"), UNIQUE'Unds'ID{}("8f640e8e34c037f5a3c986ae0510f01f1c6c426b27aa9cb156c6b0b1651fba74")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_&__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_&__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(37cc79bed0ff5d6e60b906fad522253138005b395957d86e3a75044be93e3a35), cool, cool-like, org.kframework.attributes.Location(Location(18,19,18,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule7LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule7LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule7LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,19,18,41)"), UNIQUE'Unds'ID{}("37cc79bed0ff5d6e60b906fad522253138005b395957d86e3a75044be93e3a35")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_&__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_&__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(c8982188215ec30d26230fea1cbc500955d1d565b3d1fd145061e9f0baae31a3), cool, cool-like, org.kframework.attributes.Location(Location(18,19,18,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule8LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule8LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule8LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,19,18,41)"), UNIQUE'Unds'ID{}("c8982188215ec30d26230fea1cbc500955d1d565b3d1fd145061e9f0baae31a3")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_*__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_*__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(c6f618a2324d44c19857de8d810fd6ed97fb9e071654ffa14e3f78e074b22ceb), cool, cool-like, org.kframework.attributes.Location(Location(11,19,11,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule9LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule9LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule9LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,19,11,41)"), UNIQUE'Unds'ID{}("c6f618a2324d44c19857de8d810fd6ed97fb9e071654ffa14e3f78e074b22ceb")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_*__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_*__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(458e8cb12d15ce4b50bc2f918dd301e6d25aa7cf3bf8ac0e5eaca19040cd9eef), cool, cool-like, org.kframework.attributes.Location(Location(11,19,11,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule10LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule10LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule10LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,19,11,41)"), UNIQUE'Unds'ID{}("458e8cb12d15ce4b50bc2f918dd301e6d25aa7cf3bf8ac0e5eaca19040cd9eef")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_+__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_+__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(e88b3c6bf4455a1d890839c55880c91c00631a1e0f9e514661d1b1f3b0e09b11), cool, cool-like, org.kframework.attributes.Location(Location(14,19,14,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule11LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule11LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule11LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,19,14,41)"), UNIQUE'Unds'ID{}("e88b3c6bf4455a1d890839c55880c91c00631a1e0f9e514661d1b1f3b0e09b11")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_+__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_+__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(47b4c2706f5c5cd6250c6eae1b188e4e4cc1cf72b00f389c8fa0c231946fdd68), cool, cool-like, org.kframework.attributes.Location(Location(14,19,14,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule12LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule12LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule12LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,19,14,41)"), UNIQUE'Unds'ID{}("47b4c2706f5c5cd6250c6eae1b188e4e4cc1cf72b00f389c8fa0c231946fdd68")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_-__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_-__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(41fe6031f62d54cafaec25193df09498b26131ad5043a69ace6a67ca3c97f916), cool, cool-like, org.kframework.attributes.Location(Location(15,19,15,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule13LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule13LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule13LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,19,15,41)"), UNIQUE'Unds'ID{}("41fe6031f62d54cafaec25193df09498b26131ad5043a69ace6a67ca3c97f916")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_-__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_-__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(daeab4082aa40dcc38e32ad85b311ce5662b13279df3727feb62e51bdab614c4), cool, cool-like, org.kframework.attributes.Location(Location(15,19,15,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule14LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule14LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule14LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,19,15,41)"), UNIQUE'Unds'ID{}("daeab4082aa40dcc38e32ad85b311ce5662b13279df3727feb62e51bdab614c4")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_/__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_/__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(9e028886aaa7d641a812cb79c9bf301525a3dac0015ff28bc4cae7d8a62def83), cool, cool-like, org.kframework.attributes.Location(Location(12,19,12,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule15LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule15LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule15LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,19,12,41)"), UNIQUE'Unds'ID{}("9e028886aaa7d641a812cb79c9bf301525a3dac0015ff28bc4cae7d8a62def83")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_/__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_/__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(58c152f2a6f5a0e1d9a27d331f0ecbfa9f29ee3d973e5d07b0434b378db9f60e), cool, cool-like, org.kframework.attributes.Location(Location(12,19,12,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule16LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule16LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule16LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,19,12,41)"), UNIQUE'Unds'ID{}("58c152f2a6f5a0e1d9a27d331f0ecbfa9f29ee3d973e5d07b0434b378db9f60e")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_<<__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_<<__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(32a212857dd4d2e138a2d4d6218bf0f7b8718e8a14657a0e59bfab36a0ce5726), cool, cool-like, org.kframework.attributes.Location(Location(17,19,17,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule17LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule17LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule17LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,19,17,42)"), UNIQUE'Unds'ID{}("32a212857dd4d2e138a2d4d6218bf0f7b8718e8a14657a0e59bfab36a0ce5726")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_<<__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_<<__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(843b308067c0bd2faa7ab68f36f5d0315cbe564c2a327d126234dc9708a16b9e), cool, cool-like, org.kframework.attributes.Location(Location(17,19,17,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule18LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule18LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule18LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,19,17,42)"), UNIQUE'Unds'ID{}("843b308067c0bd2faa7ab68f36f5d0315cbe564c2a327d126234dc9708a16b9e")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_<=__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(5e8cf5e7c1724031f3f396ef7fbfd85e9f003e09187c645c4e9b779d4faa67ab), cool, cool-like, org.kframework.attributes.Location(Location(24,19,24,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule19LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule19LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule19LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,19,24,42)"), UNIQUE'Unds'ID{}("5e8cf5e7c1724031f3f396ef7fbfd85e9f003e09187c645c4e9b779d4faa67ab")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_<=__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(08310a335ecda74e8ce19f17daa11ccc5624bb2cf0000969970bbd35767a5443), cool, cool-like, org.kframework.attributes.Location(Location(24,19,24,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule20LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule20LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule20LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,19,24,42)"), UNIQUE'Unds'ID{}("08310a335ecda74e8ce19f17daa11ccc5624bb2cf0000969970bbd35767a5443")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_<__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(2179950249f1e4f2cff8d3cc1b687bba1b00d25215b3aabbabfbd815bd1807ec), cool, cool-like, org.kframework.attributes.Location(Location(23,19,23,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule21LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule21LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule21LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,19,23,41)"), UNIQUE'Unds'ID{}("2179950249f1e4f2cff8d3cc1b687bba1b00d25215b3aabbabfbd815bd1807ec")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_<__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(3ac2c034df0c24feb30cca46e1cf5a7fd866598366bfec70c4da0380a5f1b712), cool, cool-like, org.kframework.attributes.Location(Location(23,19,23,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule22LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule22LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule22LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,19,23,41)"), UNIQUE'Unds'ID{}("3ac2c034df0c24feb30cca46e1cf5a7fd866598366bfec70c4da0380a5f1b712")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_==__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(5b8e02cc0c2bbfbd32365094654335bb851058c19943d801a8f3053a8a1a6206), cool, cool-like, org.kframework.attributes.Location(Location(27,19,27,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule23LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule23LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule23LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,19,27,42)"), UNIQUE'Unds'ID{}("5b8e02cc0c2bbfbd32365094654335bb851058c19943d801a8f3053a8a1a6206")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_==__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(b7e5bbc73a854a026df4a2e73fd37ceb2a4c92bc4456f9dde8110e142e925daf), cool, cool-like, org.kframework.attributes.Location(Location(27,19,27,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule24LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule24LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule24LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,19,27,42)"), UNIQUE'Unds'ID{}("b7e5bbc73a854a026df4a2e73fd37ceb2a4c92bc4456f9dde8110e142e925daf")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_>=__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(458e9174572ecc0398010d8b50b1847a0840ac2a18b65b4753c12bfae12e6386), cool, cool-like, org.kframework.attributes.Location(Location(26,19,26,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule25LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule25LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule25LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,19,26,42)"), UNIQUE'Unds'ID{}("458e9174572ecc0398010d8b50b1847a0840ac2a18b65b4753c12bfae12e6386")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_>=__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(dc22579e4295a2a0f982a38c7b206d29683a879604f8d1078c4a421bcf3fd21f), cool, cool-like, org.kframework.attributes.Location(Location(26,19,26,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule26LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule26LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule26LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,19,26,42)"), UNIQUE'Unds'ID{}("dc22579e4295a2a0f982a38c7b206d29683a879604f8d1078c4a421bcf3fd21f")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_>>__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_>>__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(ecba86c5e1947ea7fc89690a62440c08ca9baf40464e1b9a38c96251ab8b3bfa), cool, cool-like, org.kframework.attributes.Location(Location(16,19,16,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule27LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule27LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule27LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,19,16,42)"), UNIQUE'Unds'ID{}("ecba86c5e1947ea7fc89690a62440c08ca9baf40464e1b9a38c96251ab8b3bfa")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_>>__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_>>__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(e78034bd92074d1546410e8b8319e56ee5a245f0ff339fbc2f3d07c7633c3bb4), cool, cool-like, org.kframework.attributes.Location(Location(16,19,16,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule28LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule28LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule28LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,19,16,42)"), UNIQUE'Unds'ID{}("e78034bd92074d1546410e8b8319e56ee5a245f0ff339fbc2f3d07c7633c3bb4")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_>__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(9c0a034696d98bbde679953775021622e14946b26ec6f421b4aca89af18659ca), cool, cool-like, org.kframework.attributes.Location(Location(25,19,25,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule29LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule29LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule29LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,19,25,41)"), UNIQUE'Unds'ID{}("9c0a034696d98bbde679953775021622e14946b26ec6f421b4aca89af18659ca")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_>__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(7b965d60a180fe30f9b8a87e458a21e6940cb870c7513b24f201ec88f78928e8), cool, cool-like, org.kframework.attributes.Location(Location(25,19,25,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule30LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule30LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule30LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,19,25,41)"), UNIQUE'Unds'ID{}("7b965d60a180fe30f9b8a87e458a21e6940cb870c7513b24f201ec88f78928e8")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_^__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_^__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(24ad004339a0902d4967565a2b020b05f75d2cd2d2c3f9d71de6bb3afb671bbc), cool, cool-like, org.kframework.attributes.Location(Location(19,19,19,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule31LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule31LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule31LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,19,19,41)"), UNIQUE'Unds'ID{}("24ad004339a0902d4967565a2b020b05f75d2cd2d2c3f9d71de6bb3afb671bbc")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_^__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_^__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(2485d252dae58f07c83fe6843a74713c0f4b54f3ddeab6f1d02434745b2496da), cool, cool-like, org.kframework.attributes.Location(Location(19,19,19,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule32LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule32LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule32LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,19,19,41)"), UNIQUE'Unds'ID{}("2485d252dae58f07c83fe6843a74713c0f4b54f3ddeab6f1d02434745b2496da")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_|__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_|__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(abfb65826d6101bd22c5556587dea871e3d0aeecbaa005cf8126784f34f1b633), cool, cool-like, org.kframework.attributes.Location(Location(20,19,20,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule33LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule33LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule33LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,19,20,41)"), UNIQUE'Unds'ID{}("abfb65826d6101bd22c5556587dea871e3d0aeecbaa005cf8126784f34f1b633")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer_|__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`_|__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(bdcbcad3c2a7ea95adffa4323b75596fc21e7f8ca13cc26f9bdb5a0b0b2c979c), cool, cool-like, org.kframework.attributes.Location(Location(20,19,20,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule34LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule34LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule34LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,19,20,41)"), UNIQUE'Unds'ID{}("bdcbcad3c2a7ea95adffa4323b75596fc21e7f8ca13cc26f9bdb5a0b0b2c979c")]

// rule `<generatedTop>`(`<k>`(``inj{AExp,KItem}(HOLE) #as _Gen2``~>`#freezer~__TEST_AExp_AExp0_`(.KList)~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(`~__TEST_AExp_AExp`(HOLE))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),isKResult(_Gen2)) ensures #token("true","Bool") [UNIQUE_ID(d52ad469196ed859bdd45a277cf2341e90455c289efe82bce55894445ac871ec), cool, cool-like, org.kframework.attributes.Location(Location(9,19,9,36)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule35LHS{}(SortAExp{},SortGeneratedCounterCell{},SortK{},SortKItem{}) : SortGeneratedTopCell{}
  where rule35LHS{}(VarHOLE:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblisKResult{}(kseq{}(Var'Unds'Gen2:SortKItem{},dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),Var'Unds'Gen2:SortKItem{}),kseq{}(Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule35LHS{}(VarHOLE:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{},Var'Unds'Gen2:SortKItem{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [cool{}(), strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,19,9,36)"), UNIQUE'Unds'ID{}("d52ad469196ed859bdd45a277cf2341e90455c289efe82bce55894445ac871ec")]

// rule `<generatedTop>`(`<k>`(inj{MInt,KItem}(I)),_DotVar0)=>`<generatedTop>`(`<k>`(inj{Int,KItem}(`MInt2Signed(_)_MINT_Int_MInt`{8}(I))),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e23d33b488d90be947a1959374c56fc0bfddd63bc131b07dcce368df677f7756), org.kframework.attributes.Location(Location(33,8,33,44)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule36LHS{}(SortMInt{Sort8{}},SortGeneratedCounterCell{}) : SortGeneratedTopCell{}
  where rule36LHS{}(VarI:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(VarI:SortMInt{Sort8{}}),dotk{}())),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule36LHS{}(VarI:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(LblMInt2Signed'LParUndsRParUnds'MINT'Unds'Int'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}})),dotk{}())),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,8,33,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e23d33b488d90be947a1959374c56fc0bfddd63bc131b07dcce368df677f7756")]

// rule `<generatedTop>`(`<k>`(inj{Int,KItem}(I)~>K~>_Gen0),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`Int2MInt(_)_MINT_MInt_Int`{8}(I))~>K~>_Gen0),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78d27cdd371ee8339d32781a0cca5fb08d3fb0e71ab898764535a6cee201e2ba), cool-like, org.kframework.attributes.Location(Location(32,8,32,64)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule37LHS{}(SortInt{},SortKItem{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule37LHS{}(VarI:SortInt{},VarK:SortKItem{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'Gen0:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI:SortInt{}),kseq{}(VarK:SortKItem{},Var'Unds'Gen0:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule37LHS{}(VarI:SortInt{},VarK:SortKItem{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'Gen0:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(LblInt2MInt'LParUndsRParUnds'MINT'Unds'MInt'Unds'Int{Sort8{}}(VarI:SortInt{})),kseq{}(VarK:SortKItem{},Var'Unds'Gen0:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,8,32,64)"), UNIQUE'Unds'ID{}("78d27cdd371ee8339d32781a0cca5fb08d3fb0e71ab898764535a6cee201e2ba")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`-__TEST_AExp_AExp`(HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer-__TEST_AExp_AExp0_`(.KList)~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2e0392984eb3b96f7e748379c08dfba5385f4bff967b54573adf7b5349e31fc9), heat, org.kframework.attributes.Location(Location(10,19,10,36)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule38LHS{}(SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule38LHS{}(VarHOLE:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule38LHS{}(VarHOLE:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer-'UndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,19,10,36)"), UNIQUE'Unds'ID{}("2e0392984eb3b96f7e748379c08dfba5385f4bff967b54573adf7b5349e31fc9")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`-__TEST_AExp_AExp`(inj{MInt,AExp}(I)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`--MInt__MINT_MInt_MInt`{8}(I))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d33107c84b2a9b2608f4eb9ad15941ec7b36cf6aa8d663a19ffc7f49a952088c), org.kframework.attributes.Location(Location(36,8,36,23)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule39LHS{}(SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule39LHS{}(VarI:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl-'UndsUnds'TEST'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule39LHS{}(VarI:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl--MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,8,36,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("d33107c84b2a9b2608f4eb9ad15941ec7b36cf6aa8d663a19ffc7f49a952088c")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_!=__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(d9ce6e761c98e6090919e48a8cda17a7d4895434e6ae1c37058c4a4d665fa792), heat, org.kframework.attributes.Location(Location(28,19,28,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule40LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule40LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule40LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,19,28,42)"), UNIQUE'Unds'ID{}("d9ce6e761c98e6090919e48a8cda17a7d4895434e6ae1c37058c4a4d665fa792")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_!=__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(969f009362509d43d9d04e689dbb8049b7b02d623ce7260e06d53fdc9e28f39c), heat, org.kframework.attributes.Location(Location(28,19,28,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule41LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule41LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule41LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,19,28,42)"), UNIQUE'Unds'ID{}("969f009362509d43d9d04e689dbb8049b7b02d623ce7260e06d53fdc9e28f39c")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_!=__TEST_BExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_=/=MInt__MINT_Bool_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a77b0e6d4a4e228b65745232fbb122546aa840e62e87dc86219e6781249a485b), org.kframework.attributes.Location(Location(53,8,53,29)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule42LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule42LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsBangEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule42LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsSlshEqls'MInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,8,53,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("a77b0e6d4a4e228b65745232fbb122546aa840e62e87dc86219e6781249a485b")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_%__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_%__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(55a53d0a51beb0ca9aeb3651231f844dc55d80f310b7e2b6e5f34ea5329ca1f5), heat, org.kframework.attributes.Location(Location(13,19,13,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule43LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule43LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule43LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,19,13,41)"), UNIQUE'Unds'ID{}("55a53d0a51beb0ca9aeb3651231f844dc55d80f310b7e2b6e5f34ea5329ca1f5")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_%__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_%__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(328428c659c3e6843dfd55c6e1686e449fd791cba87b063571b84a96d877d4ab), heat, org.kframework.attributes.Location(Location(13,19,13,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule44LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule44LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule44LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,19,13,41)"), UNIQUE'Unds'ID{}("328428c659c3e6843dfd55c6e1686e449fd791cba87b063571b84a96d877d4ab")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_%__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_%sMInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(34e9f0ecb4f791234f46bd81403d479ef1cdf2523c1ddb729e54465814374e3b), org.kframework.attributes.Location(Location(39,8,39,27)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule45LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule45LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPercUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule45LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'UndsPerc'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,8,39,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("34e9f0ecb4f791234f46bd81403d479ef1cdf2523c1ddb729e54465814374e3b")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_&__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_&__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a9c3d870eca78f0af0a34528177bd5ee3c4e997b3c501035905c93c7243638a1), heat, org.kframework.attributes.Location(Location(18,19,18,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule46LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule46LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule46LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,19,18,41)"), UNIQUE'Unds'ID{}("a9c3d870eca78f0af0a34528177bd5ee3c4e997b3c501035905c93c7243638a1")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_&__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_&__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3d2eb0c38abe7428528def7b6be75857e77bdb35edcbef5aac766f2e230c8134), heat, org.kframework.attributes.Location(Location(18,19,18,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule47LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule47LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule47LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,19,18,41)"), UNIQUE'Unds'ID{}("3d2eb0c38abe7428528def7b6be75857e77bdb35edcbef5aac766f2e230c8134")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_&__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_&MInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(239566b0157fbfc88c08d919c305362873b4ee5a37e8b4a42e69a9d056ae0514), org.kframework.attributes.Location(Location(44,8,44,26)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule48LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule48LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsAnd-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule48LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'UndsAnd-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,8,44,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("239566b0157fbfc88c08d919c305362873b4ee5a37e8b4a42e69a9d056ae0514")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_*__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_*__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(19ec06193666d1fd3c21e571d41f2bd8f4f05096602cd6398a4f35eff3a8497b), heat, org.kframework.attributes.Location(Location(11,19,11,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule49LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule49LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule49LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,19,11,41)"), UNIQUE'Unds'ID{}("19ec06193666d1fd3c21e571d41f2bd8f4f05096602cd6398a4f35eff3a8497b")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_*__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_*__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(74e55dcb5fef2f0413fd0c570d1944ad3360e2dfb9deee177fd781b7ad4cb55b), heat, org.kframework.attributes.Location(Location(11,19,11,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule50LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule50LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule50LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,19,11,41)"), UNIQUE'Unds'ID{}("74e55dcb5fef2f0413fd0c570d1944ad3360e2dfb9deee177fd781b7ad4cb55b")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_*__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_*MInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb14290ceebbbd06f944258e98ef4011107449ba12cc48c8c2076489994233aa), org.kframework.attributes.Location(Location(37,8,37,26)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule51LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule51LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsStarUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule51LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'UndsStar'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,8,37,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("bb14290ceebbbd06f944258e98ef4011107449ba12cc48c8c2076489994233aa")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_+__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_+__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(05264426d6bc15ca52eb749addd809421ca7de0a7029cd98036c2677f1ba07bb), heat, org.kframework.attributes.Location(Location(14,19,14,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule52LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule52LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule52LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,19,14,41)"), UNIQUE'Unds'ID{}("05264426d6bc15ca52eb749addd809421ca7de0a7029cd98036c2677f1ba07bb")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_+__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_+__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(76e4d23a94136d0e175c74582ebbee37efb253dc8b6c33527d52a5a2719cab17), heat, org.kframework.attributes.Location(Location(14,19,14,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule53LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule53LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule53LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,19,14,41)"), UNIQUE'Unds'ID{}("76e4d23a94136d0e175c74582ebbee37efb253dc8b6c33527d52a5a2719cab17")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_+__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_+MInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5143d153f790202ea94c7114bc3fa4b3c75ce480988abc166d9f1cc5dbfac2cb), org.kframework.attributes.Location(Location(40,8,40,26)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule54LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule54LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPlusUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule54LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'UndsPlus'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,8,40,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("5143d153f790202ea94c7114bc3fa4b3c75ce480988abc166d9f1cc5dbfac2cb")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_-__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_-__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(04838829b68af7a700938d4a6e869b6c4e897f334ae35f64683cf219ea262a4d), heat, org.kframework.attributes.Location(Location(15,19,15,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule55LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule55LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule55LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,19,15,41)"), UNIQUE'Unds'ID{}("04838829b68af7a700938d4a6e869b6c4e897f334ae35f64683cf219ea262a4d")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_-__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_-__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(6efb6203497f36b03368a475606960ff40f26957134b435772ee3be3a169579e), heat, org.kframework.attributes.Location(Location(15,19,15,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule56LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule56LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule56LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,19,15,41)"), UNIQUE'Unds'ID{}("6efb6203497f36b03368a475606960ff40f26957134b435772ee3be3a169579e")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_-__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_-MInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d56f3c36e1ba63f2c869e0cb3477201a5e489ab152a5c6d66c52d12c2a26b2ce), org.kframework.attributes.Location(Location(41,8,41,26)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule57LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule57LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds'-'UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule57LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'Unds'-MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(41,8,41,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("d56f3c36e1ba63f2c869e0cb3477201a5e489ab152a5c6d66c52d12c2a26b2ce")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_/__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_/__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3b75d5106f252c25cf6859d80b36575283ad0fffd5601006ddd2fe138db81566), heat, org.kframework.attributes.Location(Location(12,19,12,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule58LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule58LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule58LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,19,12,41)"), UNIQUE'Unds'ID{}("3b75d5106f252c25cf6859d80b36575283ad0fffd5601006ddd2fe138db81566")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_/__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_/__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(aed5fd33ac019375762abfe6f0963f092480bffed4f73a074a34f824c9ac281c), heat, org.kframework.attributes.Location(Location(12,19,12,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule59LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule59LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule59LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,19,12,41)"), UNIQUE'Unds'ID{}("aed5fd33ac019375762abfe6f0963f092480bffed4f73a074a34f824c9ac281c")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_/__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_/sMInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bd2347c4d94e321db786280a344fa1e7deae530c07cba88f3e06690949766364), org.kframework.attributes.Location(Location(38,8,38,27)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule60LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule60LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsSlshUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule60LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'UndsSlsh'sMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(38,8,38,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("bd2347c4d94e321db786280a344fa1e7deae530c07cba88f3e06690949766364")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_<<__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<<__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(7476d0932f2efbe21f9d894ba1beae2dab14168b5e2b5c030a009b9a6c05fb12), heat, org.kframework.attributes.Location(Location(17,19,17,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule61LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule61LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule61LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,19,17,42)"), UNIQUE'Unds'ID{}("7476d0932f2efbe21f9d894ba1beae2dab14168b5e2b5c030a009b9a6c05fb12")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_<<__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<<__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e294ce870c6761594ba65de21ccefa9ed0de6b4c049bb2eb422836d14713b948), heat, org.kframework.attributes.Location(Location(17,19,17,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule62LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule62LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule62LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,19,17,42)"), UNIQUE'Unds'ID{}("e294ce870c6761594ba65de21ccefa9ed0de6b4c049bb2eb422836d14713b948")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_<<__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_<<MInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8a5482b4b12aa44459036e0ebe9eb457f7a0f730892e8785b3f90f3434c3d8d7), org.kframework.attributes.Location(Location(43,8,43,28)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule63LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule63LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-LT--LT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule63LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'Unds-LT--LT-'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,8,43,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("8a5482b4b12aa44459036e0ebe9eb457f7a0f730892e8785b3f90f3434c3d8d7")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<=__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(17d124e197fb1cecf715c0bda301f14ed427e30cf1d351765af8c3ca4bf7963c), heat, org.kframework.attributes.Location(Location(24,19,24,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule64LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule64LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule64LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,19,24,42)"), UNIQUE'Unds'ID{}("17d124e197fb1cecf715c0bda301f14ed427e30cf1d351765af8c3ca4bf7963c")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<=__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(c582cdda468a1519c9f8164645af20b65b2c2996e4747912e40fe78e8a8833be), heat, org.kframework.attributes.Location(Location(24,19,24,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule65LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule65LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule65LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,19,24,42)"), UNIQUE'Unds'ID{}("c582cdda468a1519c9f8164645af20b65b2c2996e4747912e40fe78e8a8833be")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<=__TEST_BExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_<=sMInt__MINT_Bool_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(56ba04c2acda1d35026617ee0eacb26d39261ce5478f893ed3b37dc89a7b53e2), org.kframework.attributes.Location(Location(49,8,49,29)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule66LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule66LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule66LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-Eqls'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,8,49,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("56ba04c2acda1d35026617ee0eacb26d39261ce5478f893ed3b37dc89a7b53e2")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(64dfbb98e816a5caf72821d31b44ff962ea30101cddf188a376caed7ccfb4442), heat, org.kframework.attributes.Location(Location(23,19,23,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule67LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule67LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule67LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,19,23,41)"), UNIQUE'Unds'ID{}("64dfbb98e816a5caf72821d31b44ff962ea30101cddf188a376caed7ccfb4442")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_<__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(8a5407e4180021f2d03aff119497645489b7f60bec24d86745fd6f19373a2676), heat, org.kframework.attributes.Location(Location(23,19,23,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule68LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule68LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule68LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,19,23,41)"), UNIQUE'Unds'ID{}("8a5407e4180021f2d03aff119497645489b7f60bec24d86745fd6f19373a2676")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_<__TEST_BExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_<sMInt__MINT_Bool_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(68a17df8b41a3258120b233b0f0ed53a838be4c890cb75012f067fb7aa156db6), org.kframework.attributes.Location(Location(48,8,48,27)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule69LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule69LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-LT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule69LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-LT-'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,8,48,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("68a17df8b41a3258120b233b0f0ed53a838be4c890cb75012f067fb7aa156db6")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_==__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1322afa7bd954b6ad3908fe7f99644d30b53a90f92cb655de1b94616c16e5e60), heat, org.kframework.attributes.Location(Location(27,19,27,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule70LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule70LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule70LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,19,27,42)"), UNIQUE'Unds'ID{}("1322afa7bd954b6ad3908fe7f99644d30b53a90f92cb655de1b94616c16e5e60")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_==__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(1c3ed15810605a7491a892c49b6a4f64990b530ae7936b1be98de6c2c63e5153), heat, org.kframework.attributes.Location(Location(27,19,27,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule71LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule71LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule71LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,19,27,42)"), UNIQUE'Unds'ID{}("1c3ed15810605a7491a892c49b6a4f64990b530ae7936b1be98de6c2c63e5153")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_==__TEST_BExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_==MInt__MINT_Bool_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9fc84e110371f762ff614d708a7f5df895a6ba74a5957ee08551e3028e3c6394), org.kframework.attributes.Location(Location(52,8,52,28)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule72LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule72LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'UndsEqlsEqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule72LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'UndsEqlsEqls'MInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,8,52,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("9fc84e110371f762ff614d708a7f5df895a6ba74a5957ee08551e3028e3c6394")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>=__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0af472717a4a7311dae5125495b66ed9b44883da8399e970f90d35dc90d84d88), heat, org.kframework.attributes.Location(Location(26,19,26,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule73LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule73LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule73LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,19,26,42)"), UNIQUE'Unds'ID{}("0af472717a4a7311dae5125495b66ed9b44883da8399e970f90d35dc90d84d88")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>=__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(fca6a6ce164df90a7bd22e2c324160bf2caa1ef27d5a21e33c7ddc05da83f5f0), heat, org.kframework.attributes.Location(Location(26,19,26,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule74LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule74LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule74LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(26,19,26,42)"), UNIQUE'Unds'ID{}("fca6a6ce164df90a7bd22e2c324160bf2caa1ef27d5a21e33c7ddc05da83f5f0")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>=__TEST_BExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_>=sMInt__MINT_Bool_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fb292f140b2d3bd3f062956a07b00b1492f171f36704bec9a6cac0fcbe3b8a53), org.kframework.attributes.Location(Location(51,8,51,29)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule75LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule75LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-EqlsUndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule75LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-Eqls'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,8,51,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("fb292f140b2d3bd3f062956a07b00b1492f171f36704bec9a6cac0fcbe3b8a53")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_>>__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>>__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(2d4adb59d9d84cf9691d0756ffd9a949353da380c1cca0ff6f816c6c29f25961), heat, org.kframework.attributes.Location(Location(16,19,16,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule76LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule76LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule76LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,19,16,42)"), UNIQUE'Unds'ID{}("2d4adb59d9d84cf9691d0756ffd9a949353da380c1cca0ff6f816c6c29f25961")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_>>__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>>__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(0401cd7f28a3eb7eec35586073a99bc5584b36b5e8d07d2d7147fcfa4e46b915), heat, org.kframework.attributes.Location(Location(16,19,16,42)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule77LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule77LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule77LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,19,16,42)"), UNIQUE'Unds'ID{}("0401cd7f28a3eb7eec35586073a99bc5584b36b5e8d07d2d7147fcfa4e46b915")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_>>__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_>>aMInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4859fdf937d515e4326891068726305c08d2d722b2d7a21dcbed1ae3a8d5fe9d), org.kframework.attributes.Location(Location(42,8,42,29)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule78LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule78LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'Unds-GT--GT-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule78LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'Unds-GT--GT-'aMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(42,8,42,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("4859fdf937d515e4326891068726305c08d2d722b2d7a21dcbed1ae3a8d5fe9d")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST_BExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>__TEST_BExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(a15f0c3afce04edf3842131cc351f233aee6279611136729f9bc0c883c5fc3cd), heat, org.kframework.attributes.Location(Location(25,19,25,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule79LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule79LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule79LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,19,25,41)"), UNIQUE'Unds'ID{}("a15f0c3afce04edf3842131cc351f233aee6279611136729f9bc0c883c5fc3cd")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST_BExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_>__TEST_BExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(e0802b1a6b496504821f8d665a0826d4e7cb897efc41c7368c457f27cc112f91), heat, org.kframework.attributes.Location(Location(25,19,25,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule80LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule80LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule80LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,19,25,41)"), UNIQUE'Unds'ID{}("e0802b1a6b496504821f8d665a0826d4e7cb897efc41c7368c457f27cc112f91")]

// rule `<generatedTop>`(`<k>`(inj{BExp,KItem}(`_>__TEST_BExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{Bool,KItem}(`_>sMInt__MINT_Bool_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(771b90c1f7fb1ceceaee6c73366d20c4dbfab86ed7f63645bc6aac6441bc965a), org.kframework.attributes.Location(Location(50,8,50,27)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule81LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule81LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBExp{}, SortKItem{}}(Lbl'Unds-GT-UndsUnds'TEST'Unds'BExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule81LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortBool{}, SortKItem{}}(Lbl'Unds-GT-'sMInt'UndsUnds'MINT'Unds'Bool'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,8,50,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("771b90c1f7fb1ceceaee6c73366d20c4dbfab86ed7f63645bc6aac6441bc965a")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_^__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_^__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(871e7c9dce2ca6ca7144e7cc9556fdeedff044eb7999c42fcc7d93a5d999f506), heat, org.kframework.attributes.Location(Location(19,19,19,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule82LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule82LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule82LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,19,19,41)"), UNIQUE'Unds'ID{}("871e7c9dce2ca6ca7144e7cc9556fdeedff044eb7999c42fcc7d93a5d999f506")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_^__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_^__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(3318d903b09901ea9ef7990e2404ec07a65ec2802f235565dfa68fca5751d71d), heat, org.kframework.attributes.Location(Location(19,19,19,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule83LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule83LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule83LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,19,19,41)"), UNIQUE'Unds'ID{}("3318d903b09901ea9ef7990e2404ec07a65ec2802f235565dfa68fca5751d71d")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_^__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_xorMInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f55009b18f4e31ac16cbb23d57409d136bb55c1e302eff1ec7e7711fb0da2837), org.kframework.attributes.Location(Location(45,8,45,28)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule84LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule84LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsXor-UndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule84LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'Unds'xorMInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,8,45,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("f55009b18f4e31ac16cbb23d57409d136bb55c1e302eff1ec7e7711fb0da2837")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_|__TEST_AExp_AExp_AExp`(HOLE,K1))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_|__TEST_AExp_AExp_AExp0_`(inj{AExp,KItem}(K1))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(bf37b8c67ee2039f85f2dff96e78a504cb029b5d8272c2c7da933d7f96e23799), heat, org.kframework.attributes.Location(Location(20,19,20,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule85LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule85LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{},VarK1:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule85LHS{}(VarHOLE:SortAExp{},VarK1:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp0'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK1:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,19,20,41)"), UNIQUE'Unds'ID{}("bf37b8c67ee2039f85f2dff96e78a504cb029b5d8272c2c7da933d7f96e23799")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_|__TEST_AExp_AExp_AExp`(K0,HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer_|__TEST_AExp_AExp_AExp1_`(inj{AExp,KItem}(K0))~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(318bbcfae59263c9f250e03ff8875409033369ede7fee577c29ee8b3012aec83), heat, org.kframework.attributes.Location(Location(20,19,20,41)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule86LHS{}(SortAExp{},SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule86LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(VarK0:SortAExp{},VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule86LHS{}(VarHOLE:SortAExp{},VarK0:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp1'Unds'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarK0:SortAExp{}),dotk{}())),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(20,19,20,41)"), UNIQUE'Unds'ID{}("318bbcfae59263c9f250e03ff8875409033369ede7fee577c29ee8b3012aec83")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`_|__TEST_AExp_AExp_AExp`(inj{MInt,AExp}(I),inj{MInt,AExp}(J)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`_|MInt__MINT_MInt_MInt_MInt`{8}(I,J))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(80ec96c2436cbc40dc697944e3997abe40740ec79eb91a4e3f4ff25776ea185c), org.kframework.attributes.Location(Location(46,8,46,26)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule87LHS{}(SortMInt{Sort8{}},SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule87LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'UndsPipeUndsUnds'TEST'Unds'AExp'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}),inj{SortMInt{Sort8{}}, SortAExp{}}(VarJ:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule87LHS{}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'UndsPipe'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}},VarJ:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,8,46,26)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("80ec96c2436cbc40dc697944e3997abe40740ec79eb91a4e3f4ff25776ea185c")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`~__TEST_AExp_AExp`(HOLE))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{AExp,KItem}(HOLE)~>`#freezer~__TEST_AExp_AExp0_`(.KList)~>_DotVar1),_DotVar0) requires `_andBool_`(#token("true","Bool"),`notBool_`(isKResult(inj{AExp,KItem}(HOLE)))) ensures #token("true","Bool") [UNIQUE_ID(b19a52a8fcba7652540d9b157fa8403d1dd5daea058e0e4c61da1c75fc6af602), heat, org.kframework.attributes.Location(Location(9,19,9,36)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), strict]
  alias rule88LHS{}(SortAExp{},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule88LHS{}(VarHOLE:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(\dv{SortBool{}}("true"),LblnotBool'Unds'{}(LblisKResult{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),dotk{}())))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(VarHOLE:SortAExp{})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule88LHS{}(VarHOLE:SortAExp{},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(VarHOLE:SortAExp{}),kseq{}(Lbl'Hash'freezer'TildUndsUnds'TEST'Unds'AExp'Unds'AExp0'Unds'{}(),Var'Unds'DotVar1:SortK{}))),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [strict{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), heat{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,19,9,36)"), UNIQUE'Unds'ID{}("b19a52a8fcba7652540d9b157fa8403d1dd5daea058e0e4c61da1c75fc6af602")]

// rule `<generatedTop>`(`<k>`(inj{AExp,KItem}(`~__TEST_AExp_AExp`(inj{MInt,AExp}(I)))~>_DotVar1),_DotVar0)=>`<generatedTop>`(`<k>`(inj{MInt,KItem}(`~MInt__MINT_MInt_MInt`{8}(I))~>_DotVar1),_DotVar0) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c783a4a59929e15250af196fdd8400ee62ff786bf77546078e7ca51db940b4e), org.kframework.attributes.Location(Location(35,8,35,22)), org.kframework.attributes.Source(Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  alias rule89LHS{}(SortMInt{Sort8{}},SortGeneratedCounterCell{},SortK{}) : SortGeneratedTopCell{}
  where rule89LHS{}(VarI:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}) :=
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAExp{}, SortKItem{}}(Lbl'TildUndsUnds'TEST'Unds'AExp'Unds'AExp{}(inj{SortMInt{Sort8{}}, SortAExp{}}(VarI:SortMInt{Sort8{}}))),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})) []

  axiom{} \rewrites{SortGeneratedTopCell{}} (
    rule89LHS{}(VarI:SortMInt{Sort8{}},Var'Unds'DotVar0:SortGeneratedCounterCell{},Var'Unds'DotVar1:SortK{}),
    \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Lbl'Tild'MInt'UndsUnds'MINT'Unds'MInt'Unds'MInt{Sort8{}}(VarI:SortMInt{Sort8{}})),Var'Unds'DotVar1:SortK{})),Var'Unds'DotVar0:SortGeneratedCounterCell{})))
  [org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,8,35,22)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)"), UNIQUE'Unds'ID{}("1c783a4a59929e15250af196fdd8400ee62ff786bf77546078e7ca51db940b4e")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f), org.kframework.attributes.Location(Location(932,8,932,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB1:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB2:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(932,8,932,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("31fe72efcfddcd8588a11d9d10c1b1a9f96ae3da46b647d4cb9d1e8b1bd1654f")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3), org.kframework.attributes.Location(Location(1213,8,1213,53)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'Int'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1213,8,1213,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("4de6e05b11cdbed7ef5cb4c952127924661af4744c1e495370e1c8a962ba7be3")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c), org.kframework.attributes.Location(Location(2071,8,2071,45)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK1:SortK{}
          ),\and{R} (
          \in{SortK{}, R} (
            X1:SortK{},
            VarK2:SortK{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'UndsEqlsSlshEqls'K'Unds'{}(X0:SortK{},X1:SortK{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{})),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2071,8,2071,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("bccaba7335e4cd77501a0667f2f7b3eb4a2105d5f60d804915dd4b1b08902c0c")]

// rule `_andBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497), org.kframework.attributes.Location(Location(905,8,905,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(905,8,905,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("61fbef33b3611f1cc2aaf3b5e8ddec4a0f434c557278c38461c65c8722743497")]

// rule `_andBool_`(B,#token("true","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98), org.kframework.attributes.Location(Location(904,8,904,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(904,8,904,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("e8d4ca75a690151f99f8904b068db555782f5599b11230a9d0b97a71afb6fc98")]

// rule `_andBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca), org.kframework.attributes.Location(Location(906,8,906,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(906,8,906,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9c183fae7de06f560180386d14d29c609cadf0c98266ce2adbecb50100a1daca")]

// rule `_andBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f), org.kframework.attributes.Location(Location(903,8,903,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(903,8,903,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b9db8dba12010819161cc42dadccd0adf0100a47c21f884ae66c0a3d5483a1f")]

// rule `_andThenBool_`(#token("false","Bool") #as _Gen1,_Gen0)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d), org.kframework.attributes.Location(Location(910,8,910,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(910,8,910,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("5b729746be7bf2183d9eff138d97078a7c9489def6d8b2e1495c41ce3954997d")]

// rule `_andThenBool_`(K,#token("true","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c), org.kframework.attributes.Location(Location(909,8,909,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(909,8,909,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("82ac30b094be9b12206773d87b60274e929a41ca595f4674be1d37eeff873d7c")]

// rule `_andThenBool_`(_Gen0,#token("false","Bool") #as _Gen1)=>_Gen1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2), org.kframework.attributes.Location(Location(911,8,911,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'Gen1:SortBool{})
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       Var'Unds'Gen1:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(911,8,911,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("0508592878b546cbc6eeda6ec7b322584eea5c6d6eea3f72be8418fe4f7149b2")]

// rule `_andThenBool_`(#token("true","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689), org.kframework.attributes.Location(Location(908,8,908,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'andThenBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(908,8,908,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("78a3191cbbdec57b0f411f41291076c8124bb0d9b6b57905674b2c6858d78689")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4), org.kframework.attributes.Location(Location(1202,8,1203,23)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      Lbl'Unds'divInt'Unds'{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{}),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1202,8,1203,23)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("83dcf9bc8c69f131715bc7a92d06c99b9a2b5f4c4fdafb69e6fdb2f1822712d4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5), org.kframework.attributes.Location(Location(1214,8,1214,58)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0")),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1214,8,1214,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("fd8facae0061fe5bc5c406f7ad2ed5d8d21960bf1118c9b240451253064dadb5")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96), org.kframework.attributes.Location(Location(930,8,930,45)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       LblnotBool'Unds'{}(VarB:SortBool{}),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(930,8,930,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("022c562a21d72cedfb795607d2249b8ad14b66399b720b3b2f4a05a1da08df96")]

// rule `_impliesBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712), org.kframework.attributes.Location(Location(929,8,929,39)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,8,929,39)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("99ba64afc26a739953df142ccd4b486bba68107fce8c9aa356d40afa7a988712")]

// rule `_impliesBool_`(#token("false","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e), org.kframework.attributes.Location(Location(928,8,928,40)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(928,8,928,40)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("55bb5c83c9563c712537b95401c0a5c88255fd7cdbd18b2d4358c54aee80660e")]

// rule `_impliesBool_`(#token("true","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d), org.kframework.attributes.Location(Location(927,8,927,36)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'impliesBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(927,8,927,36)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("da818c43c21c5fb2cced7e02a74b6b4191d323de2967a671b961ad28550f3c7d")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6), concrete, org.kframework.attributes.Location(Location(1205,5,1208,23)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol]), simplification]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \equals{SortInt{},R} (
      Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
     \and{SortInt{}} (
       Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1205,5,1208,23)"), simplification{}(), UNIQUE'Unds'ID{}("adfacb58b0678a49f66186954229939a953c9849d5b08edc8f887c0d7514b2c6")]

// rule `_orBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26), org.kframework.attributes.Location(Location(920,8,920,32)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(920,8,920,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("d7245713da157cf997438091f92bb78eb51a6cefa568bb0d30560ce08d647f26")]

// rule `_orBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3), org.kframework.attributes.Location(Location(918,8,918,34)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(918,8,918,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("47860d52c18a441b229449cd89d5464256137dc32deb5551effbac0482c883f3")]

// rule `_orBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b), org.kframework.attributes.Location(Location(919,8,919,32)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(919,8,919,32)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("991a3290bc7b6dca75d676a72a848ec6b2bd2827fb0e9626252aa1507394ca1b")]

// rule `_orBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2), org.kframework.attributes.Location(Location(917,8,917,34)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(917,8,917,34)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("71744528cdad83bc729990d3af3b544d27b09630b2615ca707dd2fc6ec93e7c2")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480), org.kframework.attributes.Location(Location(925,8,925,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarK:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(925,8,925,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("684b0444a1f711d49ff1502423a3346fb26958697423db488b05d25081fc0480")]

// rule `_orElseBool_`(_Gen0,#token("true","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14), org.kframework.attributes.Location(Location(923,8,923,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(923,8,923,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("c9eccff94ecf6e810c600d4536bf1701485c13c3456c6b98c0cdab0fe7c5af14")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf), org.kframework.attributes.Location(Location(924,8,924,37)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarK:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(924,8,924,37)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("eb8c85dac19a5951f694b65269c2b17c80d6d126d6a367958e4a5d736a880ecf")]

// rule `_orElseBool_`(#token("true","Bool"),_Gen0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6), org.kframework.attributes.Location(Location(922,8,922,33)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            Var'Unds'Gen0:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'orElseBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(922,8,922,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("354bd0860c7f38b59e285c935fd2ea553ebddbabb4973342ad25f0dac6ea7bf6")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f), org.kframework.attributes.Location(Location(915,8,915,38)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(915,8,915,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("9a6d91cd75cd777b0d4db536b3e4b20578e74fe650e644b55294da95fd2dba7f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75), org.kframework.attributes.Location(Location(914,8,914,38)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            VarB:SortBool{}
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(914,8,914,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("7a2851f9d4ea4bd3f35070ee029fc3bdca36e361f7ee54addeff9d10ddeb7c75")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf), org.kframework.attributes.Location(Location(913,8,913,38)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),\and{R} (
          \in{SortBool{}, R} (
            X1:SortBool{},
            VarB:SortBool{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      Lbl'Unds'xorBool'Unds'{}(X0:SortBool{},X1:SortBool{}),
     \and{SortBool{}} (
       VarB:SortBool{},
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(913,8,913,38)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("73513655c09a595907ab9d26d67e27f01d14a3435743b77000c02d10f35c05bf")]

// rule `_|Set__SET_Set_Set_Set`(S1,S2)=>`_Set_`(S1,`Set:difference`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62), concrete, org.kframework.attributes.Location(Location(531,8,531,45)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortSet{}, R} (
            X0:SortSet{},
            VarS1:SortSet{}
          ),\and{R} (
          \in{SortSet{}, R} (
            X1:SortSet{},
            VarS2:SortSet{}
          ),
          \top{R} ()
        ))),
    \equals{SortSet{},R} (
      Lbl'UndsPipe'Set'UndsUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(X0:SortSet{},X1:SortSet{}),
     \and{SortSet{}} (
       Lbl'Unds'Set'Unds'{}(VarS1:SortSet{},LblSet'Coln'difference{}(VarS2:SortSet{},VarS1:SortSet{})),
        \top{SortSet{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), concrete{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(531,8,531,45)"), UNIQUE'Unds'ID{}("e9a710d8d1ca5c799420161879cbbff926de45a5bddd820d646f51d43eb67e62")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119), org.kframework.attributes.Location(Location(1198,8,1198,85)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1198,8,1198,85)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("147fc15c2ec6c36de1a9c0cad6212b8acd8b224f21c0aeabd36726e9c8a06119")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b), org.kframework.attributes.Location(Location(1217,8,1217,28)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       VarI:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1217,8,1217,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("cf2cb8f038b4bdc4edb1334a3b8ced9cd296a7af43f0a1916e082a4e1aefa08b")]

// rule getGeneratedCounterCell(`<generatedTop>`(_DotVar0,Cell))=>Cell requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortGeneratedTopCell{}, R} (
            X0:SortGeneratedTopCell{},
            Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'DotVar0:SortKCell{},VarCell:SortGeneratedCounterCell{})
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      LblgetGeneratedCounterCell{}(X0:SortGeneratedTopCell{}),
     \and{SortGeneratedCounterCell{}} (
       VarCell:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  []

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      
          \top{R} ()
        ),
    \equals{SortGeneratedCounterCell{},R} (
      LblinitGeneratedCounterCell{}(),
     \and{SortGeneratedCounterCell{}} (
       Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")),
        \top{SortGeneratedCounterCell{}}())))
  [initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initKCell(Init),initGeneratedCounterCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      LblinitGeneratedTopCell{}(X0:SortMap{}),
     \and{SortGeneratedTopCell{}} (
       Lbl'-LT-'generatedTop'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitGeneratedCounterCell{}()),
        \top{SortGeneratedTopCell{}}())))
  [initializer{}()]

// rule initKCell(Init)=>`<k>`(`project:KItem`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar"))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(888ac40929773fd17d5b9fd1e9d0be94791665a663f07907d894c31dccc871a5), initializer]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortMap{}, R} (
            X0:SortMap{},
            VarInit:SortMap{}
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      LblinitKCell{}(X0:SortMap{}),
     \and{SortKCell{}} (
       Lbl'-LT-'k'-GT-'{}(kseq{}(Lblproject'Coln'KItem{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}())),dotk{}())),
        \top{SortKCell{}}())))
  [initializer{}(), UNIQUE'Unds'ID{}("888ac40929773fd17d5b9fd1e9d0be94791665a663f07907d894c31dccc871a5")]

// rule is8(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:Sort8{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{Sort8{}, SortKItem{}}(Var'Unds'Gen0:Sort8{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      Lblis8{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule is8(inj{8,KItem}(8))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{Sort8{}, SortKItem{}}(Var8:Sort8{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblis8{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isAExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortAExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortAExp{}, SortKItem{}}(Var'Unds'Gen1:SortAExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisAExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isAExp(inj{AExp,KItem}(AExp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAExp{}, SortKItem{}}(VarAExp:SortAExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisAExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBExp(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBExp{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBExp{}, SortKItem{}}(Var'Unds'Gen0:SortBExp{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBExp(inj{BExp,KItem}(BExp))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBExp{}, SortKItem{}}(VarBExp:SortBExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBExp{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'Gen0:SortBool{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisBool{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedCounterCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedCounterCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedCounterCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedCounterCellOpt(inj{GeneratedCounterCellOpt,KItem}(GeneratedCounterCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarGeneratedCounterCellOpt:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'Gen1:SortGeneratedTopCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'Gen0:SortGeneratedTopCellFragment{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisGeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'Gen1:SortInt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisInt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisK{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'Gen1:SortKCell{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCell{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'Gen0:SortKCellOpt{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKCellOpt{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'Gen1:SortKConfigVar{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKConfigVar{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(Var'Unds'Gen1:SortKItem{},dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarKItem:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKItem{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isKResult(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortKResult{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortKResult{}, SortKItem{}}(Var'Unds'Gen1:SortKResult{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isKResult(inj{KResult,KItem}(KResult))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarKResult:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisKResult{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'Gen0:SortList{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisList{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule `isMInt{8}`(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMInt{Sort8{}},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(Var'Unds'Gen1:SortMInt{Sort8{}}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMInt'LBra'8'RBra'{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule `isMInt{8}`(inj{MInt,KItem}(MInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(VarMInt:SortMInt{Sort8{}}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMInt'LBra'8'RBra'{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'Gen1:SortMap{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisMap{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isNumber(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortNumber{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortNumber{}, SortKItem{}}(Var'Unds'Gen0:SortNumber{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisNumber{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isNumber(inj{Number,KItem}(Number))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNumber{}, SortKItem{}}(VarNumber:SortNumber{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisNumber{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'Gen0:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \in{SortK{}, R} (
                  X0:SortK{},
                  kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'Gen0:SortSet{}),dotk{}())
                ),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \and{R}(
        \top{R}(),
        \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )
    )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") 
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblisSet{}(X0:SortK{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  []

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6), org.kframework.attributes.Location(Location(1210,8,1210,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI1:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1210,8,1210,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("fb09b6acc4366cb77203e07c4efe8a9cf304e1bac9fb0664deea05d3eb9a80c6")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3), org.kframework.attributes.Location(Location(1211,8,1211,57)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" Bool [klabel(#ruleRequires), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI1:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI2:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortInt{},R} (
      LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortInt{}} (
       VarI2:SortInt{},
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1211,8,1211,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" Bool [klabel(#ruleRequires), symbol]"), UNIQUE'Unds'ID{}("e1effeabf96bb3a3beffd5b679ad5df95c4f8bbf42872b0793331e52a8470fb3")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415), org.kframework.attributes.Location(Location(901,8,901,29)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("false")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("true"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(901,8,901,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("17ebc68421572b8ebe609c068fb49cbb6cbbe3246e2142257ad8befdda38f415")]

// rule `notBool_`(#token("true","Bool"))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c), org.kframework.attributes.Location(Location(900,8,900,29)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortBool{}, R} (
            X0:SortBool{},
            \dv{SortBool{}}("true")
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      LblnotBool'Unds'{}(X0:SortBool{}),
     \and{SortBool{}} (
       \dv{SortBool{}}("false"),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(900,8,900,29)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("53fc758ece1ff16581673016dfacc556cc30fcf6b3c35b586f001d76a1f9336c")]

// rule `project:AExp`(inj{AExp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortAExp{}, SortKItem{}}(VarK:SortAExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortAExp{},R} (
      Lblproject'Coln'AExp{}(X0:SortK{}),
     \and{SortAExp{}} (
       VarK:SortAExp{},
        \top{SortAExp{}}())))
  [projection{}()]

// rule `project:BExp`(inj{BExp,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBExp{}, SortKItem{}}(VarK:SortBExp{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBExp{},R} (
      Lblproject'Coln'BExp{}(X0:SortK{}),
     \and{SortBExp{}} (
       VarK:SortBExp{},
        \top{SortBExp{}}())))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortBool{},R} (
      Lblproject'Coln'Bool{}(X0:SortK{}),
     \and{SortBool{}} (
       VarK:SortBool{},
        \top{SortBool{}}())))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCell{},R} (
      Lblproject'Coln'GeneratedCounterCell{}(X0:SortK{}),
     \and{SortGeneratedCounterCell{}} (
       VarK:SortGeneratedCounterCell{},
        \top{SortGeneratedCounterCell{}}())))
  [projection{}()]

// rule `project:GeneratedCounterCellOpt`(inj{GeneratedCounterCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedCounterCellOpt{}, SortKItem{}}(VarK:SortGeneratedCounterCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedCounterCellOpt{},R} (
      Lblproject'Coln'GeneratedCounterCellOpt{}(X0:SortK{}),
     \and{SortGeneratedCounterCellOpt{}} (
       VarK:SortGeneratedCounterCellOpt{},
        \top{SortGeneratedCounterCellOpt{}}())))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCell{},R} (
      Lblproject'Coln'GeneratedTopCell{}(X0:SortK{}),
     \and{SortGeneratedTopCell{}} (
       VarK:SortGeneratedTopCell{},
        \top{SortGeneratedTopCell{}}())))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortGeneratedTopCellFragment{},R} (
      Lblproject'Coln'GeneratedTopCellFragment{}(X0:SortK{}),
     \and{SortGeneratedTopCellFragment{}} (
       VarK:SortGeneratedTopCellFragment{},
        \top{SortGeneratedTopCellFragment{}}())))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      Lblproject'Coln'Int{}(X0:SortK{}),
     \and{SortInt{}} (
       VarK:SortInt{},
        \top{SortInt{}}())))
  [projection{}()]

// rule `project:K`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            VarK:SortK{}
          ),
          \top{R} ()
        )),
    \equals{SortK{},R} (
      Lblproject'Coln'K{}(X0:SortK{}),
     \and{SortK{}} (
       VarK:SortK{},
        \top{SortK{}}())))
  [projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCell{},R} (
      Lblproject'Coln'KCell{}(X0:SortK{}),
     \and{SortKCell{}} (
       VarK:SortKCell{},
        \top{SortKCell{}}())))
  [projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKCellOpt{},R} (
      Lblproject'Coln'KCellOpt{}(X0:SortK{}),
     \and{SortKCellOpt{}} (
       VarK:SortKCellOpt{},
        \top{SortKCellOpt{}}())))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(VarK:SortKItem{},dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKItem{},R} (
      Lblproject'Coln'KItem{}(X0:SortK{}),
     \and{SortKItem{}} (
       VarK:SortKItem{},
        \top{SortKItem{}}())))
  [projection{}()]

// rule `project:KResult`(inj{KResult,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortKResult{}, SortKItem{}}(VarK:SortKResult{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortKResult{},R} (
      Lblproject'Coln'KResult{}(X0:SortK{}),
     \and{SortKResult{}} (
       VarK:SortKResult{},
        \top{SortKResult{}}())))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortList{},R} (
      Lblproject'Coln'List{}(X0:SortK{}),
     \and{SortList{}} (
       VarK:SortList{},
        \top{SortList{}}())))
  [projection{}()]

// rule `project:MInt{8}`(inj{MInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMInt{Sort8{}}, SortKItem{}}(VarK:SortMInt{Sort8{}}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMInt{Sort8{}},R} (
      Lblproject'Coln'MInt'LBra'8'RBra'{}(X0:SortK{}),
     \and{SortMInt{Sort8{}}} (
       VarK:SortMInt{Sort8{}},
        \top{SortMInt{Sort8{}}}())))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortMap{},R} (
      Lblproject'Coln'Map{}(X0:SortK{}),
     \and{SortMap{}} (
       VarK:SortMap{},
        \top{SortMap{}}())))
  [projection{}()]

// rule `project:Number`(inj{Number,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortNumber{}, SortKItem{}}(VarK:SortNumber{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortNumber{},R} (
      Lblproject'Coln'Number{}(X0:SortK{}),
     \and{SortNumber{}} (
       VarK:SortNumber{},
        \top{SortNumber{}}())))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortK{}, R} (
            X0:SortK{},
            kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())
          ),
          \top{R} ()
        )),
    \equals{SortSet{},R} (
      Lblproject'Coln'Set{}(X0:SortK{}),
     \and{SortSet{}} (
       VarK:SortSet{},
        \top{SortSet{}}())))
  [projection{}()]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f), org.kframework.attributes.Location(Location(1200,8,1200,164)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarI:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarIDX:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X2:SortInt{},
            VarLEN:SortInt{}
          ),
          \top{R} ()
        )))),
    \equals{SortInt{},R} (
      LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{},X2:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1200,8,1200,164)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("3b67f4bf2235fc46fc94b1d10e936100ea3fc4f2dbaa4e4a77593e8385f5004f")]

// rule `smaxMInt(_)_MINT_Int_Int`(N)=>`_-Int_`(`_<<Int_`(#token("1","Int"),`_-Int_`(N,#token("1","Int"))),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(885169667c6f8fea57b7fcc52120cbef83f7a6ce4b963cfd1964a8f45e16e376), org.kframework.attributes.Location(Location(2663,8,2663,54)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblsmaxMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1"))),\dv{SortInt{}}("1")),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2663,8,2663,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("885169667c6f8fea57b7fcc52120cbef83f7a6ce4b963cfd1964a8f45e16e376")]

// rule `sminMInt(_)_MINT_Int_Int`(N)=>`_-Int_`(#token("0","Int"),`_<<Int_`(#token("1","Int"),`_-Int_`(N,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(905e85b657a586ca9a0fce05831454ca4a80fc7b87b06f13eeb3d4af7821b66c), org.kframework.attributes.Location(Location(2662,8,2662,54)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblsminMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(\dv{SortInt{}}("0"),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarN:SortInt{},\dv{SortInt{}}("1")))),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2662,8,2662,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("905e85b657a586ca9a0fce05831454ca4a80fc7b87b06f13eeb3d4af7821b66c")]

// rule `soverflowMInt(_,_)_MINT_Bool_Int_Int`(N,I)=>`_orBool_`(`_<Int_`(I,`sminMInt(_)_MINT_Int_Int`(N)),`_>Int_`(I,`smaxMInt(_)_MINT_Int_Int`(N))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(451ca26671f46f6bc7874beade344389ec2cd222fb83b97a9eedd324b8353629), org.kframework.attributes.Location(Location(2678,5,2680,49)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      LblsoverflowMInt'LParUndsCommUndsRParUnds'MINT'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'Unds'orBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},LblsminMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(VarN:SortInt{})),Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},LblsmaxMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(VarN:SortInt{}))),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2678,5,2680,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("451ca26671f46f6bc7874beade344389ec2cd222fb83b97a9eedd324b8353629")]

// rule `umaxMInt(_)_MINT_Int_Int`(N)=>`_-Int_`(`_<<Int_`(#token("1","Int"),N),#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(112d01b7daf97f02c4b31925b2c46bfbbc1378e204996ff203543d4c44ccd5e5), org.kframework.attributes.Location(Location(2665,8,2665,45)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LblumaxMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       Lbl'Unds'-Int'Unds'{}(Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarN:SortInt{}),\dv{SortInt{}}("1")),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2665,8,2665,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("112d01b7daf97f02c4b31925b2c46bfbbc1378e204996ff203543d4c44ccd5e5")]

// rule `uminMInt(_)_MINT_Int_Int`(_Gen0)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(340a658083b6c1ac8b55d4c7c643de32cf560bb8b733ed8f9b139aee7c8c838b), org.kframework.attributes.Location(Location(2664,8,2664,28)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            Var'Unds'Gen0:SortInt{}
          ),
          \top{R} ()
        )),
    \equals{SortInt{},R} (
      LbluminMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(X0:SortInt{}),
     \and{SortInt{}} (
       \dv{SortInt{}}("0"),
        \top{SortInt{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2664,8,2664,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("340a658083b6c1ac8b55d4c7c643de32cf560bb8b733ed8f9b139aee7c8c838b")]

// rule `uoverflowMInt(_,_)_MINT_Bool_Int_Int`(N,I)=>`_orBool_`(`_<Int_`(I,`uminMInt(_)_MINT_Int_Int`(N)),`_>Int_`(I,`umaxMInt(_)_MINT_Int_Int`(N))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(669772aa6f72077d244868ca7dc07771189bb331b0347f2384101ba036d78ab2), org.kframework.attributes.Location(Location(2682,5,2684,49)), org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)), org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol])]
  axiom{R} \implies{R} (
    \and{R}(
      \top{R}(),
      \and{R} (
          \in{SortInt{}, R} (
            X0:SortInt{},
            VarN:SortInt{}
          ),\and{R} (
          \in{SortInt{}, R} (
            X1:SortInt{},
            VarI:SortInt{}
          ),
          \top{R} ()
        ))),
    \equals{SortBool{},R} (
      LbluoverflowMInt'LParUndsCommUndsRParUnds'MINT'Unds'Bool'Unds'Int'Unds'Int{}(X0:SortInt{},X1:SortInt{}),
     \and{SortBool{}} (
       Lbl'Unds'orBool'Unds'{}(Lbl'Unds-LT-'Int'Unds'{}(VarI:SortInt{},LbluminMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(VarN:SortInt{})),Lbl'Unds-GT-'Int'Unds'{}(VarI:SortInt{},LblumaxMInt'LParUndsRParUnds'MINT'Unds'Int'Unds'Int{}(VarN:SortInt{}))),
        \top{SortBool{}}())))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2682,5,2684,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/kframework/builtin/domains.md)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions), symbol]"), UNIQUE'Unds'ID{}("669772aa6f72077d244868ca7dc07771189bb331b0347f2384101ba036d78ab2")]


// priority groups
endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(2,1,55,10)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/llvm-backend/test/defn/k-files/test30.k)")]
