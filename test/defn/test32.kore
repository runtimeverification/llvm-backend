// RUN: %allow-pipefail
// RUN: %interpreter
// RUN: %check-grep
[topCellInitializer{}(LblinitGeneratedTopCell{}())]

module BASIC-K
  sort SortK{} []
  sort SortKItem{} []
endmodule []

module KSEQ
  import BASIC-K []

  // TODO: Provide constructor and functional axioms for `kseq` and `dotk`.
  symbol kseq{}(SortKItem{}, SortK{}) : SortK{} [constructor{}(),functional{}()]
  symbol dotk{}() : SortK{} [constructor{}(),functional{}()]

  symbol append{}(SortK{}, SortK{}) : SortK{} [function{}()]

  axiom{R}
    \equals{SortK{},R}(
      append{}(dotk{}(),K2:SortK{}),
      K2:SortK{})
  []

  axiom{R}
    \equals{SortK{},R}(
      append{}(kseq{}(K1:SortKItem{},K2:SortK{}),K3:SortK{}),
      kseq{}(K1:SortKItem{},append{}(K2:SortK{},K3:SortK{})))
  []

endmodule []

module INJ
  symbol inj{From,To}(From) : To [sortInjection{}()]

  axiom{S1,S2,S3,R}
    \equals{S3,R}(
      inj{S2,S3}(inj{S1,S2}(T:S1)),
      inj{S1,S3}(T:S1))
  []

endmodule []

module K
  import KSEQ []
  import INJ []

  // Defnitions for reachability aliases
  // Until we will have `mu` we resort to dummy definitions
  alias weakExistsFinally{A}(A) : A
  where weakExistsFinally{A}(@X:A) := @X:A []

  alias weakAlwaysFinally{A}(A) : A
  where weakAlwaysFinally{A}(@X:A) := @X:A []

  // Definitions for CTL aliases
  // Until we will have `mu` we resort to dummy definitions
  alias allPathGlobally{A}(A) : A
  where allPathGlobally{A}(@X:A) := @X:A []

endmodule []

module KINK

// imports
  import K []

// sorts
  sort SortKImportList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(373,3,373,20)")]
  sort SortModCellFragment{} []
  sort SortIOError{} []
  sort SortModuleName{} []
  sort SortKProduction{} []
  sort SortKLabel2{} []
  sort SortBubbleItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,3,71,19)")]
  sort SortDeclarationsCellFragment{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,3,35,33)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  sort Sort'Hash'RuleTag{} [hasDomainValues{}()]
  sort SortDollarName{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(6,3,6,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)")]
  sort SortStream{} []
  sort SortKoreDefinition{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,3,82,23)")]
  hooked-sort SortInt{} [hook{}("INT.Int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(364,3,364,28)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hasDomainValues{}()]
  sort SortSCell{} []
  sort Sort'Hash'UpperId{} [hasDomainValues{}()]
  sort SortSortName{} []
  sort SortKCellOpt{} []
  sort SortDefinition{} []
  sort SortAttributesCell{} []
  sort SortExitCodeCell{} []
  sort SortSorts{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(44,3,44,14)")]
  sort SortCollectedCell{} []
  sort SortVariableName{} []
  sort SortVariable{} []
  sort SortGeneratedCounterCell{} []
  sort SortGeneratedTopCell{} []
  sort SortConfigGrammarCell{} []
  sort SortCommandLine{} []
  sort SortAttributesCellOpt{} []
  sort SortPrgGrammarCell{} []
  sort SortModulesCellFragment{} []
  sort SortNumbers{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(7,3,7,16)")]
  sort SortCollectedCellOpt{} []
  sort SortConfigInfoCellOpt{} []
  sort SortModule{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,3,79,15)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)")]
  sort SortKSort{} []
  sort SortSyntaxDeclaration{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,3,133,26)")]
  sort SortDeclaration{} []
  sort SortLowerName{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(5,3,5,18)"), hasDomainValues{}()]
  sort SortDeclarationsCell{} []
  sort SortKModuleName{} []
  hooked-sort SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(308,3,308,31)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("BOOL.Bool"), hasDomainValues{}()]
  sort SortKinkDeployedDirCell{} []
  sort SortEKoreDeclaration{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)")]
  sort SortParserGeneratorCellFragment{} []
  sort SortKImport{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(372,3,372,16)")]
  sort SortPath{} [hasDomainValues{}()]
  sort SortRuleContents{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(205,3,205,21)")]
  sort SortConfigInfoCellFragment{} []
  sort SortTagContents{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(271,3,271,20)")]
  sort SortKAttributesDeclaration{} []
  hooked-sort SortModCellSet{} [hook{}("SET.Set"), element{}(LblModCellSetItem{}()), concat{}(Lbl'Unds'ModCellSet'Unds'{}()), unit{}(Lbl'Stop'ModCellSet{}())]
  sort SortNameCellOpt{} []
  sort SortRuleGrammarCell{} []
  sort SortKoreDeclaration{} []
  hooked-sort SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), element{}(LblListItem{}()), concat{}(Lbl'Unds'List'Unds'{}()), unit{}(Lbl'Stop'List{}()), hook{}("LIST.List"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,3,234,31)")]
  sort SortPgm{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,3,8,12)")]
  sort SortGeneratedTopCellFragment{} []
  sort SortOptionalAttributes{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(268,3,268,27)")]
  sort SortKRequireList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(376,3,376,21)")]
  sort SortStrategy{} []
  sort SortModules{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(80,3,80,16)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)")]
  sort SortConfigGrammarCellOpt{} []
  sort SortPattern{} []
  sort SortParserGeneratorCell{} []
  sort SortKDefinition{} []
  sort SortKEY{} []
  sort SortPrioritySeqBlock{} []
  sort SortRuleGrammarCellOpt{} []
  sort SortExitCodeCellOpt{} []
  sort SortDefinitionCell{} []
  sort SortModCell{} []
  hooked-sort SortSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), element{}(LblSetItem{}()), concat{}(Lbl'Unds'Set'Unds'{}()), unit{}(Lbl'Stop'Set{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,3,190,28)")]
  sort SortDefnAttrsCell{} []
  sort SortKCell{} []
  sort SortPatterns{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,3,66,17)")]
  sort SortSort{} []
  sort SortKSortList{} []
  sort SortTagContent{} []
  sort SortSymbol{} []
  sort SortAttrList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(266,3,266,17)")]
  sort SortTag{} []
  hooked-sort SortDeclCellSet{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), element{}(LblDeclCellSetItem{}()), concat{}(Lbl'Unds'DeclCellSet'Unds'{}()), unit{}(Lbl'Stop'DeclCellSet{}()), hook{}("SET.Set"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,3,34,20)")]
  sort SortUpperName{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(4,3,4,18)")]
  sort SortBubbleWithAttr{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,3,73,23)")]
  sort SortAssocAttribute{} []
  sort SortDeclarationsCellOpt{} []
  sort SortSymbolName{} []
  sort SortPrgGrammarCellOpt{} []
  sort SortProdBlock{} []
  sort SortBubble{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,3,72,15)")]
  sort SortModulesCellOpt{} []
  hooked-sort SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(490,3,490,34)"), hook{}("FLOAT.Float"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hasDomainValues{}()]
  sort SortCellNameCellOpt{} []
  sort SortDeclCell{} []
  sort SortAttr{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(265,3,265,13)")]
  sort SortIOInt{} []
  sort SortAny{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,3,31,12)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), hasDomainValues{}()]
  sort SortId{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(833,3,833,19)"), token{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hasDomainValues{}()]
  sort SortSCellOpt{} []
  sort SortIOFile{} []
  hooked-sort SortMap{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), element{}(Lbl'UndsPipe'-'-GT-Unds'{}()), concat{}(Lbl'Unds'Map'Unds'{}()), unit{}(Lbl'Stop'Map{}()), hook{}("MAP.Map"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(98,3,98,28)")]
  sort SortDefinitionCellOpt{} []
  sort Sort'Hash'LowerId{} [hasDomainValues{}()]
  sort SortParserGeneratorCellOpt{} []
  sort SortKoreString{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,3,9,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)")]
  sort SortDefnAttrsCellOpt{} []
  sort SortKProductionItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,3,128,24)")]
  sort SortConfigInfoCell{} []
  sort SortDeclarations{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(77,3,77,21)")]
  sort SortNameCell{} []
  sort SortCellNameCell{} []
  sort Sort'Hash'KVariable{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(92,3,92,19)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/kast.k)")]
  sort SortBacktickName{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,3,8,21)")]
  sort SortKPrioritySeq{} []
  sort SortModulesCell{} []
  sort SortAttribute{} []
  sort SortKinkDeployedDirCellOpt{} []
  sort SortCell{} []
  sort SortKProductionWAttr{} []
  sort SortDefinitionCellFragment{} []
  sort SortKNeTagSet{} []
  sort SortKConfigVar{} [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,3,12,27)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/kast.k)"), token{}(), hasDomainValues{}()]
  sort SortKRequire{} []
  sort SortVarName{} []
  sort SortIOString{} []
  sort SortEKoreKString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(241,3,241,21)")]
  hooked-sort SortString{} [hook{}("STRING.String"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(571,3,571,37)"), hasDomainValues{}()]

// symbols
  symbol Lbl'Hash'E2BIG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#E2BIG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(915,22,915,54)"), injective{}()]
  symbol Lbl'Hash'EACCES{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EACCES"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(916,22,916,56)"), injective{}()]
  symbol Lbl'Hash'EADDRINUSE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EADDRINUSE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(965,22,965,64)"), injective{}()]
  symbol Lbl'Hash'EADDRNOTAVAIL{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EADDRNOTAVAIL"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(966,22,966,70)"), injective{}()]
  symbol Lbl'Hash'EAFNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EAFNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(964,22,964,68)"), injective{}()]
  symbol Lbl'Hash'EAGAIN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EAGAIN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(917,22,917,56)"), injective{}()]
  symbol Lbl'Hash'EALREADY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EALREADY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(954,22,954,60)"), injective{}()]
  symbol Lbl'Hash'EBADF{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EBADF"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(918,22,918,54)"), injective{}()]
  symbol Lbl'Hash'EBUSY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EBUSY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(919,22,919,54)"), injective{}()]
  symbol Lbl'Hash'ECHILD{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ECHILD"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(920,22,920,56)"), injective{}()]
  symbol Lbl'Hash'ECONNABORTED{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ECONNABORTED"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(970,22,970,68)"), injective{}()]
  symbol Lbl'Hash'ECONNREFUSED{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ECONNREFUSED"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(978,22,978,68)"), injective{}()]
  symbol Lbl'Hash'ECONNRESET{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ECONNRESET"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(971,22,971,64)"), injective{}()]
  symbol Lbl'Hash'EDEADLK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EDEADLK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(921,22,921,58)"), injective{}()]
  symbol Lbl'Hash'EDESTADDRREQ{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EDESTADDRREQ"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(956,22,956,68)"), injective{}()]
  symbol Lbl'Hash'EDOM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EDOM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(922,22,922,52)"), injective{}()]
  symbol Lbl'Hash'EEXIST{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EEXIST"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(923,22,923,56)"), injective{}()]
  symbol Lbl'Hash'EFAULT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EFAULT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(924,22,924,56)"), injective{}()]
  symbol Lbl'Hash'EFBIG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EFBIG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(925,22,925,54)"), injective{}()]
  symbol Lbl'Hash'EHOSTDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EHOSTDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(979,22,979,62)"), injective{}()]
  symbol Lbl'Hash'EHOSTUNREACH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EHOSTUNREACH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(980,22,980,68)"), injective{}()]
  symbol Lbl'Hash'EINPROGRESS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EINPROGRESS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(953,22,953,66)"), injective{}()]
  symbol Lbl'Hash'EINTR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EINTR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(926,22,926,54)"), injective{}()]
  symbol Lbl'Hash'EINVAL{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EINVAL"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(927,22,927,56)"), injective{}()]
  symbol Lbl'Hash'EIO{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EIO"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(928,22,928,50)"), injective{}()]
  symbol Lbl'Hash'EISCONN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EISCONN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(973,22,973,58)"), injective{}()]
  symbol Lbl'Hash'EISDIR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EISDIR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(929,22,929,56)"), injective{}()]
  symbol Lbl'Hash'ELOOP{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ELOOP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(981,22,981,54)"), injective{}()]
  symbol Lbl'Hash'EMFILE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EMFILE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(930,22,930,56)"), injective{}()]
  symbol Lbl'Hash'EMLINK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EMLINK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(931,22,931,56)"), injective{}()]
  symbol Lbl'Hash'EMSGSIZE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EMSGSIZE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(957,22,957,60)"), injective{}()]
  symbol Lbl'Hash'ENAMETOOLONG{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENAMETOOLONG"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(932,22,932,68)"), injective{}()]
  symbol Lbl'Hash'ENETDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENETDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(967,22,967,60)"), injective{}()]
  symbol Lbl'Hash'ENETRESET{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENETRESET"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(969,22,969,62)"), injective{}()]
  symbol Lbl'Hash'ENETUNREACH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENETUNREACH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(968,22,968,66)"), injective{}()]
  symbol Lbl'Hash'ENFILE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENFILE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(933,22,933,56)"), injective{}()]
  symbol Lbl'Hash'ENOBUFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOBUFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(972,22,972,58)"), injective{}()]
  symbol Lbl'Hash'ENODEV{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENODEV"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(934,22,934,56)"), injective{}()]
  symbol Lbl'Hash'ENOENT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOENT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(935,22,935,56)"), injective{}()]
  symbol Lbl'Hash'ENOEXEC{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOEXEC"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(936,22,936,58)"), injective{}()]
  symbol Lbl'Hash'ENOLCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOLCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(937,22,937,56)"), injective{}()]
  symbol Lbl'Hash'ENOMEM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOMEM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(938,22,938,56)"), injective{}()]
  symbol Lbl'Hash'ENOPROTOOPT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOPROTOOPT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(959,22,959,66)"), injective{}()]
  symbol Lbl'Hash'ENOSPC{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOSPC"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(939,22,939,56)"), injective{}()]
  symbol Lbl'Hash'ENOSYS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOSYS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(940,22,940,56)"), injective{}()]
  symbol Lbl'Hash'ENOTCONN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTCONN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(974,22,974,60)"), injective{}()]
  symbol Lbl'Hash'ENOTDIR{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTDIR"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(941,22,941,58)"), injective{}()]
  symbol Lbl'Hash'ENOTEMPTY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTEMPTY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(942,22,942,62)"), injective{}()]
  symbol Lbl'Hash'ENOTSOCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTSOCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(955,22,955,60)"), injective{}()]
  symbol Lbl'Hash'ENOTTY{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENOTTY"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(943,22,943,56)"), injective{}()]
  symbol Lbl'Hash'ENXIO{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ENXIO"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(944,22,944,54)"), injective{}()]
  symbol Lbl'Hash'EOF{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EOF"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(914,22,914,50)"), injective{}()]
  symbol Lbl'Hash'EOPNOTSUPP{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EOPNOTSUPP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(962,22,962,64)"), injective{}()]
  symbol Lbl'Hash'EOVERFLOW{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EOVERFLOW"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(982,22,982,62)"), injective{}()]
  symbol Lbl'Hash'EPERM{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPERM"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(945,22,945,54)"), injective{}()]
  symbol Lbl'Hash'EPFNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPFNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(963,22,963,68)"), injective{}()]
  symbol Lbl'Hash'EPIPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPIPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(946,22,946,54)"), injective{}()]
  symbol Lbl'Hash'EPROTONOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPROTONOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(960,22,960,74)"), injective{}()]
  symbol Lbl'Hash'EPROTOTYPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EPROTOTYPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(958,22,958,64)"), injective{}()]
  symbol Lbl'Hash'ERANGE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ERANGE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(947,22,947,56)"), injective{}()]
  symbol Lbl'Hash'EROFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EROFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(948,22,948,54)"), injective{}()]
  symbol Lbl'Hash'ESHUTDOWN{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ESHUTDOWN"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(975,22,975,62)"), injective{}()]
  symbol Lbl'Hash'ESOCKTNOSUPPORT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ESOCKTNOSUPPORT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(961,22,961,74)"), injective{}()]
  symbol Lbl'Hash'ESPIPE{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ESPIPE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(949,22,949,56)"), injective{}()]
  symbol Lbl'Hash'ESRCH{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ESRCH"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(950,22,950,54)"), injective{}()]
  symbol Lbl'Hash'ETIMEDOUT{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ETIMEDOUT"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(977,22,977,62)"), injective{}()]
  symbol Lbl'Hash'ETOOMANYREFS{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#ETOOMANYREFS"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(976,22,976,68)"), injective{}()]
  symbol Lbl'Hash'EWOULDBLOCK{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EWOULDBLOCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(952,22,952,66)"), injective{}()]
  symbol Lbl'Hash'EXDEV{}() : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#EXDEV"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(951,22,951,54)"), injective{}()]
  symbol Lbl'Hash'STUCK{}() : SortStrategy{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#STUCK"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1352,25,1352,44)"), injective{}()]
  hooked-symbol Lbl'Hash'accept'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.accept"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(991,18,991,74)"), function{}()]
  symbol Lbl'Hash'addCasts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(SortSet{}) : SortSet{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,18,50,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)")]
  symbol Lbl'Hash'addCasts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,18,51,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)")]
  symbol Lbl'Hash'addRuleCells'LParUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set{}(SortSet{}, SortGeneratedTopCell{}) : SortSet{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(238,18,238,55)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)")]
  symbol Lbl'Hash'addRuleCells2'LParUndsCommUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}, SortGeneratedTopCell{}) : SortSet{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(239,18,239,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)")]
  symbol Lbl'Hash'addSubsorts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(SortSet{}) : SortSet{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,18,68,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)")]
  symbol Lbl'Hash'addSubsorts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,18,69,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)")]
  symbol Lbl'Hash'appliedRule{}(Sort'Hash'RuleTag{}) : SortStrategy{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), anywhere{}(), symbol'Kywd'{}(), klabel{}("#appliedRule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1354,25,1354,67)"), injective{}()]
  symbol Lbl'Hash'applyRule{}(Sort'Hash'RuleTag{}) : SortStrategy{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#applyRule"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1353,25,1353,65)"), injective{}()]
  hooked-symbol Lbl'Hash'argv'LParRParUnds'K-REFLECTION'Unds'List{}() : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("#argv"), hook{}("KREFLECTION.argv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(888,19,888,60)"), function{}()]
  symbol Lbl'Hash'attr2Pattern'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Pattern'Unds'Attr{}(SortAttr{}) : SortPattern{} [function{}(), klabel{}("#attr2Pattern"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(506,22,506,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'attrList2Patterns'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(SortAttrList{}) : SortPatterns{} [function{}(), klabel{}("#attrList2Patterns"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(510,23,510,61)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(SortK{}) : SortStream{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("#buffer"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1019,21,1019,30)"), injective{}()]
  hooked-symbol Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.close"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(994,16,994,70)"), function{}()]
  symbol Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,20,114,39)"), injective{}()]
  hooked-symbol Lbl'Hash'configuration'Unds'K-REFLECTION'Unds'K{}() : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("KREFLECTION.configuration"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(879,16,879,83)"), function{}()]
  symbol Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,20,151,41)"), injective{}()]
  symbol Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,20,211,39)"), injective{}()]
  symbol Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(247,20,247,34)"), injective{}()]
  symbol Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,20,111,35)"), injective{}()]
  symbol Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,20,174,39)"), injective{}()]
  symbol Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(588,20,588,44)"), injective{}()]
  symbol Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(360,20,360,40)"), injective{}()]
  hooked-symbol Lbl'Hash'fresh'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), klabel{}("#fresh"), hook{}("KREFLECTION.fresh"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(881,20,881,79)"), function{}()]
  symbol Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,20,122,38)"), injective{}()]
  symbol Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(SortModuleName{}, SortGeneratedTopCell{}) : SortSet{} [function{}(), klabel{}("#getAllProds"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(137,18,137,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'getAllProdsSet'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Set{}(SortSet{}, SortGeneratedTopCell{}) : SortSet{} [function{}(), klabel{}("#getAllProdsSet"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,18,138,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'getAttributeContent'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'TagContents'Unds'KEY'Unds'AttrList{}(SortKEY{}, SortAttrList{}) : SortTagContents{} [function{}(), klabel{}("#getAttributeContent"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,26,218,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'getDeclaredKoreSymbolsFromDecls'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Declarations{}(SortDeclarations{}) : SortSet{} [function{}(), klabel{}("#getDeclaredKoreSymbolsFromDecls"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,18,177,82)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'getImportedModules'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(SortModuleName{}, SortGeneratedTopCell{}) : SortSet{} [function{}(), klabel{}("#getImportedModules"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(115,18,115,64)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'getImportedModulesSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(SortModuleName{}, SortSet{}, SortGeneratedTopCell{}) : SortSet{} [function{}(), klabel{}("#getImportedModulesSet"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,18,116,67)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'getLocalProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(SortModuleName{}, SortGeneratedTopCell{}) : SortSet{} [function{}(), klabel{}("#getLocalProds"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(126,18,126,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'getLocalProdsSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(SortModuleName{}, SortSet{}, SortGeneratedTopCell{}) : SortSet{} [function{}(), klabel{}("#getLocalProdsSet"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,18,127,62)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'getReturnSort'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Sort'Unds'ModuleName'Unds'SymbolName{}(SortModuleName{}, SortSymbolName{}, SortGeneratedTopCell{}) : SortSort{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), withConfig{}(), klabel{}("#getReturnSort"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(191,19,191,79)"), function{}()]
  hooked-symbol Lbl'Hash'getc'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.getc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(990,18,990,82)"), function{}()]
  hooked-symbol Lbl'Hash'getenv'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), klabel{}("#getenv"), hook{}("KREFLECTION.getenv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(884,21,884,80)"), function{}()]
  hooked-symbol Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(SortBool{}, SortSort, SortSort) : SortSort [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), smt-hook{}("ite"), hook{}("KEQUAL.ite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(867,26,867,125)"), function{}()]
  symbol Lbl'Hash'isFunctionSymbol'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(SortModuleName{}, SortSymbolName{}, SortGeneratedTopCell{}) : SortBool{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), withConfig{}(), klabel{}("#isFunctionSymbol"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(198,19,198,82)"), function{}()]
  symbol Lbl'Hash'isSortDeclared'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SortName{}(SortModuleName{}, SortSortName{}, SortGeneratedTopCell{}) : SortBool{} [function{}(), klabel{}("#isSortDeclared"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,19,151,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'isSortDeclaredMod'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SortName{}(SortModuleName{}, SortSortName{}, SortGeneratedTopCell{}) : SortBool{} [function{}(), klabel{}("#isSortDeclaredMod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,19,145,69)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'isSortDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SortName{}(SortSet{}, SortSortName{}, SortGeneratedTopCell{}) : SortBool{} [function{}(), klabel{}("#isSortDeclaredSet"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(152,19,152,66)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'isSymbolDeclared'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(SortModuleName{}, SortSymbolName{}, SortGeneratedTopCell{}) : SortBool{} [function{}(), klabel{}("#isSymbolDeclared"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(167,19,167,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'isSymbolDeclaredMod'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(SortModuleName{}, SortSymbolName{}, SortGeneratedTopCell{}) : SortBool{} [function{}(), klabel{}("#isSymbolDeclaredMod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(161,19,161,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'isSymbolDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SymbolName{}(SortSet{}, SortSymbolName{}, SortGeneratedTopCell{}) : SortBool{} [function{}(), klabel{}("#isSymbolDeclaredSet"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,19,168,70)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,20,102,49)"), injective{}()]
  symbol Lbl'Hash'keyInAttributes'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'KEY'Unds'AttrList{}(SortKEY{}, SortAttrList{}) : SortBool{} [function{}(), klabel{}("#keyInAttributes"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(211,19,211,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'lambda'UndsUnds'{}(SortSort{}, SortPattern{}, SortPattern{}) : SortKoreDeclaration{} [function{}()]
  hooked-symbol Lbl'Hash'lock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.lock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(999,16,999,76)"), function{}()]
  hooked-symbol Lbl'Hash'logToFile{}(SortString{}, SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), returnsUnit{}(), symbol'Kywd'{}(), impure{}(), klabel{}("#logToFile"), hook{}("IO.log"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1029,16,1029,107)"), function{}()]
  hooked-symbol Lbl'Hash'lstat'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.lstat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1004,20,1004,77)"), function{}()]
  hooked-symbol Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(SortString{}) : SortIOFile{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), klabel{}("#mkstemp"), hook{}("IO.mkstemp"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1031,21,1031,73)"), function{}()]
  symbol Lbl'Hash'noParse{}(SortString{}) : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#noParse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(893,22,893,73)"), injective{}()]
  symbol Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(433,20,433,58)"), injective{}()]
  symbol Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(SortString{}) : SortIOInt{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(987,20,987,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.open"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(988,18,988,84)"), function{}()]
  hooked-symbol Lbl'Hash'opendir'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.opendir"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1005,20,1005,81)"), function{}()]
  symbol Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(SortCommandLine{}, SortPgm{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(7,20,7,66)"), injective{}()]
  symbol Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(150,20,150,40)"), injective{}()]
  hooked-symbol Lbl'Hash'parseKAST'LParUndsRParUnds'K-REFLECTION'Unds'Sort'Unds'String{SortSort}(SortString{}) : SortSort [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("#parseKAST"), hook{}("KREFLECTION.parseKAST"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(892,26,892,83)"), function{}()]
  hooked-symbol Lbl'Hash'parseKORE'LParUndsRParUnds'K-REFLECTION'Unds'Sort'Unds'String{SortSort}(SortString{}) : SortSort [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("#parseKORE"), hook{}("KREFLECTION.parseKORE"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(891,26,891,83)"), function{}()]
  symbol Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,20,93,32)"), injective{}()]
  symbol Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(SortIOString{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(113,20,113,51)"), injective{}()]
  symbol Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,20,112,53)"), injective{}()]
  symbol Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(210,20,210,38)"), injective{}()]
  symbol Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(273,20,273,34)"), injective{}()]
  symbol Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,20,403,51)"), injective{}()]
  symbol Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(470,20,470,53)"), injective{}()]
  hooked-symbol Lbl'Hash'putc'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.putc"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(997,16,997,81)"), function{}()]
  hooked-symbol Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortIOString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.read"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(992,23,992,86)"), function{}()]
  hooked-symbol Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(SortString{}) : SortK{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), klabel{}("#remove"), hook{}("IO.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1036,16,1036,78)"), function{}()]
  symbol Lbl'Hash'removeKlabelAttr'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(SortAttrList{}) : SortPatterns{} [function{}(), klabel{}("#removeKlabelAttr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(495,23,495,60)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  hooked-symbol Lbl'Hash'seek'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.seek"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(995,16,995,76)"), function{}()]
  hooked-symbol Lbl'Hash'seekEnd'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.seekEnd"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(996,16,996,82)"), function{}()]
  hooked-symbol Lbl'Hash'shutdownWrite'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.shutdownWrite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1001,16,1001,86)"), function{}()]
  hooked-symbol Lbl'Hash'sort'LParUndsRParUnds'K-REFLECTION'Unds'String'Unds'K{}(SortK{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("#sort"), hook{}("KREFLECTION.sort"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(880,21,880,63)"), function{}()]
  symbol Lbl'Hash'sortsFromProdItem'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProductionItem{}(SortKProductionItem{}) : SortSorts{} [function{}(), klabel{}("#sortsFromProdItem"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(524,20,524,65)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  hooked-symbol Lbl'Hash'stat'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.stat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1003,20,1003,75)"), function{}()]
  symbol Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1013,19,1013,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1011,18,1011,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}() : SortInt{} [functional{}(), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1012,19,1012,50)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,20,90,29)"), injective{}()]
  symbol Lbl'Hash'symbolArgumentsFromProduction'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProduction{}(SortKProduction{}) : SortSorts{} [function{}(), klabel{}("#symbolArgumentsFromProduction"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(518,20,518,73)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'Hash'symbolNameFromAttrList'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'SymbolName'Unds'AttrList{}(SortAttrList{}, SortGeneratedTopCell{}) : SortSymbolName{} [function{}(), klabel{}("#symbolNameFromAttrList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(491,25,491,68)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  hooked-symbol Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(SortString{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), klabel{}("#system"), hook{}("IO.system"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1026,20,1026,73)"), function{}()]
  symbol Lbl'Hash'systemResult{}(SortInt{}, SortString{}, SortString{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#systemResult"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1027,20,1027,142)"), injective{}()]
  hooked-symbol Lbl'Hash'tell'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'Int{}(SortInt{}) : SortIOInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.tell"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(989,18,989,70)"), function{}()]
  symbol Lbl'Hash'tempFile{}(SortString{}, SortInt{}) : SortIOFile{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#tempFile"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1034,21,1034,82)"), injective{}()]
  hooked-symbol Lbl'Hash'time'LParRParUnds'K-IO'Unds'Int{}() : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.time"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1007,18,1007,66)"), function{}()]
  symbol Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}() : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(547,20,547,36)"), injective{}()]
  symbol Lbl'Hash'unknownIOError{}(SortInt{}) : SortIOError{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("#unknownIOError"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(914,54,914,82)"), injective{}()]
  hooked-symbol Lbl'Hash'unlock'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.unlock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1000,16,1000,80)"), function{}()]
  hooked-symbol Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(SortInt{}, SortString{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("IO.write"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(998,16,998,81)"), function{}()]
  hooked-symbol Lbl'Stop'DeclCellSet{}() : SortDeclCellSet{} [hook{}("SET.unit"), function{}()]
  hooked-symbol Lbl'Stop'List{}() : SortList{} [latex{}("\\dotCt{List}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("smt_seq_nil"), klabel{}(".List"), hook{}("LIST.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(269,19,269,146)"), function{}()]
  hooked-symbol Lbl'Stop'Map{}() : SortMap{} [latex{}("\\dotCt{Map}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}(".Map"), hook{}("MAP.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(108,18,108,128)"), function{}()]
  hooked-symbol Lbl'Stop'ModCellSet{}() : SortModCellSet{} [hook{}("SET.unit"), function{}()]
  hooked-symbol Lbl'Stop'Set{}() : SortSet{} [latex{}("\\dotCt{Set}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}(".Set"), hook{}("SET.unit"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(198,18,198,122)"), function{}()]
  symbol Lbl'-LT-'attributes'-GT-'{}(SortPatterns{}) : SortAttributesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("attributes"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("[ %2 ]"), injective{}(), cell{}()]
  symbol Lbl'-LT-'cellName'-GT-'{}(SortMap{}) : SortCellNameCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("cellName"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'collected'-GT-'{}(SortSet{}) : SortCollectedCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("collected"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'configGrammar'-GT-'{}(SortSet{}) : SortConfigGrammarCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("configGrammar"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'configInfo'-GT-'{}(SortCellNameCell{}, SortCollectedCell{}) : SortConfigInfoCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("configInfo"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("/*%i%n%1%n%2%n%3%n%4%n%d%n*/"), injective{}(), cell{}()]
  symbol Lbl'-LT-'configInfo'-GT-'-fragment{}(SortCellNameCellOpt{}, SortCollectedCellOpt{}) : SortConfigInfoCellFragment{} [cellFragment{}("ConfigInfoCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'decl'-GT-'{}(SortDeclaration{}) : SortDeclCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("decl"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), type{}("Set"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%2%n"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'declarations'-GT-'{}(SortDeclCellSet{}) : SortDeclarationsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("declarations"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%2"), injective{}(), cell{}()]
  symbol Lbl'-LT-'declarations'-GT-'-fragment{}(SortDeclCellSet{}) : SortDeclarationsCellFragment{} [cellFragment{}("DeclarationsCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'definition'-GT-'{}(SortDefnAttrsCell{}, SortModulesCell{}, SortConfigInfoCell{}) : SortDefinitionCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("definition"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%n%3%n%4%d%n%5"), injective{}(), cell{}()]
  symbol Lbl'-LT-'definition'-GT-'-fragment{}(SortDefnAttrsCellOpt{}, SortModulesCellOpt{}, SortConfigInfoCellOpt{}) : SortDefinitionCellFragment{} [cellFragment{}("DefinitionCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'defnAttrs'-GT-'{}(SortPatterns{}) : SortDefnAttrsCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("defnAttrs"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("[ %2 ]%n"), injective{}(), cell{}()]
  symbol Lbl'-LT-'exit-code'-GT-'{}(SortInt{}) : SortExitCodeCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("exit-code"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%d%n%3"), exit{}(), injective{}(), cell{}()]
  symbol Lbl'-LT-'generatedCounter'-GT-'{}(SortInt{}) : SortGeneratedCounterCell{} [functional{}(), constructor{}(), cellName{}("generatedCounter"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'{}(SortKCell{}, SortDefinitionCell{}, SortExitCodeCell{}, SortSCell{}, SortGeneratedCounterCell{}, SortKinkDeployedDirCell{}) : SortGeneratedTopCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("generatedTop"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%n%3%n%4%n%5%n%7%d%n%8"), injective{}(), cell{}(), topcell{}()]
  symbol Lbl'-LT-'generatedTop'-GT-'-fragment{}(SortKCellOpt{}, SortDefinitionCellOpt{}, SortExitCodeCellOpt{}, SortSCellOpt{}, SortKinkDeployedDirCellOpt{}) : SortGeneratedTopCellFragment{} [cellFragment{}("GeneratedTopCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'k'-GT-'{}(SortK{}) : SortKCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("k"), maincell{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'kinkDeployedDir'-GT-'{}(SortString{}) : SortKinkDeployedDirCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("kinkDeployedDir"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mod'-GT-'{}(SortNameCell{}, SortAttributesCell{}, SortDeclarationsCell{}, SortParserGeneratorCell{}) : SortModCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("mod"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), type{}("Set"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("module %2%i%n%4%n%5%n%d%n %i%dendmodule %3%n%n"), multiplicity{}("*"), injective{}(), cell{}()]
  symbol Lbl'-LT-'mod'-GT-'-fragment{}(SortNameCellOpt{}, SortAttributesCellOpt{}, SortDeclarationsCellOpt{}, SortParserGeneratorCellOpt{}) : SortModCellFragment{} [cellFragment{}("ModCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'modules'-GT-'{}(SortModCellSet{}) : SortModulesCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("modules"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%2%n"), injective{}(), cell{}()]
  symbol Lbl'-LT-'modules'-GT-'-fragment{}(SortModCellSet{}) : SortModulesCellFragment{} [cellFragment{}("ModulesCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'name'-GT-'{}(SortModuleName{}) : SortNameCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("name"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%2"), injective{}(), cell{}()]
  symbol Lbl'-LT-'parserGenerator'-GT-'{}(SortPrgGrammarCell{}, SortConfigGrammarCell{}, SortRuleGrammarCell{}) : SortParserGeneratorCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("parserGenerator"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("/*%i%n%1%n%2%n%3%n%4%n%5%d%n*/"), injective{}(), cell{}()]
  symbol Lbl'-LT-'parserGenerator'-GT-'-fragment{}(SortPrgGrammarCellOpt{}, SortConfigGrammarCellOpt{}, SortRuleGrammarCellOpt{}) : SortParserGeneratorCellFragment{} [cellFragment{}("ParserGeneratorCell"), constructor{}(), functional{}(), injective{}()]
  symbol Lbl'-LT-'prgGrammar'-GT-'{}(SortSet{}) : SortPrgGrammarCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("prgGrammar"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'ruleGrammar'-GT-'{}(SortSet{}) : SortRuleGrammarCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), cellName{}("ruleGrammar"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("17"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,17,62,89)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}()]
  symbol Lbl'-LT-'s'-GT-'{}(SortK{}) : SortSCell{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), cellName{}("s"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1356"), contentStartColumn{}("19"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1356,19,1356,39)"), format{}("%1%i%n%2%d%n%3"), injective{}(), cell{}(), topcell{}()]
  symbol LblAttrListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'AttrList{}(SortAttrList{}) : SortString{} [function{}(), klabel{}("AttrListToString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(132,21,132,57)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblAttrToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Attr{}(SortAttr{}) : SortString{} [function{}(), klabel{}("AttrToString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(138,21,138,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  hooked-symbol LblBase2String'LParUndsCommUndsRParUnds'STRING'Unds'String'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("Base2String"), hook{}("STRING.base2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(600,21,600,92)"), function{}()]
  hooked-symbol LblDeclCellSetItem{}(SortDeclCell{}) : SortDeclCellSet{} [hook{}("SET.element"), function{}(), format{}("%3")]
  hooked-symbol LblFloat2String'LParUndsRParUnds'STRING'Unds'String'Unds'Float{}(SortFloat{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("Float2String"), hook{}("STRING.float2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(595,21,595,105)"), function{}()]
  hooked-symbol LblFloat2String'LParUndsCommUndsRParUnds'STRING'Unds'String'Unds'Float'Unds'String{}(SortFloat{}, SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("FloatFormat"), hook{}("STRING.floatFormat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(596,21,596,113)"), function{}()]
  hooked-symbol LblId2String'LParUndsRParUnds'ID-SYNTAX'Unds'String'Unds'Id{}(SortId{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("Id2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(835,21,835,89)"), function{}()]
  hooked-symbol LblInt2String'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("Int2String"), hook{}("STRING.int2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(599,21,599,103)"), function{}()]
  symbol LblKProductionItemToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProductionItem{}(SortKProductionItem{}) : SortString{} [function{}(), klabel{}("KProductionItemToString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,21,122,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblKProductionToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProduction{}(SortKProduction{}) : SortString{} [function{}(), klabel{}("KProductionToString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(114,21,114,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblKRequireList{}(SortKRequireList{}, SortKRequire{}) : SortKRequireList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("KRequireList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,28,388,95)"), format{}("%1%2%n"), injective{}()]
  symbol LblKSortListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KSortList{}(SortKSortList{}) : SortString{} [function{}(), klabel{}("KSortListToString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(110,21,110,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  hooked-symbol LblList'Coln'get{}(SortList{}, SortInt{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("List:get"), hook{}("LIST.get"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(277,20,277,98)"), function{}()]
  hooked-symbol LblList'Coln'range{}(SortList{}, SortInt{}, SortInt{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("List:range"), hook{}("LIST.range"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(288,19,288,98)"), function{}()]
  hooked-symbol LblListItem{}(SortKItem{}) : SortList{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("smt_seq_elem"), klabel{}("ListItem"), hook{}("LIST.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(272,19,272,136)"), function{}()]
  hooked-symbol LblMap'Coln'lookup{}(SortMap{}, SortKItem{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Map:lookup"), hook{}("MAP.lookup"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,20,119,112)"), function{}()]
  hooked-symbol LblMap'Coln'update{}(SortMap{}, SortKItem{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), prefer{}(), klabel{}("Map:update"), hook{}("MAP.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,18,124,132)"), function{}()]
  hooked-symbol LblModCellSetItem{}(SortModCell{}) : SortModCellSet{} [hook{}("SET.element"), function{}(), format{}("%3")]
  symbol LblOptionalAttributesToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'OptionalAttributes{}(SortOptionalAttributes{}) : SortString{} [function{}(), klabel{}("OptionalAttributesToString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,21,127,77)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  hooked-symbol LblSet'Coln'difference{}(SortSet{}, SortSet{}) : SortSet{} [latex{}("{#1}-_{\\it Set}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Set:difference"), hook{}("SET.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(209,18,209,146)"), function{}()]
  hooked-symbol LblSet'Coln'in{}(SortKItem{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("Set:in"), hook{}("SET.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,19,212,106)"), function{}()]
  hooked-symbol LblSetItem{}(SortKItem{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("SetItem"), hook{}("SET.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,18,203,112)"), function{}()]
  hooked-symbol LblString2Base'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'Int{}(SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("String2Base"), hook{}("STRING.string2base"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(601,21,601,92)"), function{}()]
  hooked-symbol LblString2EKoreKString'LParUndsRParUnds'KORE-HELPERS'Unds'EKoreKString'Unds'String{}(SortString{}) : SortEKoreKString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), klabel{}("String2EKoreKString"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,27,101,104)"), function{}()]
  hooked-symbol LblString2Float'LParUndsRParUnds'STRING'Unds'Float'Unds'String{}(SortString{}) : SortFloat{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("String2Float"), hook{}("STRING.string2float"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(597,21,597,93)"), function{}()]
  hooked-symbol LblString2Id'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'String{}(SortString{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("String2Id"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(836,17,836,84)"), function{}()]
  hooked-symbol LblString2Int'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("String2Int"), hook{}("STRING.string2int"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(598,21,598,91)"), function{}()]
  hooked-symbol LblString2TagContents'LParUndsRParUnds'KORE-HELPERS'Unds'TagContents'Unds'String{}(SortString{}) : SortTagContents{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), klabel{}("String2TagContents"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,27,102,104)"), function{}()]
  hooked-symbol LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(SortString{}) : SortUpperName{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), klabel{}("String2UpperName"), hook{}("STRING.string2token"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,24,11,98)"), function{}()]
  symbol LblTagContentsToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'TagContents{}(SortTagContents{}) : SortString{} [function{}(), klabel{}("TagContentsToString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(144,21,144,63)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(SortSort{}, SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,22,50,98)"), injective{}()]
  symbol Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(SortSort{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("bottom"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,22,62,101)"), injective{}()]
  symbol Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(SortSort{}, SortSort{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("ceil"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,22,57,99)"), injective{}()]
  symbol Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(SortSort{}, SortSort{}, SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("equals"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,22,59,101)"), injective{}()]
  symbol Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(SortSort{}, SortVariable{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("exists"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,22,56,101)"), injective{}()]
  symbol Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(SortSort{}, SortSort{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("floor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,22,58,100)"), injective{}()]
  symbol Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(SortSort{}, SortVariable{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("forall"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,22,55,101)"), injective{}()]
  symbol Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(SortSort{}, SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("iff"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,22,54,98)"), injective{}()]
  symbol Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(SortSort{}, SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,22,53,102)"), injective{}()]
  symbol Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(SortSort{}, SortSort{}, SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,22,60,97)"), injective{}()]
  symbol Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(SortSort{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("next"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(63,22,63,99)"), injective{}()]
  symbol Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(SortSort{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,22,51,98)"), injective{}()]
  symbol Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(SortSort{}, SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,22,52,97)"), injective{}()]
  symbol Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(SortSort{}, SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("rewrites"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(64,22,64,103)"), injective{}()]
  symbol Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(SortSort{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), klabel{}("top"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,22,61,98)"), injective{}()]
  hooked-symbol Lbl'UndsPerc'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\%_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("mod"), klabel{}("_%Int_"), hook{}("INT.tmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,18,385,170)"), function{}()]
  hooked-symbol Lbl'UndsAnd-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\&_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("andInt"), klabel{}("_&Int_"), hook{}("INT.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(396,18,396,182)"), function{}()]
  hooked-symbol Lbl'UndsStar'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ast_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("*"), klabel{}("_*Int_"), hook{}("INT.mul"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(381,18,381,181)"), function{}()]
  symbol Lbl'UndsPlusPlus'Declarations'UndsUnds'KORE-HELPERS'Unds'Declarations'Unds'Declarations'Unds'Declarations{}(SortDeclarations{}, SortDeclarations{}) : SortDeclarations{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(82,27,82,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'UndsPlusPlus'Modules'UndsUnds'KORE-HELPERS'Unds'Modules'Unds'Modules'Unds'Modules{}(SortModules{}, SortModules{}) : SortModules{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(86,22,86,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  symbol Lbl'UndsPlusPlus'Sorts'UndsUnds'KORE-HELPERS'Unds'Sorts'Unds'Sorts'Unds'Sorts{}(SortSorts{}, SortSorts{}) : SortSorts{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(90,20,90,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  hooked-symbol Lbl'UndsPlus'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{+_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("+"), klabel{}("_+Int_"), hook{}("INT.add"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(390,18,390,178)"), function{}()]
  hooked-symbol Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortString{} [latex{}("{#1}+_{\\scriptstyle\\it String}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), hook{}("STRING.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(581,21,581,139)"), function{}()]
  hooked-symbol Lbl'Unds'-Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{-_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("-"), klabel{}("_-Int_"), hook{}("INT.sub"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(391,18,391,178)"), function{}()]
  hooked-symbol Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [latex{}("{#1}-_{\\it Map}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("MAP.difference"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,18,131,120)"), function{}()]
  hooked-symbol Lbl'UndsSlsh'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\div_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("div"), klabel{}("_/Int_"), hook{}("INT.tdiv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(384,18,384,172)"), function{}()]
  hooked-symbol Lbl'Unds-LT--LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\ll_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("shlInt"), klabel{}("_<<Int_"), hook{}("INT.shl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(394,18,394,172)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\leq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("<="), klabel{}("_<=Int_"), hook{}("INT.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(410,19,410,176)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("MAP.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,19,154,91)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("SET.inclusion"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,19,215,85)"), function{}()]
  hooked-symbol Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("STRING.le"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(614,19,614,82)"), function{}()]
  hooked-symbol Lbl'Unds-LT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{<_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("<"), klabel{}("_<Int_"), hook{}("INT.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(411,19,411,171)"), function{}()]
  hooked-symbol Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("STRING.lt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(613,19,613,82)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("distinct"), klabel{}("_=/=Bool_"), hook{}("BOOL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(325,19,325,132)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{/}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("distinct"), klabel{}("_=/=Int_"), hook{}("INT.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(415,19,415,188)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{\\neq_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), notEqualEqualK{}(), smt-hook{}("distinct"), klabel{}("_=/=K_"), hook{}("KEQUAL.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(860,19,860,170)"), function{}()]
  hooked-symbol Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), hook{}("STRING.ne"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(609,19,609,94)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Bool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("="), klabel{}("_==Bool_"), hook{}("BOOL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(324,19,324,124)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{{=}{=}_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("="), klabel{}("_==Int_"), hook{}("INT.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,19,414,177)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'K'Unds'{}(SortK{}, SortK{}) : SortBool{} [latex{}("{#1}\\mathrel{=_K}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smt-hook{}("="), equalEqualK{}(), klabel{}("_==K_"), hook{}("KEQUAL.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(859,19,859,156)"), function{}()]
  hooked-symbol Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), hook{}("STRING.eq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(583,19,583,88)"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{\\geq_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}(">="), klabel{}("_>=Int_"), hook{}("INT.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(412,19,412,176)"), function{}()]
  hooked-symbol Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("STRING.ge"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(616,19,616,82)"), function{}()]
  hooked-symbol Lbl'Unds-GT--GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\gg_{\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("shrInt"), klabel{}("_>>Int_"), hook{}("INT.shr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,18,393,172)"), function{}()]
  hooked-symbol Lbl'Unds-GT-'Int'Unds'{}(SortInt{}, SortInt{}) : SortBool{} [latex{}("{#1}\\mathrel{>_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}(">"), klabel{}("_>Int_"), hook{}("INT.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(413,19,413,171)"), function{}()]
  hooked-symbol Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("STRING.gt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(615,19,615,82)"), function{}()]
  hooked-symbol Lbl'Unds'DeclCellSet'Unds'{}(SortDeclCellSet{}, SortDeclCellSet{}) : SortDeclCellSet{} [unit{}(".DeclCellSet"), element{}("DeclCellSetItem"), idem{}(), comm{}(), cellCollection{}(), assoc{}(), hook{}("SET.concat"), avoid{}(), function{}(), wrapElement{}("<decl>")]
  hooked-symbol Lbl'Unds'List'Unds'{}(SortList{}, SortList{}) : SortList{} [unit{}(".List"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), element{}("ListItem"), symbol'Kywd'{}(), assoc{}(), smtlib{}("smt_seq_concat"), klabel{}("_List_"), hook{}("LIST.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(267,19,267,192)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'Map'Unds'{}(SortMap{}, SortMap{}) : SortMap{} [unit{}(".Map"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), element{}("_|->_"), symbol'Kywd'{}(), comm{}(), assoc{}(), index{}("0"), klabel{}("_Map_"), hook{}("MAP.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(106,18,106,172)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'Unds'ModCellSet'Unds'{}(SortModCellSet{}, SortModCellSet{}) : SortModCellSet{} [unit{}(".ModCellSet"), element{}("ModCellSetItem"), idem{}(), comm{}(), cellCollection{}(), assoc{}(), hook{}("SET.concat"), avoid{}(), function{}(), wrapElement{}("<mod>")]
  hooked-symbol Lbl'Unds'Set'Unds'{}(SortSet{}, SortSet{}) : SortSet{} [unit{}(".Set"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), element{}("SetItem"), symbol'Kywd'{}(), idem{}(), comm{}(), assoc{}(), klabel{}("_Set_"), hook{}("SET.concat"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(196,18,196,176)"), format{}("%1%n%2"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-'UndsRSqBUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("List:set"), hook{}("LIST.update"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,19,279,93)"), function{}()]
  hooked-symbol Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(SortMap{}, SortKItem{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("_[_<-undef]"), hook{}("MAP.remove"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,18,127,121)"), function{}()]
  hooked-symbol Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(SortMap{}, SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("Map:lookupOrDefault"), hook{}("MAP.lookupOrDefault"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,20,121,138)"), function{}()]
  hooked-symbol Lbl'UndsXor-Perc'Int'UndsUnds'{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("(mod (^ #1 #2) #3)"), klabel{}("_^%Int__"), hook{}("INT.powmod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(379,18,379,138)"), function{}()]
  hooked-symbol Lbl'UndsXor-'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{{\\char`\\^}_{\\!\\scriptstyle\\it Int}}{#2}"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("^"), klabel{}("_^Int_"), hook{}("INT.pow"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(378,18,378,177)"), function{}()]
  hooked-symbol Lbl'Unds'andBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\wedge_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("and"), boolOperation{}(), klabel{}("_andBool_"), hook{}("BOOL.and"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(317,19,317,189)"), function{}()]
  hooked-symbol Lbl'Unds'andThenBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("and"), boolOperation{}(), klabel{}("_andThenBool_"), hook{}("BOOL.andThen"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(318,19,318,151)"), function{}()]
  hooked-symbol Lbl'Unds'divInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("div"), klabel{}("_divInt_"), hook{}("INT.ediv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,18,387,121)"), function{}()]
  symbol Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortBool{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(416,19,416,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol Lbl'Unds'impliesBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("=>"), boolOperation{}(), klabel{}("_impliesBool_"), hook{}("BOOL.implies"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(322,19,322,150)"), function{}()]
  symbol Lbl'Unds'inPatterns'UndsUnds'KORE-HELPERS'Unds'Bool'Unds'Pattern'Unds'Patterns{}(SortPattern{}, SortPatterns{}) : SortBool{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,19,94,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
  hooked-symbol Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(SortKItem{}, SortList{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("_inList_"), hook{}("LIST.in"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(291,19,291,101)"), function{}()]
  hooked-symbol Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(SortKItem{}, SortMap{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("MAP.in_keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,19,145,93)"), function{}()]
  hooked-symbol Lbl'Unds'modInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("mod"), klabel{}("_modInt_"), hook{}("INT.emod"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(388,18,388,121)"), function{}()]
  hooked-symbol Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(SortBool{}, SortBool{}) : SortBool{} [latex{}("{#1}\\vee_{\\scriptstyle\\it Bool}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), smt-hook{}("or"), boolOperation{}(), klabel{}("_orBool_"), hook{}("BOOL.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,19,320,176)"), function{}()]
  hooked-symbol Lbl'Unds'orElseBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("or"), boolOperation{}(), klabel{}("_orElseBool_"), hook{}("BOOL.orElse"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,19,321,148)"), function{}()]
  hooked-symbol Lbl'Unds'xorBool'Unds'{}(SortBool{}, SortBool{}) : SortBool{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smt-hook{}("xor"), boolOperation{}(), klabel{}("_xorBool_"), hook{}("BOOL.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(319,19,319,143)"), function{}()]
  hooked-symbol Lbl'Unds'xorInt'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{\\oplus_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("xorInt"), klabel{}("_xorInt_"), hook{}("INT.xor"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(398,18,398,188)"), function{}()]
  hooked-symbol Lbl'UndsPipe'-'-GT-Unds'{}(SortKItem{}, SortKItem{}) : SortMap{} [latex{}("{#1}\\mapsto{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), klabel{}("_|->_"), hook{}("MAP.element"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(113,18,113,144)"), function{}()]
  hooked-symbol Lbl'UndsPipe'Int'Unds'{}(SortInt{}, SortInt{}) : SortInt{} [latex{}("{#1}\\mathrel{|_{\\scriptstyle\\it Int}}{#2}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), left{}(), symbol'Kywd'{}(), smtlib{}("orInt"), klabel{}("_|Int_"), hook{}("INT.or"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(400,18,400,179)"), function{}()]
  hooked-symbol LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("int_abs"), klabel{}("absInt"), hook{}("INT.abs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,18,404,102)"), function{}()]
  symbol Lblapplication{}(SortSymbol{}, SortPatterns{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("application"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,22,49,74)"), injective{}()]
  symbol LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(SortPattern{}, SortMap{}, SortSet{}, SortSet{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), klabel{}("applyTypeCheck"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,22,13,59)"), injective{}()]
  symbol LblattrsB{}(SortBubble{}, SortKAttributesDeclaration{}) : SortRuleContents{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("attrsB"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(216,27,216,90)"), injective{}()]
  symbol LblattrsP{}(SortPattern{}, SortKAttributesDeclaration{}) : SortRuleContents{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("attrsP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(214,27,214,90)"), injective{}()]
  symbol LblaxiomDeclaration{}(SortSorts{}, SortPattern{}, SortAttribute{}) : SortKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("axiomDeclaration"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,7,75,80)"), injective{}()]
  hooked-symbol LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("bitRangeInt"), hook{}("INT.bitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(407,18,407,108)"), function{}()]
  symbol Lblcast{}(SortVarName{}, SortKSort{}) : SortVariable{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("cast"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,23,333,77)"), injective{}()]
  hooked-symbol LblcategoryChar'LParUndsRParUnds'STRING'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("categoryChar"), hook{}("STRING.category"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(618,21,618,80)"), function{}()]
  symbol LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(SortPattern{}, SortSortName{}, SortMap{}, SortSet{}, SortSet{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), klabel{}("checkType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(75,23,75,67)"), injective{}()]
  symbol LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(SortPatterns{}, SortList{}, SortMap{}, SortSet{}, SortSet{}) : SortPatterns{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), klabel{}("checkType2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(76,23,76,67)"), injective{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'MAP'Unds'KItem'Unds'Map{}(SortMap{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("Map:choice"), hook{}("MAP.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(157,20,157,100)"), function{}()]
  hooked-symbol Lblchoice'LParUndsRParUnds'SET'Unds'KItem'Unds'Set{}(SortSet{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("Set:choice"), hook{}("SET.choice"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,20,221,94)"), function{}()]
  hooked-symbol LblchrChar'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(SortInt{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("chrChar"), hook{}("STRING.chr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(586,21,586,69)"), function{}()]
  symbol LblcollectCasts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern{}(SortPattern{}) : SortSet{} [function{}(), klabel{}("collectCasts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,18,16,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblcollectCasts2'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern'Unds'String{}(SortPattern{}, SortString{}) : SortSet{} [function{}(), klabel{}("collectCasts2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,18,18,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblcollectCastsPs'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Patterns{}(SortPatterns{}) : SortSet{} [function{}(), klabel{}("collectCastsPs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,18,17,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(SortPatterns{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), klabel{}("collectCellName"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,20,175,44)"), injective{}()]
  symbol LblcollectSignature'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [function{}(), klabel{}("collectSignature"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(47,18,47,54)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblconsAttrList{}(SortAttr{}, SortAttrList{}) : SortAttrList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("consAttrList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(280,23,280,91)"), format{}("%1 %2 %3"), injective{}()]
  symbol LblconsDeclarations{}(SortDeclaration{}, SortDeclarations{}) : SortDeclarations{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("consDeclarations"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(126,27,126,101)"), format{}("%1%n%2"), injective{}()]
  symbol LblconsModules{}(SortModule{}, SortModules{}) : SortModules{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("consModules"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(130,22,130,81)"), format{}("%1%n%2"), injective{}()]
  symbol LblconsPatterns{}(SortPattern{}, SortPatterns{}) : SortPatterns{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("consPatterns"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,23,123,73)"), injective{}()]
  symbol LblconsSorts{}(SortSort{}, SortSorts{}) : SortSorts{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("consSorts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(120,20,120,68)"), injective{}()]
  hooked-symbol LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("STRING.countAllOccurrences"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(607,18,607,132)"), function{}()]
  hooked-symbol LbldirectionalityChar'LParUndsRParUnds'STRING'Unds'String'Unds'String{}(SortString{}) : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("directionalityChar"), hook{}("STRING.directionality"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(619,21,619,86)"), function{}()]
  symbol Lbldisambiguate'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Set{}(SortPattern{}, SortSet{}) : SortPattern{} [function{}(), klabel{}("disambiguate"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,22,12,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LbldoParseKAST'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'K{}(SortK{}) : SortKItem{} [function{}(), klabel{}("doParseKAST"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,20,45,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LbldotAttrList{}() : SortAttrList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("dotAttrList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,23,281,72)"), injective{}()]
  symbol LbldotDeclarations{}() : SortDeclarations{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("dotDeclarations"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(127,23,127,84)"), injective{}()]
  symbol LbldotModules{}() : SortModules{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("dotModules"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,23,131,64)"), injective{}()]
  symbol LbldotPatterns{}() : SortPatterns{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("dotPatterns"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,23,124,72)"), injective{}()]
  symbol LbldotSorts{}() : SortSorts{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("dotSorts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(121,20,121,67)"), injective{}()]
  symbol LbldotTagContents{}() : SortTagContents{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("dotTagContents"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(286,26,286,83)"), format{}(""), injective{}()]
  symbol Lbldv{}(SortSort{}, SortKoreString{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("dv"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,22,65,105)"), injective{}()]
  symbol Lblekore-to-kore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}() : SortCommandLine{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(15,26,15,40)"), injective{}()]
  symbol LblemptyKImportList{}() : SortKImportList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("emptyKImportList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(385,28,385,76)"), injective{}()]
  symbol LblemptyKRequireList{}() : SortKRequireList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("emptyKRequireList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(387,28,387,78)"), injective{}()]
  hooked-symbol LblfillList'LParUndsCommUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'Int'Unds'KItem{}(SortList{}, SortInt{}, SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("fillList"), hook{}("LIST.fill"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(285,19,285,77)"), function{}()]
  hooked-symbol LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("findChar"), hook{}("STRING.findChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(592,18,592,89)"), function{}()]
  hooked-symbol LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("findString"), hook{}("STRING.find"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(590,18,590,85)"), function{}()]
  symbol LblfreshId'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'Int{}(SortInt{}) : SortId{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), freshGenerator{}(), klabel{}("freshId"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(837,17,837,70)"), function{}()]
  symbol LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), freshGenerator{}(), klabel{}("freshInt"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(482,18,482,72)"), function{}()]
  symbol Lblfrontend-to-ekore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}() : SortCommandLine{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(14,26,14,44)"), injective{}()]
  symbol LblgetExitCode{}(SortGeneratedTopCell{}) : SortInt{} [function{}()]
  symbol LblgetGeneratedCounterCell{}(SortGeneratedTopCell{}) : SortGeneratedCounterCell{} [function{}()]
  hooked-symbol LblgetKLabel'LParUndsRParUnds'K-REFLECTION'Unds'KItem'Unds'K{}(SortK{}) : SortKItem{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("getKLabel"), hook{}("KREFLECTION.getKLabel"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(882,20,882,72)"), function{}()]
  symbol LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(SortK{}) : SortString{} [function{}(), klabel{}("getKLabelFromArgs"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,21,49,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblgetSortArguments'LParUndsRParUnds'DISAMBIGUATE'Unds'List'Unds'KProduction{}(SortKProduction{}) : SortList{} [function{}(), klabel{}("getSortArguments"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(48,19,48,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblgetSubsorts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(SortSet{}) : SortSet{} [function{}(), klabel{}("getSubsorts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,18,31,44)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblgetSubsorts2'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'K{}(SortK{}) : SortSet{} [function{}(), klabel{}("getSubsorts2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,18,35,43)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblgrammarToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Set{}(SortSet{}) : SortString{} [function{}(), klabel{}("grammarToString"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,21,101,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(SortSort{}, SortAttribute{}) : SortKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,7,71,32)"), injective{}()]
  symbol Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(SortSymbol{}, SortSorts{}, SortSort{}, SortAttribute{}) : SortKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(72,7,72,59)"), injective{}()]
  symbol LblinitAttributesCell{}() : SortAttributesCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitCellNameCell{}() : SortCellNameCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitCollectedCell{}() : SortCollectedCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitConfigGrammarCell{}() : SortConfigGrammarCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitConfigInfoCell{}() : SortConfigInfoCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitDeclCell{}() : SortDeclCellSet{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitDeclarationsCell{}() : SortDeclarationsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitDefinitionCell{}() : SortDefinitionCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitDefnAttrsCell{}() : SortDefnAttrsCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitExitCodeCell{}() : SortExitCodeCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGeneratedCounterCell{}() : SortGeneratedCounterCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitGeneratedTopCell{}(SortMap{}) : SortGeneratedTopCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitKCell{}(SortMap{}) : SortKCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitKinkDeployedDirCell{}(SortMap{}) : SortKinkDeployedDirCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitModCell{}() : SortModCellSet{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitModulesCell{}() : SortModulesCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitNameCell{}() : SortNameCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitParserGeneratorCell{}() : SortParserGeneratorCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitPrgGrammarCell{}() : SortPrgGrammarCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitRuleGrammarCell{}() : SortRuleGrammarCell{} [initializer{}(), function{}(), noThread{}()]
  symbol LblinitSCell{}(SortMap{}) : SortSCell{} [initializer{}(), function{}(), noThread{}()]
  hooked-symbol LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(SortSet{}, SortSet{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("intersectSet"), hook{}("SET.intersection"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(206,18,206,88)"), function{}()]
  symbol Lblis'Hash'KVariable{}(SortK{}) : SortBool{} [function{}(), predicate{}("#KVariable")]
  symbol Lblis'Hash'LowerId{}(SortK{}) : SortBool{} [function{}(), predicate{}("#LowerId")]
  symbol Lblis'Hash'RuleTag{}(SortK{}) : SortBool{} [function{}(), predicate{}("#RuleTag")]
  symbol Lblis'Hash'UpperId{}(SortK{}) : SortBool{} [function{}(), predicate{}("#UpperId")]
  symbol LblisAny{}(SortK{}) : SortBool{} [function{}(), predicate{}("Any")]
  symbol LblisAssocAttribute{}(SortK{}) : SortBool{} [function{}(), predicate{}("AssocAttribute")]
  symbol LblisAttr{}(SortK{}) : SortBool{} [function{}(), predicate{}("Attr")]
  symbol LblisAttrList{}(SortK{}) : SortBool{} [function{}(), predicate{}("AttrList")]
  symbol LblisAttribute{}(SortK{}) : SortBool{} [function{}(), predicate{}("Attribute")]
  symbol LblisAttributesCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("AttributesCell")]
  symbol LblisAttributesCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("AttributesCellOpt")]
  symbol LblisBacktickName{}(SortK{}) : SortBool{} [function{}(), predicate{}("BacktickName")]
  symbol LblisBool{}(SortK{}) : SortBool{} [function{}(), predicate{}("Bool")]
  symbol LblisBubble{}(SortK{}) : SortBool{} [function{}(), predicate{}("Bubble")]
  symbol LblisBubbleItem{}(SortK{}) : SortBool{} [function{}(), predicate{}("BubbleItem")]
  symbol LblisBubbleWithAttr{}(SortK{}) : SortBool{} [function{}(), predicate{}("BubbleWithAttr")]
  symbol LblisCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("Cell")]
  symbol LblisCellNameCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("CellNameCell")]
  symbol LblisCellNameCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("CellNameCellOpt")]
  symbol LblisCollectedCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("CollectedCell")]
  symbol LblisCollectedCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("CollectedCellOpt")]
  symbol LblisCommandLine{}(SortK{}) : SortBool{} [function{}(), predicate{}("CommandLine")]
  symbol LblisConfigGrammarCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ConfigGrammarCell")]
  symbol LblisConfigGrammarCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ConfigGrammarCellOpt")]
  symbol LblisConfigInfoCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ConfigInfoCell")]
  symbol LblisConfigInfoCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ConfigInfoCellFragment")]
  symbol LblisConfigInfoCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ConfigInfoCellOpt")]
  symbol LblisDeclCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeclCell")]
  symbol LblisDeclCellSet{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeclCellSet")]
  symbol LblisDeclaration{}(SortK{}) : SortBool{} [function{}(), predicate{}("Declaration")]
  symbol LblisDeclarations{}(SortK{}) : SortBool{} [function{}(), predicate{}("Declarations")]
  symbol LblisDeclarationsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeclarationsCell")]
  symbol LblisDeclarationsCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeclarationsCellFragment")]
  symbol LblisDeclarationsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("DeclarationsCellOpt")]
  symbol LblisDefinition{}(SortK{}) : SortBool{} [function{}(), predicate{}("Definition")]
  symbol LblisDefinitionCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("DefinitionCell")]
  symbol LblisDefinitionCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("DefinitionCellFragment")]
  symbol LblisDefinitionCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("DefinitionCellOpt")]
  symbol LblisDefnAttrsCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("DefnAttrsCell")]
  symbol LblisDefnAttrsCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("DefnAttrsCellOpt")]
  symbol LblisDollarName{}(SortK{}) : SortBool{} [function{}(), predicate{}("DollarName")]
  symbol LblisEKoreDeclaration{}(SortK{}) : SortBool{} [function{}(), predicate{}("EKoreDeclaration")]
  symbol LblisEKoreKString{}(SortK{}) : SortBool{} [function{}(), predicate{}("EKoreKString")]
  symbol LblisExitCodeCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ExitCodeCell")]
  symbol LblisExitCodeCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ExitCodeCellOpt")]
  symbol LblisFloat{}(SortK{}) : SortBool{} [function{}(), predicate{}("Float")]
  symbol LblisGeneratedCounterCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedCounterCell")]
  symbol LblisGeneratedTopCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCell")]
  symbol LblisGeneratedTopCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("GeneratedTopCellFragment")]
  symbol LblisIOError{}(SortK{}) : SortBool{} [function{}(), predicate{}("IOError")]
  symbol LblisIOFile{}(SortK{}) : SortBool{} [function{}(), predicate{}("IOFile")]
  symbol LblisIOInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("IOInt")]
  symbol LblisIOString{}(SortK{}) : SortBool{} [function{}(), predicate{}("IOString")]
  symbol LblisId{}(SortK{}) : SortBool{} [function{}(), predicate{}("Id")]
  symbol LblisInt{}(SortK{}) : SortBool{} [function{}(), predicate{}("Int")]
  symbol LblisK{}(SortK{}) : SortBool{} [function{}(), predicate{}("K")]
  symbol LblisKAttributesDeclaration{}(SortK{}) : SortBool{} [function{}(), predicate{}("KAttributesDeclaration")]
  symbol LblisKCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCell")]
  symbol LblisKCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("KCellOpt")]
  symbol LblisKConfigVar{}(SortK{}) : SortBool{} [function{}(), predicate{}("KConfigVar")]
  symbol LblisKDefinition{}(SortK{}) : SortBool{} [function{}(), predicate{}("KDefinition")]
  symbol LblisKEY{}(SortK{}) : SortBool{} [function{}(), predicate{}("KEY")]
  symbol LblisKImport{}(SortK{}) : SortBool{} [function{}(), predicate{}("KImport")]
  symbol LblisKImportList{}(SortK{}) : SortBool{} [function{}(), predicate{}("KImportList")]
  symbol LblisKItem{}(SortK{}) : SortBool{} [function{}(), predicate{}("KItem")]
  symbol LblisKLabel2{}(SortK{}) : SortBool{} [function{}(), predicate{}("KLabel2")]
  symbol LblisKModuleName{}(SortK{}) : SortBool{} [function{}(), predicate{}("KModuleName")]
  symbol LblisKNeTagSet{}(SortK{}) : SortBool{} [function{}(), predicate{}("KNeTagSet")]
  symbol LblisKPrioritySeq{}(SortK{}) : SortBool{} [function{}(), predicate{}("KPrioritySeq")]
  symbol LblisKProduction{}(SortK{}) : SortBool{} [function{}(), predicate{}("KProduction")]
  symbol LblisKProductionItem{}(SortK{}) : SortBool{} [function{}(), predicate{}("KProductionItem")]
  symbol LblisKProductionWAttr{}(SortK{}) : SortBool{} [function{}(), predicate{}("KProductionWAttr")]
  symbol LblisKRequire{}(SortK{}) : SortBool{} [function{}(), predicate{}("KRequire")]
  symbol LblisKRequireList{}(SortK{}) : SortBool{} [function{}(), predicate{}("KRequireList")]
  symbol LblisKSort{}(SortK{}) : SortBool{} [function{}(), predicate{}("KSort")]
  symbol LblisKSortList{}(SortK{}) : SortBool{} [function{}(), predicate{}("KSortList")]
  symbol LblisKinkDeployedDirCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("KinkDeployedDirCell")]
  symbol LblisKinkDeployedDirCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("KinkDeployedDirCellOpt")]
  symbol LblisKoreDeclaration{}(SortK{}) : SortBool{} [function{}(), predicate{}("KoreDeclaration")]
  symbol LblisKoreDefinition{}(SortK{}) : SortBool{} [function{}(), predicate{}("KoreDefinition")]
  symbol LblisKoreString{}(SortK{}) : SortBool{} [function{}(), predicate{}("KoreString")]
  symbol LblisList{}(SortK{}) : SortBool{} [function{}(), predicate{}("List")]
  symbol LblisLowerName{}(SortK{}) : SortBool{} [function{}(), predicate{}("LowerName")]
  symbol LblisMap{}(SortK{}) : SortBool{} [function{}(), predicate{}("Map")]
  symbol LblisModCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModCell")]
  symbol LblisModCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModCellFragment")]
  symbol LblisModCellSet{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModCellSet")]
  symbol LblisModule{}(SortK{}) : SortBool{} [function{}(), predicate{}("Module")]
  symbol LblisModuleName{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModuleName")]
  symbol LblisModules{}(SortK{}) : SortBool{} [function{}(), predicate{}("Modules")]
  symbol LblisModulesCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModulesCell")]
  symbol LblisModulesCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModulesCellFragment")]
  symbol LblisModulesCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ModulesCellOpt")]
  symbol LblisNameCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("NameCell")]
  symbol LblisNameCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("NameCellOpt")]
  symbol LblisNumbers{}(SortK{}) : SortBool{} [function{}(), predicate{}("Numbers")]
  symbol LblisOptionalAttributes{}(SortK{}) : SortBool{} [function{}(), predicate{}("OptionalAttributes")]
  symbol LblisParserGeneratorCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("ParserGeneratorCell")]
  symbol LblisParserGeneratorCellFragment{}(SortK{}) : SortBool{} [function{}(), predicate{}("ParserGeneratorCellFragment")]
  symbol LblisParserGeneratorCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("ParserGeneratorCellOpt")]
  symbol LblisPath{}(SortK{}) : SortBool{} [function{}(), predicate{}("Path")]
  symbol LblisPattern{}(SortK{}) : SortBool{} [function{}(), predicate{}("Pattern")]
  symbol LblisPatterns{}(SortK{}) : SortBool{} [function{}(), predicate{}("Patterns")]
  symbol LblisPgm{}(SortK{}) : SortBool{} [function{}(), predicate{}("Pgm")]
  symbol LblisPrgGrammarCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("PrgGrammarCell")]
  symbol LblisPrgGrammarCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("PrgGrammarCellOpt")]
  symbol LblisPrioritySeqBlock{}(SortK{}) : SortBool{} [function{}(), predicate{}("PrioritySeqBlock")]
  symbol LblisProdBlock{}(SortK{}) : SortBool{} [function{}(), predicate{}("ProdBlock")]
  symbol LblisRuleContents{}(SortK{}) : SortBool{} [function{}(), predicate{}("RuleContents")]
  symbol LblisRuleGrammarCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("RuleGrammarCell")]
  symbol LblisRuleGrammarCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("RuleGrammarCellOpt")]
  symbol LblisSCell{}(SortK{}) : SortBool{} [function{}(), predicate{}("SCell")]
  symbol LblisSCellOpt{}(SortK{}) : SortBool{} [function{}(), predicate{}("SCellOpt")]
  symbol LblisSet{}(SortK{}) : SortBool{} [function{}(), predicate{}("Set")]
  symbol LblisSort{}(SortK{}) : SortBool{} [function{}(), predicate{}("Sort")]
  symbol LblisSortName{}(SortK{}) : SortBool{} [function{}(), predicate{}("SortName")]
  symbol LblisSorts{}(SortK{}) : SortBool{} [function{}(), predicate{}("Sorts")]
  symbol LblisStrategy{}(SortK{}) : SortBool{} [function{}(), predicate{}("Strategy")]
  symbol LblisStream{}(SortK{}) : SortBool{} [function{}(), predicate{}("Stream")]
  symbol LblisString{}(SortK{}) : SortBool{} [function{}(), predicate{}("String")]
  symbol LblisSubsorted'LParUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Bool'Unds'Sort'Unds'Sort'Unds'Set{}(SortSort{}, SortSort{}, SortSet{}) : SortBool{} [function{}(), klabel{}("isSubsorted"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,19,65,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblisSubsortedEq'LParUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Bool'Unds'Sort'Unds'Sort'Unds'Set{}(SortSort{}, SortSort{}, SortSet{}) : SortBool{} [function{}(), klabel{}("isSubsortedEq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(66,19,66,59)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblisSymbol{}(SortK{}) : SortBool{} [function{}(), predicate{}("Symbol")]
  symbol LblisSymbolName{}(SortK{}) : SortBool{} [function{}(), predicate{}("SymbolName")]
  symbol LblisSyntaxDeclaration{}(SortK{}) : SortBool{} [function{}(), predicate{}("SyntaxDeclaration")]
  symbol LblisTag{}(SortK{}) : SortBool{} [function{}(), predicate{}("Tag")]
  symbol LblisTagContent{}(SortK{}) : SortBool{} [function{}(), predicate{}("TagContent")]
  symbol LblisTagContents{}(SortK{}) : SortBool{} [function{}(), predicate{}("TagContents")]
  symbol LblisUpperName{}(SortK{}) : SortBool{} [function{}(), predicate{}("UpperName")]
  symbol LblisVarName{}(SortK{}) : SortBool{} [function{}(), predicate{}("VarName")]
  symbol LblisVariable{}(SortK{}) : SortBool{} [function{}(), predicate{}("Variable")]
  symbol LblisVariableName{}(SortK{}) : SortBool{} [function{}(), predicate{}("VariableName")]
  symbol LblkAttributesDeclaration{}(SortAttrList{}) : SortKAttributesDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kAttributesDeclaration"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(267,37,267,93)"), injective{}()]
  symbol LblkConfigurationLbl{}(SortRuleContents{}) : SortEKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kConfigurationLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(217,31,217,94)"), injective{}()]
  symbol LblkContextLbl{}(SortRuleContents{}) : SortEKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kContextLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(219,31,219,88)"), injective{}()]
  symbol LblkDefinitionLbl{}(SortKRequireList{}, SortModules{}) : SortKDefinition{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kDefinitionLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(390,28,390,112)"), format{}("%3%n%n%5"), injective{}()]
  symbol LblkFuncProduction{}(SortTag{}, SortKSortList{}) : SortKProduction{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kFuncProduction"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(130,26,130,86)"), injective{}()]
  symbol LblkImportLbl{}(SortModuleName{}) : SortKImport{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kImportLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(384,28,384,75)"), injective{}()]
  symbol LblkImportList{}(SortKImportList{}, SortKImport{}) : SortKImportList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kImportList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(386,28,386,93)"), format{}("%1%2%n"), injective{}()]
  symbol LblkModuleLbl{}(SortKModuleName{}, SortOptionalAttributes{}, SortKImportList{}, SortDeclarations{}) : SortModule{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kModuleLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(393,28,397,64)"), injective{}()]
  symbol LblkPrioritySeq{}(SortKPrioritySeq{}, SortKNeTagSet{}) : SortKPrioritySeq{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kPrioritySeq"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,27,124,91)"), injective{}()]
  symbol LblkProduction{}(SortKProductionItem{}, SortKProduction{}) : SortKProduction{} [unit{}("emptyKProduction"), functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kProduction"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,26,129,106)"), injective{}()]
  symbol LblkProductionWAttr{}(SortKProduction{}, SortOptionalAttributes{}) : SortKProductionWAttr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kProductionWAttr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,31,123,95)"), injective{}()]
  symbol LblkRequire{}(SortEKoreKString{}) : SortKRequire{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kRequire"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(375,28,375,76)"), injective{}()]
  symbol LblkRuleLbl{}(SortRuleContents{}) : SortEKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kRuleLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,31,218,85)"), injective{}()]
  symbol LblkSortList{}(SortKSortList{}, SortKSort{}) : SortKSortList{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kSortList"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(122,24,122,70)"), injective{}()]
  symbol LblkSyntaxLeftLbl{}(SortKNeTagSet{}, SortOptionalAttributes{}) : SortSyntaxDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kSyntaxLeftLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(177,9,177,92)"), injective{}()]
  symbol LblkSyntaxNonAssocLbl{}(SortKNeTagSet{}, SortOptionalAttributes{}) : SortSyntaxDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kSyntaxNonAssocLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(179,9,179,96)"), injective{}()]
  symbol LblkSyntaxPrioritiesLbl{}(SortKPrioritySeq{}, SortOptionalAttributes{}) : SortSyntaxDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kSyntaxPrioritiesLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,9,176,98)"), injective{}()]
  symbol LblkSyntaxPriorityLbl{}(SortKPrioritySeq{}, SortOptionalAttributes{}) : SortSyntaxDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kSyntaxPriorityLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(175,9,175,96)"), injective{}()]
  symbol LblkSyntaxProductionLbl{}(SortKSort{}, SortPrioritySeqBlock{}) : SortSyntaxDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kSyntaxProductionLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(174,9,174,120)"), format{}("%1%2%3%4%5%6"), injective{}()]
  symbol LblkSyntaxRightLbl{}(SortKNeTagSet{}, SortOptionalAttributes{}) : SortSyntaxDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kSyntaxRightLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,9,178,93)"), injective{}()]
  symbol LblkSyntaxSortLbl{}(SortKSort{}, SortOptionalAttributes{}) : SortSyntaxDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kSyntaxSortLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,9,173,92)"), injective{}()]
  symbol LblkTagSet{}(SortTag{}, SortKNeTagSet{}) : SortKNeTagSet{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kTagSet"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(116,27,116,65)"), injective{}()]
  symbol LblkTupleProduction{}(SortKSortList{}) : SortKProduction{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("kTupleProduction"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(131,30,131,87)"), injective{}()]
  symbol Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(SortPath{}) : SortCommandLine{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,26,13,36)"), injective{}()]
  hooked-symbol Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(SortMap{}) : SortSet{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("keys"), hook{}("MAP.keys"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(142,18,142,86)"), function{}()]
  hooked-symbol Lblkeys'Unds'list'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [hook{}("MAP.keys_list"), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(143,19,143,79)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)")]
  symbol Lblkompile'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}() : SortCommandLine{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,26,12,34)"), injective{}()]
  symbol LblkoreAttributesLbl{}(SortPatterns{}) : SortAttribute{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("koreAttributesLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,24,68,75)"), injective{}()]
  symbol LblkoreDefinitionLbl{}(SortAttribute{}, SortModules{}) : SortKoreDefinition{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("koreDefinitionLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(132,29,132,116)"), format{}("%3%n%n%5"), injective{}()]
  symbol LblkoreImportLbl{}(SortModuleName{}, SortAttribute{}) : SortKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("koreImportLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,30,133,94)"), injective{}()]
  symbol LblkoreModuleLbl{}(SortModuleName{}, SortDeclarations{}, SortAttribute{}) : SortModule{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("koreModuleLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,21,129,131)"), format{}("%1 %2%i%n%3%n%d%4 %5%n"), injective{}()]
  symbol Lblkrewrite{}(SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), non-assoc{}(), klabel{}("krewrite"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(321,22,321,109)"), format{}("%3 => %5"), injective{}()]
  symbol Lblksequence{}(SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), left{}(), symbol'Kywd'{}(), klabel{}("ksequence"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(337,23,337,88)"), injective{}()]
  symbol Lblktoken{}(SortEKoreKString{}, SortEKoreKString{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("ktoken"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(335,23,335,89)"), injective{}()]
  symbol LblleftAttribute{}() : SortAssocAttribute{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("leftAttribute"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(118,29,118,72)"), injective{}()]
  hooked-symbol LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("lengthString"), hook{}("STRING.length"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(585,18,585,84)"), function{}()]
  symbol LbllistProdLbl{}(SortKSort{}, SortEKoreKString{}) : SortKProductionItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("listProdLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,30,185,90)"), injective{}()]
  hooked-symbol Lbllog2Int'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("log2Int"), hook{}("INT.log2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(405,18,405,74)"), function{}()]
  hooked-symbol LblmakeList'LParUndsCommUndsRParUnds'LIST'Unds'List'Unds'Int'Unds'KItem{}(SortInt{}, SortKItem{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("makeList"), hook{}("LIST.make"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,19,281,66)"), function{}()]
  hooked-symbol LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("int_max"), hook{}("INT.max"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(403,18,403,102)"), function{}()]
  hooked-symbol LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("int_min"), hook{}("INT.min"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(402,18,402,102)"), function{}()]
  symbol LblnameParam{}(SortSortName{}, SortSorts{}) : SortSort{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("nameParam"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,34,43,83)"), injective{}()]
  symbol LblneListProdLbl{}(SortKSort{}, SortEKoreKString{}) : SortKProductionItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("neListProdLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,30,184,92)"), injective{}()]
  hooked-symbol LblnewUUID'Unds'STRING'Unds'String{}() : SortString{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), impure{}(), hook{}("STRING.uuid"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(621,21,621,67)"), function{}()]
  symbol LblnoAttribute{}() : SortAssocAttribute{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("noAttribute"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(180,30,180,90)"), injective{}()]
  symbol LblnoAttributesCell{}() : SortAttributesCellOpt{} [cellOptAbsent{}("AttributesCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoAttrsB{}(SortBubble{}) : SortRuleContents{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("noAttrsB"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,27,215,104)"), format{}("%3"), injective{}()]
  symbol LblnoAttrsP{}(SortPattern{}) : SortRuleContents{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("noAttrsP"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,27,213,104)"), format{}("%3"), injective{}()]
  symbol LblnoCastSortsInit'Unds'PARSER-GEN-HELPERS'Unds'Set{}() : SortSet{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,18,12,45)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)")]
  symbol LblnoCellNameCell{}() : SortCellNameCellOpt{} [cellOptAbsent{}("CellNameCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoCollectedCell{}() : SortCollectedCellOpt{} [cellOptAbsent{}("CollectedCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoConfigGrammarCell{}() : SortConfigGrammarCellOpt{} [cellOptAbsent{}("ConfigGrammarCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoConfigInfoCell{}() : SortConfigInfoCellOpt{} [cellOptAbsent{}("ConfigInfoCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoDeclarationsCell{}() : SortDeclarationsCellOpt{} [cellOptAbsent{}("DeclarationsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoDefinitionCell{}() : SortDefinitionCellOpt{} [cellOptAbsent{}("DefinitionCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoDefnAttrsCell{}() : SortDefnAttrsCellOpt{} [cellOptAbsent{}("DefnAttrsCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoExitCodeCell{}() : SortExitCodeCellOpt{} [cellOptAbsent{}("ExitCodeCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoKAttributesDeclaration{}() : SortOptionalAttributes{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("noKAttributesDeclaration"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(284,33,284,82)"), injective{}()]
  symbol LblnoKCell{}() : SortKCellOpt{} [cellOptAbsent{}("KCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoKinkDeployedDirCell{}() : SortKinkDeployedDirCellOpt{} [cellOptAbsent{}("KinkDeployedDirCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoLatticeSortsInit'Unds'PARSER-GEN-HELPERS'Unds'Set{}() : SortSet{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,18,27,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)")]
  symbol LblnoModulesCell{}() : SortModulesCellOpt{} [cellOptAbsent{}("ModulesCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoNameCell{}() : SortNameCellOpt{} [cellOptAbsent{}("NameCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoParserGeneratorCell{}() : SortParserGeneratorCellOpt{} [cellOptAbsent{}("ParserGeneratorCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoPrgGrammarCell{}() : SortPrgGrammarCellOpt{} [cellOptAbsent{}("PrgGrammarCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoRuleGrammarCell{}() : SortRuleGrammarCellOpt{} [cellOptAbsent{}("RuleGrammarCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnoSCell{}() : SortSCellOpt{} [cellOptAbsent{}("SCell"), constructor{}(), functional{}(), injective{}()]
  symbol LblnonAssocAttribute{}() : SortAssocAttribute{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("nonAssocAttribute"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(120,29,120,76)"), injective{}()]
  symbol LblnonTerminalLbl{}(SortKSort{}) : SortKProductionItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("nonTerminalLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,30,181,105)"), format{}("%3"), injective{}()]
  hooked-symbol LblnotBool'Unds'{}(SortBool{}) : SortBool{} [latex{}("\\neg_{\\scriptstyle\\it Bool}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smt-hook{}("not"), boolOperation{}(), klabel{}("notBool_"), hook{}("BOOL.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(316,19,316,176)"), function{}()]
  symbol LblnullDecl'Unds'KINK-CONFIGURATION'Unds'Declaration{}() : SortDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,26,33,35)"), injective{}()]
  hooked-symbol LblordChar'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(SortString{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("ordChar"), hook{}("STRING.ord"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(587,18,587,69)"), function{}()]
  symbol Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(SortKItem{}, SortKItem{}) : SortKItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), klabel{}("pair"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,20,11,37)"), injective{}()]
  symbol LblparseEKore'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(SortString{}, SortGeneratedTopCell{}) : SortKItem{} [function{}(), klabel{}("parseEKore"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,20,23,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblparseHelper'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'input'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'KItem'Unds'String{}(SortString{}, SortIOString{}, SortString{}, SortKItem{}, SortString{}) : SortKItem{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,20,54,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblparseHelper1'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'inputFile'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'IOString'Unds'String{}(SortString{}, SortIOString{}, SortString{}, SortIOString{}, SortString{}) : SortKItem{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,20,60,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblparseHelper2'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'KItem{}(SortKItem{}) : SortKItem{} [function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,20,61,58)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblparseOuter'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(SortString{}, SortGeneratedTopCell{}) : SortKItem{} [function{}(), klabel{}("parseOuter"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,20,12,48)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblparseSymbolName'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(SortString{}, SortGeneratedTopCell{}) : SortKItem{} [function{}(), klabel{}("parseSymbolName"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,20,34,53)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblparseWithProductions'LParUndsCommUndsCommUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'Set'Unds'String'Unds'String{}(SortSet{}, SortString{}, SortString{}, SortGeneratedTopCell{}) : SortKItem{} [function{}(), klabel{}("parseWithProductions"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,20,82,51)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)")]
  symbol LblprioritySeqBlock{}(SortPrioritySeqBlock{}, SortAssocAttribute{}, SortProdBlock{}) : SortPrioritySeqBlock{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("prioritySeqBlock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(126,31,126,133)"), format{}("  %1%n%2 %3%4"), injective{}()]
  symbol LblprodBlock{}(SortProdBlock{}, SortKProductionWAttr{}) : SortProdBlock{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("prodBlock"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,24,125,100)"), format{}("%1%n%2 %3"), injective{}()]
  symbol Lblproject'Coln'Any{}(SortK{}) : SortAny{} [function{}(), projection{}()]
  symbol Lblproject'Coln'AssocAttribute{}(SortK{}) : SortAssocAttribute{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Attr{}(SortK{}) : SortAttr{} [function{}(), projection{}()]
  symbol Lblproject'Coln'AttrList{}(SortK{}) : SortAttrList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Attribute{}(SortK{}) : SortAttribute{} [function{}(), projection{}()]
  symbol Lblproject'Coln'AttributesCell{}(SortK{}) : SortAttributesCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'AttributesCellOpt{}(SortK{}) : SortAttributesCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'BacktickName{}(SortK{}) : SortBacktickName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Bool{}(SortK{}) : SortBool{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Bubble{}(SortK{}) : SortBubble{} [function{}(), projection{}()]
  symbol Lblproject'Coln'BubbleItem{}(SortK{}) : SortBubbleItem{} [function{}(), projection{}()]
  symbol Lblproject'Coln'BubbleWithAttr{}(SortK{}) : SortBubbleWithAttr{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Cell{}(SortK{}) : SortCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CellNameCell{}(SortK{}) : SortCellNameCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CellNameCellOpt{}(SortK{}) : SortCellNameCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CollectedCell{}(SortK{}) : SortCollectedCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CollectedCellOpt{}(SortK{}) : SortCollectedCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'CommandLine{}(SortK{}) : SortCommandLine{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ConfigGrammarCell{}(SortK{}) : SortConfigGrammarCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ConfigGrammarCellOpt{}(SortK{}) : SortConfigGrammarCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ConfigInfoCell{}(SortK{}) : SortConfigInfoCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ConfigInfoCellFragment{}(SortK{}) : SortConfigInfoCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ConfigInfoCellOpt{}(SortK{}) : SortConfigInfoCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DeclCell{}(SortK{}) : SortDeclCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DeclCellSet{}(SortK{}) : SortDeclCellSet{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Declaration{}(SortK{}) : SortDeclaration{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Declarations{}(SortK{}) : SortDeclarations{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DeclarationsCell{}(SortK{}) : SortDeclarationsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DeclarationsCellFragment{}(SortK{}) : SortDeclarationsCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DeclarationsCellOpt{}(SortK{}) : SortDeclarationsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Definition{}(SortK{}) : SortDefinition{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DefinitionCell{}(SortK{}) : SortDefinitionCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DefinitionCellFragment{}(SortK{}) : SortDefinitionCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DefinitionCellOpt{}(SortK{}) : SortDefinitionCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DefnAttrsCell{}(SortK{}) : SortDefnAttrsCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DefnAttrsCellOpt{}(SortK{}) : SortDefnAttrsCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'DollarName{}(SortK{}) : SortDollarName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'EKoreDeclaration{}(SortK{}) : SortEKoreDeclaration{} [function{}(), projection{}()]
  symbol Lblproject'Coln'EKoreKString{}(SortK{}) : SortEKoreKString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ExitCodeCell{}(SortK{}) : SortExitCodeCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ExitCodeCellOpt{}(SortK{}) : SortExitCodeCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Float{}(SortK{}) : SortFloat{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedCounterCell{}(SortK{}) : SortGeneratedCounterCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedTopCell{}(SortK{}) : SortGeneratedTopCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'GeneratedTopCellFragment{}(SortK{}) : SortGeneratedTopCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IOError{}(SortK{}) : SortIOError{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IOFile{}(SortK{}) : SortIOFile{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IOInt{}(SortK{}) : SortIOInt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'IOString{}(SortK{}) : SortIOString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Id{}(SortK{}) : SortId{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Int{}(SortK{}) : SortInt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KAttributesDeclaration{}(SortK{}) : SortKAttributesDeclaration{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KCell{}(SortK{}) : SortKCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KCellOpt{}(SortK{}) : SortKCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KDefinition{}(SortK{}) : SortKDefinition{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KEY{}(SortK{}) : SortKEY{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KImport{}(SortK{}) : SortKImport{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KImportList{}(SortK{}) : SortKImportList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KItem{}(SortK{}) : SortKItem{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KLabel2{}(SortK{}) : SortKLabel2{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KModuleName{}(SortK{}) : SortKModuleName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KNeTagSet{}(SortK{}) : SortKNeTagSet{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KPrioritySeq{}(SortK{}) : SortKPrioritySeq{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KProduction{}(SortK{}) : SortKProduction{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KProductionItem{}(SortK{}) : SortKProductionItem{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KProductionWAttr{}(SortK{}) : SortKProductionWAttr{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KRequire{}(SortK{}) : SortKRequire{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KRequireList{}(SortK{}) : SortKRequireList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KSort{}(SortK{}) : SortKSort{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KSortList{}(SortK{}) : SortKSortList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KinkDeployedDirCell{}(SortK{}) : SortKinkDeployedDirCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KinkDeployedDirCellOpt{}(SortK{}) : SortKinkDeployedDirCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KoreDeclaration{}(SortK{}) : SortKoreDeclaration{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KoreDefinition{}(SortK{}) : SortKoreDefinition{} [function{}(), projection{}()]
  symbol Lblproject'Coln'KoreString{}(SortK{}) : SortKoreString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'List{}(SortK{}) : SortList{} [function{}(), projection{}()]
  symbol Lblproject'Coln'LowerName{}(SortK{}) : SortLowerName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Map{}(SortK{}) : SortMap{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModCell{}(SortK{}) : SortModCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModCellFragment{}(SortK{}) : SortModCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModCellSet{}(SortK{}) : SortModCellSet{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Module{}(SortK{}) : SortModule{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModuleName{}(SortK{}) : SortModuleName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Modules{}(SortK{}) : SortModules{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModulesCell{}(SortK{}) : SortModulesCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModulesCellFragment{}(SortK{}) : SortModulesCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ModulesCellOpt{}(SortK{}) : SortModulesCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NameCell{}(SortK{}) : SortNameCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'NameCellOpt{}(SortK{}) : SortNameCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Numbers{}(SortK{}) : SortNumbers{} [function{}(), projection{}()]
  symbol Lblproject'Coln'OptionalAttributes{}(SortK{}) : SortOptionalAttributes{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ParserGeneratorCell{}(SortK{}) : SortParserGeneratorCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ParserGeneratorCellFragment{}(SortK{}) : SortParserGeneratorCellFragment{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ParserGeneratorCellOpt{}(SortK{}) : SortParserGeneratorCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Path{}(SortK{}) : SortPath{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Pattern{}(SortK{}) : SortPattern{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Patterns{}(SortK{}) : SortPatterns{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Pgm{}(SortK{}) : SortPgm{} [function{}(), projection{}()]
  symbol Lblproject'Coln'PrgGrammarCell{}(SortK{}) : SortPrgGrammarCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'PrgGrammarCellOpt{}(SortK{}) : SortPrgGrammarCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'PrioritySeqBlock{}(SortK{}) : SortPrioritySeqBlock{} [function{}(), projection{}()]
  symbol Lblproject'Coln'ProdBlock{}(SortK{}) : SortProdBlock{} [function{}(), projection{}()]
  symbol Lblproject'Coln'RuleContents{}(SortK{}) : SortRuleContents{} [function{}(), projection{}()]
  symbol Lblproject'Coln'RuleGrammarCell{}(SortK{}) : SortRuleGrammarCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'RuleGrammarCellOpt{}(SortK{}) : SortRuleGrammarCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'SCell{}(SortK{}) : SortSCell{} [function{}(), projection{}()]
  symbol Lblproject'Coln'SCellOpt{}(SortK{}) : SortSCellOpt{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Set{}(SortK{}) : SortSet{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Sort{}(SortK{}) : SortSort{} [function{}(), projection{}()]
  symbol Lblproject'Coln'SortName{}(SortK{}) : SortSortName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Sorts{}(SortK{}) : SortSorts{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Strategy{}(SortK{}) : SortStrategy{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Stream{}(SortK{}) : SortStream{} [function{}(), projection{}()]
  symbol Lblproject'Coln'String{}(SortK{}) : SortString{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Symbol{}(SortK{}) : SortSymbol{} [function{}(), projection{}()]
  symbol Lblproject'Coln'SymbolName{}(SortK{}) : SortSymbolName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'SyntaxDeclaration{}(SortK{}) : SortSyntaxDeclaration{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Tag{}(SortK{}) : SortTag{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TagContent{}(SortK{}) : SortTagContent{} [function{}(), projection{}()]
  symbol Lblproject'Coln'TagContents{}(SortK{}) : SortTagContents{} [function{}(), projection{}()]
  symbol Lblproject'Coln'UpperName{}(SortK{}) : SortUpperName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'VarName{}(SortK{}) : SortVarName{} [function{}(), projection{}()]
  symbol Lblproject'Coln'Variable{}(SortK{}) : SortVariable{} [function{}(), projection{}()]
  symbol Lblproject'Coln'VariableName{}(SortK{}) : SortVariableName{} [function{}(), projection{}()]
  hooked-symbol LblrandInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("randInt"), hook{}("INT.rand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(485,18,485,56)"), function{}()]
  symbol LblreadFile'LParUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'String{}(SortString{}) : SortIOString{} [function{}(), klabel{}("readFile"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,23,27,49)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)")]
  symbol LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(SortIOInt{}, SortK{}, SortString{}) : SortIOString{} [function{}(), klabel{}("readFileHelper"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,23,28,118)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)")]
  symbol LblregexTerminalLbl{}(SortEKoreKString{}) : SortKProductionItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("regexTerminalLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,30,183,95)"), injective{}()]
  hooked-symbol LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(SortMap{}, SortSet{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("removeAll"), hook{}("MAP.removeAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,18,139,91)"), function{}()]
  hooked-symbol Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortString{}, SortInt{}) : SortString{} [hook{}("STRING.replace"), function{}(), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(605,21,605,107)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)")]
  hooked-symbol LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("STRING.replaceAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(604,21,604,122)"), function{}()]
  hooked-symbol LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(SortString{}, SortString{}, SortString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), hook{}("STRING.replaceFirst"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(606,21,606,124)"), function{}()]
  symbol LblrequiresClause{}(SortPattern{}, SortPattern{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("requiresClause"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(320,22,320,86)"), injective{}()]
  hooked-symbol LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("rfindChar"), hook{}("STRING.rfindChar"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(593,18,593,90)"), function{}()]
  hooked-symbol LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(SortString{}, SortString{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("rfindString"), hook{}("STRING.rfind"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(591,18,591,86)"), function{}()]
  symbol LblrightAttribute{}() : SortAssocAttribute{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("rightAttribute"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,29,119,73)"), injective{}()]
  symbol LblsaveToFile'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'K'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortK{} [function{}(), klabel{}("saveToFile"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(8,16,8,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)")]
  symbol LblsaveToFileHelper'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'K'Unds'IOInt'Unds'K{}(SortIOInt{}, SortK{}) : SortK{} [function{}(), klabel{}("saveToFileHelper"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(9,16,9,88)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)")]
  symbol LblsaveToTempFile'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'String'Unds'String{}(SortString{}, SortString{}) : SortIOString{} [function{}(), klabel{}("saveToTempFile"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(16,23,16,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)")]
  symbol LblsaveToTempFileHelper1'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'K'Unds'IOFile{}(SortK{}, SortIOFile{}) : SortIOString{} [function{}(), klabel{}("saveToTempFileHelper1"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(17,23,17,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)")]
  symbol LblsaveToTempFileHelper2'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'K'Unds'String{}(SortK{}, SortString{}) : SortIOString{} [function{}(), klabel{}("saveToTempFileHelper2"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(18,23,18,71)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)")]
  hooked-symbol LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(SortInt{}, SortInt{}, SortInt{}) : SortInt{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("signExtendBitRangeInt"), hook{}("INT.signExtendBitRange"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(408,18,408,118)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(SortList{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), smtlib{}("smt_seq_len"), klabel{}("sizeList"), hook{}("LIST.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(294,18,294,121)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(SortMap{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("sizeMap"), hook{}("MAP.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(151,18,151,103)"), function{}()]
  hooked-symbol Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(SortSet{}) : SortInt{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("size"), hook{}("SET.size"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(218,18,218,80)"), function{}()]
  symbol LblsortDeclaration{}(SortSort{}, SortAttribute{}) : SortKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("sortDeclaration"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(73,7,73,61)"), injective{}()]
  hooked-symbol LblsrandInt'LParUndsRParUnds'INT'Unds'K'Unds'Int{}(SortInt{}) : SortK{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("srandInt"), hook{}("INT.srand"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(486,16,486,56)"), function{}()]
  hooked-symbol LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(SortString{}, SortInt{}, SortInt{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("substrString"), hook{}("STRING.substr"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,21,589,99)"), function{}()]
  symbol LblsymbolDeclaration{}(SortSymbol{}, SortSorts{}, SortSort{}, SortAttribute{}) : SortKoreDeclaration{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("symbolDeclaration"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(74,7,74,90)"), injective{}()]
  symbol LblsymbolSorts{}(SortSymbolName{}, SortSorts{}) : SortSymbol{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("symbolSorts"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(45,23,45,76)"), injective{}()]
  symbol LbltagContent{}(SortKEY{}, SortTagContents{}) : SortAttr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("tagContent"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(279,19,279,71)"), injective{}()]
  symbol LbltagContents{}(SortTagContent{}, SortTagContents{}) : SortTagContents{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("tagContents"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(287,26,287,77)"), injective{}()]
  symbol LbltagSimple{}(SortKEY{}) : SortAttr{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("tagSimple"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(278,19,278,82)"), format{}("%3"), injective{}()]
  symbol Lbltclosure'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(SortSet{}) : SortSet{} [function{}(), klabel{}("tclosure"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(39,18,39,41)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)")]
  symbol LblterminalLbl{}(SortEKoreKString{}) : SortKProductionItem{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("terminalLbl"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,30,182,102)"), format{}("%3"), injective{}()]
  hooked-symbol Lbltoken2String'LParUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'String'Unds'Path{}(SortPath{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), klabel{}("token2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,21,11,88)"), function{}()]
  hooked-symbol Lbltoken2String'LParUndsRParUnds'PARSE-CONFIG'Unds'String'Unds'KoreString{}(SortKoreString{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), klabel{}("token2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(186,21,186,94)"), function{}()]
  hooked-symbol Lbltoken2String'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'String'Unds'UpperName{}(SortUpperName{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), klabel{}("token2String"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(49,21,49,93)"), function{}()]
  hooked-symbol LbltokenToString'LParUndsRParUnds'COMMAND-LINE'Unds'String'Unds'Any{}(SortAny{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), klabel{}("tokenToString"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(101,21,101,88)"), function{}()]
  hooked-symbol LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(SortK{}) : SortString{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), anywhere{}(), klabel{}("tokenToString"), hook{}("STRING.token2string"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,21,10,86)"), function{}()]
  hooked-symbol LblupdateList'LParUndsCommUndsCommUndsRParUnds'LIST'Unds'List'Unds'List'Unds'Int'Unds'List{}(SortList{}, SortInt{}, SortList{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("updateList"), hook{}("LIST.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(283,19,283,78)"), function{}()]
  hooked-symbol LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(SortMap{}, SortMap{}) : SortMap{} [functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("updateMap"), hook{}("MAP.updateAll"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(136,18,136,91)"), function{}()]
  hooked-symbol Lblvalues'LParUndsRParUnds'MAP'Unds'List'Unds'Map{}(SortMap{}) : SortList{} [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), klabel{}("values"), hook{}("MAP.values"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(148,19,148,76)"), function{}()]
  symbol LblvarType{}(SortVariableName{}, SortSort{}) : SortVariable{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/kore.k)"), symbol'Kywd'{}(), klabel{}("varType"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,23,46,69)"), injective{}()]
  symbol Lblwrappedklabel{}(SortKLabel2{}) : SortPattern{} [functional{}(), constructor{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/ekore.k)"), symbol'Kywd'{}(), klabel{}("wrappedklabel"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(336,23,336,86)"), injective{}()]
  hooked-symbol Lbl'Tild'Int'Unds'{}(SortInt{}) : SortInt{} [latex{}("\\mathop{\\sim_{\\scriptstyle\\it Int}}{#1}"), functional{}(), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), symbol'Kywd'{}(), smtlib{}("notInt"), klabel{}("~Int_"), hook{}("INT.not"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(376,18,376,172)"), function{}()]

// generated axioms
  axiom{R} \exists{R} (Val:SortSymbol{}, \equals{SortSymbol{}, R} (Val:SortSymbol{}, inj{SortKLabel2{}, SortSymbol{}} (From:SortKLabel2{}))) [subsort{SortKLabel2{}, SortSymbol{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortUpperName{}, SortKItem{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAttributesCellOpt{}, SortKItem{}} (From:SortAttributesCellOpt{}))) [subsort{SortAttributesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCommandLine{}, SortKItem{}} (From:SortCommandLine{}))) [subsort{SortCommandLine{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKImportList{}, SortKItem{}} (From:SortKImportList{}))) [subsort{SortKImportList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAttributesCell{}, SortKItem{}} (From:SortAttributesCell{}))) [subsort{SortAttributesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortRuleGrammarCell{}, SortKItem{}} (From:SortRuleGrammarCell{}))) [subsort{SortRuleGrammarCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStream{}, SortKItem{}} (From:SortStream{}))) [subsort{SortStream{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortMap{}, SortKItem{}} (From:SortMap{}))) [subsort{SortMap{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortConfigGrammarCell{}, SortCell{}} (From:SortConfigGrammarCell{}))) [subsort{SortConfigGrammarCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTagContent{}, \equals{SortTagContent{}, R} (Val:SortTagContent{}, inj{SortUpperName{}, SortTagContent{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortTagContent{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPrioritySeqBlock{}, SortKItem{}} (From:SortPrioritySeqBlock{}))) [subsort{SortPrioritySeqBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortNameCellOpt{}, \equals{SortNameCellOpt{}, R} (Val:SortNameCellOpt{}, inj{SortNameCell{}, SortNameCellOpt{}} (From:SortNameCell{}))) [subsort{SortNameCell{}, SortNameCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSCell{}, SortKItem{}} (From:SortSCell{}))) [subsort{SortSCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBool{}, SortKItem{}} (From:SortBool{}))) [subsort{SortBool{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefinitionCellFragment{}, SortKItem{}} (From:SortDefinitionCellFragment{}))) [subsort{SortDefinitionCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKPrioritySeq{}, \equals{SortKPrioritySeq{}, R} (Val:SortKPrioritySeq{}, inj{SortKNeTagSet{}, SortKPrioritySeq{}} (From:SortKNeTagSet{}))) [subsort{SortKNeTagSet{}, SortKPrioritySeq{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModCell{}, SortKItem{}} (From:SortModCell{}))) [subsort{SortModCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortExitCodeCellOpt{}, \equals{SortExitCodeCellOpt{}, R} (Val:SortExitCodeCellOpt{}, inj{SortExitCodeCell{}, SortExitCodeCellOpt{}} (From:SortExitCodeCell{}))) [subsort{SortExitCodeCell{}, SortExitCodeCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKoreDefinition{}, SortKItem{}} (From:SortKoreDefinition{}))) [subsort{SortKoreDefinition{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPatterns{}, SortKItem{}} (From:SortPatterns{}))) [subsort{SortPatterns{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTagContent{}, \equals{SortTagContent{}, R} (Val:SortTagContent{}, inj{SortNumbers{}, SortTagContent{}} (From:SortNumbers{}))) [subsort{SortNumbers{}, SortTagContent{}}()] // subsort
  axiom{R} \exists{R} (Val:SortAttributesCellOpt{}, \equals{SortAttributesCellOpt{}, R} (Val:SortAttributesCellOpt{}, inj{SortAttributesCell{}, SortAttributesCellOpt{}} (From:SortAttributesCell{}))) [subsort{SortAttributesCell{}, SortAttributesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDeclaration{}, \equals{SortDeclaration{}, R} (Val:SortDeclaration{}, inj{SortEKoreDeclaration{}, SortDeclaration{}} (From:SortEKoreDeclaration{}))) [subsort{SortEKoreDeclaration{}, SortDeclaration{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKSort{}, SortKItem{}} (From:SortKSort{}))) [subsort{SortKSort{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKDefinition{}, SortKItem{}} (From:SortKDefinition{}))) [subsort{SortKDefinition{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortSCell{}, SortCell{}} (From:SortSCell{}))) [subsort{SortSCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKProduction{}, \equals{SortKProduction{}, R} (Val:SortKProduction{}, inj{SortKProductionItem{}, SortKProduction{}} (From:SortKProductionItem{}))) [subsort{SortKProductionItem{}, SortKProduction{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortOptionalAttributes{}, SortKItem{}} (From:SortOptionalAttributes{}))) [subsort{SortOptionalAttributes{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleName{}, \equals{SortModuleName{}, R} (Val:SortModuleName{}, inj{SortUpperName{}, SortModuleName{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortModuleName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortKCell{}, SortCell{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTagContent{}, SortKItem{}} (From:SortTagContent{}))) [subsort{SortTagContent{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModulesCell{}, SortCell{}} (From:SortModulesCell{}))) [subsort{SortModulesCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleName{}, \equals{SortModuleName{}, R} (Val:SortModuleName{}, inj{SortLowerName{}, SortModuleName{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortModuleName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVarName{}, \equals{SortVarName{}, R} (Val:SortVarName{}, inj{SortUpperName{}, SortVarName{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortVarName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefinition{}, SortKItem{}} (From:SortDefinition{}))) [subsort{SortDefinition{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortPrioritySeqBlock{}, \equals{SortPrioritySeqBlock{}, R} (Val:SortPrioritySeqBlock{}, inj{SortProdBlock{}, SortPrioritySeqBlock{}} (From:SortProdBlock{}))) [subsort{SortProdBlock{}, SortPrioritySeqBlock{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCellNameCellOpt{}, SortKItem{}} (From:SortCellNameCellOpt{}))) [subsort{SortCellNameCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortConfigInfoCellFragment{}, SortKItem{}} (From:SortConfigInfoCellFragment{}))) [subsort{SortConfigInfoCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortString{}, SortIOString{}} (From:SortString{}))) [subsort{SortString{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCollectedCellOpt{}, \equals{SortCollectedCellOpt{}, R} (Val:SortCollectedCellOpt{}, inj{SortCollectedCell{}, SortCollectedCellOpt{}} (From:SortCollectedCell{}))) [subsort{SortCollectedCell{}, SortCollectedCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKEY{}, \equals{SortKEY{}, R} (Val:SortKEY{}, inj{SortLowerName{}, SortKEY{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortKEY{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSymbolName{}, SortKItem{}} (From:SortSymbolName{}))) [subsort{SortSymbolName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortDeclCell{}, SortCell{}} (From:SortDeclCell{}))) [subsort{SortDeclCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCollectedCellOpt{}, SortKItem{}} (From:SortCollectedCellOpt{}))) [subsort{SortCollectedCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortPgm{}, \equals{SortPgm{}, R} (Val:SortPgm{}, inj{SortAny{}, SortPgm{}} (From:SortAny{}))) [subsort{SortAny{}, SortPgm{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortInt{}, SortIOInt{}} (From:SortInt{}))) [subsort{SortInt{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVariable{}, SortKItem{}} (From:SortVariable{}))) [subsort{SortVariable{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSet{}, SortKItem{}} (From:SortSet{}))) [subsort{SortSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortPrgGrammarCellOpt{}, \equals{SortPrgGrammarCellOpt{}, R} (Val:SortPrgGrammarCellOpt{}, inj{SortPrgGrammarCell{}, SortPrgGrammarCellOpt{}} (From:SortPrgGrammarCell{}))) [subsort{SortPrgGrammarCell{}, SortPrgGrammarCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSortName{}, \equals{SortSortName{}, R} (Val:SortSortName{}, inj{SortLowerName{}, SortSortName{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortSortName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCell{}, SortKItem{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKSort{}, \equals{SortKSort{}, R} (Val:SortKSort{}, inj{SortUpperName{}, SortKSort{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortKSort{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModCellSet{}, \equals{SortModCellSet{}, R} (Val:SortModCellSet{}, inj{SortModCell{}, SortModCellSet{}} (From:SortModCell{}))) [subsort{SortModCell{}, SortModCellSet{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefinition{}, \equals{SortDefinition{}, R} (Val:SortDefinition{}, inj{SortKDefinition{}, SortDefinition{}} (From:SortKDefinition{}))) [subsort{SortKDefinition{}, SortDefinition{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclarationsCellFragment{}, SortKItem{}} (From:SortDeclarationsCellFragment{}))) [subsort{SortDeclarationsCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKModuleName{}, \equals{SortKModuleName{}, R} (Val:SortKModuleName{}, inj{SortUpperName{}, SortKModuleName{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortKModuleName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKProduction{}, SortKItem{}} (From:SortKProduction{}))) [subsort{SortKProduction{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSymbolName{}, \equals{SortSymbolName{}, R} (Val:SortSymbolName{}, inj{SortLowerName{}, SortSymbolName{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortSymbolName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTag{}, \equals{SortTag{}, R} (Val:SortTag{}, inj{SortUpperName{}, SortTag{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortTag{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefinitionCell{}, SortKItem{}} (From:SortDefinitionCell{}))) [subsort{SortDefinitionCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTagContents{}, SortKItem{}} (From:SortTagContents{}))) [subsort{SortTagContents{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclarationsCellOpt{}, SortKItem{}} (From:SortDeclarationsCellOpt{}))) [subsort{SortDeclarationsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOError{}, SortKItem{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortEKoreDeclaration{}, \equals{SortEKoreDeclaration{}, R} (Val:SortEKoreDeclaration{}, inj{SortSyntaxDeclaration{}, SortEKoreDeclaration{}} (From:SortSyntaxDeclaration{}))) [subsort{SortSyntaxDeclaration{}, SortEKoreDeclaration{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclCell{}, SortKItem{}} (From:SortDeclCell{}))) [subsort{SortDeclCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKNeTagSet{}, \equals{SortKNeTagSet{}, R} (Val:SortKNeTagSet{}, inj{SortTag{}, SortKNeTagSet{}} (From:SortTag{}))) [subsort{SortTag{}, SortKNeTagSet{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (From:SortGeneratedTopCellFragment{}))) [subsort{SortGeneratedTopCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKinkDeployedDirCellOpt{}, SortKItem{}} (From:SortKinkDeployedDirCellOpt{}))) [subsort{SortKinkDeployedDirCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortConfigGrammarCellOpt{}, SortKItem{}} (From:SortConfigGrammarCellOpt{}))) [subsort{SortConfigGrammarCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAttribute{}, SortKItem{}} (From:SortAttribute{}))) [subsort{SortAttribute{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortConfigInfoCell{}, SortCell{}} (From:SortConfigInfoCell{}))) [subsort{SortConfigInfoCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTag{}, \equals{SortTag{}, R} (Val:SortTag{}, inj{SortLowerName{}, SortTag{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortTag{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortGeneratedTopCell{}, SortCell{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDeclaration{}, \equals{SortDeclaration{}, R} (Val:SortDeclaration{}, inj{SortKoreDeclaration{}, SortDeclaration{}} (From:SortKoreDeclaration{}))) [subsort{SortKoreDeclaration{}, SortDeclaration{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortId{}, SortKItem{}} (From:SortId{}))) [subsort{SortId{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKImport{}, SortKItem{}} (From:SortKImport{}))) [subsort{SortKImport{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDeclarationsCellOpt{}, \equals{SortDeclarationsCellOpt{}, R} (Val:SortDeclarationsCellOpt{}, inj{SortDeclarationsCell{}, SortDeclarationsCellOpt{}} (From:SortDeclarationsCell{}))) [subsort{SortDeclarationsCell{}, SortDeclarationsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModulesCellFragment{}, SortKItem{}} (From:SortModulesCellFragment{}))) [subsort{SortModulesCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortTag{}, SortKItem{}} (From:SortTag{}))) [subsort{SortTag{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKSortList{}, SortKItem{}} (From:SortKSortList{}))) [subsort{SortKSortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortRuleGrammarCell{}, SortCell{}} (From:SortRuleGrammarCell{}))) [subsort{SortRuleGrammarCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclarationsCell{}, SortKItem{}} (From:SortDeclarationsCell{}))) [subsort{SortDeclarationsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCollectedCell{}, SortKItem{}} (From:SortCollectedCell{}))) [subsort{SortCollectedCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBubble{}, SortKItem{}} (From:SortBubble{}))) [subsort{SortBubble{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCell{}, SortKItem{}} (From:SortCell{}))) [subsort{SortCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAny{}, SortKItem{}} (From:SortAny{}))) [subsort{SortAny{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKEY{}, SortKItem{}} (From:SortKEY{}))) [subsort{SortKEY{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortGeneratedTopCell{}, SortKItem{}} (From:SortGeneratedTopCell{}))) [subsort{SortGeneratedTopCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKRequireList{}, SortKItem{}} (From:SortKRequireList{}))) [subsort{SortKRequireList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortProdBlock{}, SortKItem{}} (From:SortProdBlock{}))) [subsort{SortProdBlock{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortDefnAttrsCell{}, SortCell{}} (From:SortDefnAttrsCell{}))) [subsort{SortDefnAttrsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModulesCellOpt{}, SortKItem{}} (From:SortModulesCellOpt{}))) [subsort{SortModulesCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVariableName{}, \equals{SortVariableName{}, R} (Val:SortVariableName{}, inj{SortLowerName{}, SortVariableName{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortVariableName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortParserGeneratorCellOpt{}, \equals{SortParserGeneratorCellOpt{}, R} (Val:SortParserGeneratorCellOpt{}, inj{SortParserGeneratorCell{}, SortParserGeneratorCellOpt{}} (From:SortParserGeneratorCell{}))) [subsort{SortParserGeneratorCell{}, SortParserGeneratorCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefnAttrsCellOpt{}, \equals{SortDefnAttrsCellOpt{}, R} (Val:SortDefnAttrsCellOpt{}, inj{SortDefnAttrsCell{}, SortDefnAttrsCellOpt{}} (From:SortDefnAttrsCell{}))) [subsort{SortDefnAttrsCell{}, SortDefnAttrsCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNumbers{}, SortKItem{}} (From:SortNumbers{}))) [subsort{SortNumbers{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSymbolName{}, \equals{SortSymbolName{}, R} (Val:SortSymbolName{}, inj{SortUpperName{}, SortSymbolName{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortSymbolName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKNeTagSet{}, SortKItem{}} (From:SortKNeTagSet{}))) [subsort{SortKNeTagSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModCellSet{}, SortKItem{}} (From:SortModCellSet{}))) [subsort{SortModCellSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortCellNameCell{}, SortKItem{}} (From:SortCellNameCell{}))) [subsort{SortCellNameCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVariable{}, \equals{SortVariable{}, R} (Val:SortVariable{}, inj{SortVarName{}, SortVariable{}} (From:SortVarName{}))) [subsort{SortVarName{}, SortVariable{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefinitionCellOpt{}, SortKItem{}} (From:SortDefinitionCellOpt{}))) [subsort{SortDefinitionCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKAttributesDeclaration{}, SortKItem{}} (From:SortKAttributesDeclaration{}))) [subsort{SortKAttributesDeclaration{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortConfigGrammarCell{}, SortKItem{}} (From:SortConfigGrammarCell{}))) [subsort{SortConfigGrammarCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDeclCellSet{}, \equals{SortDeclCellSet{}, R} (Val:SortDeclCellSet{}, inj{SortDeclCell{}, SortDeclCellSet{}} (From:SortDeclCell{}))) [subsort{SortDeclCell{}, SortDeclCellSet{}}()] // subsort
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, inj{SortVariable{}, SortPattern{}} (From:SortVariable{}))) [subsort{SortVariable{}, SortPattern{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortNameCell{}, SortCell{}} (From:SortNameCell{}))) [subsort{SortNameCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParserGeneratorCellOpt{}, SortKItem{}} (From:SortParserGeneratorCellOpt{}))) [subsort{SortParserGeneratorCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOInt{}, SortKItem{}} (From:SortIOInt{}))) [subsort{SortIOInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOFile{}, SortKItem{}} (From:SortIOFile{}))) [subsort{SortIOFile{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclarations{}, SortKItem{}} (From:SortDeclarations{}))) [subsort{SortDeclarations{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAttr{}, SortKItem{}} (From:SortAttr{}))) [subsort{SortAttr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortPrgGrammarCell{}, SortCell{}} (From:SortPrgGrammarCell{}))) [subsort{SortPrgGrammarCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortRuleGrammarCellOpt{}, \equals{SortRuleGrammarCellOpt{}, R} (Val:SortRuleGrammarCellOpt{}, inj{SortRuleGrammarCell{}, SortRuleGrammarCellOpt{}} (From:SortRuleGrammarCell{}))) [subsort{SortRuleGrammarCell{}, SortRuleGrammarCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTagContent{}, \equals{SortTagContent{}, R} (Val:SortTagContent{}, inj{SortLowerName{}, SortTagContent{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortTagContent{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExitCodeCellOpt{}, SortKItem{}} (From:SortExitCodeCellOpt{}))) [subsort{SortExitCodeCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEKoreDeclaration{}, SortKItem{}} (From:SortEKoreDeclaration{}))) [subsort{SortEKoreDeclaration{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefnAttrsCellOpt{}, SortKItem{}} (From:SortDefnAttrsCellOpt{}))) [subsort{SortDefnAttrsCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortAttributesCell{}, SortCell{}} (From:SortAttributesCell{}))) [subsort{SortAttributesCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKSortList{}, \equals{SortKSortList{}, R} (Val:SortKSortList{}, inj{SortKSort{}, SortKSortList{}} (From:SortKSort{}))) [subsort{SortKSort{}, SortKSortList{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPath{}, SortKItem{}} (From:SortPath{}))) [subsort{SortPath{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortCellNameCell{}, SortCell{}} (From:SortCellNameCell{}))) [subsort{SortCellNameCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortProdBlock{}, \equals{SortProdBlock{}, R} (Val:SortProdBlock{}, inj{SortKProductionWAttr{}, SortProdBlock{}} (From:SortKProductionWAttr{}))) [subsort{SortKProductionWAttr{}, SortProdBlock{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNameCell{}, SortKItem{}} (From:SortNameCell{}))) [subsort{SortNameCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBubbleWithAttr{}, SortKItem{}} (From:SortBubbleWithAttr{}))) [subsort{SortBubbleWithAttr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortEKoreKString{}, SortKItem{}} (From:SortEKoreKString{}))) [subsort{SortEKoreKString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKProductionItem{}, SortKItem{}} (From:SortKProductionItem{}))) [subsort{SortKProductionItem{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortConfigInfoCellOpt{}, SortKItem{}} (From:SortConfigInfoCellOpt{}))) [subsort{SortConfigInfoCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSortName{}, SortKItem{}} (From:SortSortName{}))) [subsort{SortSortName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSortName{}, \equals{SortSortName{}, R} (Val:SortSortName{}, inj{SortUpperName{}, SortSortName{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortSortName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefinition{}, \equals{SortDefinition{}, R} (Val:SortDefinition{}, inj{SortKoreDefinition{}, SortDefinition{}} (From:SortKoreDefinition{}))) [subsort{SortKoreDefinition{}, SortDefinition{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAssocAttribute{}, SortKItem{}} (From:SortAssocAttribute{}))) [subsort{SortAssocAttribute{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVarName{}, SortKItem{}} (From:SortVarName{}))) [subsort{SortVarName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortAttrList{}, SortKItem{}} (From:SortAttrList{}))) [subsort{SortAttrList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, inj{SortIOError{}, SortIOFile{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOFile{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSort{}, \equals{SortSort{}, R} (Val:SortSort{}, inj{SortSortName{}, SortSort{}} (From:SortSortName{}))) [subsort{SortSortName{}, SortSort{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKRequire{}, SortKItem{}} (From:SortKRequire{}))) [subsort{SortKRequire{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortRuleGrammarCellOpt{}, SortKItem{}} (From:SortRuleGrammarCellOpt{}))) [subsort{SortRuleGrammarCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclCellSet{}, SortKItem{}} (From:SortDeclCellSet{}))) [subsort{SortDeclCellSet{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSCellOpt{}, \equals{SortSCellOpt{}, R} (Val:SortSCellOpt{}, inj{SortSCell{}, SortSCellOpt{}} (From:SortSCell{}))) [subsort{SortSCell{}, SortSCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortModCell{}, SortCell{}} (From:SortModCell{}))) [subsort{SortModCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModulesCell{}, SortKItem{}} (From:SortModulesCell{}))) [subsort{SortModulesCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortExitCodeCell{}, SortCell{}} (From:SortExitCodeCell{}))) [subsort{SortExitCodeCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKLabel2{}, \equals{SortKLabel2{}, R} (Val:SortKLabel2{}, inj{SortLowerName{}, SortKLabel2{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortKLabel2{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortParserGeneratorCell{}, SortCell{}} (From:SortParserGeneratorCell{}))) [subsort{SortParserGeneratorCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortRuleContents{}, SortKItem{}} (From:SortRuleContents{}))) [subsort{SortRuleContents{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModulesCellOpt{}, \equals{SortModulesCellOpt{}, R} (Val:SortModulesCellOpt{}, inj{SortModulesCell{}, SortModulesCellOpt{}} (From:SortModulesCell{}))) [subsort{SortModulesCell{}, SortModulesCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCellNameCellOpt{}, \equals{SortCellNameCellOpt{}, R} (Val:SortCellNameCellOpt{}, inj{SortCellNameCell{}, SortCellNameCellOpt{}} (From:SortCellNameCell{}))) [subsort{SortCellNameCell{}, SortCellNameCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortKinkDeployedDirCell{}, SortCell{}} (From:SortKinkDeployedDirCell{}))) [subsort{SortKinkDeployedDirCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModule{}, SortKItem{}} (From:SortModule{}))) [subsort{SortModule{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortConfigGrammarCellOpt{}, \equals{SortConfigGrammarCellOpt{}, R} (Val:SortConfigGrammarCellOpt{}, inj{SortConfigGrammarCell{}, SortConfigGrammarCellOpt{}} (From:SortConfigGrammarCell{}))) [subsort{SortConfigGrammarCell{}, SortConfigGrammarCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, inj{SortKCell{}, SortKCellOpt{}} (From:SortKCell{}))) [subsort{SortKCell{}, SortKCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortIOString{}, SortKItem{}} (From:SortIOString{}))) [subsort{SortIOString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParserGeneratorCell{}, SortKItem{}} (From:SortParserGeneratorCell{}))) [subsort{SortParserGeneratorCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBubbleItem{}, SortKItem{}} (From:SortBubbleItem{}))) [subsort{SortBubbleItem{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSortName{}, \equals{SortSortName{}, R} (Val:SortSortName{}, inj{SortKSort{}, SortSortName{}} (From:SortKSort{}))) [subsort{SortKSort{}, SortSortName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKLabel2{}, SortKItem{}} (From:SortKLabel2{}))) [subsort{SortKLabel2{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortBacktickName{}, SortKItem{}} (From:SortBacktickName{}))) [subsort{SortBacktickName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSymbol{}, SortKItem{}} (From:SortSymbol{}))) [subsort{SortSymbol{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModCellFragment{}, SortKItem{}} (From:SortModCellFragment{}))) [subsort{SortModCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPattern{}, SortKItem{}} (From:SortPattern{}))) [subsort{SortPattern{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:Sort'Hash'RuleTag{}, \equals{Sort'Hash'RuleTag{}, R} (Val:Sort'Hash'RuleTag{}, inj{Sort'Hash'KVariable{}, Sort'Hash'RuleTag{}} (From:Sort'Hash'KVariable{}))) [subsort{Sort'Hash'KVariable{}, Sort'Hash'RuleTag{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKinkDeployedDirCell{}, SortKItem{}} (From:SortKinkDeployedDirCell{}))) [subsort{SortKinkDeployedDirCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDeclaration{}, SortKItem{}} (From:SortDeclaration{}))) [subsort{SortDeclaration{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKoreDeclaration{}, SortKItem{}} (From:SortKoreDeclaration{}))) [subsort{SortKoreDeclaration{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortRuleContents{}, \equals{SortRuleContents{}, R} (Val:SortRuleContents{}, inj{SortBubbleWithAttr{}, SortRuleContents{}} (From:SortBubbleWithAttr{}))) [subsort{SortBubbleWithAttr{}, SortRuleContents{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortInt{}, SortKItem{}} (From:SortInt{}))) [subsort{SortInt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKCellOpt{}, SortKItem{}} (From:SortKCellOpt{}))) [subsort{SortKCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortConfigInfoCell{}, SortKItem{}} (From:SortConfigInfoCell{}))) [subsort{SortConfigInfoCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKModuleName{}, SortKItem{}} (From:SortKModuleName{}))) [subsort{SortKModuleName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOInt{}, \equals{SortIOInt{}, R} (Val:SortIOInt{}, inj{SortIOError{}, SortIOInt{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOInt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortConfigInfoCellOpt{}, \equals{SortConfigInfoCellOpt{}, R} (Val:SortConfigInfoCellOpt{}, inj{SortConfigInfoCell{}, SortConfigInfoCellOpt{}} (From:SortConfigInfoCell{}))) [subsort{SortConfigInfoCell{}, SortConfigInfoCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPrgGrammarCellOpt{}, SortKItem{}} (From:SortPrgGrammarCellOpt{}))) [subsort{SortPrgGrammarCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKoreString{}, SortKItem{}} (From:SortKoreString{}))) [subsort{SortKoreString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKinkDeployedDirCellOpt{}, \equals{SortKinkDeployedDirCellOpt{}, R} (Val:SortKinkDeployedDirCellOpt{}, inj{SortKinkDeployedDirCell{}, SortKinkDeployedDirCellOpt{}} (From:SortKinkDeployedDirCell{}))) [subsort{SortKinkDeployedDirCell{}, SortKinkDeployedDirCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortVariableName{}, SortKItem{}} (From:SortVariableName{}))) [subsort{SortVariableName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSort{}, SortKItem{}} (From:SortSort{}))) [subsort{SortSort{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortNameCellOpt{}, SortKItem{}} (From:SortNameCellOpt{}))) [subsort{SortNameCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKProductionWAttr{}, SortKItem{}} (From:SortKProductionWAttr{}))) [subsort{SortKProductionWAttr{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPgm{}, SortKItem{}} (From:SortPgm{}))) [subsort{SortPgm{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortLowerName{}, SortKItem{}} (From:SortLowerName{}))) [subsort{SortLowerName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortStrategy{}, SortKItem{}} (From:SortStrategy{}))) [subsort{SortStrategy{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOString{}, \equals{SortIOString{}, R} (Val:SortIOString{}, inj{SortIOError{}, SortIOString{}} (From:SortIOError{}))) [subsort{SortIOError{}, SortIOString{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDefnAttrsCell{}, SortKItem{}} (From:SortDefnAttrsCell{}))) [subsort{SortDefnAttrsCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortDefinitionCell{}, SortCell{}} (From:SortDefinitionCell{}))) [subsort{SortDefinitionCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSyntaxDeclaration{}, SortKItem{}} (From:SortSyntaxDeclaration{}))) [subsort{SortSyntaxDeclaration{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSCellOpt{}, SortKItem{}} (From:SortSCellOpt{}))) [subsort{SortSCellOpt{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortString{}, SortKItem{}} (From:SortString{}))) [subsort{SortString{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortSorts{}, \equals{SortSorts{}, R} (Val:SortSorts{}, inj{SortSort{}, SortSorts{}} (From:SortSort{}))) [subsort{SortSort{}, SortSorts{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortSorts{}, SortKItem{}} (From:SortSorts{}))) [subsort{SortSorts{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortFloat{}, SortKItem{}} (From:SortFloat{}))) [subsort{SortFloat{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModuleName{}, SortKItem{}} (From:SortModuleName{}))) [subsort{SortModuleName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortTagContent{}, \equals{SortTagContent{}, R} (Val:SortTagContent{}, inj{SortEKoreKString{}, SortTagContent{}} (From:SortEKoreKString{}))) [subsort{SortEKoreKString{}, SortTagContent{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortList{}, SortKItem{}} (From:SortList{}))) [subsort{SortList{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortExitCodeCell{}, SortKItem{}} (From:SortExitCodeCell{}))) [subsort{SortExitCodeCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortParserGeneratorCellFragment{}, SortKItem{}} (From:SortParserGeneratorCellFragment{}))) [subsort{SortParserGeneratorCellFragment{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortDefinitionCellOpt{}, \equals{SortDefinitionCellOpt{}, R} (Val:SortDefinitionCellOpt{}, inj{SortDefinitionCell{}, SortDefinitionCellOpt{}} (From:SortDefinitionCell{}))) [subsort{SortDefinitionCell{}, SortDefinitionCellOpt{}}()] // subsort
  axiom{R} \exists{R} (Val:SortOptionalAttributes{}, \equals{SortOptionalAttributes{}, R} (Val:SortOptionalAttributes{}, inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}} (From:SortKAttributesDeclaration{}))) [subsort{SortKAttributesDeclaration{}, SortOptionalAttributes{}}()] // subsort
  axiom{R} \exists{R} (Val:SortVariableName{}, \equals{SortVariableName{}, R} (Val:SortVariableName{}, inj{SortUpperName{}, SortVariableName{}} (From:SortUpperName{}))) [subsort{SortUpperName{}, SortVariableName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortDeclarationsCell{}, SortCell{}} (From:SortDeclarationsCell{}))) [subsort{SortDeclarationsCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortCell{}, \equals{SortCell{}, R} (Val:SortCell{}, inj{SortCollectedCell{}, SortCell{}} (From:SortCollectedCell{}))) [subsort{SortCollectedCell{}, SortCell{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortPrgGrammarCell{}, SortKItem{}} (From:SortPrgGrammarCell{}))) [subsort{SortPrgGrammarCell{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortKPrioritySeq{}, SortKItem{}} (From:SortKPrioritySeq{}))) [subsort{SortKPrioritySeq{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortModules{}, SortKItem{}} (From:SortModules{}))) [subsort{SortModules{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:Sort'Hash'RuleTag{}, \equals{Sort'Hash'RuleTag{}, R} (Val:Sort'Hash'RuleTag{}, inj{Sort'Hash'LowerId{}, Sort'Hash'RuleTag{}} (From:Sort'Hash'LowerId{}))) [subsort{Sort'Hash'LowerId{}, Sort'Hash'RuleTag{}}()] // subsort
  axiom{R} \exists{R} (Val:SortModuleName{}, \equals{SortModuleName{}, R} (Val:SortModuleName{}, inj{SortKModuleName{}, SortModuleName{}} (From:SortKModuleName{}))) [subsort{SortKModuleName{}, SortModuleName{}}()] // subsort
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, inj{SortDollarName{}, SortKItem{}} (From:SortDollarName{}))) [subsort{SortDollarName{}, SortKItem{}}()] // subsort
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'E2BIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EACCES{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'E2BIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EACCES{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRINUSE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EACCES{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRINUSE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EADDRNOTAVAIL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EADDRNOTAVAIL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EAGAIN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EAGAIN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EALREADY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EAGAIN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EALREADY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBADF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EALREADY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBADF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EBUSY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBADF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EBUSY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECHILD{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EBUSY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECHILD{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNABORTED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECHILD{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNABORTED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNREFUSED{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNREFUSED{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ECONNRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ECONNRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDEADLK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDEADLK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDESTADDRREQ{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDEADLK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDESTADDRREQ{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EDOM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EDOM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EEXIST{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EDOM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EEXIST{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFAULT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EEXIST{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFAULT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EFBIG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFAULT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EFBIG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EFBIG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EHOSTUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EHOSTUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINPROGRESS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINPROGRESS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINTR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINTR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EINVAL{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINTR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EINVAL{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EINVAL{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EISDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EISDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ELOOP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EISDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ELOOP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ELOOP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMLINK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMLINK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EMSGSIZE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMLINK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EMSGSIZE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENAMETOOLONG{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENAMETOOLONG{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETRESET{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETRESET{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENETUNREACH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETRESET{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENETUNREACH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENFILE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENFILE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOBUFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENFILE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOBUFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENODEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENODEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOENT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENODEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOENT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOEXEC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOENT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOEXEC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOLCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOLCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOMEM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOLCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOMEM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOPROTOOPT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOMEM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOPROTOOPT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSPC{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSPC{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOSYS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSPC{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOSYS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTCONN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOSYS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTCONN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTDIR{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTDIR{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTEMPTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTEMPTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTSOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTSOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENOTTY{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENOTTY{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ENXIO{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENOTTY{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ENXIO{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOF{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ENXIO{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOF{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOPNOTSUPP{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOF{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOPNOTSUPP{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EOVERFLOW{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EOVERFLOW{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPERM{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPERM{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPFNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPERM{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPFNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTONOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTONOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EPROTOTYPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EPROTOTYPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ERANGE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ERANGE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EROFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ERANGE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EROFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESHUTDOWN{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EROFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESHUTDOWN{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESOCKTNOSUPPORT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESOCKTNOSUPPORT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESPIPE{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESPIPE{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ESRCH{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESPIPE{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ESRCH{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETIMEDOUT{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ESRCH{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETIMEDOUT{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'ETOOMANYREFS{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'ETOOMANYREFS{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EWOULDBLOCK{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EWOULDBLOCK{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'EXDEV{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'EXDEV{}())) [functional{}()] // functional
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'noParse{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'EXDEV{}(), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStrategy{}, \equals{SortStrategy{}, R} (Val:SortStrategy{}, Lbl'Hash'STUCK{}())) [functional{}()] // functional
  axiom{}\not{SortStrategy{}} (\and{SortStrategy{}} (Lbl'Hash'STUCK{}(), Lbl'Hash'applyRule{}(Y0:Sort'Hash'RuleTag{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortStrategy{}, \equals{SortStrategy{}, R} (Val:SortStrategy{}, Lbl'Hash'appliedRule{}(K0:Sort'Hash'RuleTag{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortStrategy{}, \equals{SortStrategy{}, R} (Val:SortStrategy{}, Lbl'Hash'applyRule{}(K0:Sort'Hash'RuleTag{}))) [functional{}()] // functional
  axiom{}\implies{SortStrategy{}} (\and{SortStrategy{}} (Lbl'Hash'applyRule{}(X0:Sort'Hash'RuleTag{}), Lbl'Hash'applyRule{}(Y0:Sort'Hash'RuleTag{})), Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}} (X0:Sort'Hash'RuleTag{}, Y0:Sort'Hash'RuleTag{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortStream{}, \equals{SortStream{}, R} (Val:SortStream{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortStream{}} (\and{SortStream{}} (Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{}), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(Y0:SortK{})), Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R, SortSort} \exists{R} (Val:SortSort, \equals{SortSort, R} (Val:SortSort, Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortSort}(K0:SortBool{}, K1:SortSort, K2:SortSort))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Y0:SortString{})), Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{}), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'logToFile{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'noParse{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'noParse{}(Y0:SortString{})), Lbl'Hash'noParse{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'noParse{}(X0:SortString{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(K0:SortCommandLine{}, K1:SortPgm{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Y0:SortCommandLine{}, Y1:SortPgm{})), Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(\and{SortCommandLine{}} (X0:SortCommandLine{}, Y0:SortCommandLine{}), \and{SortPgm{}} (X1:SortPgm{}, Y1:SortPgm{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(K0:SortIOString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(Y0:SortIOString{})), Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(\and{SortIOString{}} (X0:SortIOString{}, Y0:SortIOString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{}), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(Y0:SortString{})), Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{}), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(), Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortK{}, \equals{SortK{}, R} (Val:SortK{}, Lbl'Hash'remove'LParUndsRParUnds'K-IO'Unds'K'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'systemResult{}(K0:SortInt{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'systemResult{}(Y0:SortInt{}, Y1:SortString{}, Y2:SortString{})), Lbl'Hash'systemResult{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}), \and{SortString{}} (X1:SortString{}, Y1:SortString{}), \and{SortString{}} (X2:SortString{}, Y2:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{}), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOFile{}, \equals{SortIOFile{}, R} (Val:SortIOFile{}, Lbl'Hash'tempFile{}(K0:SortString{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOFile{}} (\and{SortIOFile{}} (Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}), Lbl'Hash'tempFile{}(Y0:SortString{}, Y1:SortInt{})), Lbl'Hash'tempFile{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}), \and{SortInt{}} (X1:SortInt{}, Y1:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}())) [functional{}()] // functional
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}(), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}(), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortIOError{}, \equals{SortIOError{}, R} (Val:SortIOError{}, Lbl'Hash'unknownIOError{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortIOError{}} (\and{SortIOError{}} (Lbl'Hash'unknownIOError{}(X0:SortInt{}), Lbl'Hash'unknownIOError{}(Y0:SortInt{})), Lbl'Hash'unknownIOError{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Stop'List{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Stop'Map{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Stop'Set{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAttributesCell{}, \equals{SortAttributesCell{}, R} (Val:SortAttributesCell{}, Lbl'-LT-'attributes'-GT-'{}(K0:SortPatterns{}))) [functional{}()] // functional
  axiom{}\implies{SortAttributesCell{}} (\and{SortAttributesCell{}} (Lbl'-LT-'attributes'-GT-'{}(X0:SortPatterns{}), Lbl'-LT-'attributes'-GT-'{}(Y0:SortPatterns{})), Lbl'-LT-'attributes'-GT-'{}(\and{SortPatterns{}} (X0:SortPatterns{}, Y0:SortPatterns{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCellNameCell{}, \equals{SortCellNameCell{}, R} (Val:SortCellNameCell{}, Lbl'-LT-'cellName'-GT-'{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{}\implies{SortCellNameCell{}} (\and{SortCellNameCell{}} (Lbl'-LT-'cellName'-GT-'{}(X0:SortMap{}), Lbl'-LT-'cellName'-GT-'{}(Y0:SortMap{})), Lbl'-LT-'cellName'-GT-'{}(\and{SortMap{}} (X0:SortMap{}, Y0:SortMap{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCollectedCell{}, \equals{SortCollectedCell{}, R} (Val:SortCollectedCell{}, Lbl'-LT-'collected'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortCollectedCell{}} (\and{SortCollectedCell{}} (Lbl'-LT-'collected'-GT-'{}(X0:SortSet{}), Lbl'-LT-'collected'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'collected'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortConfigGrammarCell{}, \equals{SortConfigGrammarCell{}, R} (Val:SortConfigGrammarCell{}, Lbl'-LT-'configGrammar'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortConfigGrammarCell{}} (\and{SortConfigGrammarCell{}} (Lbl'-LT-'configGrammar'-GT-'{}(X0:SortSet{}), Lbl'-LT-'configGrammar'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'configGrammar'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortConfigInfoCell{}, \equals{SortConfigInfoCell{}, R} (Val:SortConfigInfoCell{}, Lbl'-LT-'configInfo'-GT-'{}(K0:SortCellNameCell{}, K1:SortCollectedCell{}))) [functional{}()] // functional
  axiom{}\implies{SortConfigInfoCell{}} (\and{SortConfigInfoCell{}} (Lbl'-LT-'configInfo'-GT-'{}(X0:SortCellNameCell{}, X1:SortCollectedCell{}), Lbl'-LT-'configInfo'-GT-'{}(Y0:SortCellNameCell{}, Y1:SortCollectedCell{})), Lbl'-LT-'configInfo'-GT-'{}(\and{SortCellNameCell{}} (X0:SortCellNameCell{}, Y0:SortCellNameCell{}), \and{SortCollectedCell{}} (X1:SortCollectedCell{}, Y1:SortCollectedCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortConfigInfoCellFragment{}, \equals{SortConfigInfoCellFragment{}, R} (Val:SortConfigInfoCellFragment{}, Lbl'-LT-'configInfo'-GT-'-fragment{}(K0:SortCellNameCellOpt{}, K1:SortCollectedCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortConfigInfoCellFragment{}} (\and{SortConfigInfoCellFragment{}} (Lbl'-LT-'configInfo'-GT-'-fragment{}(X0:SortCellNameCellOpt{}, X1:SortCollectedCellOpt{}), Lbl'-LT-'configInfo'-GT-'-fragment{}(Y0:SortCellNameCellOpt{}, Y1:SortCollectedCellOpt{})), Lbl'-LT-'configInfo'-GT-'-fragment{}(\and{SortCellNameCellOpt{}} (X0:SortCellNameCellOpt{}, Y0:SortCellNameCellOpt{}), \and{SortCollectedCellOpt{}} (X1:SortCollectedCellOpt{}, Y1:SortCollectedCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDeclCell{}, \equals{SortDeclCell{}, R} (Val:SortDeclCell{}, Lbl'-LT-'decl'-GT-'{}(K0:SortDeclaration{}))) [functional{}()] // functional
  axiom{}\implies{SortDeclCell{}} (\and{SortDeclCell{}} (Lbl'-LT-'decl'-GT-'{}(X0:SortDeclaration{}), Lbl'-LT-'decl'-GT-'{}(Y0:SortDeclaration{})), Lbl'-LT-'decl'-GT-'{}(\and{SortDeclaration{}} (X0:SortDeclaration{}, Y0:SortDeclaration{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDeclarationsCell{}, \equals{SortDeclarationsCell{}, R} (Val:SortDeclarationsCell{}, Lbl'-LT-'declarations'-GT-'{}(K0:SortDeclCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortDeclarationsCell{}} (\and{SortDeclarationsCell{}} (Lbl'-LT-'declarations'-GT-'{}(X0:SortDeclCellSet{}), Lbl'-LT-'declarations'-GT-'{}(Y0:SortDeclCellSet{})), Lbl'-LT-'declarations'-GT-'{}(\and{SortDeclCellSet{}} (X0:SortDeclCellSet{}, Y0:SortDeclCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDeclarationsCellFragment{}, \equals{SortDeclarationsCellFragment{}, R} (Val:SortDeclarationsCellFragment{}, Lbl'-LT-'declarations'-GT-'-fragment{}(K0:SortDeclCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortDeclarationsCellFragment{}} (\and{SortDeclarationsCellFragment{}} (Lbl'-LT-'declarations'-GT-'-fragment{}(X0:SortDeclCellSet{}), Lbl'-LT-'declarations'-GT-'-fragment{}(Y0:SortDeclCellSet{})), Lbl'-LT-'declarations'-GT-'-fragment{}(\and{SortDeclCellSet{}} (X0:SortDeclCellSet{}, Y0:SortDeclCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDefinitionCell{}, \equals{SortDefinitionCell{}, R} (Val:SortDefinitionCell{}, Lbl'-LT-'definition'-GT-'{}(K0:SortDefnAttrsCell{}, K1:SortModulesCell{}, K2:SortConfigInfoCell{}))) [functional{}()] // functional
  axiom{}\implies{SortDefinitionCell{}} (\and{SortDefinitionCell{}} (Lbl'-LT-'definition'-GT-'{}(X0:SortDefnAttrsCell{}, X1:SortModulesCell{}, X2:SortConfigInfoCell{}), Lbl'-LT-'definition'-GT-'{}(Y0:SortDefnAttrsCell{}, Y1:SortModulesCell{}, Y2:SortConfigInfoCell{})), Lbl'-LT-'definition'-GT-'{}(\and{SortDefnAttrsCell{}} (X0:SortDefnAttrsCell{}, Y0:SortDefnAttrsCell{}), \and{SortModulesCell{}} (X1:SortModulesCell{}, Y1:SortModulesCell{}), \and{SortConfigInfoCell{}} (X2:SortConfigInfoCell{}, Y2:SortConfigInfoCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDefinitionCellFragment{}, \equals{SortDefinitionCellFragment{}, R} (Val:SortDefinitionCellFragment{}, Lbl'-LT-'definition'-GT-'-fragment{}(K0:SortDefnAttrsCellOpt{}, K1:SortModulesCellOpt{}, K2:SortConfigInfoCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortDefinitionCellFragment{}} (\and{SortDefinitionCellFragment{}} (Lbl'-LT-'definition'-GT-'-fragment{}(X0:SortDefnAttrsCellOpt{}, X1:SortModulesCellOpt{}, X2:SortConfigInfoCellOpt{}), Lbl'-LT-'definition'-GT-'-fragment{}(Y0:SortDefnAttrsCellOpt{}, Y1:SortModulesCellOpt{}, Y2:SortConfigInfoCellOpt{})), Lbl'-LT-'definition'-GT-'-fragment{}(\and{SortDefnAttrsCellOpt{}} (X0:SortDefnAttrsCellOpt{}, Y0:SortDefnAttrsCellOpt{}), \and{SortModulesCellOpt{}} (X1:SortModulesCellOpt{}, Y1:SortModulesCellOpt{}), \and{SortConfigInfoCellOpt{}} (X2:SortConfigInfoCellOpt{}, Y2:SortConfigInfoCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortDefnAttrsCell{}, \equals{SortDefnAttrsCell{}, R} (Val:SortDefnAttrsCell{}, Lbl'-LT-'defnAttrs'-GT-'{}(K0:SortPatterns{}))) [functional{}()] // functional
  axiom{}\implies{SortDefnAttrsCell{}} (\and{SortDefnAttrsCell{}} (Lbl'-LT-'defnAttrs'-GT-'{}(X0:SortPatterns{}), Lbl'-LT-'defnAttrs'-GT-'{}(Y0:SortPatterns{})), Lbl'-LT-'defnAttrs'-GT-'{}(\and{SortPatterns{}} (X0:SortPatterns{}, Y0:SortPatterns{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortExitCodeCell{}, \equals{SortExitCodeCell{}, R} (Val:SortExitCodeCell{}, Lbl'-LT-'exit-code'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortExitCodeCell{}} (\and{SortExitCodeCell{}} (Lbl'-LT-'exit-code'-GT-'{}(X0:SortInt{}), Lbl'-LT-'exit-code'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'exit-code'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedCounterCell{}, \equals{SortGeneratedCounterCell{}, R} (Val:SortGeneratedCounterCell{}, Lbl'-LT-'generatedCounter'-GT-'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedCounterCell{}} (\and{SortGeneratedCounterCell{}} (Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{}), Lbl'-LT-'generatedCounter'-GT-'{}(Y0:SortInt{})), Lbl'-LT-'generatedCounter'-GT-'{}(\and{SortInt{}} (X0:SortInt{}, Y0:SortInt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCell{}, \equals{SortGeneratedTopCell{}, R} (Val:SortGeneratedTopCell{}, Lbl'-LT-'generatedTop'-GT-'{}(K0:SortKCell{}, K1:SortDefinitionCell{}, K2:SortExitCodeCell{}, K3:SortSCell{}, K4:SortGeneratedCounterCell{}, K5:SortKinkDeployedDirCell{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCell{}} (\and{SortGeneratedTopCell{}} (Lbl'-LT-'generatedTop'-GT-'{}(X0:SortKCell{}, X1:SortDefinitionCell{}, X2:SortExitCodeCell{}, X3:SortSCell{}, X4:SortGeneratedCounterCell{}, X5:SortKinkDeployedDirCell{}), Lbl'-LT-'generatedTop'-GT-'{}(Y0:SortKCell{}, Y1:SortDefinitionCell{}, Y2:SortExitCodeCell{}, Y3:SortSCell{}, Y4:SortGeneratedCounterCell{}, Y5:SortKinkDeployedDirCell{})), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}} (X0:SortKCell{}, Y0:SortKCell{}), \and{SortDefinitionCell{}} (X1:SortDefinitionCell{}, Y1:SortDefinitionCell{}), \and{SortExitCodeCell{}} (X2:SortExitCodeCell{}, Y2:SortExitCodeCell{}), \and{SortSCell{}} (X3:SortSCell{}, Y3:SortSCell{}), \and{SortGeneratedCounterCell{}} (X4:SortGeneratedCounterCell{}, Y4:SortGeneratedCounterCell{}), \and{SortKinkDeployedDirCell{}} (X5:SortKinkDeployedDirCell{}, Y5:SortKinkDeployedDirCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortGeneratedTopCellFragment{}, \equals{SortGeneratedTopCellFragment{}, R} (Val:SortGeneratedTopCellFragment{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(K0:SortKCellOpt{}, K1:SortDefinitionCellOpt{}, K2:SortExitCodeCellOpt{}, K3:SortSCellOpt{}, K4:SortKinkDeployedDirCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortGeneratedTopCellFragment{}} (\and{SortGeneratedTopCellFragment{}} (Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortDefinitionCellOpt{}, X2:SortExitCodeCellOpt{}, X3:SortSCellOpt{}, X4:SortKinkDeployedDirCellOpt{}), Lbl'-LT-'generatedTop'-GT-'-fragment{}(Y0:SortKCellOpt{}, Y1:SortDefinitionCellOpt{}, Y2:SortExitCodeCellOpt{}, Y3:SortSCellOpt{}, Y4:SortKinkDeployedDirCellOpt{})), Lbl'-LT-'generatedTop'-GT-'-fragment{}(\and{SortKCellOpt{}} (X0:SortKCellOpt{}, Y0:SortKCellOpt{}), \and{SortDefinitionCellOpt{}} (X1:SortDefinitionCellOpt{}, Y1:SortDefinitionCellOpt{}), \and{SortExitCodeCellOpt{}} (X2:SortExitCodeCellOpt{}, Y2:SortExitCodeCellOpt{}), \and{SortSCellOpt{}} (X3:SortSCellOpt{}, Y3:SortSCellOpt{}), \and{SortKinkDeployedDirCellOpt{}} (X4:SortKinkDeployedDirCellOpt{}, Y4:SortKinkDeployedDirCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKCell{}, \equals{SortKCell{}, R} (Val:SortKCell{}, Lbl'-LT-'k'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortKCell{}} (\and{SortKCell{}} (Lbl'-LT-'k'-GT-'{}(X0:SortK{}), Lbl'-LT-'k'-GT-'{}(Y0:SortK{})), Lbl'-LT-'k'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKinkDeployedDirCell{}, \equals{SortKinkDeployedDirCell{}, R} (Val:SortKinkDeployedDirCell{}, Lbl'-LT-'kinkDeployedDir'-GT-'{}(K0:SortString{}))) [functional{}()] // functional
  axiom{}\implies{SortKinkDeployedDirCell{}} (\and{SortKinkDeployedDirCell{}} (Lbl'-LT-'kinkDeployedDir'-GT-'{}(X0:SortString{}), Lbl'-LT-'kinkDeployedDir'-GT-'{}(Y0:SortString{})), Lbl'-LT-'kinkDeployedDir'-GT-'{}(\and{SortString{}} (X0:SortString{}, Y0:SortString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModCell{}, \equals{SortModCell{}, R} (Val:SortModCell{}, Lbl'-LT-'mod'-GT-'{}(K0:SortNameCell{}, K1:SortAttributesCell{}, K2:SortDeclarationsCell{}, K3:SortParserGeneratorCell{}))) [functional{}()] // functional
  axiom{}\implies{SortModCell{}} (\and{SortModCell{}} (Lbl'-LT-'mod'-GT-'{}(X0:SortNameCell{}, X1:SortAttributesCell{}, X2:SortDeclarationsCell{}, X3:SortParserGeneratorCell{}), Lbl'-LT-'mod'-GT-'{}(Y0:SortNameCell{}, Y1:SortAttributesCell{}, Y2:SortDeclarationsCell{}, Y3:SortParserGeneratorCell{})), Lbl'-LT-'mod'-GT-'{}(\and{SortNameCell{}} (X0:SortNameCell{}, Y0:SortNameCell{}), \and{SortAttributesCell{}} (X1:SortAttributesCell{}, Y1:SortAttributesCell{}), \and{SortDeclarationsCell{}} (X2:SortDeclarationsCell{}, Y2:SortDeclarationsCell{}), \and{SortParserGeneratorCell{}} (X3:SortParserGeneratorCell{}, Y3:SortParserGeneratorCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModCellFragment{}, \equals{SortModCellFragment{}, R} (Val:SortModCellFragment{}, Lbl'-LT-'mod'-GT-'-fragment{}(K0:SortNameCellOpt{}, K1:SortAttributesCellOpt{}, K2:SortDeclarationsCellOpt{}, K3:SortParserGeneratorCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortModCellFragment{}} (\and{SortModCellFragment{}} (Lbl'-LT-'mod'-GT-'-fragment{}(X0:SortNameCellOpt{}, X1:SortAttributesCellOpt{}, X2:SortDeclarationsCellOpt{}, X3:SortParserGeneratorCellOpt{}), Lbl'-LT-'mod'-GT-'-fragment{}(Y0:SortNameCellOpt{}, Y1:SortAttributesCellOpt{}, Y2:SortDeclarationsCellOpt{}, Y3:SortParserGeneratorCellOpt{})), Lbl'-LT-'mod'-GT-'-fragment{}(\and{SortNameCellOpt{}} (X0:SortNameCellOpt{}, Y0:SortNameCellOpt{}), \and{SortAttributesCellOpt{}} (X1:SortAttributesCellOpt{}, Y1:SortAttributesCellOpt{}), \and{SortDeclarationsCellOpt{}} (X2:SortDeclarationsCellOpt{}, Y2:SortDeclarationsCellOpt{}), \and{SortParserGeneratorCellOpt{}} (X3:SortParserGeneratorCellOpt{}, Y3:SortParserGeneratorCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModulesCell{}, \equals{SortModulesCell{}, R} (Val:SortModulesCell{}, Lbl'-LT-'modules'-GT-'{}(K0:SortModCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortModulesCell{}} (\and{SortModulesCell{}} (Lbl'-LT-'modules'-GT-'{}(X0:SortModCellSet{}), Lbl'-LT-'modules'-GT-'{}(Y0:SortModCellSet{})), Lbl'-LT-'modules'-GT-'{}(\and{SortModCellSet{}} (X0:SortModCellSet{}, Y0:SortModCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModulesCellFragment{}, \equals{SortModulesCellFragment{}, R} (Val:SortModulesCellFragment{}, Lbl'-LT-'modules'-GT-'-fragment{}(K0:SortModCellSet{}))) [functional{}()] // functional
  axiom{}\implies{SortModulesCellFragment{}} (\and{SortModulesCellFragment{}} (Lbl'-LT-'modules'-GT-'-fragment{}(X0:SortModCellSet{}), Lbl'-LT-'modules'-GT-'-fragment{}(Y0:SortModCellSet{})), Lbl'-LT-'modules'-GT-'-fragment{}(\and{SortModCellSet{}} (X0:SortModCellSet{}, Y0:SortModCellSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortNameCell{}, \equals{SortNameCell{}, R} (Val:SortNameCell{}, Lbl'-LT-'name'-GT-'{}(K0:SortModuleName{}))) [functional{}()] // functional
  axiom{}\implies{SortNameCell{}} (\and{SortNameCell{}} (Lbl'-LT-'name'-GT-'{}(X0:SortModuleName{}), Lbl'-LT-'name'-GT-'{}(Y0:SortModuleName{})), Lbl'-LT-'name'-GT-'{}(\and{SortModuleName{}} (X0:SortModuleName{}, Y0:SortModuleName{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortParserGeneratorCell{}, \equals{SortParserGeneratorCell{}, R} (Val:SortParserGeneratorCell{}, Lbl'-LT-'parserGenerator'-GT-'{}(K0:SortPrgGrammarCell{}, K1:SortConfigGrammarCell{}, K2:SortRuleGrammarCell{}))) [functional{}()] // functional
  axiom{}\implies{SortParserGeneratorCell{}} (\and{SortParserGeneratorCell{}} (Lbl'-LT-'parserGenerator'-GT-'{}(X0:SortPrgGrammarCell{}, X1:SortConfigGrammarCell{}, X2:SortRuleGrammarCell{}), Lbl'-LT-'parserGenerator'-GT-'{}(Y0:SortPrgGrammarCell{}, Y1:SortConfigGrammarCell{}, Y2:SortRuleGrammarCell{})), Lbl'-LT-'parserGenerator'-GT-'{}(\and{SortPrgGrammarCell{}} (X0:SortPrgGrammarCell{}, Y0:SortPrgGrammarCell{}), \and{SortConfigGrammarCell{}} (X1:SortConfigGrammarCell{}, Y1:SortConfigGrammarCell{}), \and{SortRuleGrammarCell{}} (X2:SortRuleGrammarCell{}, Y2:SortRuleGrammarCell{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortParserGeneratorCellFragment{}, \equals{SortParserGeneratorCellFragment{}, R} (Val:SortParserGeneratorCellFragment{}, Lbl'-LT-'parserGenerator'-GT-'-fragment{}(K0:SortPrgGrammarCellOpt{}, K1:SortConfigGrammarCellOpt{}, K2:SortRuleGrammarCellOpt{}))) [functional{}()] // functional
  axiom{}\implies{SortParserGeneratorCellFragment{}} (\and{SortParserGeneratorCellFragment{}} (Lbl'-LT-'parserGenerator'-GT-'-fragment{}(X0:SortPrgGrammarCellOpt{}, X1:SortConfigGrammarCellOpt{}, X2:SortRuleGrammarCellOpt{}), Lbl'-LT-'parserGenerator'-GT-'-fragment{}(Y0:SortPrgGrammarCellOpt{}, Y1:SortConfigGrammarCellOpt{}, Y2:SortRuleGrammarCellOpt{})), Lbl'-LT-'parserGenerator'-GT-'-fragment{}(\and{SortPrgGrammarCellOpt{}} (X0:SortPrgGrammarCellOpt{}, Y0:SortPrgGrammarCellOpt{}), \and{SortConfigGrammarCellOpt{}} (X1:SortConfigGrammarCellOpt{}, Y1:SortConfigGrammarCellOpt{}), \and{SortRuleGrammarCellOpt{}} (X2:SortRuleGrammarCellOpt{}, Y2:SortRuleGrammarCellOpt{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortPrgGrammarCell{}, \equals{SortPrgGrammarCell{}, R} (Val:SortPrgGrammarCell{}, Lbl'-LT-'prgGrammar'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortPrgGrammarCell{}} (\and{SortPrgGrammarCell{}} (Lbl'-LT-'prgGrammar'-GT-'{}(X0:SortSet{}), Lbl'-LT-'prgGrammar'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'prgGrammar'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortRuleGrammarCell{}, \equals{SortRuleGrammarCell{}, R} (Val:SortRuleGrammarCell{}, Lbl'-LT-'ruleGrammar'-GT-'{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortRuleGrammarCell{}} (\and{SortRuleGrammarCell{}} (Lbl'-LT-'ruleGrammar'-GT-'{}(X0:SortSet{}), Lbl'-LT-'ruleGrammar'-GT-'{}(Y0:SortSet{})), Lbl'-LT-'ruleGrammar'-GT-'{}(\and{SortSet{}} (X0:SortSet{}, Y0:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortSCell{}, \equals{SortSCell{}, R} (Val:SortSCell{}, Lbl'-LT-'s'-GT-'{}(K0:SortK{}))) [functional{}()] // functional
  axiom{}\implies{SortSCell{}} (\and{SortSCell{}} (Lbl'-LT-'s'-GT-'{}(X0:SortK{}), Lbl'-LT-'s'-GT-'{}(Y0:SortK{})), Lbl'-LT-'s'-GT-'{}(\and{SortK{}} (X0:SortK{}, Y0:SortK{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblFloat2String'LParUndsRParUnds'STRING'Unds'String'Unds'Float{}(K0:SortFloat{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblId2String'LParUndsRParUnds'ID-SYNTAX'Unds'String'Unds'Id{}(K0:SortId{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblInt2String'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKRequireList{}, \equals{SortKRequireList{}, R} (Val:SortKRequireList{}, LblKRequireList{}(K0:SortKRequireList{}, K1:SortKRequire{}))) [functional{}()] // functional
  axiom{}\implies{SortKRequireList{}} (\and{SortKRequireList{}} (LblKRequireList{}(X0:SortKRequireList{}, X1:SortKRequire{}), LblKRequireList{}(Y0:SortKRequireList{}, Y1:SortKRequire{})), LblKRequireList{}(\and{SortKRequireList{}} (X0:SortKRequireList{}, Y0:SortKRequireList{}), \and{SortKRequire{}} (X1:SortKRequire{}, Y1:SortKRequire{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKRequireList{}} (\and{SortKRequireList{}} (LblKRequireList{}(X0:SortKRequireList{}, X1:SortKRequire{}), LblemptyKRequireList{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, LblListItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblMap'Coln'update{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSet'Coln'difference{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblSet'Coln'in{}(K0:SortKItem{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblSetItem{}(K0:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortEKoreKString{}, \equals{SortEKoreKString{}, R} (Val:SortEKoreKString{}, LblString2EKoreKString'LParUndsRParUnds'KORE-HELPERS'Unds'EKoreKString'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblString2Id'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTagContents{}, \equals{SortTagContents{}, R} (Val:SortTagContents{}, LblString2TagContents'LParUndsRParUnds'KORE-HELPERS'Unds'TagContents'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortUpperName{}, \equals{SortUpperName{}, R} (Val:SortUpperName{}, LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(K0:SortSort{}, K1:SortPattern{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{})), Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(K0:SortSort{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{})), Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(K0:SortSort{}, K1:SortSort{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{})), Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortSort{}} (X1:SortSort{}, Y1:SortSort{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(K0:SortSort{}, K1:SortSort{}, K2:SortPattern{}, K3:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{})), Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortSort{}} (X1:SortSort{}, Y1:SortSort{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}), \and{SortPattern{}} (X3:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(K0:SortSort{}, K1:SortVariable{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{})), Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortVariable{}} (X1:SortVariable{}, Y1:SortVariable{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(K0:SortSort{}, K1:SortSort{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{})), Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortSort{}} (X1:SortSort{}, Y1:SortSort{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(K0:SortSort{}, K1:SortVariable{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(Y0:SortSort{}, Y1:SortVariable{}, Y2:SortPattern{})), Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortVariable{}} (X1:SortVariable{}, Y1:SortVariable{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(K0:SortSort{}, K1:SortPattern{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{})), Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(K0:SortSort{}, K1:SortPattern{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{})), Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(K0:SortSort{}, K1:SortSort{}, K2:SortPattern{}, K3:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortSort{}, Y2:SortPattern{}, Y3:SortPattern{})), Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortSort{}} (X1:SortSort{}, Y1:SortSort{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}), \and{SortPattern{}} (X3:SortPattern{}, Y3:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(K0:SortSort{}, K1:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{})), Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(K0:SortSort{}, K1:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{})), Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(K0:SortSort{}, K1:SortPattern{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{})), Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(K0:SortSort{}, K1:SortPattern{}, K2:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Y0:SortSort{}, Y1:SortPattern{}, Y2:SortPattern{})), Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}), \and{SortPattern{}} (X2:SortPattern{}, Y2:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(K0:SortSort{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(Y0:SortSort{})), Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsAnd-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsStar'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPlus'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'-Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'Unds'-Map'UndsUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Map'UndsUnds'MAP'Unds'Bool'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'Set'UndsUnds'SET'Unds'Bool'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Bool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'K'Unds'{}(K0:SortK{}, K1:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \equals{SortDeclCellSet{}, R} (Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Unds'DeclCellSet'Unds'{}(K1:SortDeclCellSet{},K2:SortDeclCellSet{}),K3:SortDeclCellSet{}),Lbl'Unds'DeclCellSet'Unds'{}(K1:SortDeclCellSet{},Lbl'Unds'DeclCellSet'Unds'{}(K2:SortDeclCellSet{},K3:SortDeclCellSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortDeclCellSet{}, R} (Lbl'Unds'DeclCellSet'Unds'{}(K1:SortDeclCellSet{},K2:SortDeclCellSet{}),Lbl'Unds'DeclCellSet'Unds'{}(K2:SortDeclCellSet{},K1:SortDeclCellSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortDeclCellSet{}, R} (Lbl'Unds'DeclCellSet'Unds'{}(K:SortDeclCellSet{},K:SortDeclCellSet{}),K:SortDeclCellSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortDeclCellSet{}, R} (Lbl'Unds'DeclCellSet'Unds'{}(K:SortDeclCellSet{},Lbl'Stop'DeclCellSet{}()),K:SortDeclCellSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortDeclCellSet{}, R} (Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Stop'DeclCellSet{}(),K:SortDeclCellSet{}),K:SortDeclCellSet{}) [unit{}()] // left unit
  axiom{R} \equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Unds'List'Unds'{}(K1:SortList{},K2:SortList{}),K3:SortList{}),Lbl'Unds'List'Unds'{}(K1:SortList{},Lbl'Unds'List'Unds'{}(K2:SortList{},K3:SortList{}))) [assoc{}()] // associativity
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(K:SortList{},Lbl'Stop'List{}()),K:SortList{}) [unit{}()] // right unit
  axiom{R}\equals{SortList{}, R} (Lbl'Unds'List'Unds'{}(Lbl'Stop'List{}(),K:SortList{}),K:SortList{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortList{}, \equals{SortList{}, R} (Val:SortList{}, Lbl'Unds'List'Unds'{}(K0:SortList{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),K3:SortMap{}),Lbl'Unds'Map'Unds'{}(K1:SortMap{},Lbl'Unds'Map'Unds'{}(K2:SortMap{},K3:SortMap{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K1:SortMap{},K2:SortMap{}),Lbl'Unds'Map'Unds'{}(K2:SortMap{},K1:SortMap{})) [comm{}()] // commutativity
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(K:SortMap{},Lbl'Stop'Map{}()),K:SortMap{}) [unit{}()] // right unit
  axiom{R}\equals{SortMap{}, R} (Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),K:SortMap{}),K:SortMap{}) [unit{}()] // left unit
  axiom{R} \equals{SortModCellSet{}, R} (Lbl'Unds'ModCellSet'Unds'{}(Lbl'Unds'ModCellSet'Unds'{}(K1:SortModCellSet{},K2:SortModCellSet{}),K3:SortModCellSet{}),Lbl'Unds'ModCellSet'Unds'{}(K1:SortModCellSet{},Lbl'Unds'ModCellSet'Unds'{}(K2:SortModCellSet{},K3:SortModCellSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortModCellSet{}, R} (Lbl'Unds'ModCellSet'Unds'{}(K1:SortModCellSet{},K2:SortModCellSet{}),Lbl'Unds'ModCellSet'Unds'{}(K2:SortModCellSet{},K1:SortModCellSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortModCellSet{}, R} (Lbl'Unds'ModCellSet'Unds'{}(K:SortModCellSet{},K:SortModCellSet{}),K:SortModCellSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortModCellSet{}, R} (Lbl'Unds'ModCellSet'Unds'{}(K:SortModCellSet{},Lbl'Stop'ModCellSet{}()),K:SortModCellSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortModCellSet{}, R} (Lbl'Unds'ModCellSet'Unds'{}(Lbl'Stop'ModCellSet{}(),K:SortModCellSet{}),K:SortModCellSet{}) [unit{}()] // left unit
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),K3:SortSet{}),Lbl'Unds'Set'Unds'{}(K1:SortSet{},Lbl'Unds'Set'Unds'{}(K2:SortSet{},K3:SortSet{}))) [assoc{}()] // associativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K1:SortSet{},K2:SortSet{}),Lbl'Unds'Set'Unds'{}(K2:SortSet{},K1:SortSet{})) [comm{}()] // commutativity
  axiom{R} \equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},K:SortSet{}),K:SortSet{}) [idem{}()] // idempotency
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(K:SortSet{},Lbl'Stop'Set{}()),K:SortSet{}) [unit{}()] // right unit
  axiom{R}\equals{SortSet{}, R} (Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),K:SortSet{}),K:SortSet{}) [unit{}()] // left unit
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lbl'Unds'Set'Unds'{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsLSqBUnds-LT-'-undef'RSqB'{}(K0:SortMap{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lbl'UndsLSqBUndsRSqB'orDefault'UndsUnds'MAP'Unds'KItem'Unds'Map'Unds'KItem'Unds'KItem{}(K0:SortMap{}, K1:SortKItem{}, K2:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'andThenBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'impliesBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'UndsUnds'LIST'Unds'Bool'Unds'KItem'Unds'List{}(K0:SortKItem{}, K1:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'in'Unds'keys'LParUndsRParUnds'MAP'Unds'Bool'Unds'KItem'Unds'Map{}(K0:SortKItem{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'orElseBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, Lbl'Unds'xorBool'Unds'{}(K0:SortBool{}, K1:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Unds'xorInt'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, Lbl'UndsPipe'-'-GT-Unds'{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'UndsPipe'Int'Unds'{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lblapplication{}(K0:SortSymbol{}, K1:SortPatterns{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), Lblapplication{}(Y0:SortSymbol{}, Y1:SortPatterns{})), Lblapplication{}(\and{SortSymbol{}} (X0:SortSymbol{}, Y0:SortSymbol{}), \and{SortPatterns{}} (X1:SortPatterns{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(K0:SortPattern{}, K1:SortMap{}, K2:SortSet{}, K3:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortMap{}, Y2:SortSet{}, Y3:SortSet{})), LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(\and{SortPattern{}} (X0:SortPattern{}, Y0:SortPattern{}), \and{SortMap{}} (X1:SortMap{}, Y1:SortMap{}), \and{SortSet{}} (X2:SortSet{}, Y2:SortSet{}), \and{SortSet{}} (X3:SortSet{}, Y3:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortRuleContents{}, \equals{SortRuleContents{}, R} (Val:SortRuleContents{}, LblattrsB{}(K0:SortBubble{}, K1:SortKAttributesDeclaration{}))) [functional{}()] // functional
  axiom{}\implies{SortRuleContents{}} (\and{SortRuleContents{}} (LblattrsB{}(X0:SortBubble{}, X1:SortKAttributesDeclaration{}), LblattrsB{}(Y0:SortBubble{}, Y1:SortKAttributesDeclaration{})), LblattrsB{}(\and{SortBubble{}} (X0:SortBubble{}, Y0:SortBubble{}), \and{SortKAttributesDeclaration{}} (X1:SortKAttributesDeclaration{}, Y1:SortKAttributesDeclaration{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortRuleContents{}} (\and{SortRuleContents{}} (LblattrsB{}(X0:SortBubble{}, X1:SortKAttributesDeclaration{}), LblattrsP{}(Y0:SortPattern{}, Y1:SortKAttributesDeclaration{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortRuleContents{}} (\and{SortRuleContents{}} (LblattrsB{}(X0:SortBubble{}, X1:SortKAttributesDeclaration{}), LblnoAttrsB{}(Y0:SortBubble{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortRuleContents{}} (\and{SortRuleContents{}} (LblattrsB{}(X0:SortBubble{}, X1:SortKAttributesDeclaration{}), LblnoAttrsP{}(Y0:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortRuleContents{}, \equals{SortRuleContents{}, R} (Val:SortRuleContents{}, LblattrsP{}(K0:SortPattern{}, K1:SortKAttributesDeclaration{}))) [functional{}()] // functional
  axiom{}\implies{SortRuleContents{}} (\and{SortRuleContents{}} (LblattrsP{}(X0:SortPattern{}, X1:SortKAttributesDeclaration{}), LblattrsP{}(Y0:SortPattern{}, Y1:SortKAttributesDeclaration{})), LblattrsP{}(\and{SortPattern{}} (X0:SortPattern{}, Y0:SortPattern{}), \and{SortKAttributesDeclaration{}} (X1:SortKAttributesDeclaration{}, Y1:SortKAttributesDeclaration{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortRuleContents{}} (\and{SortRuleContents{}} (LblattrsP{}(X0:SortPattern{}, X1:SortKAttributesDeclaration{}), LblnoAttrsB{}(Y0:SortBubble{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortRuleContents{}} (\and{SortRuleContents{}} (LblattrsP{}(X0:SortPattern{}, X1:SortKAttributesDeclaration{}), LblnoAttrsP{}(Y0:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKoreDeclaration{}, \equals{SortKoreDeclaration{}, R} (Val:SortKoreDeclaration{}, LblaxiomDeclaration{}(K0:SortSorts{}, K1:SortPattern{}, K2:SortAttribute{}))) [functional{}()] // functional
  axiom{}\implies{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblaxiomDeclaration{}(X0:SortSorts{}, X1:SortPattern{}, X2:SortAttribute{}), LblaxiomDeclaration{}(Y0:SortSorts{}, Y1:SortPattern{}, Y2:SortAttribute{})), LblaxiomDeclaration{}(\and{SortSorts{}} (X0:SortSorts{}, Y0:SortSorts{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}), \and{SortAttribute{}} (X2:SortAttribute{}, Y2:SortAttribute{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblaxiomDeclaration{}(X0:SortSorts{}, X1:SortPattern{}, X2:SortAttribute{}), Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(Y0:SortSort{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblaxiomDeclaration{}(X0:SortSorts{}, X1:SortPattern{}, X2:SortAttribute{}), Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblaxiomDeclaration{}(X0:SortSorts{}, X1:SortPattern{}, X2:SortAttribute{}), LblkoreImportLbl{}(Y0:SortModuleName{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblaxiomDeclaration{}(X0:SortSorts{}, X1:SortPattern{}, X2:SortAttribute{}), LblsortDeclaration{}(Y0:SortSort{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblaxiomDeclaration{}(X0:SortSorts{}, X1:SortPattern{}, X2:SortAttribute{}), LblsymbolDeclaration{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortVariable{}, \equals{SortVariable{}, R} (Val:SortVariable{}, Lblcast{}(K0:SortVarName{}, K1:SortKSort{}))) [functional{}()] // functional
  axiom{}\implies{SortVariable{}} (\and{SortVariable{}} (Lblcast{}(X0:SortVarName{}, X1:SortKSort{}), Lblcast{}(Y0:SortVarName{}, Y1:SortKSort{})), Lblcast{}(\and{SortVarName{}} (X0:SortVarName{}, Y0:SortVarName{}), \and{SortKSort{}} (X1:SortKSort{}, Y1:SortKSort{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortVariable{}} (\and{SortVariable{}} (Lblcast{}(X0:SortVarName{}, X1:SortKSort{}), LblvarType{}(Y0:SortVariableName{}, Y1:SortSort{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(K0:SortPattern{}, K1:SortSortName{}, K2:SortMap{}, K3:SortSet{}, K4:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortSortName{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPattern{}, Y1:SortSortName{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{})), LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(\and{SortPattern{}} (X0:SortPattern{}, Y0:SortPattern{}), \and{SortSortName{}} (X1:SortSortName{}, Y1:SortSortName{}), \and{SortMap{}} (X2:SortMap{}, Y2:SortMap{}), \and{SortSet{}} (X3:SortSet{}, Y3:SortSet{}), \and{SortSet{}} (X4:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortSortName{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortSortName{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortSortName{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortSortName{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortSortName{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortSortName{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPatterns{}, \equals{SortPatterns{}, R} (Val:SortPatterns{}, LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(K0:SortPatterns{}, K1:SortList{}, K2:SortMap{}, K3:SortSet{}, K4:SortSet{}))) [functional{}()] // functional
  axiom{}\implies{SortPatterns{}} (\and{SortPatterns{}} (LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPatterns{}, X1:SortList{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(Y0:SortPatterns{}, Y1:SortList{}, Y2:SortMap{}, Y3:SortSet{}, Y4:SortSet{})), LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(\and{SortPatterns{}} (X0:SortPatterns{}, Y0:SortPatterns{}), \and{SortList{}} (X1:SortList{}, Y1:SortList{}), \and{SortMap{}} (X2:SortMap{}, Y2:SortMap{}), \and{SortSet{}} (X3:SortSet{}, Y3:SortSet{}), \and{SortSet{}} (X4:SortSet{}, Y4:SortSet{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPatterns{}} (\and{SortPatterns{}} (LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPatterns{}, X1:SortList{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), LblconsPatterns{}(Y0:SortPattern{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPatterns{}} (\and{SortPatterns{}} (LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPatterns{}, X1:SortList{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{}), LbldotPatterns{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(K0:SortPatterns{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(X0:SortPatterns{}), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(Y0:SortPatterns{})), LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(\and{SortPatterns{}} (X0:SortPatterns{}, Y0:SortPatterns{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKItem{}} (\and{SortKItem{}} (LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(X0:SortPatterns{}), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAttrList{}, \equals{SortAttrList{}, R} (Val:SortAttrList{}, LblconsAttrList{}(K0:SortAttr{}, K1:SortAttrList{}))) [functional{}()] // functional
  axiom{}\implies{SortAttrList{}} (\and{SortAttrList{}} (LblconsAttrList{}(X0:SortAttr{}, X1:SortAttrList{}), LblconsAttrList{}(Y0:SortAttr{}, Y1:SortAttrList{})), LblconsAttrList{}(\and{SortAttr{}} (X0:SortAttr{}, Y0:SortAttr{}), \and{SortAttrList{}} (X1:SortAttrList{}, Y1:SortAttrList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAttrList{}} (\and{SortAttrList{}} (LblconsAttrList{}(X0:SortAttr{}, X1:SortAttrList{}), LbldotAttrList{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortDeclarations{}, \equals{SortDeclarations{}, R} (Val:SortDeclarations{}, LblconsDeclarations{}(K0:SortDeclaration{}, K1:SortDeclarations{}))) [functional{}()] // functional
  axiom{}\implies{SortDeclarations{}} (\and{SortDeclarations{}} (LblconsDeclarations{}(X0:SortDeclaration{}, X1:SortDeclarations{}), LblconsDeclarations{}(Y0:SortDeclaration{}, Y1:SortDeclarations{})), LblconsDeclarations{}(\and{SortDeclaration{}} (X0:SortDeclaration{}, Y0:SortDeclaration{}), \and{SortDeclarations{}} (X1:SortDeclarations{}, Y1:SortDeclarations{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortDeclarations{}} (\and{SortDeclarations{}} (LblconsDeclarations{}(X0:SortDeclaration{}, X1:SortDeclarations{}), LbldotDeclarations{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortModules{}, \equals{SortModules{}, R} (Val:SortModules{}, LblconsModules{}(K0:SortModule{}, K1:SortModules{}))) [functional{}()] // functional
  axiom{}\implies{SortModules{}} (\and{SortModules{}} (LblconsModules{}(X0:SortModule{}, X1:SortModules{}), LblconsModules{}(Y0:SortModule{}, Y1:SortModules{})), LblconsModules{}(\and{SortModule{}} (X0:SortModule{}, Y0:SortModule{}), \and{SortModules{}} (X1:SortModules{}, Y1:SortModules{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortModules{}} (\and{SortModules{}} (LblconsModules{}(X0:SortModule{}, X1:SortModules{}), LbldotModules{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPatterns{}, \equals{SortPatterns{}, R} (Val:SortPatterns{}, LblconsPatterns{}(K0:SortPattern{}, K1:SortPatterns{}))) [functional{}()] // functional
  axiom{}\implies{SortPatterns{}} (\and{SortPatterns{}} (LblconsPatterns{}(X0:SortPattern{}, X1:SortPatterns{}), LblconsPatterns{}(Y0:SortPattern{}, Y1:SortPatterns{})), LblconsPatterns{}(\and{SortPattern{}} (X0:SortPattern{}, Y0:SortPattern{}), \and{SortPatterns{}} (X1:SortPatterns{}, Y1:SortPatterns{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPatterns{}} (\and{SortPatterns{}} (LblconsPatterns{}(X0:SortPattern{}, X1:SortPatterns{}), LbldotPatterns{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSorts{}, \equals{SortSorts{}, R} (Val:SortSorts{}, LblconsSorts{}(K0:SortSort{}, K1:SortSorts{}))) [functional{}()] // functional
  axiom{}\implies{SortSorts{}} (\and{SortSorts{}} (LblconsSorts{}(X0:SortSort{}, X1:SortSorts{}), LblconsSorts{}(Y0:SortSort{}, Y1:SortSorts{})), LblconsSorts{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortSorts{}} (X1:SortSorts{}, Y1:SortSorts{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortSorts{}} (\and{SortSorts{}} (LblconsSorts{}(X0:SortSort{}, X1:SortSorts{}), LbldotSorts{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAttrList{}, \equals{SortAttrList{}, R} (Val:SortAttrList{}, LbldotAttrList{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDeclarations{}, \equals{SortDeclarations{}, R} (Val:SortDeclarations{}, LbldotDeclarations{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModules{}, \equals{SortModules{}, R} (Val:SortModules{}, LbldotModules{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPatterns{}, \equals{SortPatterns{}, R} (Val:SortPatterns{}, LbldotPatterns{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSorts{}, \equals{SortSorts{}, R} (Val:SortSorts{}, LbldotSorts{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortTagContents{}, \equals{SortTagContents{}, R} (Val:SortTagContents{}, LbldotTagContents{}())) [functional{}()] // functional
  axiom{}\not{SortTagContents{}} (\and{SortTagContents{}} (LbldotTagContents{}(), LbltagContents{}(Y0:SortTagContent{}, Y1:SortTagContents{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lbldv{}(K0:SortSort{}, K1:SortKoreString{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lbldv{}(X0:SortSort{}, X1:SortKoreString{}), Lbldv{}(Y0:SortSort{}, Y1:SortKoreString{})), Lbldv{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortKoreString{}} (X1:SortKoreString{}, Y1:SortKoreString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbldv{}(X0:SortSort{}, X1:SortKoreString{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbldv{}(X0:SortSort{}, X1:SortKoreString{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbldv{}(X0:SortSort{}, X1:SortKoreString{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbldv{}(X0:SortSort{}, X1:SortKoreString{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lbldv{}(X0:SortSort{}, X1:SortKoreString{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortCommandLine{}, \equals{SortCommandLine{}, R} (Val:SortCommandLine{}, Lblekore-to-kore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}())) [functional{}()] // functional
  axiom{}\not{SortCommandLine{}} (\and{SortCommandLine{}} (Lblekore-to-kore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(), Lblfrontend-to-ekore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCommandLine{}} (\and{SortCommandLine{}} (Lblekore-to-kore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(), Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(Y0:SortPath{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCommandLine{}} (\and{SortCommandLine{}} (Lblekore-to-kore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(), Lblkompile'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKImportList{}, \equals{SortKImportList{}, R} (Val:SortKImportList{}, LblemptyKImportList{}())) [functional{}()] // functional
  axiom{}\not{SortKImportList{}} (\and{SortKImportList{}} (LblemptyKImportList{}(), LblkImportList{}(Y0:SortKImportList{}, Y1:SortKImport{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKRequireList{}, \equals{SortKRequireList{}, R} (Val:SortKRequireList{}, LblemptyKRequireList{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortId{}, \equals{SortId{}, R} (Val:SortId{}, LblfreshId'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCommandLine{}, \equals{SortCommandLine{}, R} (Val:SortCommandLine{}, Lblfrontend-to-ekore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}())) [functional{}()] // functional
  axiom{}\not{SortCommandLine{}} (\and{SortCommandLine{}} (Lblfrontend-to-ekore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(), Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(Y0:SortPath{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortCommandLine{}} (\and{SortCommandLine{}} (Lblfrontend-to-ekore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(), Lblkompile'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKoreDeclaration{}, \equals{SortKoreDeclaration{}, R} (Val:SortKoreDeclaration{}, Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(K0:SortSort{}, K1:SortAttribute{}))) [functional{}()] // functional
  axiom{}\implies{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(X0:SortSort{}, X1:SortAttribute{}), Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(Y0:SortSort{}, Y1:SortAttribute{})), Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortAttribute{}} (X1:SortAttribute{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(X0:SortSort{}, X1:SortAttribute{}), Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(X0:SortSort{}, X1:SortAttribute{}), LblkoreImportLbl{}(Y0:SortModuleName{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(X0:SortSort{}, X1:SortAttribute{}), LblsortDeclaration{}(Y0:SortSort{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(X0:SortSort{}, X1:SortAttribute{}), LblsymbolDeclaration{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKoreDeclaration{}, \equals{SortKoreDeclaration{}, R} (Val:SortKoreDeclaration{}, Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(K0:SortSymbol{}, K1:SortSorts{}, K2:SortSort{}, K3:SortAttribute{}))) [functional{}()] // functional
  axiom{}\implies{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(X0:SortSymbol{}, X1:SortSorts{}, X2:SortSort{}, X3:SortAttribute{}), Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{})), Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(\and{SortSymbol{}} (X0:SortSymbol{}, Y0:SortSymbol{}), \and{SortSorts{}} (X1:SortSorts{}, Y1:SortSorts{}), \and{SortSort{}} (X2:SortSort{}, Y2:SortSort{}), \and{SortAttribute{}} (X3:SortAttribute{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(X0:SortSymbol{}, X1:SortSorts{}, X2:SortSort{}, X3:SortAttribute{}), LblkoreImportLbl{}(Y0:SortModuleName{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(X0:SortSymbol{}, X1:SortSorts{}, X2:SortSort{}, X3:SortAttribute{}), LblsortDeclaration{}(Y0:SortSort{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(X0:SortSymbol{}, X1:SortSorts{}, X2:SortSort{}, X3:SortAttribute{}), LblsymbolDeclaration{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, LblintersectSet'LParUndsCommUndsRParUnds'SET'Unds'Set'Unds'Set'Unds'Set{}(K0:SortSet{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKAttributesDeclaration{}, \equals{SortKAttributesDeclaration{}, R} (Val:SortKAttributesDeclaration{}, LblkAttributesDeclaration{}(K0:SortAttrList{}))) [functional{}()] // functional
  axiom{}\implies{SortKAttributesDeclaration{}} (\and{SortKAttributesDeclaration{}} (LblkAttributesDeclaration{}(X0:SortAttrList{}), LblkAttributesDeclaration{}(Y0:SortAttrList{})), LblkAttributesDeclaration{}(\and{SortAttrList{}} (X0:SortAttrList{}, Y0:SortAttrList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEKoreDeclaration{}, \equals{SortEKoreDeclaration{}, R} (Val:SortEKoreDeclaration{}, LblkConfigurationLbl{}(K0:SortRuleContents{}))) [functional{}()] // functional
  axiom{}\implies{SortEKoreDeclaration{}} (\and{SortEKoreDeclaration{}} (LblkConfigurationLbl{}(X0:SortRuleContents{}), LblkConfigurationLbl{}(Y0:SortRuleContents{})), LblkConfigurationLbl{}(\and{SortRuleContents{}} (X0:SortRuleContents{}, Y0:SortRuleContents{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortEKoreDeclaration{}} (\and{SortEKoreDeclaration{}} (LblkConfigurationLbl{}(X0:SortRuleContents{}), LblkContextLbl{}(Y0:SortRuleContents{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortEKoreDeclaration{}} (\and{SortEKoreDeclaration{}} (LblkConfigurationLbl{}(X0:SortRuleContents{}), LblkRuleLbl{}(Y0:SortRuleContents{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortEKoreDeclaration{}, \equals{SortEKoreDeclaration{}, R} (Val:SortEKoreDeclaration{}, LblkContextLbl{}(K0:SortRuleContents{}))) [functional{}()] // functional
  axiom{}\implies{SortEKoreDeclaration{}} (\and{SortEKoreDeclaration{}} (LblkContextLbl{}(X0:SortRuleContents{}), LblkContextLbl{}(Y0:SortRuleContents{})), LblkContextLbl{}(\and{SortRuleContents{}} (X0:SortRuleContents{}, Y0:SortRuleContents{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortEKoreDeclaration{}} (\and{SortEKoreDeclaration{}} (LblkContextLbl{}(X0:SortRuleContents{}), LblkRuleLbl{}(Y0:SortRuleContents{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKDefinition{}, \equals{SortKDefinition{}, R} (Val:SortKDefinition{}, LblkDefinitionLbl{}(K0:SortKRequireList{}, K1:SortModules{}))) [functional{}()] // functional
  axiom{}\implies{SortKDefinition{}} (\and{SortKDefinition{}} (LblkDefinitionLbl{}(X0:SortKRequireList{}, X1:SortModules{}), LblkDefinitionLbl{}(Y0:SortKRequireList{}, Y1:SortModules{})), LblkDefinitionLbl{}(\and{SortKRequireList{}} (X0:SortKRequireList{}, Y0:SortKRequireList{}), \and{SortModules{}} (X1:SortModules{}, Y1:SortModules{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKProduction{}, \equals{SortKProduction{}, R} (Val:SortKProduction{}, LblkFuncProduction{}(K0:SortTag{}, K1:SortKSortList{}))) [functional{}()] // functional
  axiom{}\implies{SortKProduction{}} (\and{SortKProduction{}} (LblkFuncProduction{}(X0:SortTag{}, X1:SortKSortList{}), LblkFuncProduction{}(Y0:SortTag{}, Y1:SortKSortList{})), LblkFuncProduction{}(\and{SortTag{}} (X0:SortTag{}, Y0:SortTag{}), \and{SortKSortList{}} (X1:SortKSortList{}, Y1:SortKSortList{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKProduction{}} (\and{SortKProduction{}} (LblkFuncProduction{}(X0:SortTag{}, X1:SortKSortList{}), LblkProduction{}(Y0:SortKProductionItem{}, Y1:SortKProduction{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKProduction{}} (\and{SortKProduction{}} (LblkFuncProduction{}(X0:SortTag{}, X1:SortKSortList{}), LblkTupleProduction{}(Y0:SortKSortList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKImport{}, \equals{SortKImport{}, R} (Val:SortKImport{}, LblkImportLbl{}(K0:SortModuleName{}))) [functional{}()] // functional
  axiom{}\implies{SortKImport{}} (\and{SortKImport{}} (LblkImportLbl{}(X0:SortModuleName{}), LblkImportLbl{}(Y0:SortModuleName{})), LblkImportLbl{}(\and{SortModuleName{}} (X0:SortModuleName{}, Y0:SortModuleName{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKImportList{}, \equals{SortKImportList{}, R} (Val:SortKImportList{}, LblkImportList{}(K0:SortKImportList{}, K1:SortKImport{}))) [functional{}()] // functional
  axiom{}\implies{SortKImportList{}} (\and{SortKImportList{}} (LblkImportList{}(X0:SortKImportList{}, X1:SortKImport{}), LblkImportList{}(Y0:SortKImportList{}, Y1:SortKImport{})), LblkImportList{}(\and{SortKImportList{}} (X0:SortKImportList{}, Y0:SortKImportList{}), \and{SortKImport{}} (X1:SortKImport{}, Y1:SortKImport{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortModule{}, \equals{SortModule{}, R} (Val:SortModule{}, LblkModuleLbl{}(K0:SortKModuleName{}, K1:SortOptionalAttributes{}, K2:SortKImportList{}, K3:SortDeclarations{}))) [functional{}()] // functional
  axiom{}\implies{SortModule{}} (\and{SortModule{}} (LblkModuleLbl{}(X0:SortKModuleName{}, X1:SortOptionalAttributes{}, X2:SortKImportList{}, X3:SortDeclarations{}), LblkModuleLbl{}(Y0:SortKModuleName{}, Y1:SortOptionalAttributes{}, Y2:SortKImportList{}, Y3:SortDeclarations{})), LblkModuleLbl{}(\and{SortKModuleName{}} (X0:SortKModuleName{}, Y0:SortKModuleName{}), \and{SortOptionalAttributes{}} (X1:SortOptionalAttributes{}, Y1:SortOptionalAttributes{}), \and{SortKImportList{}} (X2:SortKImportList{}, Y2:SortKImportList{}), \and{SortDeclarations{}} (X3:SortDeclarations{}, Y3:SortDeclarations{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortModule{}} (\and{SortModule{}} (LblkModuleLbl{}(X0:SortKModuleName{}, X1:SortOptionalAttributes{}, X2:SortKImportList{}, X3:SortDeclarations{}), LblkoreModuleLbl{}(Y0:SortModuleName{}, Y1:SortDeclarations{}, Y2:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKPrioritySeq{}, \equals{SortKPrioritySeq{}, R} (Val:SortKPrioritySeq{}, LblkPrioritySeq{}(K0:SortKPrioritySeq{}, K1:SortKNeTagSet{}))) [functional{}()] // functional
  axiom{}\implies{SortKPrioritySeq{}} (\and{SortKPrioritySeq{}} (LblkPrioritySeq{}(X0:SortKPrioritySeq{}, X1:SortKNeTagSet{}), LblkPrioritySeq{}(Y0:SortKPrioritySeq{}, Y1:SortKNeTagSet{})), LblkPrioritySeq{}(\and{SortKPrioritySeq{}} (X0:SortKPrioritySeq{}, Y0:SortKPrioritySeq{}), \and{SortKNeTagSet{}} (X1:SortKNeTagSet{}, Y1:SortKNeTagSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKProduction{}, \equals{SortKProduction{}, R} (Val:SortKProduction{}, LblkProduction{}(K0:SortKProductionItem{}, K1:SortKProduction{}))) [functional{}()] // functional
  axiom{}\implies{SortKProduction{}} (\and{SortKProduction{}} (LblkProduction{}(X0:SortKProductionItem{}, X1:SortKProduction{}), LblkProduction{}(Y0:SortKProductionItem{}, Y1:SortKProduction{})), LblkProduction{}(\and{SortKProductionItem{}} (X0:SortKProductionItem{}, Y0:SortKProductionItem{}), \and{SortKProduction{}} (X1:SortKProduction{}, Y1:SortKProduction{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKProduction{}} (\and{SortKProduction{}} (LblkProduction{}(X0:SortKProductionItem{}, X1:SortKProduction{}), LblkTupleProduction{}(Y0:SortKSortList{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKProductionWAttr{}, \equals{SortKProductionWAttr{}, R} (Val:SortKProductionWAttr{}, LblkProductionWAttr{}(K0:SortKProduction{}, K1:SortOptionalAttributes{}))) [functional{}()] // functional
  axiom{}\implies{SortKProductionWAttr{}} (\and{SortKProductionWAttr{}} (LblkProductionWAttr{}(X0:SortKProduction{}, X1:SortOptionalAttributes{}), LblkProductionWAttr{}(Y0:SortKProduction{}, Y1:SortOptionalAttributes{})), LblkProductionWAttr{}(\and{SortKProduction{}} (X0:SortKProduction{}, Y0:SortKProduction{}), \and{SortOptionalAttributes{}} (X1:SortOptionalAttributes{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKRequire{}, \equals{SortKRequire{}, R} (Val:SortKRequire{}, LblkRequire{}(K0:SortEKoreKString{}))) [functional{}()] // functional
  axiom{}\implies{SortKRequire{}} (\and{SortKRequire{}} (LblkRequire{}(X0:SortEKoreKString{}), LblkRequire{}(Y0:SortEKoreKString{})), LblkRequire{}(\and{SortEKoreKString{}} (X0:SortEKoreKString{}, Y0:SortEKoreKString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortEKoreDeclaration{}, \equals{SortEKoreDeclaration{}, R} (Val:SortEKoreDeclaration{}, LblkRuleLbl{}(K0:SortRuleContents{}))) [functional{}()] // functional
  axiom{}\implies{SortEKoreDeclaration{}} (\and{SortEKoreDeclaration{}} (LblkRuleLbl{}(X0:SortRuleContents{}), LblkRuleLbl{}(Y0:SortRuleContents{})), LblkRuleLbl{}(\and{SortRuleContents{}} (X0:SortRuleContents{}, Y0:SortRuleContents{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKSortList{}, \equals{SortKSortList{}, R} (Val:SortKSortList{}, LblkSortList{}(K0:SortKSortList{}, K1:SortKSort{}))) [functional{}()] // functional
  axiom{}\implies{SortKSortList{}} (\and{SortKSortList{}} (LblkSortList{}(X0:SortKSortList{}, X1:SortKSort{}), LblkSortList{}(Y0:SortKSortList{}, Y1:SortKSort{})), LblkSortList{}(\and{SortKSortList{}} (X0:SortKSortList{}, Y0:SortKSortList{}), \and{SortKSort{}} (X1:SortKSort{}, Y1:SortKSort{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortSyntaxDeclaration{}, \equals{SortSyntaxDeclaration{}, R} (Val:SortSyntaxDeclaration{}, LblkSyntaxLeftLbl{}(K0:SortKNeTagSet{}, K1:SortOptionalAttributes{}))) [functional{}()] // functional
  axiom{}\implies{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxLeftLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxLeftLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{})), LblkSyntaxLeftLbl{}(\and{SortKNeTagSet{}} (X0:SortKNeTagSet{}, Y0:SortKNeTagSet{}), \and{SortOptionalAttributes{}} (X1:SortOptionalAttributes{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxLeftLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxNonAssocLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxLeftLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxPrioritiesLbl{}(Y0:SortKPrioritySeq{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxLeftLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxPriorityLbl{}(Y0:SortKPrioritySeq{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxLeftLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxProductionLbl{}(Y0:SortKSort{}, Y1:SortPrioritySeqBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxLeftLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxRightLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxLeftLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxSortLbl{}(Y0:SortKSort{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSyntaxDeclaration{}, \equals{SortSyntaxDeclaration{}, R} (Val:SortSyntaxDeclaration{}, LblkSyntaxNonAssocLbl{}(K0:SortKNeTagSet{}, K1:SortOptionalAttributes{}))) [functional{}()] // functional
  axiom{}\implies{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxNonAssocLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxNonAssocLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{})), LblkSyntaxNonAssocLbl{}(\and{SortKNeTagSet{}} (X0:SortKNeTagSet{}, Y0:SortKNeTagSet{}), \and{SortOptionalAttributes{}} (X1:SortOptionalAttributes{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxNonAssocLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxPrioritiesLbl{}(Y0:SortKPrioritySeq{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxNonAssocLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxPriorityLbl{}(Y0:SortKPrioritySeq{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxNonAssocLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxProductionLbl{}(Y0:SortKSort{}, Y1:SortPrioritySeqBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxNonAssocLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxRightLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxNonAssocLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxSortLbl{}(Y0:SortKSort{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSyntaxDeclaration{}, \equals{SortSyntaxDeclaration{}, R} (Val:SortSyntaxDeclaration{}, LblkSyntaxPrioritiesLbl{}(K0:SortKPrioritySeq{}, K1:SortOptionalAttributes{}))) [functional{}()] // functional
  axiom{}\implies{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPrioritiesLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxPrioritiesLbl{}(Y0:SortKPrioritySeq{}, Y1:SortOptionalAttributes{})), LblkSyntaxPrioritiesLbl{}(\and{SortKPrioritySeq{}} (X0:SortKPrioritySeq{}, Y0:SortKPrioritySeq{}), \and{SortOptionalAttributes{}} (X1:SortOptionalAttributes{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPrioritiesLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxPriorityLbl{}(Y0:SortKPrioritySeq{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPrioritiesLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxProductionLbl{}(Y0:SortKSort{}, Y1:SortPrioritySeqBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPrioritiesLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxRightLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPrioritiesLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxSortLbl{}(Y0:SortKSort{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSyntaxDeclaration{}, \equals{SortSyntaxDeclaration{}, R} (Val:SortSyntaxDeclaration{}, LblkSyntaxPriorityLbl{}(K0:SortKPrioritySeq{}, K1:SortOptionalAttributes{}))) [functional{}()] // functional
  axiom{}\implies{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPriorityLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxPriorityLbl{}(Y0:SortKPrioritySeq{}, Y1:SortOptionalAttributes{})), LblkSyntaxPriorityLbl{}(\and{SortKPrioritySeq{}} (X0:SortKPrioritySeq{}, Y0:SortKPrioritySeq{}), \and{SortOptionalAttributes{}} (X1:SortOptionalAttributes{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPriorityLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxProductionLbl{}(Y0:SortKSort{}, Y1:SortPrioritySeqBlock{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPriorityLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxRightLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxPriorityLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}), LblkSyntaxSortLbl{}(Y0:SortKSort{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSyntaxDeclaration{}, \equals{SortSyntaxDeclaration{}, R} (Val:SortSyntaxDeclaration{}, LblkSyntaxProductionLbl{}(K0:SortKSort{}, K1:SortPrioritySeqBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxProductionLbl{}(X0:SortKSort{}, X1:SortPrioritySeqBlock{}), LblkSyntaxProductionLbl{}(Y0:SortKSort{}, Y1:SortPrioritySeqBlock{})), LblkSyntaxProductionLbl{}(\and{SortKSort{}} (X0:SortKSort{}, Y0:SortKSort{}), \and{SortPrioritySeqBlock{}} (X1:SortPrioritySeqBlock{}, Y1:SortPrioritySeqBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxProductionLbl{}(X0:SortKSort{}, X1:SortPrioritySeqBlock{}), LblkSyntaxRightLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxProductionLbl{}(X0:SortKSort{}, X1:SortPrioritySeqBlock{}), LblkSyntaxSortLbl{}(Y0:SortKSort{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSyntaxDeclaration{}, \equals{SortSyntaxDeclaration{}, R} (Val:SortSyntaxDeclaration{}, LblkSyntaxRightLbl{}(K0:SortKNeTagSet{}, K1:SortOptionalAttributes{}))) [functional{}()] // functional
  axiom{}\implies{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxRightLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxRightLbl{}(Y0:SortKNeTagSet{}, Y1:SortOptionalAttributes{})), LblkSyntaxRightLbl{}(\and{SortKNeTagSet{}} (X0:SortKNeTagSet{}, Y0:SortKNeTagSet{}), \and{SortOptionalAttributes{}} (X1:SortOptionalAttributes{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxRightLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}), LblkSyntaxSortLbl{}(Y0:SortKSort{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSyntaxDeclaration{}, \equals{SortSyntaxDeclaration{}, R} (Val:SortSyntaxDeclaration{}, LblkSyntaxSortLbl{}(K0:SortKSort{}, K1:SortOptionalAttributes{}))) [functional{}()] // functional
  axiom{}\implies{SortSyntaxDeclaration{}} (\and{SortSyntaxDeclaration{}} (LblkSyntaxSortLbl{}(X0:SortKSort{}, X1:SortOptionalAttributes{}), LblkSyntaxSortLbl{}(Y0:SortKSort{}, Y1:SortOptionalAttributes{})), LblkSyntaxSortLbl{}(\and{SortKSort{}} (X0:SortKSort{}, Y0:SortKSort{}), \and{SortOptionalAttributes{}} (X1:SortOptionalAttributes{}, Y1:SortOptionalAttributes{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKNeTagSet{}, \equals{SortKNeTagSet{}, R} (Val:SortKNeTagSet{}, LblkTagSet{}(K0:SortTag{}, K1:SortKNeTagSet{}))) [functional{}()] // functional
  axiom{}\implies{SortKNeTagSet{}} (\and{SortKNeTagSet{}} (LblkTagSet{}(X0:SortTag{}, X1:SortKNeTagSet{}), LblkTagSet{}(Y0:SortTag{}, Y1:SortKNeTagSet{})), LblkTagSet{}(\and{SortTag{}} (X0:SortTag{}, Y0:SortTag{}), \and{SortKNeTagSet{}} (X1:SortKNeTagSet{}, Y1:SortKNeTagSet{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKProduction{}, \equals{SortKProduction{}, R} (Val:SortKProduction{}, LblkTupleProduction{}(K0:SortKSortList{}))) [functional{}()] // functional
  axiom{}\implies{SortKProduction{}} (\and{SortKProduction{}} (LblkTupleProduction{}(X0:SortKSortList{}), LblkTupleProduction{}(Y0:SortKSortList{})), LblkTupleProduction{}(\and{SortKSortList{}} (X0:SortKSortList{}, Y0:SortKSortList{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCommandLine{}, \equals{SortCommandLine{}, R} (Val:SortCommandLine{}, Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(K0:SortPath{}))) [functional{}()] // functional
  axiom{}\implies{SortCommandLine{}} (\and{SortCommandLine{}} (Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(X0:SortPath{}), Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(Y0:SortPath{})), Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(\and{SortPath{}} (X0:SortPath{}, Y0:SortPath{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortCommandLine{}} (\and{SortCommandLine{}} (Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(X0:SortPath{}), Lblkompile'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortSet{}, \equals{SortSet{}, R} (Val:SortSet{}, Lblkeys'LParUndsRParUnds'MAP'Unds'Set'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCommandLine{}, \equals{SortCommandLine{}, R} (Val:SortCommandLine{}, Lblkompile'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAttribute{}, \equals{SortAttribute{}, R} (Val:SortAttribute{}, LblkoreAttributesLbl{}(K0:SortPatterns{}))) [functional{}()] // functional
  axiom{}\implies{SortAttribute{}} (\and{SortAttribute{}} (LblkoreAttributesLbl{}(X0:SortPatterns{}), LblkoreAttributesLbl{}(Y0:SortPatterns{})), LblkoreAttributesLbl{}(\and{SortPatterns{}} (X0:SortPatterns{}, Y0:SortPatterns{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKoreDefinition{}, \equals{SortKoreDefinition{}, R} (Val:SortKoreDefinition{}, LblkoreDefinitionLbl{}(K0:SortAttribute{}, K1:SortModules{}))) [functional{}()] // functional
  axiom{}\implies{SortKoreDefinition{}} (\and{SortKoreDefinition{}} (LblkoreDefinitionLbl{}(X0:SortAttribute{}, X1:SortModules{}), LblkoreDefinitionLbl{}(Y0:SortAttribute{}, Y1:SortModules{})), LblkoreDefinitionLbl{}(\and{SortAttribute{}} (X0:SortAttribute{}, Y0:SortAttribute{}), \and{SortModules{}} (X1:SortModules{}, Y1:SortModules{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKoreDeclaration{}, \equals{SortKoreDeclaration{}, R} (Val:SortKoreDeclaration{}, LblkoreImportLbl{}(K0:SortModuleName{}, K1:SortAttribute{}))) [functional{}()] // functional
  axiom{}\implies{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblkoreImportLbl{}(X0:SortModuleName{}, X1:SortAttribute{}), LblkoreImportLbl{}(Y0:SortModuleName{}, Y1:SortAttribute{})), LblkoreImportLbl{}(\and{SortModuleName{}} (X0:SortModuleName{}, Y0:SortModuleName{}), \and{SortAttribute{}} (X1:SortAttribute{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblkoreImportLbl{}(X0:SortModuleName{}, X1:SortAttribute{}), LblsortDeclaration{}(Y0:SortSort{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblkoreImportLbl{}(X0:SortModuleName{}, X1:SortAttribute{}), LblsymbolDeclaration{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortModule{}, \equals{SortModule{}, R} (Val:SortModule{}, LblkoreModuleLbl{}(K0:SortModuleName{}, K1:SortDeclarations{}, K2:SortAttribute{}))) [functional{}()] // functional
  axiom{}\implies{SortModule{}} (\and{SortModule{}} (LblkoreModuleLbl{}(X0:SortModuleName{}, X1:SortDeclarations{}, X2:SortAttribute{}), LblkoreModuleLbl{}(Y0:SortModuleName{}, Y1:SortDeclarations{}, Y2:SortAttribute{})), LblkoreModuleLbl{}(\and{SortModuleName{}} (X0:SortModuleName{}, Y0:SortModuleName{}), \and{SortDeclarations{}} (X1:SortDeclarations{}, Y1:SortDeclarations{}), \and{SortAttribute{}} (X2:SortAttribute{}, Y2:SortAttribute{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lblkrewrite{}(K0:SortPattern{}, K1:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lblkrewrite{}(X0:SortPattern{}, X1:SortPattern{}), Lblkrewrite{}(Y0:SortPattern{}, Y1:SortPattern{})), Lblkrewrite{}(\and{SortPattern{}} (X0:SortPattern{}, Y0:SortPattern{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblkrewrite{}(X0:SortPattern{}, X1:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblkrewrite{}(X0:SortPattern{}, X1:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblkrewrite{}(X0:SortPattern{}, X1:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblkrewrite{}(X0:SortPattern{}, X1:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lblksequence{}(K0:SortPattern{}, K1:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lblksequence{}(X0:SortPattern{}, X1:SortPattern{}), Lblksequence{}(Y0:SortPattern{}, Y1:SortPattern{})), Lblksequence{}(\and{SortPattern{}} (X0:SortPattern{}, Y0:SortPattern{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblksequence{}(X0:SortPattern{}, X1:SortPattern{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblksequence{}(X0:SortPattern{}, X1:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblksequence{}(X0:SortPattern{}, X1:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lblktoken{}(K0:SortEKoreKString{}, K1:SortEKoreKString{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lblktoken{}(X0:SortEKoreKString{}, X1:SortEKoreKString{}), Lblktoken{}(Y0:SortEKoreKString{}, Y1:SortEKoreKString{})), Lblktoken{}(\and{SortEKoreKString{}} (X0:SortEKoreKString{}, Y0:SortEKoreKString{}), \and{SortEKoreKString{}} (X1:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblktoken{}(X0:SortEKoreKString{}, X1:SortEKoreKString{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (Lblktoken{}(X0:SortEKoreKString{}, X1:SortEKoreKString{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAssocAttribute{}, \equals{SortAssocAttribute{}, R} (Val:SortAssocAttribute{}, LblleftAttribute{}())) [functional{}()] // functional
  axiom{}\not{SortAssocAttribute{}} (\and{SortAssocAttribute{}} (LblleftAttribute{}(), LblnoAttribute{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAssocAttribute{}} (\and{SortAssocAttribute{}} (LblleftAttribute{}(), LblnonAssocAttribute{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAssocAttribute{}} (\and{SortAssocAttribute{}} (LblleftAttribute{}(), LblrightAttribute{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(K0:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKProductionItem{}, \equals{SortKProductionItem{}, R} (Val:SortKProductionItem{}, LbllistProdLbl{}(K0:SortKSort{}, K1:SortEKoreKString{}))) [functional{}()] // functional
  axiom{}\implies{SortKProductionItem{}} (\and{SortKProductionItem{}} (LbllistProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LbllistProdLbl{}(Y0:SortKSort{}, Y1:SortEKoreKString{})), LbllistProdLbl{}(\and{SortKSort{}} (X0:SortKSort{}, Y0:SortKSort{}), \and{SortEKoreKString{}} (X1:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LbllistProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LblneListProdLbl{}(Y0:SortKSort{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LbllistProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LblnonTerminalLbl{}(Y0:SortKSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LbllistProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LblregexTerminalLbl{}(Y0:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LbllistProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LblterminalLbl{}(Y0:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(K0:SortInt{}, K1:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSort{}, \equals{SortSort{}, R} (Val:SortSort{}, LblnameParam{}(K0:SortSortName{}, K1:SortSorts{}))) [functional{}()] // functional
  axiom{}\implies{SortSort{}} (\and{SortSort{}} (LblnameParam{}(X0:SortSortName{}, X1:SortSorts{}), LblnameParam{}(Y0:SortSortName{}, Y1:SortSorts{})), LblnameParam{}(\and{SortSortName{}} (X0:SortSortName{}, Y0:SortSortName{}), \and{SortSorts{}} (X1:SortSorts{}, Y1:SortSorts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKProductionItem{}, \equals{SortKProductionItem{}, R} (Val:SortKProductionItem{}, LblneListProdLbl{}(K0:SortKSort{}, K1:SortEKoreKString{}))) [functional{}()] // functional
  axiom{}\implies{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblneListProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LblneListProdLbl{}(Y0:SortKSort{}, Y1:SortEKoreKString{})), LblneListProdLbl{}(\and{SortKSort{}} (X0:SortKSort{}, Y0:SortKSort{}), \and{SortEKoreKString{}} (X1:SortEKoreKString{}, Y1:SortEKoreKString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblneListProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LblnonTerminalLbl{}(Y0:SortKSort{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblneListProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LblregexTerminalLbl{}(Y0:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblneListProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}), LblterminalLbl{}(Y0:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAssocAttribute{}, \equals{SortAssocAttribute{}, R} (Val:SortAssocAttribute{}, LblnoAttribute{}())) [functional{}()] // functional
  axiom{}\not{SortAssocAttribute{}} (\and{SortAssocAttribute{}} (LblnoAttribute{}(), LblnonAssocAttribute{}())) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortAssocAttribute{}} (\and{SortAssocAttribute{}} (LblnoAttribute{}(), LblrightAttribute{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAttributesCellOpt{}, \equals{SortAttributesCellOpt{}, R} (Val:SortAttributesCellOpt{}, LblnoAttributesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortRuleContents{}, \equals{SortRuleContents{}, R} (Val:SortRuleContents{}, LblnoAttrsB{}(K0:SortBubble{}))) [functional{}()] // functional
  axiom{}\implies{SortRuleContents{}} (\and{SortRuleContents{}} (LblnoAttrsB{}(X0:SortBubble{}), LblnoAttrsB{}(Y0:SortBubble{})), LblnoAttrsB{}(\and{SortBubble{}} (X0:SortBubble{}, Y0:SortBubble{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortRuleContents{}} (\and{SortRuleContents{}} (LblnoAttrsB{}(X0:SortBubble{}), LblnoAttrsP{}(Y0:SortPattern{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortRuleContents{}, \equals{SortRuleContents{}, R} (Val:SortRuleContents{}, LblnoAttrsP{}(K0:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortRuleContents{}} (\and{SortRuleContents{}} (LblnoAttrsP{}(X0:SortPattern{}), LblnoAttrsP{}(Y0:SortPattern{})), LblnoAttrsP{}(\and{SortPattern{}} (X0:SortPattern{}, Y0:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortCellNameCellOpt{}, \equals{SortCellNameCellOpt{}, R} (Val:SortCellNameCellOpt{}, LblnoCellNameCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortCollectedCellOpt{}, \equals{SortCollectedCellOpt{}, R} (Val:SortCollectedCellOpt{}, LblnoCollectedCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortConfigGrammarCellOpt{}, \equals{SortConfigGrammarCellOpt{}, R} (Val:SortConfigGrammarCellOpt{}, LblnoConfigGrammarCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortConfigInfoCellOpt{}, \equals{SortConfigInfoCellOpt{}, R} (Val:SortConfigInfoCellOpt{}, LblnoConfigInfoCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDeclarationsCellOpt{}, \equals{SortDeclarationsCellOpt{}, R} (Val:SortDeclarationsCellOpt{}, LblnoDeclarationsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefinitionCellOpt{}, \equals{SortDefinitionCellOpt{}, R} (Val:SortDefinitionCellOpt{}, LblnoDefinitionCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDefnAttrsCellOpt{}, \equals{SortDefnAttrsCellOpt{}, R} (Val:SortDefnAttrsCellOpt{}, LblnoDefnAttrsCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortExitCodeCellOpt{}, \equals{SortExitCodeCellOpt{}, R} (Val:SortExitCodeCellOpt{}, LblnoExitCodeCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortOptionalAttributes{}, \equals{SortOptionalAttributes{}, R} (Val:SortOptionalAttributes{}, LblnoKAttributesDeclaration{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKCellOpt{}, \equals{SortKCellOpt{}, R} (Val:SortKCellOpt{}, LblnoKCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKinkDeployedDirCellOpt{}, \equals{SortKinkDeployedDirCellOpt{}, R} (Val:SortKinkDeployedDirCellOpt{}, LblnoKinkDeployedDirCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortModulesCellOpt{}, \equals{SortModulesCellOpt{}, R} (Val:SortModulesCellOpt{}, LblnoModulesCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortNameCellOpt{}, \equals{SortNameCellOpt{}, R} (Val:SortNameCellOpt{}, LblnoNameCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortParserGeneratorCellOpt{}, \equals{SortParserGeneratorCellOpt{}, R} (Val:SortParserGeneratorCellOpt{}, LblnoParserGeneratorCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPrgGrammarCellOpt{}, \equals{SortPrgGrammarCellOpt{}, R} (Val:SortPrgGrammarCellOpt{}, LblnoPrgGrammarCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortRuleGrammarCellOpt{}, \equals{SortRuleGrammarCellOpt{}, R} (Val:SortRuleGrammarCellOpt{}, LblnoRuleGrammarCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortSCellOpt{}, \equals{SortSCellOpt{}, R} (Val:SortSCellOpt{}, LblnoSCell{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortAssocAttribute{}, \equals{SortAssocAttribute{}, R} (Val:SortAssocAttribute{}, LblnonAssocAttribute{}())) [functional{}()] // functional
  axiom{}\not{SortAssocAttribute{}} (\and{SortAssocAttribute{}} (LblnonAssocAttribute{}(), LblrightAttribute{}())) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortKProductionItem{}, \equals{SortKProductionItem{}, R} (Val:SortKProductionItem{}, LblnonTerminalLbl{}(K0:SortKSort{}))) [functional{}()] // functional
  axiom{}\implies{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblnonTerminalLbl{}(X0:SortKSort{}), LblnonTerminalLbl{}(Y0:SortKSort{})), LblnonTerminalLbl{}(\and{SortKSort{}} (X0:SortKSort{}, Y0:SortKSort{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblnonTerminalLbl{}(X0:SortKSort{}), LblregexTerminalLbl{}(Y0:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblnonTerminalLbl{}(X0:SortKSort{}), LblterminalLbl{}(Y0:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortBool{}, \equals{SortBool{}, R} (Val:SortBool{}, LblnotBool'Unds'{}(K0:SortBool{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortDeclaration{}, \equals{SortDeclaration{}, R} (Val:SortDeclaration{}, LblnullDecl'Unds'KINK-CONFIGURATION'Unds'Declaration{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKItem{}, \equals{SortKItem{}, R} (Val:SortKItem{}, Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(K0:SortKItem{}, K1:SortKItem{}))) [functional{}()] // functional
  axiom{}\implies{SortKItem{}} (\and{SortKItem{}} (Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(X0:SortKItem{}, X1:SortKItem{}), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Y0:SortKItem{}, Y1:SortKItem{})), Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(\and{SortKItem{}} (X0:SortKItem{}, Y0:SortKItem{}), \and{SortKItem{}} (X1:SortKItem{}, Y1:SortKItem{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortPrioritySeqBlock{}, \equals{SortPrioritySeqBlock{}, R} (Val:SortPrioritySeqBlock{}, LblprioritySeqBlock{}(K0:SortPrioritySeqBlock{}, K1:SortAssocAttribute{}, K2:SortProdBlock{}))) [functional{}()] // functional
  axiom{}\implies{SortPrioritySeqBlock{}} (\and{SortPrioritySeqBlock{}} (LblprioritySeqBlock{}(X0:SortPrioritySeqBlock{}, X1:SortAssocAttribute{}, X2:SortProdBlock{}), LblprioritySeqBlock{}(Y0:SortPrioritySeqBlock{}, Y1:SortAssocAttribute{}, Y2:SortProdBlock{})), LblprioritySeqBlock{}(\and{SortPrioritySeqBlock{}} (X0:SortPrioritySeqBlock{}, Y0:SortPrioritySeqBlock{}), \and{SortAssocAttribute{}} (X1:SortAssocAttribute{}, Y1:SortAssocAttribute{}), \and{SortProdBlock{}} (X2:SortProdBlock{}, Y2:SortProdBlock{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortProdBlock{}, \equals{SortProdBlock{}, R} (Val:SortProdBlock{}, LblprodBlock{}(K0:SortProdBlock{}, K1:SortKProductionWAttr{}))) [functional{}()] // functional
  axiom{}\implies{SortProdBlock{}} (\and{SortProdBlock{}} (LblprodBlock{}(X0:SortProdBlock{}, X1:SortKProductionWAttr{}), LblprodBlock{}(Y0:SortProdBlock{}, Y1:SortKProductionWAttr{})), LblprodBlock{}(\and{SortProdBlock{}} (X0:SortProdBlock{}, Y0:SortProdBlock{}), \and{SortKProductionWAttr{}} (X1:SortKProductionWAttr{}, Y1:SortKProductionWAttr{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKProductionItem{}, \equals{SortKProductionItem{}, R} (Val:SortKProductionItem{}, LblregexTerminalLbl{}(K0:SortEKoreKString{}))) [functional{}()] // functional
  axiom{}\implies{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblregexTerminalLbl{}(X0:SortEKoreKString{}), LblregexTerminalLbl{}(Y0:SortEKoreKString{})), LblregexTerminalLbl{}(\and{SortEKoreKString{}} (X0:SortEKoreKString{}, Y0:SortEKoreKString{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblregexTerminalLbl{}(X0:SortEKoreKString{}), LblterminalLbl{}(Y0:SortEKoreKString{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblremoveAll'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Set{}(K0:SortMap{}, K1:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(K0:SortString{}, K1:SortString{}, K2:SortString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, LblrequiresClause{}(K0:SortPattern{}, K1:SortPattern{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (LblrequiresClause{}(X0:SortPattern{}, X1:SortPattern{}), LblrequiresClause{}(Y0:SortPattern{}, Y1:SortPattern{})), LblrequiresClause{}(\and{SortPattern{}} (X0:SortPattern{}, Y0:SortPattern{}), \and{SortPattern{}} (X1:SortPattern{}, Y1:SortPattern{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortPattern{}} (\and{SortPattern{}} (LblrequiresClause{}(X0:SortPattern{}, X1:SortPattern{}), Lblwrappedklabel{}(Y0:SortKLabel2{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortAssocAttribute{}, \equals{SortAssocAttribute{}, R} (Val:SortAssocAttribute{}, LblrightAttribute{}())) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'LIST'Unds'Int'Unds'List{}(K0:SortList{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'MAP'Unds'Int'Unds'Map{}(K0:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lblsize'LParUndsRParUnds'SET'Unds'Int'Unds'Set{}(K0:SortSet{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKoreDeclaration{}, \equals{SortKoreDeclaration{}, R} (Val:SortKoreDeclaration{}, LblsortDeclaration{}(K0:SortSort{}, K1:SortAttribute{}))) [functional{}()] // functional
  axiom{}\implies{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblsortDeclaration{}(X0:SortSort{}, X1:SortAttribute{}), LblsortDeclaration{}(Y0:SortSort{}, Y1:SortAttribute{})), LblsortDeclaration{}(\and{SortSort{}} (X0:SortSort{}, Y0:SortSort{}), \and{SortAttribute{}} (X1:SortAttribute{}, Y1:SortAttribute{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblsortDeclaration{}(X0:SortSort{}, X1:SortAttribute{}), LblsymbolDeclaration{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(K0:SortString{}, K1:SortInt{}, K2:SortInt{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortKoreDeclaration{}, \equals{SortKoreDeclaration{}, R} (Val:SortKoreDeclaration{}, LblsymbolDeclaration{}(K0:SortSymbol{}, K1:SortSorts{}, K2:SortSort{}, K3:SortAttribute{}))) [functional{}()] // functional
  axiom{}\implies{SortKoreDeclaration{}} (\and{SortKoreDeclaration{}} (LblsymbolDeclaration{}(X0:SortSymbol{}, X1:SortSorts{}, X2:SortSort{}, X3:SortAttribute{}), LblsymbolDeclaration{}(Y0:SortSymbol{}, Y1:SortSorts{}, Y2:SortSort{}, Y3:SortAttribute{})), LblsymbolDeclaration{}(\and{SortSymbol{}} (X0:SortSymbol{}, Y0:SortSymbol{}), \and{SortSorts{}} (X1:SortSorts{}, Y1:SortSorts{}), \and{SortSort{}} (X2:SortSort{}, Y2:SortSort{}), \and{SortAttribute{}} (X3:SortAttribute{}, Y3:SortAttribute{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortSymbol{}, \equals{SortSymbol{}, R} (Val:SortSymbol{}, LblsymbolSorts{}(K0:SortSymbolName{}, K1:SortSorts{}))) [functional{}()] // functional
  axiom{}\implies{SortSymbol{}} (\and{SortSymbol{}} (LblsymbolSorts{}(X0:SortSymbolName{}, X1:SortSorts{}), LblsymbolSorts{}(Y0:SortSymbolName{}, Y1:SortSorts{})), LblsymbolSorts{}(\and{SortSymbolName{}} (X0:SortSymbolName{}, Y0:SortSymbolName{}), \and{SortSorts{}} (X1:SortSorts{}, Y1:SortSorts{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortAttr{}, \equals{SortAttr{}, R} (Val:SortAttr{}, LbltagContent{}(K0:SortKEY{}, K1:SortTagContents{}))) [functional{}()] // functional
  axiom{}\implies{SortAttr{}} (\and{SortAttr{}} (LbltagContent{}(X0:SortKEY{}, X1:SortTagContents{}), LbltagContent{}(Y0:SortKEY{}, Y1:SortTagContents{})), LbltagContent{}(\and{SortKEY{}} (X0:SortKEY{}, Y0:SortKEY{}), \and{SortTagContents{}} (X1:SortTagContents{}, Y1:SortTagContents{}))) [constructor{}()] // no confusion same constructor
  axiom{}\not{SortAttr{}} (\and{SortAttr{}} (LbltagContent{}(X0:SortKEY{}, X1:SortTagContents{}), LbltagSimple{}(Y0:SortKEY{}))) [constructor{}()] // no confusion different constructors
  axiom{R} \exists{R} (Val:SortTagContents{}, \equals{SortTagContents{}, R} (Val:SortTagContents{}, LbltagContents{}(K0:SortTagContent{}, K1:SortTagContents{}))) [functional{}()] // functional
  axiom{}\implies{SortTagContents{}} (\and{SortTagContents{}} (LbltagContents{}(X0:SortTagContent{}, X1:SortTagContents{}), LbltagContents{}(Y0:SortTagContent{}, Y1:SortTagContents{})), LbltagContents{}(\and{SortTagContent{}} (X0:SortTagContent{}, Y0:SortTagContent{}), \and{SortTagContents{}} (X1:SortTagContents{}, Y1:SortTagContents{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortAttr{}, \equals{SortAttr{}, R} (Val:SortAttr{}, LbltagSimple{}(K0:SortKEY{}))) [functional{}()] // functional
  axiom{}\implies{SortAttr{}} (\and{SortAttr{}} (LbltagSimple{}(X0:SortKEY{}), LbltagSimple{}(Y0:SortKEY{})), LbltagSimple{}(\and{SortKEY{}} (X0:SortKEY{}, Y0:SortKEY{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortKProductionItem{}, \equals{SortKProductionItem{}, R} (Val:SortKProductionItem{}, LblterminalLbl{}(K0:SortEKoreKString{}))) [functional{}()] // functional
  axiom{}\implies{SortKProductionItem{}} (\and{SortKProductionItem{}} (LblterminalLbl{}(X0:SortEKoreKString{}), LblterminalLbl{}(Y0:SortEKoreKString{})), LblterminalLbl{}(\and{SortEKoreKString{}} (X0:SortEKoreKString{}, Y0:SortEKoreKString{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbltoken2String'LParUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'String'Unds'Path{}(K0:SortPath{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbltoken2String'LParUndsRParUnds'PARSE-CONFIG'Unds'String'Unds'KoreString{}(K0:SortKoreString{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, Lbltoken2String'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'String'Unds'UpperName{}(K0:SortUpperName{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LbltokenToString'LParUndsRParUnds'COMMAND-LINE'Unds'String'Unds'Any{}(K0:SortAny{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortString{}, \equals{SortString{}, R} (Val:SortString{}, LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(K0:SortK{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortMap{}, \equals{SortMap{}, R} (Val:SortMap{}, LblupdateMap'LParUndsCommUndsRParUnds'MAP'Unds'Map'Unds'Map'Unds'Map{}(K0:SortMap{}, K1:SortMap{}))) [functional{}()] // functional
  axiom{R} \exists{R} (Val:SortVariable{}, \equals{SortVariable{}, R} (Val:SortVariable{}, LblvarType{}(K0:SortVariableName{}, K1:SortSort{}))) [functional{}()] // functional
  axiom{}\implies{SortVariable{}} (\and{SortVariable{}} (LblvarType{}(X0:SortVariableName{}, X1:SortSort{}), LblvarType{}(Y0:SortVariableName{}, Y1:SortSort{})), LblvarType{}(\and{SortVariableName{}} (X0:SortVariableName{}, Y0:SortVariableName{}), \and{SortSort{}} (X1:SortSort{}, Y1:SortSort{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortPattern{}, \equals{SortPattern{}, R} (Val:SortPattern{}, Lblwrappedklabel{}(K0:SortKLabel2{}))) [functional{}()] // functional
  axiom{}\implies{SortPattern{}} (\and{SortPattern{}} (Lblwrappedklabel{}(X0:SortKLabel2{}), Lblwrappedklabel{}(Y0:SortKLabel2{})), Lblwrappedklabel{}(\and{SortKLabel2{}} (X0:SortKLabel2{}, Y0:SortKLabel2{}))) [constructor{}()] // no confusion same constructor
  axiom{R} \exists{R} (Val:SortInt{}, \equals{SortInt{}, R} (Val:SortInt{}, Lbl'Tild'Int'Unds'{}(K0:SortInt{}))) [functional{}()] // functional
  axiom{} \or{SortParserGeneratorCellOpt{}} (LblnoParserGeneratorCell{}(), \or{SortParserGeneratorCellOpt{}} (\exists{SortParserGeneratorCellOpt{}} (Val:SortParserGeneratorCell{}, inj{SortParserGeneratorCell{}, SortParserGeneratorCellOpt{}} (Val:SortParserGeneratorCell{})), \bottom{SortParserGeneratorCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDefnAttrsCellOpt{}} (LblnoDefnAttrsCell{}(), \or{SortDefnAttrsCellOpt{}} (\exists{SortDefnAttrsCellOpt{}} (Val:SortDefnAttrsCell{}, inj{SortDefnAttrsCell{}, SortDefnAttrsCellOpt{}} (Val:SortDefnAttrsCell{})), \bottom{SortDefnAttrsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortLowerName{}} (\top{SortLowerName{}}(), \bottom{SortLowerName{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortDeclarationsCell{}} (\exists{SortDeclarationsCell{}} (X0:SortDeclCellSet{}, Lbl'-LT-'declarations'-GT-'{}(X0:SortDeclCellSet{})), \bottom{SortDeclarationsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKModuleName{}} (\exists{SortKModuleName{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortKModuleName{}} (Val:SortUpperName{})), \bottom{SortKModuleName{}}()) [constructor{}()] // no junk
  axiom{} \or{SortEKoreDeclaration{}} (\exists{SortEKoreDeclaration{}} (X0:SortRuleContents{}, LblkConfigurationLbl{}(X0:SortRuleContents{})), \or{SortEKoreDeclaration{}} (\exists{SortEKoreDeclaration{}} (X0:SortRuleContents{}, LblkContextLbl{}(X0:SortRuleContents{})), \or{SortEKoreDeclaration{}} (\exists{SortEKoreDeclaration{}} (X0:SortRuleContents{}, LblkRuleLbl{}(X0:SortRuleContents{})), \or{SortEKoreDeclaration{}} (\exists{SortEKoreDeclaration{}} (Val:SortSyntaxDeclaration{}, inj{SortSyntaxDeclaration{}, SortEKoreDeclaration{}} (Val:SortSyntaxDeclaration{})), \bottom{SortEKoreDeclaration{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortKImport{}} (\exists{SortKImport{}} (X0:SortModuleName{}, LblkImportLbl{}(X0:SortModuleName{})), \bottom{SortKImport{}}()) [constructor{}()] // no junk
  axiom{} \or{SortPath{}} (\top{SortPath{}}(), \bottom{SortPath{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKSort{}} (\exists{SortKSort{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortKSort{}} (Val:SortUpperName{})), \bottom{SortKSort{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKRequire{}} (\exists{SortKRequire{}} (X0:SortEKoreKString{}, LblkRequire{}(X0:SortEKoreKString{})), \bottom{SortKRequire{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVarName{}} (\exists{SortVarName{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortVarName{}} (Val:SortUpperName{})), \bottom{SortVarName{}}()) [constructor{}()] // no junk
  axiom{} \or{SortString{}} (\top{SortString{}}(), \bottom{SortString{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortNameCellOpt{}} (LblnoNameCell{}(), \or{SortNameCellOpt{}} (\exists{SortNameCellOpt{}} (Val:SortNameCell{}, inj{SortNameCell{}, SortNameCellOpt{}} (Val:SortNameCell{})), \bottom{SortNameCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortList{}}() [constructor{}()] // no junk
  axiom{} \or{SortKinkDeployedDirCell{}} (\exists{SortKinkDeployedDirCell{}} (X0:SortString{}, Lbl'-LT-'kinkDeployedDir'-GT-'{}(X0:SortString{})), \bottom{SortKinkDeployedDirCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortPgm{}} (\exists{SortPgm{}} (Val:SortAny{}, inj{SortAny{}, SortPgm{}} (Val:SortAny{})), \bottom{SortPgm{}}()) [constructor{}()] // no junk
  axiom{} \or{SortOptionalAttributes{}} (LblnoKAttributesDeclaration{}(), \or{SortOptionalAttributes{}} (\exists{SortOptionalAttributes{}} (Val:SortKAttributesDeclaration{}, inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}} (Val:SortKAttributesDeclaration{})), \bottom{SortOptionalAttributes{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKRequireList{}} (\exists{SortKRequireList{}} (X0:SortKRequireList{}, \exists{SortKRequireList{}} (X1:SortKRequire{}, LblKRequireList{}(X0:SortKRequireList{}, X1:SortKRequire{}))), \or{SortKRequireList{}} (LblemptyKRequireList{}(), \bottom{SortKRequireList{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStrategy{}} (Lbl'Hash'STUCK{}(), \or{SortStrategy{}} (\exists{SortStrategy{}} (X0:Sort'Hash'RuleTag{}, Lbl'Hash'appliedRule{}(X0:Sort'Hash'RuleTag{})), \or{SortStrategy{}} (\exists{SortStrategy{}} (X0:Sort'Hash'RuleTag{}, Lbl'Hash'applyRule{}(X0:Sort'Hash'RuleTag{})), \bottom{SortStrategy{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortModules{}} (\exists{SortModules{}} (X0:SortModule{}, \exists{SortModules{}} (X1:SortModules{}, LblconsModules{}(X0:SortModule{}, X1:SortModules{}))), \or{SortModules{}} (LbldotModules{}(), \bottom{SortModules{}}())) [constructor{}()] // no junk
  axiom{} \or{SortConfigGrammarCellOpt{}} (LblnoConfigGrammarCell{}(), \or{SortConfigGrammarCellOpt{}} (\exists{SortConfigGrammarCellOpt{}} (Val:SortConfigGrammarCell{}, inj{SortConfigGrammarCell{}, SortConfigGrammarCellOpt{}} (Val:SortConfigGrammarCell{})), \bottom{SortConfigGrammarCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortParserGeneratorCellFragment{}} (\exists{SortParserGeneratorCellFragment{}} (X0:SortPrgGrammarCellOpt{}, \exists{SortParserGeneratorCellFragment{}} (X1:SortConfigGrammarCellOpt{}, \exists{SortParserGeneratorCellFragment{}} (X2:SortRuleGrammarCellOpt{}, Lbl'-LT-'parserGenerator'-GT-'-fragment{}(X0:SortPrgGrammarCellOpt{}, X1:SortConfigGrammarCellOpt{}, X2:SortRuleGrammarCellOpt{})))), \bottom{SortParserGeneratorCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortPattern{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, Lbl'Bash'bottom'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{})), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortSort{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'ceil'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortSort{}, \exists{SortPattern{}} (X2:SortPattern{}, \exists{SortPattern{}} (X3:SortPattern{}, Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}))))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortVariable{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'exists'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortSort{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'floor'LBraUndsCommUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortVariable{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'forall'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Variable'Unds'Pattern{}(X0:SortSort{}, X1:SortVariable{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortPattern{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'iff'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortPattern{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'implies'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortSort{}, \exists{SortPattern{}} (X2:SortPattern{}, \exists{SortPattern{}} (X3:SortPattern{}, Lbl'Bash'in'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortSort{}, X2:SortPattern{}, X3:SortPattern{}))))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortPattern{}, Lbl'Bash'next'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortPattern{}, Lbl'Bash'not'LBraUndsRBraLParUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortPattern{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'or'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortPattern{}, \exists{SortPattern{}} (X2:SortPattern{}, Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(X0:SortSort{}, X1:SortPattern{}, X2:SortPattern{})))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(X0:SortSort{})), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSymbol{}, \exists{SortPattern{}} (X1:SortPatterns{}, Lblapplication{}(X0:SortSymbol{}, X1:SortPatterns{}))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortPattern{}, \exists{SortPattern{}} (X1:SortMap{}, \exists{SortPattern{}} (X2:SortSet{}, \exists{SortPattern{}} (X3:SortSet{}, LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortMap{}, X2:SortSet{}, X3:SortSet{}))))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortPattern{}, \exists{SortPattern{}} (X1:SortSortName{}, \exists{SortPattern{}} (X2:SortMap{}, \exists{SortPattern{}} (X3:SortSet{}, \exists{SortPattern{}} (X4:SortSet{}, LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPattern{}, X1:SortSortName{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{})))))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortSort{}, \exists{SortPattern{}} (X1:SortKoreString{}, Lbldv{}(X0:SortSort{}, X1:SortKoreString{}))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortPattern{}, \exists{SortPattern{}} (X1:SortPattern{}, Lblkrewrite{}(X0:SortPattern{}, X1:SortPattern{}))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortPattern{}, \exists{SortPattern{}} (X1:SortPattern{}, Lblksequence{}(X0:SortPattern{}, X1:SortPattern{}))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortEKoreKString{}, \exists{SortPattern{}} (X1:SortEKoreKString{}, Lblktoken{}(X0:SortEKoreKString{}, X1:SortEKoreKString{}))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortPattern{}, \exists{SortPattern{}} (X1:SortPattern{}, LblrequiresClause{}(X0:SortPattern{}, X1:SortPattern{}))), \or{SortPattern{}} (\exists{SortPattern{}} (X0:SortKLabel2{}, Lblwrappedklabel{}(X0:SortKLabel2{})), \or{SortPattern{}} (\exists{SortPattern{}} (Val:SortVarName{}, inj{SortVarName{}, SortPattern{}} (Val:SortVarName{})), \or{SortPattern{}} (\exists{SortPattern{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortPattern{}} (Val:SortUpperName{})), \or{SortPattern{}} (\exists{SortPattern{}} (Val:SortVariable{}, inj{SortVariable{}, SortPattern{}} (Val:SortVariable{})), \bottom{SortPattern{}}()))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortParserGeneratorCell{}} (\exists{SortParserGeneratorCell{}} (X0:SortPrgGrammarCell{}, \exists{SortParserGeneratorCell{}} (X1:SortConfigGrammarCell{}, \exists{SortParserGeneratorCell{}} (X2:SortRuleGrammarCell{}, Lbl'-LT-'parserGenerator'-GT-'{}(X0:SortPrgGrammarCell{}, X1:SortConfigGrammarCell{}, X2:SortRuleGrammarCell{})))), \bottom{SortParserGeneratorCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKDefinition{}} (\exists{SortKDefinition{}} (X0:SortKRequireList{}, \exists{SortKDefinition{}} (X1:SortModules{}, LblkDefinitionLbl{}(X0:SortKRequireList{}, X1:SortModules{}))), \bottom{SortKDefinition{}}()) [constructor{}()] // no junk
  axiom{} \or{SortPrioritySeqBlock{}} (\exists{SortPrioritySeqBlock{}} (X0:SortPrioritySeqBlock{}, \exists{SortPrioritySeqBlock{}} (X1:SortAssocAttribute{}, \exists{SortPrioritySeqBlock{}} (X2:SortProdBlock{}, LblprioritySeqBlock{}(X0:SortPrioritySeqBlock{}, X1:SortAssocAttribute{}, X2:SortProdBlock{})))), \or{SortPrioritySeqBlock{}} (\exists{SortPrioritySeqBlock{}} (Val:SortProdBlock{}, inj{SortProdBlock{}, SortPrioritySeqBlock{}} (Val:SortProdBlock{})), \or{SortPrioritySeqBlock{}} (\exists{SortPrioritySeqBlock{}} (Val:SortKProductionWAttr{}, inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}} (Val:SortKProductionWAttr{})), \bottom{SortPrioritySeqBlock{}}()))) [constructor{}()] // no junk
  axiom{} \bottom{SortBubbleItem{}}() [constructor{}()] // no junk
  axiom{} \or{SortDeclarationsCellFragment{}} (\exists{SortDeclarationsCellFragment{}} (X0:SortDeclCellSet{}, Lbl'-LT-'declarations'-GT-'-fragment{}(X0:SortDeclCellSet{})), \bottom{SortDeclarationsCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKConfigVar{}} (\top{SortKConfigVar{}}(), \bottom{SortKConfigVar{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortString{}, inj{SortString{}, SortIOString{}} (Val:SortString{})), \or{SortIOString{}} (\exists{SortIOString{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOString{}} (Val:SortIOError{})), \bottom{SortIOString{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortEKoreKString{}}() [constructor{}()] // no junk
  axiom{} \bottom{SortDollarName{}}() [constructor{}()] // no junk
  axiom{} \or{SortModCellSet{}} (\exists{SortModCellSet{}} (Val:SortModCell{}, inj{SortModCell{}, SortModCellSet{}} (Val:SortModCell{})), \bottom{SortModCellSet{}}()) [constructor{}()] // no junk
  axiom{} \or{SortRuleGrammarCell{}} (\exists{SortRuleGrammarCell{}} (X0:SortSet{}, Lbl'-LT-'ruleGrammar'-GT-'{}(X0:SortSet{})), \bottom{SortRuleGrammarCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKoreDeclaration{}} (\exists{SortKoreDeclaration{}} (X0:SortSorts{}, \exists{SortKoreDeclaration{}} (X1:SortPattern{}, \exists{SortKoreDeclaration{}} (X2:SortAttribute{}, LblaxiomDeclaration{}(X0:SortSorts{}, X1:SortPattern{}, X2:SortAttribute{})))), \or{SortKoreDeclaration{}} (\exists{SortKoreDeclaration{}} (X0:SortSort{}, \exists{SortKoreDeclaration{}} (X1:SortAttribute{}, Lblhook-sort'UndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Sort'Unds'Attribute{}(X0:SortSort{}, X1:SortAttribute{}))), \or{SortKoreDeclaration{}} (\exists{SortKoreDeclaration{}} (X0:SortSymbol{}, \exists{SortKoreDeclaration{}} (X1:SortSorts{}, \exists{SortKoreDeclaration{}} (X2:SortSort{}, \exists{SortKoreDeclaration{}} (X3:SortAttribute{}, Lblhook-symbol'UndsLParUndsRParColnUndsUndsUnds'KORE-COMMON'Unds'KoreDeclaration'Unds'Symbol'Unds'Sorts'Unds'Sort'Unds'Attribute{}(X0:SortSymbol{}, X1:SortSorts{}, X2:SortSort{}, X3:SortAttribute{}))))), \or{SortKoreDeclaration{}} (\exists{SortKoreDeclaration{}} (X0:SortModuleName{}, \exists{SortKoreDeclaration{}} (X1:SortAttribute{}, LblkoreImportLbl{}(X0:SortModuleName{}, X1:SortAttribute{}))), \or{SortKoreDeclaration{}} (\exists{SortKoreDeclaration{}} (X0:SortSort{}, \exists{SortKoreDeclaration{}} (X1:SortAttribute{}, LblsortDeclaration{}(X0:SortSort{}, X1:SortAttribute{}))), \or{SortKoreDeclaration{}} (\exists{SortKoreDeclaration{}} (X0:SortSymbol{}, \exists{SortKoreDeclaration{}} (X1:SortSorts{}, \exists{SortKoreDeclaration{}} (X2:SortSort{}, \exists{SortKoreDeclaration{}} (X3:SortAttribute{}, LblsymbolDeclaration{}(X0:SortSymbol{}, X1:SortSorts{}, X2:SortSort{}, X3:SortAttribute{}))))), \bottom{SortKoreDeclaration{}}())))))) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCellFragment{}} (\exists{SortGeneratedTopCellFragment{}} (X0:SortKCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X1:SortDefinitionCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X2:SortExitCodeCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X3:SortSCellOpt{}, \exists{SortGeneratedTopCellFragment{}} (X4:SortKinkDeployedDirCellOpt{}, Lbl'-LT-'generatedTop'-GT-'-fragment{}(X0:SortKCellOpt{}, X1:SortDefinitionCellOpt{}, X2:SortExitCodeCellOpt{}, X3:SortSCellOpt{}, X4:SortKinkDeployedDirCellOpt{})))))), \bottom{SortGeneratedTopCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortModCell{}} (\exists{SortModCell{}} (X0:SortNameCell{}, \exists{SortModCell{}} (X1:SortAttributesCell{}, \exists{SortModCell{}} (X2:SortDeclarationsCell{}, \exists{SortModCell{}} (X3:SortParserGeneratorCell{}, Lbl'-LT-'mod'-GT-'{}(X0:SortNameCell{}, X1:SortAttributesCell{}, X2:SortDeclarationsCell{}, X3:SortParserGeneratorCell{}))))), \bottom{SortModCell{}}()) [constructor{}()] // no junk
  axiom{} \or{Sort'Hash'UpperId{}} (\top{Sort'Hash'UpperId{}}(), \bottom{Sort'Hash'UpperId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \bottom{SortSet{}}() [constructor{}()] // no junk
  axiom{} \or{SortDefnAttrsCell{}} (\exists{SortDefnAttrsCell{}} (X0:SortPatterns{}, Lbl'-LT-'defnAttrs'-GT-'{}(X0:SortPatterns{})), \bottom{SortDefnAttrsCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortSort{}} (\exists{SortSort{}} (X0:SortSortName{}, \exists{SortSort{}} (X1:SortSorts{}, LblnameParam{}(X0:SortSortName{}, X1:SortSorts{}))), \or{SortSort{}} (\exists{SortSort{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortSort{}} (Val:SortLowerName{})), \or{SortSort{}} (\exists{SortSort{}} (Val:SortKSort{}, inj{SortKSort{}, SortSort{}} (Val:SortKSort{})), \or{SortSort{}} (\exists{SortSort{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortSort{}} (Val:SortUpperName{})), \or{SortSort{}} (\exists{SortSort{}} (Val:SortSortName{}, inj{SortSortName{}, SortSort{}} (Val:SortSortName{})), \bottom{SortSort{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortKSortList{}} (\exists{SortKSortList{}} (X0:SortKSortList{}, \exists{SortKSortList{}} (X1:SortKSort{}, LblkSortList{}(X0:SortKSortList{}, X1:SortKSort{}))), \or{SortKSortList{}} (\exists{SortKSortList{}} (Val:SortKSort{}, inj{SortKSort{}, SortKSortList{}} (Val:SortKSort{})), \or{SortKSortList{}} (\exists{SortKSortList{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortKSortList{}} (Val:SortUpperName{})), \bottom{SortKSortList{}}()))) [constructor{}()] // no junk
  axiom{} \or{Sort'Hash'RuleTag{}} (\exists{Sort'Hash'RuleTag{}} (Val:Sort'Hash'KVariable{}, inj{Sort'Hash'KVariable{}, Sort'Hash'RuleTag{}} (Val:Sort'Hash'KVariable{})), \or{Sort'Hash'RuleTag{}} (\exists{Sort'Hash'RuleTag{}} (Val:Sort'Hash'LowerId{}, inj{Sort'Hash'LowerId{}, Sort'Hash'RuleTag{}} (Val:Sort'Hash'LowerId{})), \bottom{Sort'Hash'RuleTag{}}())) [constructor{}()] // no junk
  axiom{} \or{SortAttributesCell{}} (\exists{SortAttributesCell{}} (X0:SortPatterns{}, Lbl'-LT-'attributes'-GT-'{}(X0:SortPatterns{})), \bottom{SortAttributesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTagContent{}} (\exists{SortTagContent{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortTagContent{}} (Val:SortLowerName{})), \or{SortTagContent{}} (\exists{SortTagContent{}} (Val:SortEKoreKString{}, inj{SortEKoreKString{}, SortTagContent{}} (Val:SortEKoreKString{})), \or{SortTagContent{}} (\exists{SortTagContent{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortTagContent{}} (Val:SortUpperName{})), \or{SortTagContent{}} (\exists{SortTagContent{}} (Val:SortNumbers{}, inj{SortNumbers{}, SortTagContent{}} (Val:SortNumbers{})), \bottom{SortTagContent{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortAttrList{}} (\exists{SortAttrList{}} (X0:SortAttr{}, \exists{SortAttrList{}} (X1:SortAttrList{}, LblconsAttrList{}(X0:SortAttr{}, X1:SortAttrList{}))), \or{SortAttrList{}} (LbldotAttrList{}(), \bottom{SortAttrList{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDefinitionCell{}} (\exists{SortDefinitionCell{}} (X0:SortDefnAttrsCell{}, \exists{SortDefinitionCell{}} (X1:SortModulesCell{}, \exists{SortDefinitionCell{}} (X2:SortConfigInfoCell{}, Lbl'-LT-'definition'-GT-'{}(X0:SortDefnAttrsCell{}, X1:SortModulesCell{}, X2:SortConfigInfoCell{})))), \bottom{SortDefinitionCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTag{}} (\exists{SortTag{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortTag{}} (Val:SortLowerName{})), \or{SortTag{}} (\exists{SortTag{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortTag{}} (Val:SortUpperName{})), \bottom{SortTag{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDeclCellSet{}} (\exists{SortDeclCellSet{}} (Val:SortDeclCell{}, inj{SortDeclCell{}, SortDeclCellSet{}} (Val:SortDeclCell{})), \bottom{SortDeclCellSet{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCell{}} (\exists{SortKCell{}} (X0:SortK{}, Lbl'-LT-'k'-GT-'{}(X0:SortK{})), \bottom{SortKCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortUpperName{}}() [constructor{}()] // no junk
  axiom{} \or{SortPrgGrammarCell{}} (\exists{SortPrgGrammarCell{}} (X0:SortSet{}, Lbl'-LT-'prgGrammar'-GT-'{}(X0:SortSet{})), \bottom{SortPrgGrammarCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortProdBlock{}} (\exists{SortProdBlock{}} (X0:SortProdBlock{}, \exists{SortProdBlock{}} (X1:SortKProductionWAttr{}, LblprodBlock{}(X0:SortProdBlock{}, X1:SortKProductionWAttr{}))), \or{SortProdBlock{}} (\exists{SortProdBlock{}} (Val:SortKProductionWAttr{}, inj{SortKProductionWAttr{}, SortProdBlock{}} (Val:SortKProductionWAttr{})), \bottom{SortProdBlock{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortBubble{}}() [constructor{}()] // no junk
  axiom{} \or{SortModulesCellOpt{}} (LblnoModulesCell{}(), \or{SortModulesCellOpt{}} (\exists{SortModulesCellOpt{}} (Val:SortModulesCell{}, inj{SortModulesCell{}, SortModulesCellOpt{}} (Val:SortModulesCell{})), \bottom{SortModulesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortSymbol{}} (\exists{SortSymbol{}} (X0:SortSymbolName{}, \exists{SortSymbol{}} (X1:SortSorts{}, LblsymbolSorts{}(X0:SortSymbolName{}, X1:SortSorts{}))), \or{SortSymbol{}} (\exists{SortSymbol{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortSymbol{}} (Val:SortLowerName{})), \or{SortSymbol{}} (\exists{SortSymbol{}} (Val:SortKLabel2{}, inj{SortKLabel2{}, SortSymbol{}} (Val:SortKLabel2{})), \bottom{SortSymbol{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortFloat{}} (\top{SortFloat{}}(), \bottom{SortFloat{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortDeclCell{}} (\exists{SortDeclCell{}} (X0:SortDeclaration{}, Lbl'-LT-'decl'-GT-'{}(X0:SortDeclaration{})), \bottom{SortDeclCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOInt{}} (Val:SortIOError{})), \or{SortIOInt{}} (\exists{SortIOInt{}} (Val:SortInt{}, inj{SortInt{}, SortIOInt{}} (Val:SortInt{})), \bottom{SortIOInt{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortAny{}}() [constructor{}()] // no junk
  axiom{} \or{SortConfigInfoCellOpt{}} (LblnoConfigInfoCell{}(), \or{SortConfigInfoCellOpt{}} (\exists{SortConfigInfoCellOpt{}} (Val:SortConfigInfoCell{}, inj{SortConfigInfoCell{}, SortConfigInfoCellOpt{}} (Val:SortConfigInfoCell{})), \bottom{SortConfigInfoCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortId{}} (\top{SortId{}}(), \bottom{SortId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortSCellOpt{}} (LblnoSCell{}(), \or{SortSCellOpt{}} (\exists{SortSCellOpt{}} (Val:SortSCell{}, inj{SortSCell{}, SortSCellOpt{}} (Val:SortSCell{})), \bottom{SortSCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIOFile{}} (\exists{SortIOFile{}} (X0:SortString{}, \exists{SortIOFile{}} (X1:SortInt{}, Lbl'Hash'tempFile{}(X0:SortString{}, X1:SortInt{}))), \or{SortIOFile{}} (\exists{SortIOFile{}} (Val:SortIOError{}, inj{SortIOError{}, SortIOFile{}} (Val:SortIOError{})), \bottom{SortIOFile{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortMap{}}() [constructor{}()] // no junk
  axiom{} \or{SortSyntaxDeclaration{}} (\exists{SortSyntaxDeclaration{}} (X0:SortKNeTagSet{}, \exists{SortSyntaxDeclaration{}} (X1:SortOptionalAttributes{}, LblkSyntaxLeftLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}))), \or{SortSyntaxDeclaration{}} (\exists{SortSyntaxDeclaration{}} (X0:SortKNeTagSet{}, \exists{SortSyntaxDeclaration{}} (X1:SortOptionalAttributes{}, LblkSyntaxNonAssocLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}))), \or{SortSyntaxDeclaration{}} (\exists{SortSyntaxDeclaration{}} (X0:SortKPrioritySeq{}, \exists{SortSyntaxDeclaration{}} (X1:SortOptionalAttributes{}, LblkSyntaxPrioritiesLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}))), \or{SortSyntaxDeclaration{}} (\exists{SortSyntaxDeclaration{}} (X0:SortKPrioritySeq{}, \exists{SortSyntaxDeclaration{}} (X1:SortOptionalAttributes{}, LblkSyntaxPriorityLbl{}(X0:SortKPrioritySeq{}, X1:SortOptionalAttributes{}))), \or{SortSyntaxDeclaration{}} (\exists{SortSyntaxDeclaration{}} (X0:SortKSort{}, \exists{SortSyntaxDeclaration{}} (X1:SortPrioritySeqBlock{}, LblkSyntaxProductionLbl{}(X0:SortKSort{}, X1:SortPrioritySeqBlock{}))), \or{SortSyntaxDeclaration{}} (\exists{SortSyntaxDeclaration{}} (X0:SortKNeTagSet{}, \exists{SortSyntaxDeclaration{}} (X1:SortOptionalAttributes{}, LblkSyntaxRightLbl{}(X0:SortKNeTagSet{}, X1:SortOptionalAttributes{}))), \or{SortSyntaxDeclaration{}} (\exists{SortSyntaxDeclaration{}} (X0:SortKSort{}, \exists{SortSyntaxDeclaration{}} (X1:SortOptionalAttributes{}, LblkSyntaxSortLbl{}(X0:SortKSort{}, X1:SortOptionalAttributes{}))), \bottom{SortSyntaxDeclaration{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortDeclaration{}} (LblnullDecl'Unds'KINK-CONFIGURATION'Unds'Declaration{}(), \or{SortDeclaration{}} (\exists{SortDeclaration{}} (Val:SortEKoreDeclaration{}, inj{SortEKoreDeclaration{}, SortDeclaration{}} (Val:SortEKoreDeclaration{})), \or{SortDeclaration{}} (\exists{SortDeclaration{}} (Val:SortKoreDeclaration{}, inj{SortKoreDeclaration{}, SortDeclaration{}} (Val:SortKoreDeclaration{})), \or{SortDeclaration{}} (\exists{SortDeclaration{}} (Val:SortSyntaxDeclaration{}, inj{SortSyntaxDeclaration{}, SortDeclaration{}} (Val:SortSyntaxDeclaration{})), \bottom{SortDeclaration{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortKProductionItem{}} (\exists{SortKProductionItem{}} (X0:SortKSort{}, \exists{SortKProductionItem{}} (X1:SortEKoreKString{}, LbllistProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}))), \or{SortKProductionItem{}} (\exists{SortKProductionItem{}} (X0:SortKSort{}, \exists{SortKProductionItem{}} (X1:SortEKoreKString{}, LblneListProdLbl{}(X0:SortKSort{}, X1:SortEKoreKString{}))), \or{SortKProductionItem{}} (\exists{SortKProductionItem{}} (X0:SortKSort{}, LblnonTerminalLbl{}(X0:SortKSort{})), \or{SortKProductionItem{}} (\exists{SortKProductionItem{}} (X0:SortEKoreKString{}, LblregexTerminalLbl{}(X0:SortEKoreKString{})), \or{SortKProductionItem{}} (\exists{SortKProductionItem{}} (X0:SortEKoreKString{}, LblterminalLbl{}(X0:SortEKoreKString{})), \bottom{SortKProductionItem{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortBool{}} (\top{SortBool{}}(), \bottom{SortBool{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortCellNameCellOpt{}} (LblnoCellNameCell{}(), \or{SortCellNameCellOpt{}} (\exists{SortCellNameCellOpt{}} (Val:SortCellNameCell{}, inj{SortCellNameCell{}, SortCellNameCellOpt{}} (Val:SortCellNameCell{})), \bottom{SortCellNameCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortConfigInfoCell{}} (\exists{SortConfigInfoCell{}} (X0:SortCellNameCell{}, \exists{SortConfigInfoCell{}} (X1:SortCollectedCell{}, Lbl'-LT-'configInfo'-GT-'{}(X0:SortCellNameCell{}, X1:SortCollectedCell{}))), \bottom{SortConfigInfoCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortAttr{}} (\exists{SortAttr{}} (X0:SortKEY{}, \exists{SortAttr{}} (X1:SortTagContents{}, LbltagContent{}(X0:SortKEY{}, X1:SortTagContents{}))), \or{SortAttr{}} (\exists{SortAttr{}} (X0:SortKEY{}, LbltagSimple{}(X0:SortKEY{})), \bottom{SortAttr{}}())) [constructor{}()] // no junk
  axiom{} \or{SortNameCell{}} (\exists{SortNameCell{}} (X0:SortModuleName{}, Lbl'-LT-'name'-GT-'{}(X0:SortModuleName{})), \bottom{SortNameCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCellNameCell{}} (\exists{SortCellNameCell{}} (X0:SortMap{}, Lbl'-LT-'cellName'-GT-'{}(X0:SortMap{})), \bottom{SortCellNameCell{}}()) [constructor{}()] // no junk
  axiom{} \bottom{Sort'Hash'KVariable{}}() [constructor{}()] // no junk
  axiom{} \bottom{SortBacktickName{}}() [constructor{}()] // no junk
  axiom{} \or{SortKPrioritySeq{}} (\exists{SortKPrioritySeq{}} (X0:SortKPrioritySeq{}, \exists{SortKPrioritySeq{}} (X1:SortKNeTagSet{}, LblkPrioritySeq{}(X0:SortKPrioritySeq{}, X1:SortKNeTagSet{}))), \or{SortKPrioritySeq{}} (\exists{SortKPrioritySeq{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortKPrioritySeq{}} (Val:SortLowerName{})), \or{SortKPrioritySeq{}} (\exists{SortKPrioritySeq{}} (Val:SortTag{}, inj{SortTag{}, SortKPrioritySeq{}} (Val:SortTag{})), \or{SortKPrioritySeq{}} (\exists{SortKPrioritySeq{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortKPrioritySeq{}} (Val:SortUpperName{})), \or{SortKPrioritySeq{}} (\exists{SortKPrioritySeq{}} (Val:SortKNeTagSet{}, inj{SortKNeTagSet{}, SortKPrioritySeq{}} (Val:SortKNeTagSet{})), \bottom{SortKPrioritySeq{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortModulesCell{}} (\exists{SortModulesCell{}} (X0:SortModCellSet{}, Lbl'-LT-'modules'-GT-'{}(X0:SortModCellSet{})), \bottom{SortModulesCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortAttribute{}} (\exists{SortAttribute{}} (X0:SortPatterns{}, LblkoreAttributesLbl{}(X0:SortPatterns{})), \bottom{SortAttribute{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKinkDeployedDirCellOpt{}} (LblnoKinkDeployedDirCell{}(), \or{SortKinkDeployedDirCellOpt{}} (\exists{SortKinkDeployedDirCellOpt{}} (Val:SortKinkDeployedDirCell{}, inj{SortKinkDeployedDirCell{}, SortKinkDeployedDirCellOpt{}} (Val:SortKinkDeployedDirCell{})), \bottom{SortKinkDeployedDirCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCell{}} (\exists{SortCell{}} (Val:SortDeclarationsCell{}, inj{SortDeclarationsCell{}, SortCell{}} (Val:SortDeclarationsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortKinkDeployedDirCell{}, inj{SortKinkDeployedDirCell{}, SortCell{}} (Val:SortKinkDeployedDirCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortParserGeneratorCell{}, inj{SortParserGeneratorCell{}, SortCell{}} (Val:SortParserGeneratorCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortRuleGrammarCell{}, inj{SortRuleGrammarCell{}, SortCell{}} (Val:SortRuleGrammarCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModCell{}, inj{SortModCell{}, SortCell{}} (Val:SortModCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortDefnAttrsCell{}, inj{SortDefnAttrsCell{}, SortCell{}} (Val:SortDefnAttrsCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortAttributesCell{}, inj{SortAttributesCell{}, SortCell{}} (Val:SortAttributesCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortDefinitionCell{}, inj{SortDefinitionCell{}, SortCell{}} (Val:SortDefinitionCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortKCell{}, inj{SortKCell{}, SortCell{}} (Val:SortKCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortPrgGrammarCell{}, inj{SortPrgGrammarCell{}, SortCell{}} (Val:SortPrgGrammarCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortDeclCell{}, inj{SortDeclCell{}, SortCell{}} (Val:SortDeclCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortConfigInfoCell{}, inj{SortConfigInfoCell{}, SortCell{}} (Val:SortConfigInfoCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortNameCell{}, inj{SortNameCell{}, SortCell{}} (Val:SortNameCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortCellNameCell{}, inj{SortCellNameCell{}, SortCell{}} (Val:SortCellNameCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortModulesCell{}, inj{SortModulesCell{}, SortCell{}} (Val:SortModulesCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortSCell{}, inj{SortSCell{}, SortCell{}} (Val:SortSCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortExitCodeCell{}, inj{SortExitCodeCell{}, SortCell{}} (Val:SortExitCodeCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortCollectedCell{}, inj{SortCollectedCell{}, SortCell{}} (Val:SortCollectedCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortCell{}} (Val:SortGeneratedTopCell{})), \or{SortCell{}} (\exists{SortCell{}} (Val:SortConfigGrammarCell{}, inj{SortConfigGrammarCell{}, SortCell{}} (Val:SortConfigGrammarCell{})), \bottom{SortCell{}}())))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortKProductionWAttr{}} (\exists{SortKProductionWAttr{}} (X0:SortKProduction{}, \exists{SortKProductionWAttr{}} (X1:SortOptionalAttributes{}, LblkProductionWAttr{}(X0:SortKProduction{}, X1:SortOptionalAttributes{}))), \bottom{SortKProductionWAttr{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKNeTagSet{}} (\exists{SortKNeTagSet{}} (X0:SortTag{}, \exists{SortKNeTagSet{}} (X1:SortKNeTagSet{}, LblkTagSet{}(X0:SortTag{}, X1:SortKNeTagSet{}))), \or{SortKNeTagSet{}} (\exists{SortKNeTagSet{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortKNeTagSet{}} (Val:SortLowerName{})), \or{SortKNeTagSet{}} (\exists{SortKNeTagSet{}} (Val:SortTag{}, inj{SortTag{}, SortKNeTagSet{}} (Val:SortTag{})), \or{SortKNeTagSet{}} (\exists{SortKNeTagSet{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortKNeTagSet{}} (Val:SortUpperName{})), \bottom{SortKNeTagSet{}}())))) [constructor{}()] // no junk
  axiom{} \or{Sort'Hash'LowerId{}} (\top{Sort'Hash'LowerId{}}(), \bottom{Sort'Hash'LowerId{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \bottom{SortKoreString{}}() [constructor{}()] // no junk
  axiom{} \or{SortRuleContents{}} (\exists{SortRuleContents{}} (X0:SortBubble{}, \exists{SortRuleContents{}} (X1:SortKAttributesDeclaration{}, LblattrsB{}(X0:SortBubble{}, X1:SortKAttributesDeclaration{}))), \or{SortRuleContents{}} (\exists{SortRuleContents{}} (X0:SortPattern{}, \exists{SortRuleContents{}} (X1:SortKAttributesDeclaration{}, LblattrsP{}(X0:SortPattern{}, X1:SortKAttributesDeclaration{}))), \or{SortRuleContents{}} (\exists{SortRuleContents{}} (X0:SortBubble{}, LblnoAttrsB{}(X0:SortBubble{})), \or{SortRuleContents{}} (\exists{SortRuleContents{}} (X0:SortPattern{}, LblnoAttrsP{}(X0:SortPattern{})), \or{SortRuleContents{}} (\exists{SortRuleContents{}} (Val:SortBubbleWithAttr{}, inj{SortBubbleWithAttr{}, SortRuleContents{}} (Val:SortBubbleWithAttr{})), \bottom{SortRuleContents{}}()))))) [constructor{}()] // no junk
  axiom{} \or{SortConfigInfoCellFragment{}} (\exists{SortConfigInfoCellFragment{}} (X0:SortCellNameCellOpt{}, \exists{SortConfigInfoCellFragment{}} (X1:SortCollectedCellOpt{}, Lbl'-LT-'configInfo'-GT-'-fragment{}(X0:SortCellNameCellOpt{}, X1:SortCollectedCellOpt{}))), \bottom{SortConfigInfoCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortTagContents{}} (LbldotTagContents{}(), \or{SortTagContents{}} (\exists{SortTagContents{}} (X0:SortTagContent{}, \exists{SortTagContents{}} (X1:SortTagContents{}, LbltagContents{}(X0:SortTagContent{}, X1:SortTagContents{}))), \bottom{SortTagContents{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDeclarations{}} (\exists{SortDeclarations{}} (X0:SortDeclaration{}, \exists{SortDeclarations{}} (X1:SortDeclarations{}, LblconsDeclarations{}(X0:SortDeclaration{}, X1:SortDeclarations{}))), \or{SortDeclarations{}} (LbldotDeclarations{}(), \bottom{SortDeclarations{}}())) [constructor{}()] // no junk
  axiom{} \or{SortIOError{}} (Lbl'Hash'E2BIG{}(), \or{SortIOError{}} (Lbl'Hash'EACCES{}(), \or{SortIOError{}} (Lbl'Hash'EADDRINUSE{}(), \or{SortIOError{}} (Lbl'Hash'EADDRNOTAVAIL{}(), \or{SortIOError{}} (Lbl'Hash'EAFNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EAGAIN{}(), \or{SortIOError{}} (Lbl'Hash'EALREADY{}(), \or{SortIOError{}} (Lbl'Hash'EBADF{}(), \or{SortIOError{}} (Lbl'Hash'EBUSY{}(), \or{SortIOError{}} (Lbl'Hash'ECHILD{}(), \or{SortIOError{}} (Lbl'Hash'ECONNABORTED{}(), \or{SortIOError{}} (Lbl'Hash'ECONNREFUSED{}(), \or{SortIOError{}} (Lbl'Hash'ECONNRESET{}(), \or{SortIOError{}} (Lbl'Hash'EDEADLK{}(), \or{SortIOError{}} (Lbl'Hash'EDESTADDRREQ{}(), \or{SortIOError{}} (Lbl'Hash'EDOM{}(), \or{SortIOError{}} (Lbl'Hash'EEXIST{}(), \or{SortIOError{}} (Lbl'Hash'EFAULT{}(), \or{SortIOError{}} (Lbl'Hash'EFBIG{}(), \or{SortIOError{}} (Lbl'Hash'EHOSTDOWN{}(), \or{SortIOError{}} (Lbl'Hash'EHOSTUNREACH{}(), \or{SortIOError{}} (Lbl'Hash'EINPROGRESS{}(), \or{SortIOError{}} (Lbl'Hash'EINTR{}(), \or{SortIOError{}} (Lbl'Hash'EINVAL{}(), \or{SortIOError{}} (Lbl'Hash'EIO{}(), \or{SortIOError{}} (Lbl'Hash'EISCONN{}(), \or{SortIOError{}} (Lbl'Hash'EISDIR{}(), \or{SortIOError{}} (Lbl'Hash'ELOOP{}(), \or{SortIOError{}} (Lbl'Hash'EMFILE{}(), \or{SortIOError{}} (Lbl'Hash'EMLINK{}(), \or{SortIOError{}} (Lbl'Hash'EMSGSIZE{}(), \or{SortIOError{}} (Lbl'Hash'ENAMETOOLONG{}(), \or{SortIOError{}} (Lbl'Hash'ENETDOWN{}(), \or{SortIOError{}} (Lbl'Hash'ENETRESET{}(), \or{SortIOError{}} (Lbl'Hash'ENETUNREACH{}(), \or{SortIOError{}} (Lbl'Hash'ENFILE{}(), \or{SortIOError{}} (Lbl'Hash'ENOBUFS{}(), \or{SortIOError{}} (Lbl'Hash'ENODEV{}(), \or{SortIOError{}} (Lbl'Hash'ENOENT{}(), \or{SortIOError{}} (Lbl'Hash'ENOEXEC{}(), \or{SortIOError{}} (Lbl'Hash'ENOLCK{}(), \or{SortIOError{}} (Lbl'Hash'ENOMEM{}(), \or{SortIOError{}} (Lbl'Hash'ENOPROTOOPT{}(), \or{SortIOError{}} (Lbl'Hash'ENOSPC{}(), \or{SortIOError{}} (Lbl'Hash'ENOSYS{}(), \or{SortIOError{}} (Lbl'Hash'ENOTCONN{}(), \or{SortIOError{}} (Lbl'Hash'ENOTDIR{}(), \or{SortIOError{}} (Lbl'Hash'ENOTEMPTY{}(), \or{SortIOError{}} (Lbl'Hash'ENOTSOCK{}(), \or{SortIOError{}} (Lbl'Hash'ENOTTY{}(), \or{SortIOError{}} (Lbl'Hash'ENXIO{}(), \or{SortIOError{}} (Lbl'Hash'EOF{}(), \or{SortIOError{}} (Lbl'Hash'EOPNOTSUPP{}(), \or{SortIOError{}} (Lbl'Hash'EOVERFLOW{}(), \or{SortIOError{}} (Lbl'Hash'EPERM{}(), \or{SortIOError{}} (Lbl'Hash'EPFNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EPIPE{}(), \or{SortIOError{}} (Lbl'Hash'EPROTONOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'EPROTOTYPE{}(), \or{SortIOError{}} (Lbl'Hash'ERANGE{}(), \or{SortIOError{}} (Lbl'Hash'EROFS{}(), \or{SortIOError{}} (Lbl'Hash'ESHUTDOWN{}(), \or{SortIOError{}} (Lbl'Hash'ESOCKTNOSUPPORT{}(), \or{SortIOError{}} (Lbl'Hash'ESPIPE{}(), \or{SortIOError{}} (Lbl'Hash'ESRCH{}(), \or{SortIOError{}} (Lbl'Hash'ETIMEDOUT{}(), \or{SortIOError{}} (Lbl'Hash'ETOOMANYREFS{}(), \or{SortIOError{}} (Lbl'Hash'EWOULDBLOCK{}(), \or{SortIOError{}} (Lbl'Hash'EXDEV{}(), \or{SortIOError{}} (\exists{SortIOError{}} (X0:SortString{}, Lbl'Hash'noParse{}(X0:SortString{})), \or{SortIOError{}} (\exists{SortIOError{}} (X0:SortInt{}, Lbl'Hash'unknownIOError{}(X0:SortInt{})), \bottom{SortIOError{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortModuleName{}} (\exists{SortModuleName{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortModuleName{}} (Val:SortLowerName{})), \or{SortModuleName{}} (\exists{SortModuleName{}} (Val:SortKModuleName{}, inj{SortKModuleName{}, SortModuleName{}} (Val:SortKModuleName{})), \or{SortModuleName{}} (\exists{SortModuleName{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortModuleName{}} (Val:SortUpperName{})), \bottom{SortModuleName{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortKProduction{}} (\exists{SortKProduction{}} (X0:SortTag{}, \exists{SortKProduction{}} (X1:SortKSortList{}, LblkFuncProduction{}(X0:SortTag{}, X1:SortKSortList{}))), \or{SortKProduction{}} (\exists{SortKProduction{}} (X0:SortKProductionItem{}, \exists{SortKProduction{}} (X1:SortKProduction{}, LblkProduction{}(X0:SortKProductionItem{}, X1:SortKProduction{}))), \or{SortKProduction{}} (\exists{SortKProduction{}} (X0:SortKSortList{}, LblkTupleProduction{}(X0:SortKSortList{})), \or{SortKProduction{}} (\exists{SortKProduction{}} (Val:SortKProductionItem{}, inj{SortKProductionItem{}, SortKProduction{}} (Val:SortKProductionItem{})), \bottom{SortKProduction{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortKItem{}} (Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortString{}, Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(X0:SortString{})), \or{SortKItem{}} (Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortCommandLine{}, \exists{SortKItem{}} (X1:SortPgm{}, Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(X0:SortCommandLine{}, X1:SortPgm{}))), \or{SortKItem{}} (Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortIOString{}, Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(X0:SortIOString{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortString{}, Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(X0:SortString{})), \or{SortKItem{}} (Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(), \or{SortKItem{}} (Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortInt{}, \exists{SortKItem{}} (X1:SortString{}, \exists{SortKItem{}} (X2:SortString{}, Lbl'Hash'systemResult{}(X0:SortInt{}, X1:SortString{}, X2:SortString{})))), \or{SortKItem{}} (Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}(), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortPatterns{}, LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(X0:SortPatterns{})), \or{SortKItem{}} (\exists{SortKItem{}} (X0:SortKItem{}, \exists{SortKItem{}} (X1:SortKItem{}, Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(X0:SortKItem{}, X1:SortKItem{}))), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortParserGeneratorCellOpt{}, inj{SortParserGeneratorCellOpt{}, SortKItem{}} (Val:SortParserGeneratorCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefnAttrsCellOpt{}, inj{SortDefnAttrsCellOpt{}, SortKItem{}} (Val:SortDefnAttrsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortKItem{}} (Val:SortLowerName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclarationsCell{}, inj{SortDeclarationsCell{}, SortKItem{}} (Val:SortDeclarationsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKModuleName{}, inj{SortKModuleName{}, SortKItem{}} (Val:SortKModuleName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEKoreDeclaration{}, inj{SortEKoreDeclaration{}, SortKItem{}} (Val:SortEKoreDeclaration{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKImport{}, inj{SortKImport{}, SortKItem{}} (Val:SortKImport{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPath{}, inj{SortPath{}, SortKItem{}} (Val:SortPath{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKSort{}, inj{SortKSort{}, SortKItem{}} (Val:SortKSort{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKRequire{}, inj{SortKRequire{}, SortKItem{}} (Val:SortKRequire{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVarName{}, inj{SortVarName{}, SortKItem{}} (Val:SortVarName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortString{}, inj{SortString{}, SortKItem{}} (Val:SortString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNameCellOpt{}, inj{SortNameCellOpt{}, SortKItem{}} (Val:SortNameCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortList{}, inj{SortList{}, SortKItem{}} (Val:SortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKinkDeployedDirCell{}, inj{SortKinkDeployedDirCell{}, SortKItem{}} (Val:SortKinkDeployedDirCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPgm{}, inj{SortPgm{}, SortKItem{}} (Val:SortPgm{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortOptionalAttributes{}, inj{SortOptionalAttributes{}, SortKItem{}} (Val:SortOptionalAttributes{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKRequireList{}, inj{SortKRequireList{}, SortKItem{}} (Val:SortKRequireList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStrategy{}, inj{SortStrategy{}, SortKItem{}} (Val:SortStrategy{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModules{}, inj{SortModules{}, SortKItem{}} (Val:SortModules{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortConfigGrammarCellOpt{}, inj{SortConfigGrammarCellOpt{}, SortKItem{}} (Val:SortConfigGrammarCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortParserGeneratorCellFragment{}, inj{SortParserGeneratorCellFragment{}, SortKItem{}} (Val:SortParserGeneratorCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPattern{}, inj{SortPattern{}, SortKItem{}} (Val:SortPattern{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortParserGeneratorCell{}, inj{SortParserGeneratorCell{}, SortKItem{}} (Val:SortParserGeneratorCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKDefinition{}, inj{SortKDefinition{}, SortKItem{}} (Val:SortKDefinition{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPrioritySeqBlock{}, inj{SortPrioritySeqBlock{}, SortKItem{}} (Val:SortPrioritySeqBlock{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBubbleItem{}, inj{SortBubbleItem{}, SortKItem{}} (Val:SortBubbleItem{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclarationsCellFragment{}, inj{SortDeclarationsCellFragment{}, SortKItem{}} (Val:SortDeclarationsCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOString{}, inj{SortIOString{}, SortKItem{}} (Val:SortIOString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortEKoreKString{}, inj{SortEKoreKString{}, SortKItem{}} (Val:SortEKoreKString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDollarName{}, inj{SortDollarName{}, SortKItem{}} (Val:SortDollarName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModCellSet{}, inj{SortModCellSet{}, SortKItem{}} (Val:SortModCellSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortRuleGrammarCell{}, inj{SortRuleGrammarCell{}, SortKItem{}} (Val:SortRuleGrammarCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKoreDeclaration{}, inj{SortKoreDeclaration{}, SortKItem{}} (Val:SortKoreDeclaration{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCellFragment{}, inj{SortGeneratedTopCellFragment{}, SortKItem{}} (Val:SortGeneratedTopCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModCell{}, inj{SortModCell{}, SortKItem{}} (Val:SortModCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSet{}, inj{SortSet{}, SortKItem{}} (Val:SortSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefnAttrsCell{}, inj{SortDefnAttrsCell{}, SortKItem{}} (Val:SortDefnAttrsCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSort{}, inj{SortSort{}, SortKItem{}} (Val:SortSort{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKSortList{}, inj{SortKSortList{}, SortKItem{}} (Val:SortKSortList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAttributesCell{}, inj{SortAttributesCell{}, SortKItem{}} (Val:SortAttributesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTagContent{}, inj{SortTagContent{}, SortKItem{}} (Val:SortTagContent{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAttrList{}, inj{SortAttrList{}, SortKItem{}} (Val:SortAttrList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefinitionCell{}, inj{SortDefinitionCell{}, SortKItem{}} (Val:SortDefinitionCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTag{}, inj{SortTag{}, SortKItem{}} (Val:SortTag{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclCellSet{}, inj{SortDeclCellSet{}, SortKItem{}} (Val:SortDeclCellSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCell{}, inj{SortKCell{}, SortKItem{}} (Val:SortKCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortKItem{}} (Val:SortUpperName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPrgGrammarCell{}, inj{SortPrgGrammarCell{}, SortKItem{}} (Val:SortPrgGrammarCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortProdBlock{}, inj{SortProdBlock{}, SortKItem{}} (Val:SortProdBlock{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBubble{}, inj{SortBubble{}, SortKItem{}} (Val:SortBubble{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModulesCellOpt{}, inj{SortModulesCellOpt{}, SortKItem{}} (Val:SortModulesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSymbol{}, inj{SortSymbol{}, SortKItem{}} (Val:SortSymbol{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortFloat{}, inj{SortFloat{}, SortKItem{}} (Val:SortFloat{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclCell{}, inj{SortDeclCell{}, SortKItem{}} (Val:SortDeclCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOInt{}, inj{SortIOInt{}, SortKItem{}} (Val:SortIOInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAny{}, inj{SortAny{}, SortKItem{}} (Val:SortAny{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortConfigInfoCellOpt{}, inj{SortConfigInfoCellOpt{}, SortKItem{}} (Val:SortConfigInfoCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortId{}, inj{SortId{}, SortKItem{}} (Val:SortId{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSCellOpt{}, inj{SortSCellOpt{}, SortKItem{}} (Val:SortSCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOFile{}, inj{SortIOFile{}, SortKItem{}} (Val:SortIOFile{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortMap{}, inj{SortMap{}, SortKItem{}} (Val:SortMap{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSyntaxDeclaration{}, inj{SortSyntaxDeclaration{}, SortKItem{}} (Val:SortSyntaxDeclaration{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclaration{}, inj{SortDeclaration{}, SortKItem{}} (Val:SortDeclaration{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKProductionItem{}, inj{SortKProductionItem{}, SortKItem{}} (Val:SortKProductionItem{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBool{}, inj{SortBool{}, SortKItem{}} (Val:SortBool{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCellNameCellOpt{}, inj{SortCellNameCellOpt{}, SortKItem{}} (Val:SortCellNameCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortConfigInfoCell{}, inj{SortConfigInfoCell{}, SortKItem{}} (Val:SortConfigInfoCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAttr{}, inj{SortAttr{}, SortKItem{}} (Val:SortAttr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNameCell{}, inj{SortNameCell{}, SortKItem{}} (Val:SortNameCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCellNameCell{}, inj{SortCellNameCell{}, SortKItem{}} (Val:SortCellNameCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBacktickName{}, inj{SortBacktickName{}, SortKItem{}} (Val:SortBacktickName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKPrioritySeq{}, inj{SortKPrioritySeq{}, SortKItem{}} (Val:SortKPrioritySeq{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModulesCell{}, inj{SortModulesCell{}, SortKItem{}} (Val:SortModulesCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAttribute{}, inj{SortAttribute{}, SortKItem{}} (Val:SortAttribute{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKinkDeployedDirCellOpt{}, inj{SortKinkDeployedDirCellOpt{}, SortKItem{}} (Val:SortKinkDeployedDirCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCell{}, inj{SortCell{}, SortKItem{}} (Val:SortCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKProductionWAttr{}, inj{SortKProductionWAttr{}, SortKItem{}} (Val:SortKProductionWAttr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKNeTagSet{}, inj{SortKNeTagSet{}, SortKItem{}} (Val:SortKNeTagSet{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKoreString{}, inj{SortKoreString{}, SortKItem{}} (Val:SortKoreString{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortRuleContents{}, inj{SortRuleContents{}, SortKItem{}} (Val:SortRuleContents{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortConfigInfoCellFragment{}, inj{SortConfigInfoCellFragment{}, SortKItem{}} (Val:SortConfigInfoCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortTagContents{}, inj{SortTagContents{}, SortKItem{}} (Val:SortTagContents{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclarations{}, inj{SortDeclarations{}, SortKItem{}} (Val:SortDeclarations{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortIOError{}, inj{SortIOError{}, SortKItem{}} (Val:SortIOError{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModuleName{}, inj{SortModuleName{}, SortKItem{}} (Val:SortModuleName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKProduction{}, inj{SortKProduction{}, SortKItem{}} (Val:SortKProduction{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKLabel2{}, inj{SortKLabel2{}, SortKItem{}} (Val:SortKLabel2{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefinitionCellFragment{}, inj{SortDefinitionCellFragment{}, SortKItem{}} (Val:SortDefinitionCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortRuleGrammarCellOpt{}, inj{SortRuleGrammarCellOpt{}, SortKItem{}} (Val:SortRuleGrammarCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKAttributesDeclaration{}, inj{SortKAttributesDeclaration{}, SortKItem{}} (Val:SortKAttributesDeclaration{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExitCodeCellOpt{}, inj{SortExitCodeCellOpt{}, SortKItem{}} (Val:SortExitCodeCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortStream{}, inj{SortStream{}, SortKItem{}} (Val:SortStream{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKImportList{}, inj{SortKImportList{}, SortKItem{}} (Val:SortKImportList{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModCellFragment{}, inj{SortModCellFragment{}, SortKItem{}} (Val:SortModCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKoreDefinition{}, inj{SortKoreDefinition{}, SortKItem{}} (Val:SortKoreDefinition{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortInt{}, inj{SortInt{}, SortKItem{}} (Val:SortInt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKEY{}, inj{SortKEY{}, SortKItem{}} (Val:SortKEY{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSCell{}, inj{SortSCell{}, SortKItem{}} (Val:SortSCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortKCellOpt{}, inj{SortKCellOpt{}, SortKItem{}} (Val:SortKCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSortName{}, inj{SortSortName{}, SortKItem{}} (Val:SortSortName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPatterns{}, inj{SortPatterns{}, SortKItem{}} (Val:SortPatterns{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefinition{}, inj{SortDefinition{}, SortKItem{}} (Val:SortDefinition{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortExitCodeCell{}, inj{SortExitCodeCell{}, SortKItem{}} (Val:SortExitCodeCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSorts{}, inj{SortSorts{}, SortKItem{}} (Val:SortSorts{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCollectedCell{}, inj{SortCollectedCell{}, SortKItem{}} (Val:SortCollectedCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVariable{}, inj{SortVariable{}, SortKItem{}} (Val:SortVariable{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortGeneratedTopCell{}, inj{SortGeneratedTopCell{}, SortKItem{}} (Val:SortGeneratedTopCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortConfigGrammarCell{}, inj{SortConfigGrammarCell{}, SortKItem{}} (Val:SortConfigGrammarCell{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCommandLine{}, inj{SortCommandLine{}, SortKItem{}} (Val:SortCommandLine{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAttributesCellOpt{}, inj{SortAttributesCellOpt{}, SortKItem{}} (Val:SortAttributesCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortBubbleWithAttr{}, inj{SortBubbleWithAttr{}, SortKItem{}} (Val:SortBubbleWithAttr{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortAssocAttribute{}, inj{SortAssocAttribute{}, SortKItem{}} (Val:SortAssocAttribute{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDeclarationsCellOpt{}, inj{SortDeclarationsCellOpt{}, SortKItem{}} (Val:SortDeclarationsCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortSymbolName{}, inj{SortSymbolName{}, SortKItem{}} (Val:SortSymbolName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortPrgGrammarCellOpt{}, inj{SortPrgGrammarCellOpt{}, SortKItem{}} (Val:SortPrgGrammarCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModulesCellFragment{}, inj{SortModulesCellFragment{}, SortKItem{}} (Val:SortModulesCellFragment{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortNumbers{}, inj{SortNumbers{}, SortKItem{}} (Val:SortNumbers{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortVariableName{}, inj{SortVariableName{}, SortKItem{}} (Val:SortVariableName{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortCollectedCellOpt{}, inj{SortCollectedCellOpt{}, SortKItem{}} (Val:SortCollectedCellOpt{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortModule{}, inj{SortModule{}, SortKItem{}} (Val:SortModule{})), \or{SortKItem{}} (\exists{SortKItem{}} (Val:SortDefinitionCellOpt{}, inj{SortDefinitionCellOpt{}, SortKItem{}} (Val:SortDefinitionCellOpt{})), \bottom{SortKItem{}}()))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) [constructor{}()] // no junk
  axiom{} \or{SortKLabel2{}} (\exists{SortKLabel2{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortKLabel2{}} (Val:SortLowerName{})), \bottom{SortKLabel2{}}()) [constructor{}()] // no junk
  axiom{} \or{SortDefinitionCellFragment{}} (\exists{SortDefinitionCellFragment{}} (X0:SortDefnAttrsCellOpt{}, \exists{SortDefinitionCellFragment{}} (X1:SortModulesCellOpt{}, \exists{SortDefinitionCellFragment{}} (X2:SortConfigInfoCellOpt{}, Lbl'-LT-'definition'-GT-'-fragment{}(X0:SortDefnAttrsCellOpt{}, X1:SortModulesCellOpt{}, X2:SortConfigInfoCellOpt{})))), \bottom{SortDefinitionCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortRuleGrammarCellOpt{}} (LblnoRuleGrammarCell{}(), \or{SortRuleGrammarCellOpt{}} (\exists{SortRuleGrammarCellOpt{}} (Val:SortRuleGrammarCell{}, inj{SortRuleGrammarCell{}, SortRuleGrammarCellOpt{}} (Val:SortRuleGrammarCell{})), \bottom{SortRuleGrammarCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortKAttributesDeclaration{}} (\exists{SortKAttributesDeclaration{}} (X0:SortAttrList{}, LblkAttributesDeclaration{}(X0:SortAttrList{})), \bottom{SortKAttributesDeclaration{}}()) [constructor{}()] // no junk
  axiom{} \or{SortExitCodeCellOpt{}} (LblnoExitCodeCell{}(), \or{SortExitCodeCellOpt{}} (\exists{SortExitCodeCellOpt{}} (Val:SortExitCodeCell{}, inj{SortExitCodeCell{}, SortExitCodeCellOpt{}} (Val:SortExitCodeCell{})), \bottom{SortExitCodeCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortStream{}} (\exists{SortStream{}} (X0:SortK{}, Lbl'Hash'buffer'LParUndsRParUnds'K-IO'Unds'Stream'Unds'K{}(X0:SortK{})), \bottom{SortStream{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKImportList{}} (LblemptyKImportList{}(), \or{SortKImportList{}} (\exists{SortKImportList{}} (X0:SortKImportList{}, \exists{SortKImportList{}} (X1:SortKImport{}, LblkImportList{}(X0:SortKImportList{}, X1:SortKImport{}))), \bottom{SortKImportList{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModCellFragment{}} (\exists{SortModCellFragment{}} (X0:SortNameCellOpt{}, \exists{SortModCellFragment{}} (X1:SortAttributesCellOpt{}, \exists{SortModCellFragment{}} (X2:SortDeclarationsCellOpt{}, \exists{SortModCellFragment{}} (X3:SortParserGeneratorCellOpt{}, Lbl'-LT-'mod'-GT-'-fragment{}(X0:SortNameCellOpt{}, X1:SortAttributesCellOpt{}, X2:SortDeclarationsCellOpt{}, X3:SortParserGeneratorCellOpt{}))))), \bottom{SortModCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKoreDefinition{}} (\exists{SortKoreDefinition{}} (X0:SortAttribute{}, \exists{SortKoreDefinition{}} (X1:SortModules{}, LblkoreDefinitionLbl{}(X0:SortAttribute{}, X1:SortModules{}))), \bottom{SortKoreDefinition{}}()) [constructor{}()] // no junk
  axiom{} \or{SortInt{}} (\top{SortInt{}}(), \bottom{SortInt{}}()) [constructor{}()] // no junk (TODO: fix bug with \dv)
  axiom{} \or{SortKEY{}} (\exists{SortKEY{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortKEY{}} (Val:SortLowerName{})), \bottom{SortKEY{}}()) [constructor{}()] // no junk
  axiom{} \or{SortSCell{}} (\exists{SortSCell{}} (X0:SortK{}, Lbl'-LT-'s'-GT-'{}(X0:SortK{})), \bottom{SortSCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortKCellOpt{}} (LblnoKCell{}(), \or{SortKCellOpt{}} (\exists{SortKCellOpt{}} (Val:SortKCell{}, inj{SortKCell{}, SortKCellOpt{}} (Val:SortKCell{})), \bottom{SortKCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortSortName{}} (\exists{SortSortName{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortSortName{}} (Val:SortLowerName{})), \or{SortSortName{}} (\exists{SortSortName{}} (Val:SortKSort{}, inj{SortKSort{}, SortSortName{}} (Val:SortKSort{})), \or{SortSortName{}} (\exists{SortSortName{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortSortName{}} (Val:SortUpperName{})), \bottom{SortSortName{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortPatterns{}} (\exists{SortPatterns{}} (X0:SortPatterns{}, \exists{SortPatterns{}} (X1:SortList{}, \exists{SortPatterns{}} (X2:SortMap{}, \exists{SortPatterns{}} (X3:SortSet{}, \exists{SortPatterns{}} (X4:SortSet{}, LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(X0:SortPatterns{}, X1:SortList{}, X2:SortMap{}, X3:SortSet{}, X4:SortSet{})))))), \or{SortPatterns{}} (\exists{SortPatterns{}} (X0:SortPattern{}, \exists{SortPatterns{}} (X1:SortPatterns{}, LblconsPatterns{}(X0:SortPattern{}, X1:SortPatterns{}))), \or{SortPatterns{}} (LbldotPatterns{}(), \bottom{SortPatterns{}}()))) [constructor{}()] // no junk
  axiom{} \or{SortDefinition{}} (\exists{SortDefinition{}} (Val:SortKDefinition{}, inj{SortKDefinition{}, SortDefinition{}} (Val:SortKDefinition{})), \or{SortDefinition{}} (\exists{SortDefinition{}} (Val:SortKoreDefinition{}, inj{SortKoreDefinition{}, SortDefinition{}} (Val:SortKoreDefinition{})), \bottom{SortDefinition{}}())) [constructor{}()] // no junk
  axiom{} \or{SortExitCodeCell{}} (\exists{SortExitCodeCell{}} (X0:SortInt{}, Lbl'-LT-'exit-code'-GT-'{}(X0:SortInt{})), \bottom{SortExitCodeCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortSorts{}} (\exists{SortSorts{}} (X0:SortSort{}, \exists{SortSorts{}} (X1:SortSorts{}, LblconsSorts{}(X0:SortSort{}, X1:SortSorts{}))), \or{SortSorts{}} (LbldotSorts{}(), \or{SortSorts{}} (\exists{SortSorts{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortSorts{}} (Val:SortLowerName{})), \or{SortSorts{}} (\exists{SortSorts{}} (Val:SortKSort{}, inj{SortKSort{}, SortSorts{}} (Val:SortKSort{})), \or{SortSorts{}} (\exists{SortSorts{}} (Val:SortSort{}, inj{SortSort{}, SortSorts{}} (Val:SortSort{})), \or{SortSorts{}} (\exists{SortSorts{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortSorts{}} (Val:SortUpperName{})), \or{SortSorts{}} (\exists{SortSorts{}} (Val:SortSortName{}, inj{SortSortName{}, SortSorts{}} (Val:SortSortName{})), \bottom{SortSorts{}}()))))))) [constructor{}()] // no junk
  axiom{} \or{SortCollectedCell{}} (\exists{SortCollectedCell{}} (X0:SortSet{}, Lbl'-LT-'collected'-GT-'{}(X0:SortSet{})), \bottom{SortCollectedCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortVariable{}} (\exists{SortVariable{}} (X0:SortVarName{}, \exists{SortVariable{}} (X1:SortKSort{}, Lblcast{}(X0:SortVarName{}, X1:SortKSort{}))), \or{SortVariable{}} (\exists{SortVariable{}} (X0:SortVariableName{}, \exists{SortVariable{}} (X1:SortSort{}, LblvarType{}(X0:SortVariableName{}, X1:SortSort{}))), \or{SortVariable{}} (\exists{SortVariable{}} (Val:SortVarName{}, inj{SortVarName{}, SortVariable{}} (Val:SortVarName{})), \or{SortVariable{}} (\exists{SortVariable{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortVariable{}} (Val:SortUpperName{})), \bottom{SortVariable{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedCounterCell{}} (\exists{SortGeneratedCounterCell{}} (X0:SortInt{}, Lbl'-LT-'generatedCounter'-GT-'{}(X0:SortInt{})), \bottom{SortGeneratedCounterCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortGeneratedTopCell{}} (\exists{SortGeneratedTopCell{}} (X0:SortKCell{}, \exists{SortGeneratedTopCell{}} (X1:SortDefinitionCell{}, \exists{SortGeneratedTopCell{}} (X2:SortExitCodeCell{}, \exists{SortGeneratedTopCell{}} (X3:SortSCell{}, \exists{SortGeneratedTopCell{}} (X4:SortGeneratedCounterCell{}, \exists{SortGeneratedTopCell{}} (X5:SortKinkDeployedDirCell{}, Lbl'-LT-'generatedTop'-GT-'{}(X0:SortKCell{}, X1:SortDefinitionCell{}, X2:SortExitCodeCell{}, X3:SortSCell{}, X4:SortGeneratedCounterCell{}, X5:SortKinkDeployedDirCell{}))))))), \bottom{SortGeneratedTopCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortConfigGrammarCell{}} (\exists{SortConfigGrammarCell{}} (X0:SortSet{}, Lbl'-LT-'configGrammar'-GT-'{}(X0:SortSet{})), \bottom{SortConfigGrammarCell{}}()) [constructor{}()] // no junk
  axiom{} \or{SortCommandLine{}} (Lblekore-to-kore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(), \or{SortCommandLine{}} (Lblfrontend-to-ekore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(), \or{SortCommandLine{}} (\exists{SortCommandLine{}} (X0:SortPath{}, Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(X0:SortPath{})), \or{SortCommandLine{}} (Lblkompile'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(), \bottom{SortCommandLine{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortAttributesCellOpt{}} (LblnoAttributesCell{}(), \or{SortAttributesCellOpt{}} (\exists{SortAttributesCellOpt{}} (Val:SortAttributesCell{}, inj{SortAttributesCell{}, SortAttributesCellOpt{}} (Val:SortAttributesCell{})), \bottom{SortAttributesCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \bottom{SortBubbleWithAttr{}}() [constructor{}()] // no junk
  axiom{} \or{SortAssocAttribute{}} (LblleftAttribute{}(), \or{SortAssocAttribute{}} (LblnoAttribute{}(), \or{SortAssocAttribute{}} (LblnonAssocAttribute{}(), \or{SortAssocAttribute{}} (LblrightAttribute{}(), \bottom{SortAssocAttribute{}}())))) [constructor{}()] // no junk
  axiom{} \or{SortDeclarationsCellOpt{}} (LblnoDeclarationsCell{}(), \or{SortDeclarationsCellOpt{}} (\exists{SortDeclarationsCellOpt{}} (Val:SortDeclarationsCell{}, inj{SortDeclarationsCell{}, SortDeclarationsCellOpt{}} (Val:SortDeclarationsCell{})), \bottom{SortDeclarationsCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortSymbolName{}} (\exists{SortSymbolName{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortSymbolName{}} (Val:SortLowerName{})), \or{SortSymbolName{}} (\exists{SortSymbolName{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortSymbolName{}} (Val:SortUpperName{})), \bottom{SortSymbolName{}}())) [constructor{}()] // no junk
  axiom{} \or{SortPrgGrammarCellOpt{}} (LblnoPrgGrammarCell{}(), \or{SortPrgGrammarCellOpt{}} (\exists{SortPrgGrammarCellOpt{}} (Val:SortPrgGrammarCell{}, inj{SortPrgGrammarCell{}, SortPrgGrammarCellOpt{}} (Val:SortPrgGrammarCell{})), \bottom{SortPrgGrammarCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModulesCellFragment{}} (\exists{SortModulesCellFragment{}} (X0:SortModCellSet{}, Lbl'-LT-'modules'-GT-'-fragment{}(X0:SortModCellSet{})), \bottom{SortModulesCellFragment{}}()) [constructor{}()] // no junk
  axiom{} \bottom{SortNumbers{}}() [constructor{}()] // no junk
  axiom{} \bottom{SortK{}}() [constructor{}()] // no junk
  axiom{} \or{SortVariableName{}} (\exists{SortVariableName{}} (Val:SortLowerName{}, inj{SortLowerName{}, SortVariableName{}} (Val:SortLowerName{})), \or{SortVariableName{}} (\exists{SortVariableName{}} (Val:SortUpperName{}, inj{SortUpperName{}, SortVariableName{}} (Val:SortUpperName{})), \bottom{SortVariableName{}}())) [constructor{}()] // no junk
  axiom{} \or{SortCollectedCellOpt{}} (LblnoCollectedCell{}(), \or{SortCollectedCellOpt{}} (\exists{SortCollectedCellOpt{}} (Val:SortCollectedCell{}, inj{SortCollectedCell{}, SortCollectedCellOpt{}} (Val:SortCollectedCell{})), \bottom{SortCollectedCellOpt{}}())) [constructor{}()] // no junk
  axiom{} \or{SortModule{}} (\exists{SortModule{}} (X0:SortKModuleName{}, \exists{SortModule{}} (X1:SortOptionalAttributes{}, \exists{SortModule{}} (X2:SortKImportList{}, \exists{SortModule{}} (X3:SortDeclarations{}, LblkModuleLbl{}(X0:SortKModuleName{}, X1:SortOptionalAttributes{}, X2:SortKImportList{}, X3:SortDeclarations{}))))), \or{SortModule{}} (\exists{SortModule{}} (X0:SortModuleName{}, \exists{SortModule{}} (X1:SortDeclarations{}, \exists{SortModule{}} (X2:SortAttribute{}, LblkoreModuleLbl{}(X0:SortModuleName{}, X1:SortDeclarations{}, X2:SortAttribute{})))), \bottom{SortModule{}}())) [constructor{}()] // no junk
  axiom{} \or{SortDefinitionCellOpt{}} (LblnoDefinitionCell{}(), \or{SortDefinitionCellOpt{}} (\exists{SortDefinitionCellOpt{}} (Val:SortDefinitionCell{}, inj{SortDefinitionCell{}, SortDefinitionCellOpt{}} (Val:SortDefinitionCell{})), \bottom{SortDefinitionCellOpt{}}())) [constructor{}()] // no junk
  axiom{R} \equals{SortString{}, R} (LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(inj{SortAny{}, SortK{}} (K0:SortAny{})), inj{SortString{}, SortString{}} (LbltokenToString'LParUndsRParUnds'COMMAND-LINE'Unds'String'Unds'Any{}(K0:SortAny{}))) [overload{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(), LbltokenToString'LParUndsRParUnds'COMMAND-LINE'Unds'String'Unds'Any{}())] // overloaded production

// rules
// rule `<generatedTop>`(`<k>`(`#collectPgmGrammar_PARSE-PROGRAM_KItem`(.KList)~>DotVar1) #as _11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MName),_2,_3,`<parserGenerator>`(`<prgGrammar>`(`.Set`(.KList)),_0,_1))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _21))~>SREST),_7,_8) #as _Configuration=>`<generatedTop>`(_11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MName),_2,_3,`<parserGenerator>`(`<prgGrammar>`(`#getAllProds(_)_META-ACCESSORS_Set_ModuleName`(MName,_Configuration)),_0,_1))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#appliedRule(_21))~>SREST),_7,_8) requires `_=/=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(`tokenToString(_)_PARSER-UTIL_String_K`(inj{ModuleName,KItem}(MName)),#token("\"-SYNTAX\"","String"),#token("0","Int")),#token("-1","Int")) ensures #token("true","Bool") [UNIQUE_ID(2ee7cb1fdb138990cf36c801656a19a5e7b0f9c85358ccea7d5303531c865097) contentStartColumn(8) contentStartLine(124) org.kframework.attributes.Location(Location(124,8,127,70)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortModuleName{}, SortKItem{}}(VarMName:SortModuleName{}),dotk{}())),\dv{SortString{}}("-SYNTAX"),\dv{SortInt{}}("0")),\dv{SortInt{}}("-1")),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'11:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMName:SortModuleName{}),Var'Unds'2:SortAttributesCell{},Var'Unds'3:SortDeclarationsCell{},Lbl'-LT-'parserGenerator'-GT-'{}(Lbl'-LT-'prgGrammar'-GT-'{}(Lbl'Stop'Set{}()),Var'Unds'0:SortConfigGrammarCell{},Var'Unds'1:SortRuleGrammarCell{}))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'21:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'11:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMName:SortModuleName{}),Var'Unds'2:SortAttributesCell{},Var'Unds'3:SortDeclarationsCell{},Lbl'-LT-'parserGenerator'-GT-'{}(Lbl'-LT-'prgGrammar'-GT-'{}(Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMName:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{})),Var'Unds'0:SortConfigGrammarCell{},Var'Unds'1:SortRuleGrammarCell{}))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'21:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("124"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,8,127,70)"), UNIQUE'Unds'ID{}("2ee7cb1fdb138990cf36c801656a19a5e7b0f9c85358ccea7d5303531c865097")]

// rule `<generatedTop>`(`<k>`(`#createConfigGrammar_PARSE-CONFIG_KItem`(.KList)~>DotVar1) #as _10,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MName),DotVar4,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kConfigurationLbl(noAttrsB(_0))))),DotVar6)),`<parserGenerator>`(_1,`<configGrammar>`(`.Set`(.KList)),_2))),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _20))~>SREST),_6,_7) #as _Configuration=>`<generatedTop>`(_10,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MName),DotVar4,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kConfigurationLbl(noAttrsB(_0))))),DotVar6)),`<parserGenerator>`(_1,`<configGrammar>`(`#addSubsorts(_)_PARSER-GEN-HELPERS_Set_Set`(`#addCasts(_)_PARSER-GEN-HELPERS_Set_Set`(`_Set_`(`#getAllProds(_)_META-ACCESSORS_Set_ModuleName`(MName,_Configuration),`#getAllProds(_)_META-ACCESSORS_Set_ModuleName`(inj{UpperName,ModuleName}(#token("CONFIG-INNER","UpperName")),_Configuration))))),_2))),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#appliedRule(_20))~>SREST),_6,_7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7c97ca1842b635ee3b13c7b953b4547efc3963a835656684b4ef4832a225116e) contentStartColumn(8) contentStartLine(154) org.kframework.attributes.Location(Location(154,8,157,143)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'10:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMName:SortModuleName{}),VarDotVar4:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkConfigurationLbl{}(LblnoAttrsB{}(Var'Unds'0:SortBubble{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'1:SortPrgGrammarCell{},Lbl'-LT-'configGrammar'-GT-'{}(Lbl'Stop'Set{}()),Var'Unds'2:SortRuleGrammarCell{}))),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'20:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'10:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMName:SortModuleName{}),VarDotVar4:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkConfigurationLbl{}(LblnoAttrsB{}(Var'Unds'0:SortBubble{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'1:SortPrgGrammarCell{},Lbl'-LT-'configGrammar'-GT-'{}(Lbl'Hash'addSubsorts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(Lbl'Hash'addCasts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMName:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(inj{SortUpperName{}, SortModuleName{}}(\dv{SortUpperName{}}("CONFIG-INNER")),Var'Unds'Configuration:SortGeneratedTopCell{}))))),Var'Unds'2:SortRuleGrammarCell{}))),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'20:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("154"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(154,8,157,143)"), UNIQUE'Unds'ID{}("7c97ca1842b635ee3b13c7b953b4547efc3963a835656684b4ef4832a225116e")]

// rule `<generatedTop>`(`<k>`(`#createRuleGrammar_PARSE-RULE_KItem`(.KList)~>DotVar1) #as _10,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MName),DotVar4,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(noAttrsB(_0))))),DotVar6)),`<parserGenerator>`(_1,_2,`<ruleGrammar>`(`.Set`(.KList))))),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _20))~>SREST),_6,_7) #as _Configuration=>`<generatedTop>`(_10,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MName),DotVar4,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(noAttrsB(_0))))),DotVar6)),`<parserGenerator>`(_1,_2,`<ruleGrammar>`(`#addRuleCells(_)_PARSE-RULE_Set_Set`(`#addSubsorts(_)_PARSER-GEN-HELPERS_Set_Set`(`#addCasts(_)_PARSER-GEN-HELPERS_Set_Set`(`_Set_`(`#getAllProds(_)_META-ACCESSORS_Set_ModuleName`(MName,_Configuration),`#getAllProds(_)_META-ACCESSORS_Set_ModuleName`(inj{UpperName,ModuleName}(#token("RULE-INNER","UpperName")),_Configuration)))),_Configuration))))),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#appliedRule(_20))~>SREST),_6,_7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(98d95ae56345f70b9d81275b6692c821b23c0e38a05c5183696ee73718d14c77) contentStartColumn(8) contentStartLine(213) org.kframework.attributes.Location(Location(213,8,216,152)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'10:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMName:SortModuleName{}),VarDotVar4:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblnoAttrsB{}(Var'Unds'0:SortBubble{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'1:SortPrgGrammarCell{},Var'Unds'2:SortConfigGrammarCell{},Lbl'-LT-'ruleGrammar'-GT-'{}(Lbl'Stop'Set{}())))),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'20:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'10:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMName:SortModuleName{}),VarDotVar4:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblnoAttrsB{}(Var'Unds'0:SortBubble{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'1:SortPrgGrammarCell{},Var'Unds'2:SortConfigGrammarCell{},Lbl'-LT-'ruleGrammar'-GT-'{}(Lbl'Hash'addRuleCells'LParUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set{}(Lbl'Hash'addSubsorts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(Lbl'Hash'addCasts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMName:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(inj{SortUpperName{}, SortModuleName{}}(\dv{SortUpperName{}}("RULE-INNER")),Var'Unds'Configuration:SortGeneratedTopCell{})))),Var'Unds'Configuration:SortGeneratedTopCell{}))))),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'20:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("213"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,8,216,152)"), UNIQUE'Unds'ID{}("98d95ae56345f70b9d81275b6692c821b23c0e38a05c5183696ee73718d14c77")]

// rule `<generatedTop>`(`<k>`(`#createRuleGrammar_PARSE-RULE_KItem`(.KList)~>DotVar1) #as _11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MName),DotVar4,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(attrsB(_0,_1))))),DotVar6)),`<parserGenerator>`(_2,_3,`<ruleGrammar>`(`.Set`(.KList))))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _21))~>SREST),_7,_8) #as _Configuration=>`<generatedTop>`(_11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MName),DotVar4,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(attrsB(_0,_1))))),DotVar6)),`<parserGenerator>`(_2,_3,`<ruleGrammar>`(`#addRuleCells(_)_PARSE-RULE_Set_Set`(`#addSubsorts(_)_PARSER-GEN-HELPERS_Set_Set`(`#addCasts(_)_PARSER-GEN-HELPERS_Set_Set`(`_Set_`(`#getAllProds(_)_META-ACCESSORS_Set_ModuleName`(MName,_Configuration),`#getAllProds(_)_META-ACCESSORS_Set_ModuleName`(inj{UpperName,ModuleName}(#token("RULE-INNER","UpperName")),_Configuration)))),_Configuration))))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#appliedRule(_21))~>SREST),_7,_8) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c1ded823931c369cd157639fe059c38212a702049edd875d6c28507bb25be226) contentStartColumn(8) contentStartLine(217) org.kframework.attributes.Location(Location(217,8,220,152)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'11:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMName:SortModuleName{}),VarDotVar4:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblattrsB{}(Var'Unds'0:SortBubble{},Var'Unds'1:SortKAttributesDeclaration{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'2:SortPrgGrammarCell{},Var'Unds'3:SortConfigGrammarCell{},Lbl'-LT-'ruleGrammar'-GT-'{}(Lbl'Stop'Set{}())))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'21:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'11:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMName:SortModuleName{}),VarDotVar4:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblattrsB{}(Var'Unds'0:SortBubble{},Var'Unds'1:SortKAttributesDeclaration{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'2:SortPrgGrammarCell{},Var'Unds'3:SortConfigGrammarCell{},Lbl'-LT-'ruleGrammar'-GT-'{}(Lbl'Hash'addRuleCells'LParUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set{}(Lbl'Hash'addSubsorts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(Lbl'Hash'addCasts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMName:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(inj{SortUpperName{}, SortModuleName{}}(\dv{SortUpperName{}}("RULE-INNER")),Var'Unds'Configuration:SortGeneratedTopCell{})))),Var'Unds'Configuration:SortGeneratedTopCell{}))))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'21:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("217"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(217,8,220,152)"), UNIQUE'Unds'ID{}("c1ded823931c369cd157639fe059c38212a702049edd875d6c28507bb25be226")]

// rule `<generatedTop>`(`<k>`(`#parseConfigBubbles_PARSE-CONFIG_KItem`(.KList)~>DotVar1) #as _11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_2,_3,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kConfigurationLbl(noAttrsB(C))))),DotVar6)),`<parserGenerator>`(_0,`<configGrammar>`(GRAMMAR),_1))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _21))~>SREST),_7,_8) #as _Configuration=>`<generatedTop>`(_11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_2,_3,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kConfigurationLbl(noAttrsP(`project:Pattern`(`parseWithProductions(_,_,_)_PARSER-UTIL_KItem_Set_String_String`(GRAMMAR,#token("\"K\"","String"),`tokenToString(_)_PARSER-UTIL_String_K`(inj{Bubble,KItem}(C)),_Configuration))))))),DotVar6)),`<parserGenerator>`(_0,`<configGrammar>`(GRAMMAR),_1))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#appliedRule(_21))~>SREST),_7,_8) requires `_=/=K_`(inj{Set,KItem}(GRAMMAR),inj{Set,KItem}(`.Set`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(52af3b22942321481c3c67216d33ce45296b5905d719bbe3f9b171d6194949ea) contentStartColumn(8) contentStartLine(163) org.kframework.attributes.Location(Location(163,8,166,32)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarGRAMMAR:SortSet{}),dotk{}()),kseq{}(inj{SortSet{}, SortKItem{}}(Lbl'Stop'Set{}()),dotk{}())),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'11:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'2:SortNameCell{},Var'Unds'3:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkConfigurationLbl{}(LblnoAttrsB{}(VarC:SortBubble{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'0:SortPrgGrammarCell{},Lbl'-LT-'configGrammar'-GT-'{}(VarGRAMMAR:SortSet{}),Var'Unds'1:SortRuleGrammarCell{}))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'21:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'11:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'2:SortNameCell{},Var'Unds'3:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkConfigurationLbl{}(LblnoAttrsP{}(Lblproject'Coln'Pattern{}(kseq{}(LblparseWithProductions'LParUndsCommUndsCommUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'Set'Unds'String'Unds'String{}(VarGRAMMAR:SortSet{},\dv{SortString{}}("K"),LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortBubble{}, SortKItem{}}(VarC:SortBubble{}),dotk{}())),Var'Unds'Configuration:SortGeneratedTopCell{}),dotk{}()))))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'0:SortPrgGrammarCell{},Lbl'-LT-'configGrammar'-GT-'{}(VarGRAMMAR:SortSet{}),Var'Unds'1:SortRuleGrammarCell{}))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'21:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("163"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(163,8,166,32)"), UNIQUE'Unds'ID{}("52af3b22942321481c3c67216d33ce45296b5905d719bbe3f9b171d6194949ea")]

// rule `<generatedTop>`(`<k>`(`#parseRuleBubbles_PARSE-RULE_KItem`(.KList)~>DotVar1) #as _11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_2,_3,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(attrsB(C,At))))),DotVar6)),`<parserGenerator>`(_0,_1,`<ruleGrammar>`(GRAMMAR)))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _21))~>SREST),_7,_8) #as _Configuration=>`<generatedTop>`(_11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_2,_3,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(attrsP(`project:Pattern`(`parseWithProductions(_,_,_)_PARSER-UTIL_KItem_Set_String_String`(GRAMMAR,#token("\"RuleContent\"","String"),`tokenToString(_)_PARSER-UTIL_String_K`(inj{Bubble,KItem}(C)),_Configuration)),At))))),DotVar6)),`<parserGenerator>`(_0,_1,`<ruleGrammar>`(GRAMMAR)))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#appliedRule(_21))~>SREST),_7,_8) requires `_=/=K_`(inj{Set,KItem}(GRAMMAR),inj{Set,KItem}(`.Set`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(885f49358dd21ede5321d4ccbbadcb59d476b16821648eb690480684e2459338) contentStartColumn(8) contentStartLine(229) org.kframework.attributes.Location(Location(229,8,232,32)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarGRAMMAR:SortSet{}),dotk{}()),kseq{}(inj{SortSet{}, SortKItem{}}(Lbl'Stop'Set{}()),dotk{}())),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'11:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'2:SortNameCell{},Var'Unds'3:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblattrsB{}(VarC:SortBubble{},VarAt:SortKAttributesDeclaration{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'0:SortPrgGrammarCell{},Var'Unds'1:SortConfigGrammarCell{},Lbl'-LT-'ruleGrammar'-GT-'{}(VarGRAMMAR:SortSet{})))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'21:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'11:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'2:SortNameCell{},Var'Unds'3:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblattrsP{}(Lblproject'Coln'Pattern{}(kseq{}(LblparseWithProductions'LParUndsCommUndsCommUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'Set'Unds'String'Unds'String{}(VarGRAMMAR:SortSet{},\dv{SortString{}}("RuleContent"),LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortBubble{}, SortKItem{}}(VarC:SortBubble{}),dotk{}())),Var'Unds'Configuration:SortGeneratedTopCell{}),dotk{}())),VarAt:SortKAttributesDeclaration{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'0:SortPrgGrammarCell{},Var'Unds'1:SortConfigGrammarCell{},Lbl'-LT-'ruleGrammar'-GT-'{}(VarGRAMMAR:SortSet{})))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'21:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("229"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(229,8,232,32)"), UNIQUE'Unds'ID{}("885f49358dd21ede5321d4ccbbadcb59d476b16821648eb690480684e2459338")]

// rule `<generatedTop>`(`<k>`(`#parseRuleBubbles_PARSE-RULE_KItem`(.KList)~>DotVar1) #as _11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_2,_3,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(noAttrsB(C))))),DotVar6)),`<parserGenerator>`(_0,_1,`<ruleGrammar>`(GRAMMAR)))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _21))~>SREST),_7,_8) #as _Configuration=>`<generatedTop>`(_11,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_2,_3,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(noAttrsP(`disambiguate(_,_)_DISAMBIGUATE_Pattern_Pattern_Set`(`project:Pattern`(`parseWithProductions(_,_,_)_PARSER-UTIL_KItem_Set_String_String`(GRAMMAR,#token("\"RuleContent\"","String"),`tokenToString(_)_PARSER-UTIL_String_K`(inj{Bubble,KItem}(C)),_Configuration)),GRAMMAR)))))),DotVar6)),`<parserGenerator>`(_0,_1,`<ruleGrammar>`(GRAMMAR)))),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#appliedRule(_21))~>SREST),_7,_8) requires `_=/=K_`(inj{Set,KItem}(GRAMMAR),inj{Set,KItem}(`.Set`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(1527beb1632bb16380d471108eeb6a6a8e08f3f731d7695474234818dbc05e4d) contentStartColumn(8) contentStartLine(225) org.kframework.attributes.Location(Location(225,8,228,32)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarGRAMMAR:SortSet{}),dotk{}()),kseq{}(inj{SortSet{}, SortKItem{}}(Lbl'Stop'Set{}()),dotk{}())),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'11:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'2:SortNameCell{},Var'Unds'3:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblnoAttrsB{}(VarC:SortBubble{}))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'0:SortPrgGrammarCell{},Var'Unds'1:SortConfigGrammarCell{},Lbl'-LT-'ruleGrammar'-GT-'{}(VarGRAMMAR:SortSet{})))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'21:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'11:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'2:SortNameCell{},Var'Unds'3:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblnoAttrsP{}(Lbldisambiguate'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Set{}(Lblproject'Coln'Pattern{}(kseq{}(LblparseWithProductions'LParUndsCommUndsCommUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'Set'Unds'String'Unds'String{}(VarGRAMMAR:SortSet{},\dv{SortString{}}("RuleContent"),LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortBubble{}, SortKItem{}}(VarC:SortBubble{}),dotk{}())),Var'Unds'Configuration:SortGeneratedTopCell{}),dotk{}())),VarGRAMMAR:SortSet{})))))),VarDotVar6:SortDeclCellSet{})),Lbl'-LT-'parserGenerator'-GT-'{}(Var'Unds'0:SortPrgGrammarCell{},Var'Unds'1:SortConfigGrammarCell{},Lbl'-LT-'ruleGrammar'-GT-'{}(VarGRAMMAR:SortSet{})))),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'21:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("225"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(225,8,228,32)"), UNIQUE'Unds'ID{}("1527beb1632bb16380d471108eeb6a6a8e08f3f731d7695474234818dbc05e4d")]

// rule `<generatedTop>`(`<k>`(`#productionsToSortDeclarations_PRODUCTIONS-TO-SORT-DECLARATIONS_KItem`(.KList)~>DotVar1) #as _10,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_1,`<declarations>`(`_DeclCellSet_`(`_DeclCellSet_`(`.DeclCellSet`(.KList),`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,_0))))),DotVar5)),_2)),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _20))~>SREST),_6,_7) #as _Configuration=>`<generatedTop>`(_10,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_1,`<declarations>`(`_DeclCellSet_`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(sortDeclaration(nameParam(inj{KSort,SortName}(SORT),dotSorts(.KList)),koreAttributesLbl(dotPatterns(.KList)))))),`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,_0))))),DotVar5)),_2)),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#appliedRule(_20))~>SREST),_6,_7) requires `notBool_`(`#isSortDeclared(_,_)_META-ACCESSORS_Bool_ModuleName_SortName`(MNAME,inj{KSort,SortName}(SORT),_Configuration)) ensures #token("true","Bool") [UNIQUE_ID(f2991352967ace848d51eb1aa4f69055618c06f0187425ad3d93b1ae0587762d) contentStartColumn(8) contentStartLine(404) org.kframework.attributes.Location(Location(404,8,413,51)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(Lbl'Hash'isSortDeclared'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SortName{}(VarMNAME:SortModuleName{},inj{SortKSort{}, SortSortName{}}(VarSORT:SortKSort{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'10:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Stop'DeclCellSet{}(),LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},Var'Unds'0:SortPrioritySeqBlock{}))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'20:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'10:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsortDeclaration{}(LblnameParam{}(inj{SortKSort{}, SortSortName{}}(VarSORT:SortKSort{}),LbldotSorts{}()),LblkoreAttributesLbl{}(LbldotPatterns{}()))))),LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},Var'Unds'0:SortPrioritySeqBlock{}))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'20:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("404"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(404,8,413,51)"), UNIQUE'Unds'ID{}("f2991352967ace848d51eb1aa4f69055618c06f0187425ad3d93b1ae0587762d")]

// rule `<generatedTop>`(`<k>`(`#productionsToSymbolDeclarations_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_KItem`(.KList)~>DotVar1) #as _9,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(PROD,inj{KAttributesDeclaration,OptionalAttributes}(kAttributesDeclaration(ATTRS)))))))),`.DeclCellSet`(.KList)),DotVar5)),_1)),DotVar3)),_3),_4,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_5,_6) #as _Configuration=>`<generatedTop>`(_9,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(PROD,inj{KAttributesDeclaration,OptionalAttributes}(kAttributesDeclaration(ATTRS)))))))),`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(symbolDeclaration(symbolSorts(`#symbolNameFromAttrList(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_SymbolName_AttrList`(ATTRS,_Configuration),dotSorts(.KList)),`#symbolArgumentsFromProduction(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Sorts_KProduction`(PROD),nameParam(inj{KSort,SortName}(SORT),dotSorts(.KList)),koreAttributesLbl(`#removeKlabelAttr(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(ATTRS))))))),DotVar5)),_1)),DotVar3)),_3),_4,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_5,_6) requires `notBool_`(`#isSymbolDeclared(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(MNAME,`#symbolNameFromAttrList(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_SymbolName_AttrList`(ATTRS,_Configuration),_Configuration)) ensures #token("true","Bool") [UNIQUE_ID(e323c49a3c31a99598c784061a4b635ab6decca97f728c02a52d38d966824d12) contentStartColumn(8) contentStartLine(471) org.kframework.attributes.Location(Location(471,8,483,78)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(Lbl'Hash'isSymbolDeclared'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},Lbl'Hash'symbolNameFromAttrList'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'SymbolName'Unds'AttrList{}(VarATTRS:SortAttrList{},Var'Unds'Configuration:SortGeneratedTopCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'9:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(VarPROD:SortKProduction{},inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}}(LblkAttributesDeclaration{}(VarATTRS:SortAttrList{})))))))),Lbl'Stop'DeclCellSet{}()),VarDotVar5:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'9:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(VarPROD:SortKProduction{},inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}}(LblkAttributesDeclaration{}(VarATTRS:SortAttrList{})))))))),LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(Lbl'Hash'symbolNameFromAttrList'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'SymbolName'Unds'AttrList{}(VarATTRS:SortAttrList{},Var'Unds'Configuration:SortGeneratedTopCell{}),LbldotSorts{}()),Lbl'Hash'symbolArgumentsFromProduction'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProduction{}(VarPROD:SortKProduction{}),LblnameParam{}(inj{SortKSort{}, SortSortName{}}(VarSORT:SortKSort{}),LbldotSorts{}()),LblkoreAttributesLbl{}(Lbl'Hash'removeKlabelAttr'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(VarATTRS:SortAttrList{}))))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("471"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(471,8,483,78)"), UNIQUE'Unds'ID{}("e323c49a3c31a99598c784061a4b635ab6decca97f728c02a52d38d966824d12")]

// rule `<generatedTop>`(`<k>`(`#translateRules_TRANSLATE-FUNCTION-RULES_KItem`(.KList)~>DotVar1) #as _9,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(noAttrsP(krewrite(application(symbolSorts(SYMBOL,dotSorts(.KList)),ARG_PATTERNS) #as LHS,RHS)))))),DotVar5)),_1)),DotVar3)),_3),_4,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_5,_6) #as _Configuration=>`<generatedTop>`(_9,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(`#lambda__`(`#getReturnSort(_,_)_META-ACCESSORS_Sort_ModuleName_SymbolName`(MNAME,SYMBOL,_Configuration),LHS,RHS)))),DotVar5)),_1)),DotVar3)),_3),_4,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_5,_6) requires `notBool_`(`#isFunctionSymbol(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(MNAME,SYMBOL,_Configuration)) ensures #token("true","Bool") [UNIQUE_ID(4888e34ca461ac445604b1ba3e54e00b38789a4e5df0d88d84d383a3b805babe) contentStartColumn(8) contentStartLine(558) org.kframework.attributes.Location(Location(558,8,569,54)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(Lbl'Hash'isFunctionSymbol'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSYMBOL:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{})),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'9:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblnoAttrsP{}(Lblkrewrite{}(\and{SortPattern{}}(Lblapplication{}(LblsymbolSorts{}(VarSYMBOL:SortSymbolName{},LbldotSorts{}()),VarARG'Unds'PATTERNS:SortPatterns{}),VarLHS:SortPattern{}),VarRHS:SortPattern{})))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'9:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(Lbl'Hash'lambda'UndsUnds'{}(Lbl'Hash'getReturnSort'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Sort'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSYMBOL:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}),VarLHS:SortPattern{},VarRHS:SortPattern{})))),VarDotVar5:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("558"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(558,8,569,54)"), UNIQUE'Unds'ID{}("4888e34ca461ac445604b1ba3e54e00b38789a4e5df0d88d84d383a3b805babe")]

// rule `<generatedTop>`(`<k>`(`#translateRules_TRANSLATE-FUNCTION-RULES_KItem`(.KList)~>DotVar1) #as _9,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kRuleLbl(noAttrsP(krewrite(application(symbolSorts(SYMBOL,dotSorts(.KList)),ARG_PATTERNS) #as LHS,RHS)))))),DotVar5)),_1)),DotVar3)),_3),_4,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_5,_6) #as _Configuration=>`<generatedTop>`(_9,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(axiomDeclaration(consSorts(inj{UpperName,Sort}(#token("R","UpperName")),dotSorts(.KList)),`\\equals{_,_}(_,_)_KORE-COMMON_Pattern_Sort_Sort_Pattern_Pattern`(`#getReturnSort(_,_)_META-ACCESSORS_Sort_ModuleName_SymbolName`(MNAME,SYMBOL,_Configuration),inj{UpperName,Sort}(#token("R","UpperName")),LHS,RHS),koreAttributesLbl(dotPatterns(.KList)))))),DotVar5)),_1)),DotVar3)),_3),_4,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_5,_6) requires `#isFunctionSymbol(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(MNAME,SYMBOL,_Configuration) ensures #token("true","Bool") [UNIQUE_ID(92d056ed1caec7c02c2275637dd88cd57bd907542ecc5f0da25322b8f29d02b5) contentStartColumn(8) contentStartLine(548) org.kframework.attributes.Location(Location(548,8,556,46)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Hash'isFunctionSymbol'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSYMBOL:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'9:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkRuleLbl{}(LblnoAttrsP{}(Lblkrewrite{}(\and{SortPattern{}}(Lblapplication{}(LblsymbolSorts{}(VarSYMBOL:SortSymbolName{},LbldotSorts{}()),VarARG'Unds'PATTERNS:SortPatterns{}),VarLHS:SortPattern{}),VarRHS:SortPattern{})))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'9:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblaxiomDeclaration{}(LblconsSorts{}(inj{SortUpperName{}, SortSort{}}(\dv{SortUpperName{}}("R")),LbldotSorts{}()),Lbl'Bash'equals'LBraUndsCommUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Sort'Unds'Pattern'Unds'Pattern{}(Lbl'Hash'getReturnSort'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Sort'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSYMBOL:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}),inj{SortUpperName{}, SortSort{}}(\dv{SortUpperName{}}("R")),VarLHS:SortPattern{},VarRHS:SortPattern{}),LblkoreAttributesLbl{}(LbldotPatterns{}()))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("548"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(548,8,556,46)"), UNIQUE'Unds'ID{}("92d056ed1caec7c02c2275637dd88cd57bd907542ecc5f0da25322b8f29d02b5")]

// rule `<generatedTop>`(`<k>`(``inj{Any,KItem}(PGM) #as _8``~>`#parseOuter_PARSE-OUTER_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _14))~>SREST),_2,_3) #as _Configuration=>`<generatedTop>`(`<k>`(`parseOuter(_)_PARSER-UTIL_KItem_String`(`tokenToString(_)_PARSER-UTIL_String_K`(_8),_Configuration)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_14))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aabb2036ff03a290e4315d4bcfc3059ad8c42e8df7223316465d2c519d05e1d6) contentStartColumn(8) contentStartLine(94) cool-like() org.kframework.attributes.Location(Location(94,8,94,77)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAny{}, SortKItem{}}(VarPGM:SortAny{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'parseOuter'Unds'PARSE-OUTER'Unds'KItem{}(),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'14:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblparseOuter'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}())),Var'Unds'Configuration:SortGeneratedTopCell{}),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'14:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("94"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(94,8,94,77)"), UNIQUE'Unds'ID{}("aabb2036ff03a290e4315d4bcfc3059ad8c42e8df7223316465d2c519d05e1d6")]

// rule `<generatedTop>`(`<k>`(``inj{Any,KItem}(PGM) #as _8``~>`#parseToEKore_PARSE-TO-EKORE_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _14))~>SREST),_2,_3) #as _Configuration=>`<generatedTop>`(`<k>`(`parseEKore(_)_PARSER-UTIL_KItem_String`(`tokenToString(_)_PARSER-UTIL_String_K`(_8),_Configuration)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_14))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c39a3f6853026a618d525569c77594d4263be0532d0c1090fba8ac1d85ef2d7) contentStartColumn(8) contentStartLine(274) cool-like() org.kframework.attributes.Location(Location(274,8,274,79)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortAny{}, SortKItem{}}(VarPGM:SortAny{}),Var'Unds'8:SortKItem{}),kseq{}(Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'14:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblparseEKore'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(Var'Unds'8:SortKItem{},dotk{}())),Var'Unds'Configuration:SortGeneratedTopCell{}),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'14:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("274"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(274,8,274,79)"), UNIQUE'Unds'ID{}("1c39a3f6853026a618d525569c77594d4263be0532d0c1090fba8ac1d85ef2d7")]

// rule `<generatedTop>`(`<k>`(`#parseProgram(_)_PARSE-PROGRAM_KItem_IOString`(inj{String,IOString}(PGM))~>DotVar1),`<definition>`(_5,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_2,_3,_4,`<parserGenerator>`(`<prgGrammar>`(GRAMMAR),_0,_1))),DotVar3)),_6) #as _16,_7,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _23))~>SREST),_8,_9) #as _Configuration=>`<generatedTop>`(`<k>`(`parseWithProductions(_,_,_)_PARSER-UTIL_KItem_Set_String_String`(GRAMMAR,#token("\"Pgm\"","String"),PGM,_Configuration)~>DotVar1),_16,_7,`<s>`(inj{Strategy,KItem}(#appliedRule(_23))~>SREST),_8,_9) requires `_=/=K_`(inj{Set,KItem}(GRAMMAR),inj{Set,KItem}(`.Set`(.KList))) ensures #token("true","Bool") [UNIQUE_ID(b339fac3d0955cfd019dfd8916188d080d6cf56efa0d6eeb91245567c7932184) contentStartColumn(8) contentStartLine(117) org.kframework.attributes.Location(Location(117,8,122,32)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarGRAMMAR:SortSet{}),dotk{}()),kseq{}(inj{SortSet{}, SortKItem{}}(Lbl'Stop'Set{}()),dotk{}())),
        \dv{SortBool{}}("true")), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(inj{SortString{}, SortIOString{}}(VarPGM:SortString{})),VarDotVar1:SortK{})),\and{SortDefinitionCell{}}(Lbl'-LT-'definition'-GT-'{}(Var'Unds'5:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'2:SortNameCell{},Var'Unds'3:SortAttributesCell{},Var'Unds'4:SortDeclarationsCell{},Lbl'-LT-'parserGenerator'-GT-'{}(Lbl'-LT-'prgGrammar'-GT-'{}(VarGRAMMAR:SortSet{}),Var'Unds'0:SortConfigGrammarCell{},Var'Unds'1:SortRuleGrammarCell{}))),VarDotVar3:SortModCellSet{})),Var'Unds'6:SortConfigInfoCell{}),Var'Unds'16:SortDefinitionCell{}),Var'Unds'7:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'23:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'8:SortGeneratedCounterCell{},Var'Unds'9:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblparseWithProductions'LParUndsCommUndsCommUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'Set'Unds'String'Unds'String{}(VarGRAMMAR:SortSet{},\dv{SortString{}}("Pgm"),VarPGM:SortString{},Var'Unds'Configuration:SortGeneratedTopCell{}),VarDotVar1:SortK{})),Var'Unds'16:SortDefinitionCell{},Var'Unds'7:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'23:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'8:SortGeneratedCounterCell{},Var'Unds'9:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("117"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,8,122,32)"), UNIQUE'Unds'ID{}("b339fac3d0955cfd019dfd8916188d080d6cf56efa0d6eeb91245567c7932184")]

// rule `<generatedTop>`(`<k>`(inj{Any,KItem}(PGM)~>`#frontendPipeline_COMMAND-LINE_KItem`(.KList)),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,`<kinkDeployedDir>`(DEPLOY_DIR) #as _14) #as _Configuration=>`<generatedTop>`(`<k>`(`parseOuter(_)_PARSER-UTIL_KItem_String`(`tokenToString(_)_COMMAND-LINE_String_Any`(PGM),_Configuration)~>`#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList)~>`#flattenProductions_FLATTEN-PRODUCTIONS_KItem`(.KList)~>`#createConfigGrammar_PARSE-CONFIG_KItem`(.KList)~>`#parseConfigBubbles_PARSE-CONFIG_KItem`(.KList)~>`#extractConfigInfo_PARSE-CONFIG_KItem`(.KList)~>`#createRuleGrammar_PARSE-RULE_KItem`(.KList)~>`#parseRuleBubbles_PARSE-RULE_KItem`(.KList)~>`#success_COMMAND-LINE_KItem`(.KList)),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_14) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d82de79541b2b476ebc1757f8c356ebb32a3d28e0d4fba96f4fcb0e17fddfed) contentStartColumn(8) contentStartLine(123) cool-like() org.kframework.attributes.Location(Location(123,8,139,52)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAny{}, SortKItem{}}(VarPGM:SortAny{}),kseq{}(Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(),dotk{}()))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},\and{SortKinkDeployedDirCell{}}(Lbl'-LT-'kinkDeployedDir'-GT-'{}(VarDEPLOY'Unds'DIR:SortString{}),Var'Unds'14:SortKinkDeployedDirCell{})),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblparseOuter'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(LbltokenToString'LParUndsRParUnds'COMMAND-LINE'Unds'String'Unds'Any{}(VarPGM:SortAny{}),Var'Unds'Configuration:SortGeneratedTopCell{}),kseq{}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),kseq{}(Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(),kseq{}(Lbl'Hash'createConfigGrammar'Unds'PARSE-CONFIG'Unds'KItem{}(),kseq{}(Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(),kseq{}(Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(),kseq{}(Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(),kseq{}(Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(),kseq{}(Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(),dotk{}())))))))))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'14:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("123"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,8,139,52)"), UNIQUE'Unds'ID{}("2d82de79541b2b476ebc1757f8c356ebb32a3d28e0d4fba96f4fcb0e17fddfed")]

// rule `<generatedTop>`(`<k>`(inj{Any,KItem}(PGM)~>`#kastPipeline(_)_COMMAND-LINE_KItem_String`(PATH)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _14))~>SREST),_2,_3) #as _Configuration=>`<generatedTop>`(`<k>`(`parseOuter(_)_PARSER-UTIL_KItem_String`(`tokenToString(_)_COMMAND-LINE_String_Any`(PGM),_Configuration)~>`#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList)~>`#flattenProductions_FLATTEN-PRODUCTIONS_KItem`(.KList)~>`#collectPgmGrammar_PARSE-PROGRAM_KItem`(.KList)~>`#parseProgramPath(_)_PARSE-PROGRAM_KItem_String`(PATH)~>`#success_COMMAND-LINE_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_14))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9cefad26ef0557fe9952bd0d7104f1260e2834dfd744b50a15fd54409cfe4523) contentStartColumn(8) contentStartLine(103) cool-like() org.kframework.attributes.Location(Location(103,8,109,16)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortAny{}, SortKItem{}}(VarPGM:SortAny{}),kseq{}(Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(VarPATH:SortString{}),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'14:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblparseOuter'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(LbltokenToString'LParUndsRParUnds'COMMAND-LINE'Unds'String'Unds'Any{}(VarPGM:SortAny{}),Var'Unds'Configuration:SortGeneratedTopCell{}),kseq{}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),kseq{}(Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(),kseq{}(Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(),kseq{}(Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(VarPATH:SortString{}),kseq{}(Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(),VarDotVar1:SortK{}))))))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'14:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("103"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,8,109,16)"), UNIQUE'Unds'ID{}("9cefad26ef0557fe9952bd0d7104f1260e2834dfd744b50a15fd54409cfe4523")]

// rule `#addCasts(_)_PARSER-GEN-HELPERS_Set_Set`(Prds)=>`#addCasts2(_,_)_PARSER-GEN-HELPERS_Set_Set_Set`(Prds,`noCastSortsInit_PARSER-GEN-HELPERS_Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ad124c85036d284a0c4599f09874837de7f330182faaf1baf60fb43f9ffd5468) contentStartColumn(8) contentStartLine(52) org.kframework.attributes.Location(Location(52,8,52,60)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addCasts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(VarPrds:SortSet{}),
        Lbl'Hash'addCasts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(VarPrds:SortSet{},LblnoCastSortsInit'Unds'PARSER-GEN-HELPERS'Unds'Set{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("52"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(52,8,52,60)"), UNIQUE'Unds'ID{}("ad124c85036d284a0c4599f09874837de7f330182faaf1baf60fb43f9ffd5468")]

// rule `#addCasts2(_,_)_PARSER-GEN-HELPERS_Set_Set_Set`(Prds,_0)=>Prds requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1307c67771b0952eb46fc1c9062942fab0288fed1d0aaa62755a0d2be89a3b6b) contentStartColumn(8) contentStartLine(65) org.kframework.attributes.Location(Location(65,8,65,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'3:SortUpperName{},
                    \exists{R} (Var'Unds'6:SortSet{},
                    \exists{R} (Var'Unds'5:SortSet{},
                    \exists{R} (Var'Unds'4:SortPrioritySeqBlock{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortUpperName{}, SortKItem{}}(Var'Unds'3:SortUpperName{}),Var'Unds'6:SortSet{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    VarPrds:SortSet{},
                    Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(inj{SortUpperName{}, SortKSort{}}(Var'Unds'3:SortUpperName{}),Var'Unds'4:SortPrioritySeqBlock{}))),Var'Unds'5:SortSet{}),Lbl'Stop'Set{}())
                )),\and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    Var'Unds'0:SortSet{},
                    Lbl'Unds'Set'Unds'{}(Var'Unds'6:SortSet{},Lbl'Stop'Set{}())
                )),
                \top{R} ()
              ))
          ))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addCasts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(VarPrds:SortSet{},Var'Unds'0:SortSet{}),
        VarPrds:SortSet{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("65"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(65,8,65,35)"), owise{}(), UNIQUE'Unds'ID{}("1307c67771b0952eb46fc1c9062942fab0288fed1d0aaa62755a0d2be89a3b6b")]

// rule `#addCasts2(_,_)_PARSER-GEN-HELPERS_Set_Set_Set`(`_Set_`(`_Set_`(`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(inj{UpperName,KSort}(SORT),PROD))),_0),`.Set`(.KList)),`_Set_`(SORTS,`.Set`(.KList)))=>`#addCasts2(_,_)_PARSER-GEN-HELPERS_Set_Set_Set`(`_Set_`(`_Set_`(`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(inj{UpperName,KSort}(SORT),PROD))),_0),`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(inj{UpperName,KSort}(SORT),inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(kProduction(nonTerminalLbl(inj{UpperName,KSort}(SORT)),inj{KProductionItem,KProduction}(terminalLbl(`String2EKoreKString(_)_KORE-HELPERS_EKoreKString_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(#token("\"\\\":\"","String"),`token2String(_)_PARSER-GEN-HELPERS_String_UpperName`(SORT)),#token("\"\\\"\"","String")))))),inj{KAttributesDeclaration,OptionalAttributes}(kAttributesDeclaration(consAttrList(tagContent(inj{LowerName,KEY}(#token("klabel","LowerName")),`String2TagContents(_)_KORE-HELPERS_TagContents_String`(`_+String__STRING_String_String_String`(#token("\"SemanticCastTo\"","String"),`token2String(_)_PARSER-GEN-HELPERS_String_UpperName`(SORT)))),dotAttrList(.KList)))))))))),`_Set_`(SORTS,`SetItem`(inj{UpperName,KItem}(SORT)))) requires `notBool_`(`Set:in`(inj{UpperName,KItem}(SORT),SORTS)) ensures #token("true","Bool") [UNIQUE_ID(5dbfaaeff7b4502054ae259a0eac9a05ecd5ae1030e570d749ce1d596a773df4) contentStartColumn(8) contentStartLine(53) org.kframework.attributes.Location(Location(53,8,64,36)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortUpperName{}, SortKItem{}}(VarSORT:SortUpperName{}),VarSORTS:SortSet{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addCasts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(inj{SortUpperName{}, SortKSort{}}(VarSORT:SortUpperName{}),VarPROD:SortPrioritySeqBlock{}))),Var'Unds'0:SortSet{}),Lbl'Stop'Set{}()),Lbl'Unds'Set'Unds'{}(VarSORTS:SortSet{},Lbl'Stop'Set{}())),
        Lbl'Hash'addCasts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(inj{SortUpperName{}, SortKSort{}}(VarSORT:SortUpperName{}),VarPROD:SortPrioritySeqBlock{}))),Var'Unds'0:SortSet{}),LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(inj{SortUpperName{}, SortKSort{}}(VarSORT:SortUpperName{}),inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(LblkProduction{}(LblnonTerminalLbl{}(inj{SortUpperName{}, SortKSort{}}(VarSORT:SortUpperName{})),inj{SortKProductionItem{}, SortKProduction{}}(LblterminalLbl{}(LblString2EKoreKString'LParUndsRParUnds'KORE-HELPERS'Unds'EKoreKString'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("\":"),Lbltoken2String'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'String'Unds'UpperName{}(VarSORT:SortUpperName{})),\dv{SortString{}}("\"")))))),inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}}(LblkAttributesDeclaration{}(LblconsAttrList{}(LbltagContent{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("klabel")),LblString2TagContents'LParUndsRParUnds'KORE-HELPERS'Unds'TagContents'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("SemanticCastTo"),Lbltoken2String'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'String'Unds'UpperName{}(VarSORT:SortUpperName{})))),LbldotAttrList{}()))))))))),Lbl'Unds'Set'Unds'{}(VarSORTS:SortSet{},LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(VarSORT:SortUpperName{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("53"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,8,64,36)"), UNIQUE'Unds'ID{}("5dbfaaeff7b4502054ae259a0eac9a05ecd5ae1030e570d749ce1d596a773df4")]

// rule `#addRuleCells(_)_PARSE-RULE_Set_Set`(Prds,_Configuration)=>`#addRuleCells2(_,_)_PARSE-RULE_Set_Set_Set`(Prds,`.Set`(.KList),_Configuration) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(48240ed2ef0be3edcf00f71c0ba9821da8d4aaae707f48251c9729cd9b291d04) contentStartColumn(8) contentStartLine(240) org.kframework.attributes.Location(Location(240,8,240,57)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addRuleCells'LParUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set{}(VarPrds:SortSet{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Hash'addRuleCells2'LParUndsCommUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set'Unds'Set{}(VarPrds:SortSet{},Lbl'Stop'Set{}(),Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("240"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(240,8,240,57)"), UNIQUE'Unds'ID{}("48240ed2ef0be3edcf00f71c0ba9821da8d4aaae707f48251c9729cd9b291d04")]

// rule `#addRuleCells2(_,_)_PARSE-RULE_Set_Set_Set`(Prods,_0,_Configuration)=>Prods requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3a5f4d97bb79c8a2c410cce91a38234a8ff78ebe0c76cab15ba54be3325c58fe) contentStartColumn(8) contentStartLine(259) org.kframework.attributes.Location(Location(259,8,259,41)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'5:SortSet{},
                    \exists{R} (Var'Unds'15:SortKinkDeployedDirCell{},
                    \exists{R} (Var'Unds'16:SortGeneratedTopCell{},
                    \exists{R} (Var'Unds'14:SortGeneratedCounterCell{},
                    \exists{R} (Var'Unds'4:SortSet{},
                    \exists{R} (Var'Unds'8:SortModulesCell{},
                    \exists{R} (Var'Unds'13:SortSCell{},
                    \exists{R} (Var'Unds'6:SortKCell{},
                    \exists{R} (Var'Unds'11:SortCollectedCell{},
                    \exists{R} (Var'Unds'7:SortDefnAttrsCell{},
                    \exists{R} (Var'Unds'12:SortExitCodeCell{},
                    \exists{R} (Var'Unds'10:SortMap{},
                    \exists{R} (Var'Unds'9:SortString{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortString{}, SortKItem{}}(Var'Unds'9:SortString{}),Var'Unds'5:SortSet{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    VarProds:SortSet{},
                    Lbl'Unds'Set'Unds'{}(Var'Unds'4:SortSet{},Lbl'Stop'Set{}())
                )),\and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    Var'Unds'0:SortSet{},
                    Lbl'Unds'Set'Unds'{}(Var'Unds'5:SortSet{},Lbl'Stop'Set{}())
                )),\and{R} (
                \ceil{SortGeneratedTopCell{}, R} (
                  \and{SortGeneratedTopCell{}} (
                    Var'Unds'Configuration:SortGeneratedTopCell{},
                    \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'6:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'7:SortDefnAttrsCell{},Var'Unds'8:SortModulesCell{},Lbl'-LT-'configInfo'-GT-'{}(Lbl'-LT-'cellName'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortString{}, SortKItem{}}(Var'Unds'9:SortString{}),inj{SortString{}, SortKItem{}}(\dv{SortString{}}("CellName"))),Var'Unds'10:SortMap{})),Var'Unds'11:SortCollectedCell{})),Var'Unds'12:SortExitCodeCell{},Var'Unds'13:SortSCell{},Var'Unds'14:SortGeneratedCounterCell{},Var'Unds'15:SortKinkDeployedDirCell{}),Var'Unds'16:SortGeneratedTopCell{})
                )),
                \top{R} ()
              )))
          )))))))))))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addRuleCells2'LParUndsCommUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set'Unds'Set{}(VarProds:SortSet{},Var'Unds'0:SortSet{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        VarProds:SortSet{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("259"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(259,8,259,41)"), owise{}(), UNIQUE'Unds'ID{}("3a5f4d97bb79c8a2c410cce91a38234a8ff78ebe0c76cab15ba54be3325c58fe")]

// rule `#addRuleCells2(_,_)_PARSE-RULE_Set_Set_Set`(`_Set_`(Prds,`.Set`(.KList)),`_Set_`(Cells,`.Set`(.KList)),`<generatedTop>`(_2,`<definition>`(_0,_1,`<configInfo>`(`<cellName>`(`_Map_`(`_|->_`(inj{String,KItem}(CellName),inj{String,KItem}(#token("\"CellName\"","String"))),DotVar3)),DotVar2)),_3,_4,_5,_6) #as _Configuration)=>`#addRuleCells2(_,_)_PARSE-RULE_Set_Set_Set`(`_Set_`(Prds,`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(inj{UpperName,KSort}(#token("Cell","UpperName")),inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(kProduction(terminalLbl(`String2EKoreKString(_)_KORE-HELPERS_EKoreKString_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(#token("\"\\\"<\"","String"),CellName),#token("\">\\\"\"","String")))),kProduction(nonTerminalLbl(inj{UpperName,KSort}(#token("OptionalDots","UpperName"))),kProduction(nonTerminalLbl(inj{UpperName,KSort}(#token("K","UpperName"))),kProduction(nonTerminalLbl(inj{UpperName,KSort}(#token("OptionalDots","UpperName"))),inj{KProductionItem,KProduction}(terminalLbl(`String2EKoreKString(_)_KORE-HELPERS_EKoreKString_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(#token("\"\\\"</\"","String"),CellName),#token("\">\\\"\"","String"))))))))),inj{KAttributesDeclaration,OptionalAttributes}(kAttributesDeclaration(consAttrList(tagContent(inj{LowerName,KEY}(#token("klabel","LowerName")),`String2TagContents(_)_KORE-HELPERS_TagContents_String`(`_+String__STRING_String_String_String`(CellName,#token("\"cell\"","String")))),consAttrList(tagContent(inj{LowerName,KEY}(#token("cellName","LowerName")),`String2TagContents(_)_KORE-HELPERS_TagContents_String`(CellName)),consAttrList(tagSimple(inj{LowerName,KEY}(#token("cell","LowerName"))),dotAttrList(.KList)))))))))))),`_Set_`(Cells,`SetItem`(inj{String,KItem}(CellName))),_Configuration) requires `notBool_`(`Set:in`(inj{String,KItem}(CellName),Cells)) ensures #token("true","Bool") [UNIQUE_ID(217babede545962fca1316ba2e57386c6f0174b945fef568531805c5df1e1874) contentStartColumn(8) contentStartLine(241) org.kframework.attributes.Location(Location(241,8,258,40)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortString{}, SortKItem{}}(VarCellName:SortString{}),VarCells:SortSet{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addRuleCells2'LParUndsCommUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(VarPrds:SortSet{},Lbl'Stop'Set{}()),Lbl'Unds'Set'Unds'{}(VarCells:SortSet{},Lbl'Stop'Set{}()),\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'2:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'0:SortDefnAttrsCell{},Var'Unds'1:SortModulesCell{},Lbl'-LT-'configInfo'-GT-'{}(Lbl'-LT-'cellName'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortString{}, SortKItem{}}(VarCellName:SortString{}),inj{SortString{}, SortKItem{}}(\dv{SortString{}}("CellName"))),VarDotVar3:SortMap{})),VarDotVar2:SortCollectedCell{})),Var'Unds'3:SortExitCodeCell{},Var'Unds'4:SortSCell{},Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        Lbl'Hash'addRuleCells2'LParUndsCommUndsRParUnds'PARSE-RULE'Unds'Set'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(VarPrds:SortSet{},LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(inj{SortUpperName{}, SortKSort{}}(\dv{SortUpperName{}}("Cell")),inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(LblkProduction{}(LblterminalLbl{}(LblString2EKoreKString'LParUndsRParUnds'KORE-HELPERS'Unds'EKoreKString'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("\"<"),VarCellName:SortString{}),\dv{SortString{}}(">\"")))),LblkProduction{}(LblnonTerminalLbl{}(inj{SortUpperName{}, SortKSort{}}(\dv{SortUpperName{}}("OptionalDots"))),LblkProduction{}(LblnonTerminalLbl{}(inj{SortUpperName{}, SortKSort{}}(\dv{SortUpperName{}}("K"))),LblkProduction{}(LblnonTerminalLbl{}(inj{SortUpperName{}, SortKSort{}}(\dv{SortUpperName{}}("OptionalDots"))),inj{SortKProductionItem{}, SortKProduction{}}(LblterminalLbl{}(LblString2EKoreKString'LParUndsRParUnds'KORE-HELPERS'Unds'EKoreKString'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("\"</"),VarCellName:SortString{}),\dv{SortString{}}(">\""))))))))),inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}}(LblkAttributesDeclaration{}(LblconsAttrList{}(LbltagContent{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("klabel")),LblString2TagContents'LParUndsRParUnds'KORE-HELPERS'Unds'TagContents'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarCellName:SortString{},\dv{SortString{}}("cell")))),LblconsAttrList{}(LbltagContent{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("cellName")),LblString2TagContents'LParUndsRParUnds'KORE-HELPERS'Unds'TagContents'Unds'String{}(VarCellName:SortString{})),LblconsAttrList{}(LbltagSimple{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("cell"))),LbldotAttrList{}()))))))))))),Lbl'Unds'Set'Unds'{}(VarCells:SortSet{},LblSetItem{}(inj{SortString{}, SortKItem{}}(VarCellName:SortString{}))),Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("241"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(241,8,258,40)"), UNIQUE'Unds'ID{}("217babede545962fca1316ba2e57386c6f0174b945fef568531805c5df1e1874")]

// rule `#addSubsorts(_)_PARSER-GEN-HELPERS_Set_Set`(Prds)=>`#addSubsorts2(_,_)_PARSER-GEN-HELPERS_Set_Set_Set`(Prds,`noLatticeSortsInit_PARSER-GEN-HELPERS_Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c7db661320bf7461fbdb692d1acb524d928c7cb30d23721bff615566af3333c) contentStartColumn(8) contentStartLine(70) org.kframework.attributes.Location(Location(70,8,70,69)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addSubsorts'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set{}(VarPrds:SortSet{}),
        Lbl'Hash'addSubsorts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(VarPrds:SortSet{},LblnoLatticeSortsInit'Unds'PARSER-GEN-HELPERS'Unds'Set{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("70"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(70,8,70,69)"), UNIQUE'Unds'ID{}("8c7db661320bf7461fbdb692d1acb524d928c7cb30d23721bff615566af3333c")]

// rule `#addSubsorts2(_,_)_PARSER-GEN-HELPERS_Set_Set_Set`(Prds,_0)=>Prds requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3ea044a7f111dd4aa14ae3ed5e8dcb97b8ee9e5eb6ebf26317eed98404ea6102) contentStartColumn(8) contentStartLine(79) org.kframework.attributes.Location(Location(79,8,79,38)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortPrioritySeqBlock{},
                    \exists{R} (Var'Unds'3:SortSet{},
                    \exists{R} (Var'Unds'1:SortKSort{},
                    \exists{R} (Var'Unds'4:SortSet{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortKSort{}, SortKItem{}}(Var'Unds'1:SortKSort{}),Var'Unds'4:SortSet{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    VarPrds:SortSet{},
                    Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(Var'Unds'1:SortKSort{},Var'Unds'2:SortPrioritySeqBlock{}))),Var'Unds'3:SortSet{}),Lbl'Stop'Set{}())
                )),\and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    Var'Unds'0:SortSet{},
                    Lbl'Unds'Set'Unds'{}(Var'Unds'4:SortSet{},Lbl'Stop'Set{}())
                )),
                \top{R} ()
              ))
          ))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addSubsorts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(VarPrds:SortSet{},Var'Unds'0:SortSet{}),
        VarPrds:SortSet{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("79"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(79,8,79,38)"), owise{}(), UNIQUE'Unds'ID{}("3ea044a7f111dd4aa14ae3ed5e8dcb97b8ee9e5eb6ebf26317eed98404ea6102")]

// rule `#addSubsorts2(_,_)_PARSER-GEN-HELPERS_Set_Set_Set`(`_Set_`(`_Set_`(`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(SORT,PROD))),_0),`.Set`(.KList)),`_Set_`(SORTS,`.Set`(.KList)))=>`#addSubsorts2(_,_)_PARSER-GEN-HELPERS_Set_Set_Set`(`_Set_`(`_Set_`(`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(SORT,PROD))),_0),`_Set_`(`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(inj{UpperName,KSort}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"K\"","String"))),inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(inj{KProductionItem,KProduction}(nonTerminalLbl(SORT)),noKAttributesDeclaration(.KList)))))),`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(SORT,inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(inj{KProductionItem,KProduction}(nonTerminalLbl(inj{UpperName,KSort}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KBott\"","String"))))),noKAttributesDeclaration(.KList)))))))),`_Set_`(SORTS,`SetItem`(inj{KSort,KItem}(SORT)))) requires `notBool_`(`Set:in`(inj{KSort,KItem}(SORT),SORTS)) ensures #token("true","Bool") [UNIQUE_ID(8e63cc34409c141e762fe62d97f8ebe218c8c557b1c2d17fa6a8982212def9ca) contentStartColumn(8) contentStartLine(71) org.kframework.attributes.Location(Location(71,8,78,36)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortKSort{}, SortKItem{}}(VarSORT:SortKSort{}),VarSORTS:SortSet{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'addSubsorts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},VarPROD:SortPrioritySeqBlock{}))),Var'Unds'0:SortSet{}),Lbl'Stop'Set{}()),Lbl'Unds'Set'Unds'{}(VarSORTS:SortSet{},Lbl'Stop'Set{}())),
        Lbl'Hash'addSubsorts2'LParUndsCommUndsRParUnds'PARSER-GEN-HELPERS'Unds'Set'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},VarPROD:SortPrioritySeqBlock{}))),Var'Unds'0:SortSet{}),Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(inj{SortUpperName{}, SortKSort{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("K"))),inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(inj{SortKProductionItem{}, SortKProduction{}}(LblnonTerminalLbl{}(VarSORT:SortKSort{})),LblnoKAttributesDeclaration{}()))))),LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(inj{SortKProductionItem{}, SortKProduction{}}(LblnonTerminalLbl{}(inj{SortUpperName{}, SortKSort{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KBott"))))),LblnoKAttributesDeclaration{}()))))))),Lbl'Unds'Set'Unds'{}(VarSORTS:SortSet{},LblSetItem{}(inj{SortKSort{}, SortKItem{}}(VarSORT:SortKSort{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("71"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,8,78,36)"), UNIQUE'Unds'ID{}("8e63cc34409c141e762fe62d97f8ebe218c8c557b1c2d17fa6a8982212def9ca")]

// rule #appliedRule(#token("regular","#RuleTag") #as _1)=>#applyRule(_1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(db36df80d81933bf54225a2f5d430e25be7301e6572306f36e557d81b5d836ad) anywhere() contentStartColumn(10) contentStartLine(1368) org.kframework.attributes.Location(Location(1368,10,1368,32)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStrategy{},R} (
        Lbl'Hash'appliedRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'1:Sort'Hash'RuleTag{})),
        Lbl'Hash'applyRule{}(Var'Unds'1:Sort'Hash'RuleTag{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), anywhere{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1368"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1368,10,1368,32)"), UNIQUE'Unds'ID{}("db36df80d81933bf54225a2f5d430e25be7301e6572306f36e557d81b5d836ad")]

// rule `#attr2Pattern(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Pattern_Attr`(tagSimple(inj{LowerName,KEY}(KEY)))=>application(symbolSorts(inj{LowerName,SymbolName}(KEY),dotSorts(.KList)),dotPatterns(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(df09a41a5714d13d6f0e094ccd504172591e2e33721eb86fa5e06d911caa0a24) contentStartColumn(8) contentStartLine(507) org.kframework.attributes.Location(Location(507,8,508,36)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPattern{},R} (
        Lbl'Hash'attr2Pattern'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Pattern'Unds'Attr{}(LbltagSimple{}(inj{SortLowerName{}, SortKEY{}}(VarKEY:SortLowerName{}))),
        Lblapplication{}(LblsymbolSorts{}(inj{SortLowerName{}, SortSymbolName{}}(VarKEY:SortLowerName{}),LbldotSorts{}()),LbldotPatterns{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("507"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(507,8,508,36)"), UNIQUE'Unds'ID{}("df09a41a5714d13d6f0e094ccd504172591e2e33721eb86fa5e06d911caa0a24")]

// rule `#attrList2Patterns(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(consAttrList(ATTR,ATTRS))=>consPatterns(`#attr2Pattern(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Pattern_Attr`(ATTR),`#attrList2Patterns(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(ATTRS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(10418d9976c284bd324a19c247edc0710a6cbfa6ec1770e345543d9ee1466f46) contentStartColumn(8) contentStartLine(511) org.kframework.attributes.Location(Location(511,8,511,89)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPatterns{},R} (
        Lbl'Hash'attrList2Patterns'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(LblconsAttrList{}(VarATTR:SortAttr{},VarATTRS:SortAttrList{})),
        LblconsPatterns{}(Lbl'Hash'attr2Pattern'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Pattern'Unds'Attr{}(VarATTR:SortAttr{}),Lbl'Hash'attrList2Patterns'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(VarATTRS:SortAttrList{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("511"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(511,8,511,89)"), UNIQUE'Unds'ID{}("10418d9976c284bd324a19c247edc0710a6cbfa6ec1770e345543d9ee1466f46")]

// rule `#attrList2Patterns(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(dotAttrList(.KList))=>dotPatterns(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(325b3b1fe8638843ddef67425b3b639edec4764b571694a24f0b079e95239fc2) contentStartColumn(8) contentStartLine(512) org.kframework.attributes.Location(Location(512,8,512,50)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPatterns{},R} (
        Lbl'Hash'attrList2Patterns'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(LbldotAttrList{}()),
        LbldotPatterns{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("512"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(512,8,512,50)"), UNIQUE'Unds'ID{}("325b3b1fe8638843ddef67425b3b639edec4764b571694a24f0b079e95239fc2")]

// rule `#getAllProds(_)_META-ACCESSORS_Set_ModuleName`(MName,_Configuration)=>`#getAllProdsSet(_)_META-ACCESSORS_Set_Set`(`#getImportedModules(_)_META-ACCESSORS_Set_ModuleName`(MName,_Configuration),_Configuration) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d115f90bdda1f52f48cc6bc422f3951dc8274eb8867156a734fc9189ca9f42db) contentStartColumn(8) contentStartLine(139) org.kframework.attributes.Location(Location(139,8,139,74)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getAllProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMName:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Hash'getAllProdsSet'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Set{}(Lbl'Hash'getImportedModules'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMName:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("139"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,8,139,74)"), UNIQUE'Unds'ID{}("d115f90bdda1f52f48cc6bc422f3951dc8274eb8867156a734fc9189ca9f42db")]

// rule `#getAllProdsSet(_)_META-ACCESSORS_Set_Set`(`.Set`(.KList) #as _1,_Configuration)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f77d2a1f837c716f1715a06f23cb789d711d58b71cf92c17a03da5dda4d497f4) contentStartColumn(8) contentStartLine(141) org.kframework.attributes.Location(Location(141,8,141,37)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getAllProdsSet'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Set{}(\and{SortSet{}}(Lbl'Stop'Set{}(),Var'Unds'1:SortSet{}),Var'Unds'Configuration:SortGeneratedTopCell{}),
        Var'Unds'1:SortSet{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("141"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,8,141,37)"), UNIQUE'Unds'ID{}("f77d2a1f837c716f1715a06f23cb789d711d58b71cf92c17a03da5dda4d497f4")]

// rule `#getAllProdsSet(_)_META-ACCESSORS_Set_Set`(`_Set_`(`SetItem`(inj{ModuleName,KItem}(MName)),Rest),_Configuration)=>`_Set_`(`#getLocalProds(_)_META-ACCESSORS_Set_ModuleName`(MName,_Configuration),`#getAllProdsSet(_)_META-ACCESSORS_Set_Set`(Rest,_Configuration)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(44bd0a55aa81eba9061a8718520020e764e07483a2a62e568ac23d72eb86f973) contentStartColumn(8) contentStartLine(140) org.kframework.attributes.Location(Location(140,8,140,91)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getAllProdsSet'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortModuleName{}, SortKItem{}}(VarMName:SortModuleName{})),VarRest:SortSet{}),Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Unds'Set'Unds'{}(Lbl'Hash'getLocalProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMName:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),Lbl'Hash'getAllProdsSet'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Set{}(VarRest:SortSet{},Var'Unds'Configuration:SortGeneratedTopCell{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("140"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(140,8,140,91)"), UNIQUE'Unds'ID{}("44bd0a55aa81eba9061a8718520020e764e07483a2a62e568ac23d72eb86f973")]

// rule `#getAttributeContent(_,_)_META-ACCESSORS_TagContents_KEY_AttrList`(KEY,consAttrList(_0,REST))=>`#getAttributeContent(_,_)_META-ACCESSORS_TagContents_KEY_AttrList`(KEY,REST) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(41c9ba2646058f9b836ca7f5e683106df9ac2678240ea981801c8b2139466bc1) contentStartColumn(8) contentStartLine(222) org.kframework.attributes.Location(Location(222,8,223,39)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'6:SortAttrList{},
                    \exists{R} (Var'Unds'5:SortTagContents{},
                    \exists{R} (Var'Unds'4:SortKEY{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortKEY{}, R} (
                  \and{SortKEY{}} (
                    VarKEY:SortKEY{},
                    Var'Unds'4:SortKEY{}
                )),\and{R} (
                \ceil{SortAttrList{}, R} (
                  \and{SortAttrList{}} (
                    LblconsAttrList{}(Var'Unds'0:SortAttr{},VarREST:SortAttrList{}),
                    LblconsAttrList{}(LbltagContent{}(Var'Unds'4:SortKEY{},Var'Unds'5:SortTagContents{}),Var'Unds'6:SortAttrList{})
                )),
                \top{R} ()
              ))
          )))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortTagContents{},R} (
        Lbl'Hash'getAttributeContent'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'TagContents'Unds'KEY'Unds'AttrList{}(VarKEY:SortKEY{},LblconsAttrList{}(Var'Unds'0:SortAttr{},VarREST:SortAttrList{})),
        Lbl'Hash'getAttributeContent'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'TagContents'Unds'KEY'Unds'AttrList{}(VarKEY:SortKEY{},VarREST:SortAttrList{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("222"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,8,223,39)"), owise{}(), UNIQUE'Unds'ID{}("41c9ba2646058f9b836ca7f5e683106df9ac2678240ea981801c8b2139466bc1")]

// rule `#getAttributeContent(_,_)_META-ACCESSORS_TagContents_KEY_AttrList`(KEY,consAttrList(tagContent(KEY,CONTENT),_0))=>CONTENT requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(96bb4bbc66b359a9429377f94c57397865e0a506f7cbfd14d96e3e8ebb7e68f2) contentStartColumn(8) contentStartLine(221) org.kframework.attributes.Location(Location(221,8,221,75)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTagContents{},R} (
        Lbl'Hash'getAttributeContent'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'TagContents'Unds'KEY'Unds'AttrList{}(VarKEY:SortKEY{},LblconsAttrList{}(LbltagContent{}(VarKEY:SortKEY{},VarCONTENT:SortTagContents{}),Var'Unds'0:SortAttrList{})),
        VarCONTENT:SortTagContents{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("221"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(221,8,221,75)"), UNIQUE'Unds'ID{}("96bb4bbc66b359a9429377f94c57397865e0a506f7cbfd14d96e3e8ebb7e68f2")]

// rule `#getDeclaredKoreSymbolsFromDecls(_)_META-ACCESSORS_Set_Declarations`(consDeclarations(DECL,DECLS))=>`#getDeclaredKoreSymbolsFromDecls(_)_META-ACCESSORS_Set_Declarations`(DECLS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c081efe85c5a0406ea93aaf3dd87c10c8a599c492b75793cb8592622d98ede4a) contentStartColumn(8) contentStartLine(185) org.kframework.attributes.Location(Location(185,8,186,47)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortSorts{},
                    \exists{R} (Var'Unds'3:SortSort{},
                    \exists{R} (Var'Unds'1:SortSorts{},
                    \exists{R} (Var'Unds'5:SortDeclarations{},
                    \exists{R} (Var'Unds'0:SortSymbolName{},
                    \exists{R} (Var'Unds'4:SortAttribute{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortDeclarations{}, R} (
                  \and{SortDeclarations{}} (
                    LblconsDeclarations{}(VarDECL:SortDeclaration{},VarDECLS:SortDeclarations{}),
                    LblconsDeclarations{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(Var'Unds'0:SortSymbolName{},Var'Unds'1:SortSorts{}),Var'Unds'2:SortSorts{},Var'Unds'3:SortSort{},Var'Unds'4:SortAttribute{})),Var'Unds'5:SortDeclarations{})
                )),
                \top{R} ()
              )
          ))))))),
          \or{R} (
  \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortDeclarations{}, R} (
                  \and{SortDeclarations{}} (
                    LblconsDeclarations{}(VarDECL:SortDeclaration{},VarDECLS:SortDeclarations{}),
                    LbldotDeclarations{}()
                )),
                \top{R} ()
              )
          ),
          \bottom{R}()
        ))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getDeclaredKoreSymbolsFromDecls'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Declarations{}(LblconsDeclarations{}(VarDECL:SortDeclaration{},VarDECLS:SortDeclarations{})),
        Lbl'Hash'getDeclaredKoreSymbolsFromDecls'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Declarations{}(VarDECLS:SortDeclarations{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("185"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(185,8,186,47)"), owise{}(), UNIQUE'Unds'ID{}("c081efe85c5a0406ea93aaf3dd87c10c8a599c492b75793cb8592622d98ede4a")]

// rule `#getDeclaredKoreSymbolsFromDecls(_)_META-ACCESSORS_Set_Declarations`(consDeclarations(inj{KoreDeclaration,Declaration}(symbolDeclaration(symbolSorts(SYMBOL_NAME,SORT_PARAM),SORT_ARGS,SORT,ATTRS)),DECLS))=>`_Set_`(`SetItem`(inj{SymbolName,KItem}(SYMBOL_NAME)),`#getDeclaredKoreSymbolsFromDecls(_)_META-ACCESSORS_Set_Declarations`(DECLS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eac8d24ed86295f34b2905b927c7df3b6d7580b757d893a5c64cf712ac8adfbb) contentStartColumn(8) contentStartLine(178) org.kframework.attributes.Location(Location(178,8,182,68)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getDeclaredKoreSymbolsFromDecls'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Declarations{}(LblconsDeclarations{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(VarSYMBOL'Unds'NAME:SortSymbolName{},VarSORT'Unds'PARAM:SortSorts{}),VarSORT'Unds'ARGS:SortSorts{},VarSORT:SortSort{},VarATTRS:SortAttribute{})),VarDECLS:SortDeclarations{})),
        Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSymbolName{}, SortKItem{}}(VarSYMBOL'Unds'NAME:SortSymbolName{})),Lbl'Hash'getDeclaredKoreSymbolsFromDecls'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Declarations{}(VarDECLS:SortDeclarations{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("178"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(178,8,182,68)"), UNIQUE'Unds'ID{}("eac8d24ed86295f34b2905b927c7df3b6d7580b757d893a5c64cf712ac8adfbb")]

// rule `#getDeclaredKoreSymbolsFromDecls(_)_META-ACCESSORS_Set_Declarations`(dotDeclarations(.KList))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(865e089747f3ccf96b736bedb7c5e5c706a5a7167b27da6a3567616cf8b367af) contentStartColumn(8) contentStartLine(183) org.kframework.attributes.Location(Location(183,8,184,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getDeclaredKoreSymbolsFromDecls'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'Declarations{}(LbldotDeclarations{}()),
        Lbl'Stop'Set{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("183"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(183,8,184,12)"), UNIQUE'Unds'ID{}("865e089747f3ccf96b736bedb7c5e5c706a5a7167b27da6a3567616cf8b367af")]

// rule `#getImportedModules(_)_META-ACCESSORS_Set_ModuleName`(MNAME,_Configuration)=>`#getImportedModulesSet(_,_)_META-ACCESSORS_Set_ModuleName_Set`(MNAME,`SetItem`(inj{ModuleName,KItem}(MNAME)),_Configuration) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(583027d0342e5f2a48f690240ede3dfbde49f5466e5d2e21ee658b79d2a45358) contentStartColumn(8) contentStartLine(117) org.kframework.attributes.Location(Location(117,8,117,83)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getImportedModules'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMNAME:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Hash'getImportedModulesSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(VarMNAME:SortModuleName{},LblSetItem{}(inj{SortModuleName{}, SortKItem{}}(VarMNAME:SortModuleName{})),Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("117"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,8,117,83)"), UNIQUE'Unds'ID{}("583027d0342e5f2a48f690240ede3dfbde49f5466e5d2e21ee658b79d2a45358")]

// rule `#getImportedModulesSet(_,_)_META-ACCESSORS_Set_ModuleName_Set`(MNAME,MODS,`<generatedTop>`(_5,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_1,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(koreImportLbl(IMPORTED,_0)))),DotVar4)),_2)),DotVar2)),_4),_6,_7,_8,_9) #as _Configuration)=>`#getImportedModulesSet(_,_)_META-ACCESSORS_Set_ModuleName_Set`(MNAME,`_Set_`(`_Set_`(MODS,`SetItem`(inj{ModuleName,KItem}(IMPORTED))),`#getImportedModules(_)_META-ACCESSORS_Set_ModuleName`(IMPORTED,_Configuration)),_Configuration) requires `notBool_`(`Set:in`(inj{ModuleName,KItem}(IMPORTED),MODS)) ensures #token("true","Bool") [UNIQUE_ID(1df845240d701ec88640843bfe06f6745aabab8b992ffe182bd61b6e01b04861) contentStartColumn(8) contentStartLine(118) org.kframework.attributes.Location(Location(118,8,123,38)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortModuleName{}, SortKItem{}}(VarIMPORTED:SortModuleName{}),VarMODS:SortSet{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getImportedModulesSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(VarMNAME:SortModuleName{},VarMODS:SortSet{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'5:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblkoreImportLbl{}(VarIMPORTED:SortModuleName{},Var'Unds'0:SortAttribute{})))),VarDotVar4:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar2:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Var'Unds'7:SortSCell{},Var'Unds'8:SortGeneratedCounterCell{},Var'Unds'9:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        Lbl'Hash'getImportedModulesSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(VarMNAME:SortModuleName{},Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(VarMODS:SortSet{},LblSetItem{}(inj{SortModuleName{}, SortKItem{}}(VarIMPORTED:SortModuleName{}))),Lbl'Hash'getImportedModules'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarIMPORTED:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{})),Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("118"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(118,8,123,38)"), simplification{}(), UNIQUE'Unds'ID{}("1df845240d701ec88640843bfe06f6745aabab8b992ffe182bd61b6e01b04861")]

// rule `#getImportedModulesSet(_,_)_META-ACCESSORS_Set_ModuleName_Set`(MNAME,MODS,_Configuration)=>MODS requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5409e8108ecd91545416bc26eac37e955a1d7974ee6d6b0dbbd1b928410c6dc4) contentStartColumn(8) contentStartLine(124) org.kframework.attributes.Location(Location(124,8,124,51)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortKCell{},
                    \exists{R} (Var'Unds'3:SortDefnAttrsCell{},
                    \exists{R} (Var'Unds'1:SortSet{},
                    \exists{R} (Var'Unds'5:SortModuleName{},
                    \exists{R} (Var'Unds'15:SortGeneratedTopCell{},
                    \exists{R} (Var'Unds'14:SortKinkDeployedDirCell{},
                    \exists{R} (Var'Unds'4:SortAttributesCell{},
                    \exists{R} (Var'Unds'8:SortParserGeneratorCell{},
                    \exists{R} (Var'Unds'13:SortGeneratedCounterCell{},
                    \exists{R} (Var'Unds'6:SortAttribute{},
                    \exists{R} (Var'Unds'11:SortExitCodeCell{},
                    \exists{R} (Var'Unds'7:SortDeclCellSet{},
                    \exists{R} (Var'Unds'12:SortSCell{},
                    \exists{R} (Var'Unds'10:SortConfigInfoCell{},
                    \exists{R} (Var'Unds'0:SortModuleName{},
                    \exists{R} (Var'Unds'9:SortModCellSet{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortModuleName{}, SortKItem{}}(Var'Unds'5:SortModuleName{}),Var'Unds'1:SortSet{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \ceil{SortModuleName{}, R} (
                  \and{SortModuleName{}} (
                    VarMNAME:SortModuleName{},
                    Var'Unds'0:SortModuleName{}
                )),\and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    VarMODS:SortSet{},
                    Var'Unds'1:SortSet{}
                )),\and{R} (
                \ceil{SortGeneratedTopCell{}, R} (
                  \and{SortGeneratedTopCell{}} (
                    Var'Unds'Configuration:SortGeneratedTopCell{},
                    \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'2:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(Var'Unds'0:SortModuleName{}),Var'Unds'4:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblkoreImportLbl{}(Var'Unds'5:SortModuleName{},Var'Unds'6:SortAttribute{})))),Var'Unds'7:SortDeclCellSet{})),Var'Unds'8:SortParserGeneratorCell{})),Var'Unds'9:SortModCellSet{})),Var'Unds'10:SortConfigInfoCell{}),Var'Unds'11:SortExitCodeCell{},Var'Unds'12:SortSCell{},Var'Unds'13:SortGeneratedCounterCell{},Var'Unds'14:SortKinkDeployedDirCell{}),Var'Unds'15:SortGeneratedTopCell{})
                )),
                \top{R} ()
              )))
          ))))))))))))))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getImportedModulesSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(VarMNAME:SortModuleName{},VarMODS:SortSet{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        VarMODS:SortSet{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("124"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,8,124,51)"), owise{}(), UNIQUE'Unds'ID{}("5409e8108ecd91545416bc26eac37e955a1d7974ee6d6b0dbbd1b928410c6dc4")]

// rule `#getLocalProds(_)_META-ACCESSORS_Set_ModuleName`(MNAME,_Configuration)=>`#getLocalProdsSet(_,_)_META-ACCESSORS_Set_ModuleName_Set`(MNAME,`.Set`(.KList),_Configuration) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(48892f15199848691b045d09ecd6e586baab4063897cd5d834f27f2ed9d86460) contentStartColumn(8) contentStartLine(128) org.kframework.attributes.Location(Location(128,8,128,63)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getLocalProds'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMNAME:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Hash'getLocalProdsSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(VarMNAME:SortModuleName{},Lbl'Stop'Set{}(),Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("128"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,8,128,63)"), UNIQUE'Unds'ID{}("48892f15199848691b045d09ecd6e586baab4063897cd5d834f27f2ed9d86460")]

// rule `#getLocalProdsSet(_,_)_META-ACCESSORS_Set_ModuleName_Set`(MNAME,PRODS,`<generatedTop>`(_6,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_2,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(_0,_1)) #as PRD)),DotVar4)),_3)),DotVar2)),_5),_7,_8,_9,_10) #as _Configuration)=>`#getLocalProdsSet(_,_)_META-ACCESSORS_Set_ModuleName_Set`(MNAME,`_Set_`(PRODS,`SetItem`(inj{Declaration,KItem}(PRD))),_Configuration) requires `notBool_`(`Set:in`(inj{Declaration,KItem}(PRD),PRODS)) ensures #token("true","Bool") [UNIQUE_ID(c610c603942bf5346c5f59c85b8a5e00f78467028a937e0615510f3583cf2e5a) contentStartColumn(8) contentStartLine(129) org.kframework.attributes.Location(Location(129,8,134,34)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortDeclaration{}, SortKItem{}}(VarPRD:SortDeclaration{}),VarPRODS:SortSet{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getLocalProdsSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(VarMNAME:SortModuleName{},VarPRODS:SortSet{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'6:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'2:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(\and{SortDeclaration{}}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(Var'Unds'0:SortKSort{},Var'Unds'1:SortPrioritySeqBlock{})),VarPRD:SortDeclaration{}))),VarDotVar4:SortDeclCellSet{})),Var'Unds'3:SortParserGeneratorCell{})),VarDotVar2:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'7:SortExitCodeCell{},Var'Unds'8:SortSCell{},Var'Unds'9:SortGeneratedCounterCell{},Var'Unds'10:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        Lbl'Hash'getLocalProdsSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(VarMNAME:SortModuleName{},Lbl'Unds'Set'Unds'{}(VarPRODS:SortSet{},LblSetItem{}(inj{SortDeclaration{}, SortKItem{}}(VarPRD:SortDeclaration{}))),Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("129"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,8,134,34)"), simplification{}(), UNIQUE'Unds'ID{}("c610c603942bf5346c5f59c85b8a5e00f78467028a937e0615510f3583cf2e5a")]

// rule `#getLocalProdsSet(_,_)_META-ACCESSORS_Set_ModuleName_Set`(MNAME,PRODS,_Configuration)=>PRODS requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6412081cd233390158e8fc997209999f947504476457260703731c6660118df9) contentStartColumn(8) contentStartLine(135) org.kframework.attributes.Location(Location(135,8,135,48)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortKCell{},
                    \exists{R} (Var'Unds'3:SortDefnAttrsCell{},
                    \exists{R} (Var'Unds'1:SortSet{},
                    \exists{R} (Var'Unds'5:SortKSort{},
                    \exists{R} (Var'Unds'15:SortKinkDeployedDirCell{},
                    \exists{R} (Var'Unds'16:SortGeneratedTopCell{},
                    \exists{R} (Var'Unds'14:SortGeneratedCounterCell{},
                    \exists{R} (Var'Unds'4:SortAttributesCell{},
                    \exists{R} (Var'Unds'8:SortDeclCellSet{},
                    \exists{R} (Var'Unds'13:SortSCell{},
                    \exists{R} (Var'Unds'6:SortPrioritySeqBlock{},
                    \exists{R} (Var'Unds'11:SortConfigInfoCell{},
                    \exists{R} (Var'Unds'7:SortDeclaration{},
                    \exists{R} (Var'Unds'12:SortExitCodeCell{},
                    \exists{R} (Var'Unds'10:SortModCellSet{},
                    \exists{R} (Var'Unds'0:SortModuleName{},
                    \exists{R} (Var'Unds'9:SortParserGeneratorCell{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortDeclaration{}, SortKItem{}}(Var'Unds'7:SortDeclaration{}),Var'Unds'1:SortSet{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \ceil{SortModuleName{}, R} (
                  \and{SortModuleName{}} (
                    VarMNAME:SortModuleName{},
                    Var'Unds'0:SortModuleName{}
                )),\and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    VarPRODS:SortSet{},
                    Var'Unds'1:SortSet{}
                )),\and{R} (
                \ceil{SortGeneratedTopCell{}, R} (
                  \and{SortGeneratedTopCell{}} (
                    Var'Unds'Configuration:SortGeneratedTopCell{},
                    \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'2:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(Var'Unds'0:SortModuleName{}),Var'Unds'4:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(\and{SortDeclaration{}}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(Var'Unds'5:SortKSort{},Var'Unds'6:SortPrioritySeqBlock{})),Var'Unds'7:SortDeclaration{}))),Var'Unds'8:SortDeclCellSet{})),Var'Unds'9:SortParserGeneratorCell{})),Var'Unds'10:SortModCellSet{})),Var'Unds'11:SortConfigInfoCell{}),Var'Unds'12:SortExitCodeCell{},Var'Unds'13:SortSCell{},Var'Unds'14:SortGeneratedCounterCell{},Var'Unds'15:SortKinkDeployedDirCell{}),Var'Unds'16:SortGeneratedTopCell{})
                )),
                \top{R} ()
              )))
          )))))))))))))))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        Lbl'Hash'getLocalProdsSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName'Unds'Set{}(VarMNAME:SortModuleName{},VarPRODS:SortSet{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        VarPRODS:SortSet{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("135"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,8,135,48)"), owise{}(), UNIQUE'Unds'ID{}("6412081cd233390158e8fc997209999f947504476457260703731c6660118df9")]

// rule `#getReturnSort(_,_)_META-ACCESSORS_Sort_ModuleName_SymbolName`(MNAME,SNAME,`<generatedTop>`(_5,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_1,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(symbolDeclaration(symbolSorts(SNAME,dotSorts(.KList)),_0,SORT,ATTRS)))),DotVar4)),_2)),DotVar2)),_4),_6,_7,_8,_9) #as _Configuration)=>SORT requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a674b91559f7cbc6534be0951ca37e2e4586345f172b449538ed02b059ce8ae4) contentStartColumn(8) contentStartLine(192) org.kframework.attributes.Location(Location(192,8,194,67)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSort{},R} (
        Lbl'Hash'getReturnSort'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Sort'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSNAME:SortSymbolName{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'5:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(VarSNAME:SortSymbolName{},LbldotSorts{}()),Var'Unds'0:SortSorts{},VarSORT:SortSort{},VarATTRS:SortAttribute{})))),VarDotVar4:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar2:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Var'Unds'7:SortSCell{},Var'Unds'8:SortGeneratedCounterCell{},Var'Unds'9:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        VarSORT:SortSort{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("192"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(192,8,194,67)"), simplification{}(), UNIQUE'Unds'ID{}("a674b91559f7cbc6534be0951ca37e2e4586345f172b449538ed02b059ce8ae4")]

// rule `#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{K}(C,B1,_0)=>B1 requires C ensures #token("true","Bool") [UNIQUE_ID(b40db17b830ee9bc7ad48d91713b0acfd528a4caa7b9f56b2654645f58b2f21f) contentStartColumn(8) contentStartLine(869) org.kframework.attributes.Location(Location(869,8,869,59)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        VarC:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{},VarB1:SortK{},Var'Unds'0:SortK{}),
        VarB1:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("869"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(869,8,869,59)"), UNIQUE'Unds'ID{}("b40db17b830ee9bc7ad48d91713b0acfd528a4caa7b9f56b2654645f58b2f21f")]

// rule `#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{K}(C,_0,B2)=>B2 requires `notBool_`(C) ensures #token("true","Bool") [UNIQUE_ID(c58758cb7cd533229481b46197a7bcc89c827d31024156fac406fb13a31d73b2) contentStartColumn(8) contentStartLine(870) org.kframework.attributes.Location(Location(870,8,870,67)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(VarC:SortBool{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortK{},R} (
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortK{}}(VarC:SortBool{},Var'Unds'0:SortK{},VarB2:SortK{}),
        VarB2:SortK{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("870"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(870,8,870,67)"), UNIQUE'Unds'ID{}("c58758cb7cd533229481b46197a7bcc89c827d31024156fac406fb13a31d73b2")]

// rule `#isFunctionSymbol(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(MNAME,SNAME,`<generatedTop>`(_5,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_1,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(symbolDeclaration(symbolSorts(SNAME,dotSorts(.KList)),_0,SORT,koreAttributesLbl(ATTRS))))),DotVar4)),_2)),DotVar2)),_4),_6,_7,_8,_9) #as _Configuration)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(65a7ea202ce6f70fa458c2277c5b7e026d708a3b7821b6d3ac9ddc4e821ef4dd) contentStartColumn(8) contentStartLine(203) org.kframework.attributes.Location(Location(203,8,206,15)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'18:SortDeclCellSet{},
                    \exists{R} (Var'Unds'17:SortPatterns{},
                    \exists{R} (Var'Unds'15:SortSorts{},
                    \exists{R} (Var'Unds'26:SortGeneratedTopCell{},
                    \exists{R} (Var'Unds'16:SortSort{},
                    \exists{R} (Var'Unds'14:SortAttributesCell{},
                    \exists{R} (Var'Unds'25:SortKinkDeployedDirCell{},
                    \exists{R} (Var'Unds'13:SortDefnAttrsCell{},
                    \exists{R} (Var'Unds'24:SortGeneratedCounterCell{},
                    \exists{R} (Var'Unds'11:SortSymbolName{},
                    \exists{R} (Var'Unds'22:SortExitCodeCell{},
                    \exists{R} (Var'Unds'12:SortKCell{},
                    \exists{R} (Var'Unds'23:SortSCell{},
                    \exists{R} (Var'Unds'10:SortModuleName{},
                    \exists{R} (Var'Unds'21:SortConfigInfoCell{},
                    \exists{R} (Var'Unds'19:SortParserGeneratorCell{},
                    \exists{R} (Var'Unds'20:SortModCellSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortModuleName{}, R} (
                  \and{SortModuleName{}} (
                    VarMNAME:SortModuleName{},
                    Var'Unds'10:SortModuleName{}
                )),\and{R} (
                \ceil{SortSymbolName{}, R} (
                  \and{SortSymbolName{}} (
                    VarSNAME:SortSymbolName{},
                    Var'Unds'11:SortSymbolName{}
                )),\and{R} (
                \ceil{SortGeneratedTopCell{}, R} (
                  \and{SortGeneratedTopCell{}} (
                    \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'5:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(VarSNAME:SortSymbolName{},LbldotSorts{}()),Var'Unds'0:SortSorts{},VarSORT:SortSort{},LblkoreAttributesLbl{}(VarATTRS:SortPatterns{}))))),VarDotVar4:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar2:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Var'Unds'7:SortSCell{},Var'Unds'8:SortGeneratedCounterCell{},Var'Unds'9:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{}),
                    \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'12:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'13:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(Var'Unds'10:SortModuleName{}),Var'Unds'14:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(Var'Unds'11:SortSymbolName{},LbldotSorts{}()),Var'Unds'15:SortSorts{},Var'Unds'16:SortSort{},LblkoreAttributesLbl{}(LblconsPatterns{}(Lblapplication{}(LblsymbolSorts{}(inj{SortLowerName{}, SortSymbolName{}}(\dv{SortLowerName{}}("function")),LbldotSorts{}()),LbldotPatterns{}()),Var'Unds'17:SortPatterns{})))))),Var'Unds'18:SortDeclCellSet{})),Var'Unds'19:SortParserGeneratorCell{})),Var'Unds'20:SortModCellSet{})),Var'Unds'21:SortConfigInfoCell{}),Var'Unds'22:SortExitCodeCell{},Var'Unds'23:SortSCell{},Var'Unds'24:SortGeneratedCounterCell{},Var'Unds'25:SortKinkDeployedDirCell{}),Var'Unds'26:SortGeneratedTopCell{})
                )),
                \top{R} ()
              )))
          )))))))))))))))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isFunctionSymbol'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSNAME:SortSymbolName{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'5:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(VarSNAME:SortSymbolName{},LbldotSorts{}()),Var'Unds'0:SortSorts{},VarSORT:SortSort{},LblkoreAttributesLbl{}(VarATTRS:SortPatterns{}))))),VarDotVar4:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar2:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Var'Unds'7:SortSCell{},Var'Unds'8:SortGeneratedCounterCell{},Var'Unds'9:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("203"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(203,8,206,15)"), simplification{}(), owise{}(), UNIQUE'Unds'ID{}("65a7ea202ce6f70fa458c2277c5b7e026d708a3b7821b6d3ac9ddc4e821ef4dd")]

// rule `#isFunctionSymbol(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(MNAME,SNAME,`<generatedTop>`(_5,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_1,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(symbolDeclaration(symbolSorts(SNAME,dotSorts(.KList)),_0,SORT,koreAttributesLbl(consPatterns(application(symbolSorts(inj{LowerName,SymbolName}(#token("function","LowerName")),dotSorts(.KList)),dotPatterns(.KList)),ATTRS)))))),DotVar4)),_2)),DotVar2)),_4),_6,_7,_8,_9) #as _Configuration)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9bb70dadc6f2379dc8cb753abfe53619966a2d65e1e4e50363c0a39364d870b6) contentStartColumn(8) contentStartLine(199) org.kframework.attributes.Location(Location(199,8,202,15)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isFunctionSymbol'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSNAME:SortSymbolName{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'5:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(VarSNAME:SortSymbolName{},LbldotSorts{}()),Var'Unds'0:SortSorts{},VarSORT:SortSort{},LblkoreAttributesLbl{}(LblconsPatterns{}(Lblapplication{}(LblsymbolSorts{}(inj{SortLowerName{}, SortSymbolName{}}(\dv{SortLowerName{}}("function")),LbldotSorts{}()),LbldotPatterns{}()),VarATTRS:SortPatterns{})))))),VarDotVar4:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar2:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Var'Unds'7:SortSCell{},Var'Unds'8:SortGeneratedCounterCell{},Var'Unds'9:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("199"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(199,8,202,15)"), simplification{}(), UNIQUE'Unds'ID{}("9bb70dadc6f2379dc8cb753abfe53619966a2d65e1e4e50363c0a39364d870b6")]

// rule `#isSortDeclared(_,_)_META-ACCESSORS_Bool_ModuleName_SortName`(MNAME,SNAME,_Configuration)=>`#isSortDeclaredSet(_,_)_META-ACCESSORS_Bool_Set_SortName`(`#getImportedModules(_)_META-ACCESSORS_Set_ModuleName`(MNAME,_Configuration),SNAME,_Configuration) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7de564cc905f07bd50751ba3cd609a276449b2627d7cc089c3c3913ed969305e) contentStartColumn(8) contentStartLine(153) org.kframework.attributes.Location(Location(153,8,154,61)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSortDeclared'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SortName{}(VarMNAME:SortModuleName{},VarSNAME:SortSortName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Hash'isSortDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SortName{}(Lbl'Hash'getImportedModules'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMNAME:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),VarSNAME:SortSortName{},Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("153"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(153,8,154,61)"), UNIQUE'Unds'ID{}("7de564cc905f07bd50751ba3cd609a276449b2627d7cc089c3c3913ed969305e")]

// rule `#isSortDeclaredMod(_,_)_META-ACCESSORS_Bool_ModuleName_SortName`(MNAME,SORT,`<generatedTop>`(_4,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(sortDeclaration(nameParam(SORT,PARAMS),ATTRS)))),DotVar4)),_1)),DotVar2)),_3),_5,_6,_7,_8) #as _Configuration)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a2623c53c8b53eac9a3b601303c13144cd6fe86dd4bad97ec7de2c8c3d31209) contentStartColumn(8) contentStartLine(146) org.kframework.attributes.Location(Location(146,8,148,49)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSortDeclaredMod'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SortName{}(VarMNAME:SortModuleName{},VarSORT:SortSortName{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'4:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsortDeclaration{}(LblnameParam{}(VarSORT:SortSortName{},VarPARAMS:SortSorts{}),VarATTRS:SortAttribute{})))),VarDotVar4:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar2:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Var'Unds'6:SortSCell{},Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("146"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(146,8,148,49)"), simplification{}(), UNIQUE'Unds'ID{}("1a2623c53c8b53eac9a3b601303c13144cd6fe86dd4bad97ec7de2c8c3d31209")]

// rule `#isSortDeclaredMod(_,_)_META-ACCESSORS_Bool_ModuleName_SortName`(_0,_1,_Configuration)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8e60f4af9abbd623a1205da8256850f774c02cd62cf804f37536f7246341da89) contentStartColumn(8) contentStartLine(149) org.kframework.attributes.Location(Location(149,8,149,41)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortModuleName{},
                    \exists{R} (Var'Unds'3:SortSortName{},
                    \exists{R} (Var'Unds'17:SortGeneratedTopCell{},
                    \exists{R} (Var'Unds'5:SortDefnAttrsCell{},
                    \exists{R} (Var'Unds'15:SortGeneratedCounterCell{},
                    \exists{R} (Var'Unds'16:SortKinkDeployedDirCell{},
                    \exists{R} (Var'Unds'14:SortSCell{},
                    \exists{R} (Var'Unds'4:SortKCell{},
                    \exists{R} (Var'Unds'8:SortAttribute{},
                    \exists{R} (Var'Unds'13:SortExitCodeCell{},
                    \exists{R} (Var'Unds'6:SortAttributesCell{},
                    \exists{R} (Var'Unds'11:SortModCellSet{},
                    \exists{R} (Var'Unds'7:SortSorts{},
                    \exists{R} (Var'Unds'12:SortConfigInfoCell{},
                    \exists{R} (Var'Unds'10:SortParserGeneratorCell{},
                    \exists{R} (Var'Unds'9:SortDeclCellSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortModuleName{}, R} (
                  \and{SortModuleName{}} (
                    Var'Unds'0:SortModuleName{},
                    Var'Unds'2:SortModuleName{}
                )),\and{R} (
                \ceil{SortSortName{}, R} (
                  \and{SortSortName{}} (
                    Var'Unds'1:SortSortName{},
                    Var'Unds'3:SortSortName{}
                )),\and{R} (
                \ceil{SortGeneratedTopCell{}, R} (
                  \and{SortGeneratedTopCell{}} (
                    Var'Unds'Configuration:SortGeneratedTopCell{},
                    \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'4:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'5:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(Var'Unds'2:SortModuleName{}),Var'Unds'6:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsortDeclaration{}(LblnameParam{}(Var'Unds'3:SortSortName{},Var'Unds'7:SortSorts{}),Var'Unds'8:SortAttribute{})))),Var'Unds'9:SortDeclCellSet{})),Var'Unds'10:SortParserGeneratorCell{})),Var'Unds'11:SortModCellSet{})),Var'Unds'12:SortConfigInfoCell{}),Var'Unds'13:SortExitCodeCell{},Var'Unds'14:SortSCell{},Var'Unds'15:SortGeneratedCounterCell{},Var'Unds'16:SortKinkDeployedDirCell{}),Var'Unds'17:SortGeneratedTopCell{})
                )),
                \top{R} ()
              )))
          ))))))))))))))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSortDeclaredMod'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SortName{}(Var'Unds'0:SortModuleName{},Var'Unds'1:SortSortName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("149"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(149,8,149,41)"), owise{}(), UNIQUE'Unds'ID{}("8e60f4af9abbd623a1205da8256850f774c02cd62cf804f37536f7246341da89")]

// rule `#isSortDeclaredSet(_,_)_META-ACCESSORS_Bool_Set_SortName`(`.Set`(.KList),SNAME,_Configuration)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73480876eea261c512f63bc7ea7b3f5dfb05d8141e66fbcd411293930834671d) contentStartColumn(8) contentStartLine(157) org.kframework.attributes.Location(Location(157,8,157,48)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSortDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SortName{}(Lbl'Stop'Set{}(),VarSNAME:SortSortName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("157"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(157,8,157,48)"), UNIQUE'Unds'ID{}("73480876eea261c512f63bc7ea7b3f5dfb05d8141e66fbcd411293930834671d")]

// rule `#isSortDeclaredSet(_,_)_META-ACCESSORS_Bool_Set_SortName`(`_Set_`(`SetItem`(inj{ModuleName,KItem}(M)),Ms),SNAME,_Configuration)=>`_orBool__BOOL_Bool_Bool_Bool`(`#isSortDeclaredMod(_,_)_META-ACCESSORS_Bool_ModuleName_SortName`(M,SNAME,_Configuration),`#isSortDeclaredSet(_,_)_META-ACCESSORS_Bool_Set_SortName`(Ms,SNAME,_Configuration)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(590deace88d242102a70b1e74b3ae8cf8607c09a7cbabda57105d9a68fc2b605) contentStartColumn(8) contentStartLine(155) org.kframework.attributes.Location(Location(155,8,156,73)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSortDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SortName{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortModuleName{}, SortKItem{}}(VarM:SortModuleName{})),VarMs:SortSet{}),VarSNAME:SortSortName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isSortDeclaredMod'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SortName{}(VarM:SortModuleName{},VarSNAME:SortSortName{},Var'Unds'Configuration:SortGeneratedTopCell{}),Lbl'Hash'isSortDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SortName{}(VarMs:SortSet{},VarSNAME:SortSortName{},Var'Unds'Configuration:SortGeneratedTopCell{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("155"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(155,8,156,73)"), UNIQUE'Unds'ID{}("590deace88d242102a70b1e74b3ae8cf8607c09a7cbabda57105d9a68fc2b605")]

// rule `#isSymbolDeclared(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(MNAME,SNAME,_Configuration)=>`#isSymbolDeclaredSet(_,_)_META-ACCESSORS_Bool_Set_SymbolName`(`#getImportedModules(_)_META-ACCESSORS_Set_ModuleName`(MNAME,_Configuration),SNAME,_Configuration) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(73791e663dce9161fe3115e93fe78f4ccf572c8f7d03f1eedfd886858bade204) contentStartColumn(8) contentStartLine(169) org.kframework.attributes.Location(Location(169,8,170,63)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSymbolDeclared'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSNAME:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Hash'isSymbolDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SymbolName{}(Lbl'Hash'getImportedModules'LParUndsRParUnds'META-ACCESSORS'Unds'Set'Unds'ModuleName{}(VarMNAME:SortModuleName{},Var'Unds'Configuration:SortGeneratedTopCell{}),VarSNAME:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("169"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(169,8,170,63)"), UNIQUE'Unds'ID{}("73791e663dce9161fe3115e93fe78f4ccf572c8f7d03f1eedfd886858bade204")]

// rule `#isSymbolDeclaredMod(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(MNAME,SYMBOL,`<generatedTop>`(_7,`<definition>`(_5,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_3,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{KoreDeclaration,Declaration}(symbolDeclaration(symbolSorts(SYMBOL,_0),_1,_2,ATTRS)))),DotVar4)),_4)),DotVar2)),_6),_8,_9,_10,_11) #as _Configuration)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6ed9456f66fb11152df61cf6687f88c248dc499d64a7da52a8561282db9385a9) contentStartColumn(8) contentStartLine(162) org.kframework.attributes.Location(Location(162,8,164,60)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSymbolDeclaredMod'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(VarMNAME:SortModuleName{},VarSYMBOL:SortSymbolName{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'7:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'5:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'3:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(VarSYMBOL:SortSymbolName{},Var'Unds'0:SortSorts{}),Var'Unds'1:SortSorts{},Var'Unds'2:SortSort{},VarATTRS:SortAttribute{})))),VarDotVar4:SortDeclCellSet{})),Var'Unds'4:SortParserGeneratorCell{})),VarDotVar2:SortModCellSet{})),Var'Unds'6:SortConfigInfoCell{}),Var'Unds'8:SortExitCodeCell{},Var'Unds'9:SortSCell{},Var'Unds'10:SortGeneratedCounterCell{},Var'Unds'11:SortKinkDeployedDirCell{}),Var'Unds'Configuration:SortGeneratedTopCell{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("162"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(162,8,164,60)"), simplification{}(), UNIQUE'Unds'ID{}("6ed9456f66fb11152df61cf6687f88c248dc499d64a7da52a8561282db9385a9")]

// rule `#isSymbolDeclaredMod(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(_0,_1,_Configuration)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c893d1b8a765533c8b00b0132a2599466bb64e6d49434f15f54ca3ac35a1638) contentStartColumn(8) contentStartLine(165) org.kframework.attributes.Location(Location(165,8,165,43)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'18:SortExitCodeCell{},
                    \exists{R} (Var'Unds'17:SortConfigInfoCell{},
                    \exists{R} (Var'Unds'5:SortModuleName{},
                    \exists{R} (Var'Unds'15:SortParserGeneratorCell{},
                    \exists{R} (Var'Unds'16:SortModCellSet{},
                    \exists{R} (Var'Unds'14:SortDeclCellSet{},
                    \exists{R} (Var'Unds'8:SortDefnAttrsCell{},
                    \exists{R} (Var'Unds'13:SortAttribute{},
                    \exists{R} (Var'Unds'6:SortSymbolName{},
                    \exists{R} (Var'Unds'11:SortSorts{},
                    \exists{R} (Var'Unds'22:SortGeneratedTopCell{},
                    \exists{R} (Var'Unds'7:SortKCell{},
                    \exists{R} (Var'Unds'12:SortSort{},
                    \exists{R} (Var'Unds'10:SortSorts{},
                    \exists{R} (Var'Unds'21:SortKinkDeployedDirCell{},
                    \exists{R} (Var'Unds'9:SortAttributesCell{},
                    \exists{R} (Var'Unds'19:SortSCell{},
                    \exists{R} (Var'Unds'20:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortModuleName{}, R} (
                  \and{SortModuleName{}} (
                    Var'Unds'0:SortModuleName{},
                    Var'Unds'5:SortModuleName{}
                )),\and{R} (
                \ceil{SortSymbolName{}, R} (
                  \and{SortSymbolName{}} (
                    Var'Unds'1:SortSymbolName{},
                    Var'Unds'6:SortSymbolName{}
                )),\and{R} (
                \ceil{SortGeneratedTopCell{}, R} (
                  \and{SortGeneratedTopCell{}} (
                    Var'Unds'Configuration:SortGeneratedTopCell{},
                    \and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'7:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'8:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(Var'Unds'5:SortModuleName{}),Var'Unds'9:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblsymbolDeclaration{}(LblsymbolSorts{}(Var'Unds'6:SortSymbolName{},Var'Unds'10:SortSorts{}),Var'Unds'11:SortSorts{},Var'Unds'12:SortSort{},Var'Unds'13:SortAttribute{})))),Var'Unds'14:SortDeclCellSet{})),Var'Unds'15:SortParserGeneratorCell{})),Var'Unds'16:SortModCellSet{})),Var'Unds'17:SortConfigInfoCell{}),Var'Unds'18:SortExitCodeCell{},Var'Unds'19:SortSCell{},Var'Unds'20:SortGeneratedCounterCell{},Var'Unds'21:SortKinkDeployedDirCell{}),Var'Unds'22:SortGeneratedTopCell{})
                )),
                \top{R} ()
              )))
          ))))))))))))))))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSymbolDeclaredMod'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(Var'Unds'0:SortModuleName{},Var'Unds'1:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("165"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(165,8,165,43)"), owise{}(), UNIQUE'Unds'ID{}("0c893d1b8a765533c8b00b0132a2599466bb64e6d49434f15f54ca3ac35a1638")]

// rule `#isSymbolDeclaredSet(_,_)_META-ACCESSORS_Bool_Set_SymbolName`(`.Set`(.KList),SNAME,_Configuration)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2ff3d09d0a631fb6c253391165150f965f16c90d96f92cdbb8f2fb337ab02c8b) contentStartColumn(8) contentStartLine(173) org.kframework.attributes.Location(Location(173,8,173,50)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSymbolDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SymbolName{}(Lbl'Stop'Set{}(),VarSNAME:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("173"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(173,8,173,50)"), UNIQUE'Unds'ID{}("2ff3d09d0a631fb6c253391165150f965f16c90d96f92cdbb8f2fb337ab02c8b")]

// rule `#isSymbolDeclaredSet(_,_)_META-ACCESSORS_Bool_Set_SymbolName`(`_Set_`(`SetItem`(inj{ModuleName,KItem}(M)),Ms),SNAME,_Configuration)=>`_orBool__BOOL_Bool_Bool_Bool`(`#isSymbolDeclaredMod(_,_)_META-ACCESSORS_Bool_ModuleName_SymbolName`(M,SNAME,_Configuration),`#isSymbolDeclaredSet(_,_)_META-ACCESSORS_Bool_Set_SymbolName`(Ms,SNAME,_Configuration)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(308ecf4fe0527198b911f7182be6ce40ea8e672887a3b63bbdba23afceac74bf) contentStartColumn(8) contentStartLine(171) org.kframework.attributes.Location(Location(171,8,172,77)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'isSymbolDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SymbolName{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortModuleName{}, SortKItem{}}(VarM:SortModuleName{})),VarMs:SortSet{}),VarSNAME:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'Hash'isSymbolDeclaredMod'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'ModuleName'Unds'SymbolName{}(VarM:SortModuleName{},VarSNAME:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}),Lbl'Hash'isSymbolDeclaredSet'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'Set'Unds'SymbolName{}(VarMs:SortSet{},VarSNAME:SortSymbolName{},Var'Unds'Configuration:SortGeneratedTopCell{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("171"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(171,8,172,77)"), UNIQUE'Unds'ID{}("308ecf4fe0527198b911f7182be6ce40ea8e672887a3b63bbdba23afceac74bf")]

// rule `#keyInAttributes(_,_)_META-ACCESSORS_Bool_KEY_AttrList`(KEY,consAttrList(_0,REST))=>`#keyInAttributes(_,_)_META-ACCESSORS_Bool_KEY_AttrList`(KEY,REST) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(aaa474f019469bff60a8b97f2aedd5818ef6449e271293122f98215edecc97c5) contentStartColumn(8) contentStartLine(215) org.kframework.attributes.Location(Location(215,8,216,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'6:SortAttrList{},
                    \exists{R} (Var'Unds'5:SortK{},
                    \exists{R} (Var'Unds'4:SortKEY{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortKEY{}, R} (
                  \and{SortKEY{}} (
                    VarKEY:SortKEY{},
                    Var'Unds'4:SortKEY{}
                )),\and{R} (
                \ceil{SortAttrList{}, R} (
                  \and{SortAttrList{}} (
                    LblconsAttrList{}(Var'Unds'0:SortAttr{},VarREST:SortAttrList{}),
                    LblconsAttrList{}(LbltagContent{}(Var'Unds'4:SortKEY{},inj{SortK{}, SortTagContents{}}(Var'Unds'5:SortK{})),Var'Unds'6:SortAttrList{})
                )),
                \top{R} ()
              ))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'7:SortKEY{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortKEY{}, R} (
                  \and{SortKEY{}} (
                    VarKEY:SortKEY{},
                    Var'Unds'7:SortKEY{}
                )),\and{R} (
                \ceil{SortAttrList{}, R} (
                  \and{SortAttrList{}} (
                    LblconsAttrList{}(Var'Unds'0:SortAttr{},VarREST:SortAttrList{}),
                    LbldotAttrList{}()
                )),
                \top{R} ()
              ))
          )),
          \or{R} (
          \exists{R} (Var'Unds'8:SortKEY{},
                    \exists{R} (Var'Unds'9:SortAttrList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortKEY{}, R} (
                  \and{SortKEY{}} (
                    VarKEY:SortKEY{},
                    Var'Unds'8:SortKEY{}
                )),\and{R} (
                \ceil{SortAttrList{}, R} (
                  \and{SortAttrList{}} (
                    LblconsAttrList{}(Var'Unds'0:SortAttr{},VarREST:SortAttrList{}),
                    LblconsAttrList{}(LbltagSimple{}(Var'Unds'8:SortKEY{}),Var'Unds'9:SortAttrList{})
                )),
                \top{R} ()
              ))
          ))),
          \bottom{R}()
        )))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'keyInAttributes'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'KEY'Unds'AttrList{}(VarKEY:SortKEY{},LblconsAttrList{}(Var'Unds'0:SortAttr{},VarREST:SortAttrList{})),
        Lbl'Hash'keyInAttributes'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'KEY'Unds'AttrList{}(VarKEY:SortKEY{},VarREST:SortAttrList{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("215"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(215,8,216,35)"), owise{}(), UNIQUE'Unds'ID{}("aaa474f019469bff60a8b97f2aedd5818ef6449e271293122f98215edecc97c5")]

// rule `#keyInAttributes(_,_)_META-ACCESSORS_Bool_KEY_AttrList`(KEY,consAttrList(tagContent(KEY,inj{K,TagContents}(_0)),_1))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dd1dbb469b003de54f1470868b64595a4d11a5bbba7f00d0e50da876e53bf2d6) contentStartColumn(8) contentStartLine(214) org.kframework.attributes.Location(Location(214,8,214,62)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'keyInAttributes'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'KEY'Unds'AttrList{}(VarKEY:SortKEY{},LblconsAttrList{}(LbltagContent{}(VarKEY:SortKEY{},inj{SortK{}, SortTagContents{}}(Var'Unds'0:SortK{})),Var'Unds'1:SortAttrList{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("214"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(214,8,214,62)"), UNIQUE'Unds'ID{}("dd1dbb469b003de54f1470868b64595a4d11a5bbba7f00d0e50da876e53bf2d6")]

// rule `#keyInAttributes(_,_)_META-ACCESSORS_Bool_KEY_AttrList`(KEY,consAttrList(tagSimple(KEY),_0))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3d999a072fb77e4a4e0ffdd49087afcd8ff5cfc31f3a09dc068360fff107aff5) contentStartColumn(8) contentStartLine(213) org.kframework.attributes.Location(Location(213,8,213,58)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'keyInAttributes'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'KEY'Unds'AttrList{}(VarKEY:SortKEY{},LblconsAttrList{}(LbltagSimple{}(VarKEY:SortKEY{}),Var'Unds'0:SortAttrList{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("213"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(213,8,213,58)"), UNIQUE'Unds'ID{}("3d999a072fb77e4a4e0ffdd49087afcd8ff5cfc31f3a09dc068360fff107aff5")]

// rule `#keyInAttributes(_,_)_META-ACCESSORS_Bool_KEY_AttrList`(_0,dotAttrList(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6996967a7aa98073b0e1f4e8fff816d866442701335051d54dec7147cfb2ff51) contentStartColumn(8) contentStartLine(212) org.kframework.attributes.Location(Location(212,8,212,47)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Hash'keyInAttributes'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'KEY'Unds'AttrList{}(Var'Unds'0:SortKEY{},LbldotAttrList{}()),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("212"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(212,8,212,47)"), UNIQUE'Unds'ID{}("6996967a7aa98073b0e1f4e8fff816d866442701335051d54dec7147cfb2ff51")]

// rule `#lambda__`(RETSORT,LHS,RHS)=>axiomDeclaration(dotSorts(.KList),`\\rewrites{_}(_,_)_KORE-COMMON_Pattern_Sort_Pattern_Pattern`(RETSORT,`\\and{_}(_,_)_KORE-COMMON_Pattern_Sort_Pattern_Pattern`(RETSORT,`\\top{_}()_KORE-COMMON_Pattern_Sort`(RETSORT),LHS),`\\and{_}(_,_)_KORE-COMMON_Pattern_Sort_Pattern_Pattern`(RETSORT,`\\top{_}()_KORE-COMMON_Pattern_Sort`(RETSORT),RHS)),koreAttributesLbl(dotPatterns(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a9f1b37440ae022b7073c594f0f90cbc6dbb57f1d75b5096a2043e63a84e4149) org.kframework.attributes.Location(Location(561,15,567,52)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax {Sort1, Sort2} Sort1 ::= "#fun" "(" Sort2 "=>" Sort1 ")" "(" Sort2 ")" [klabel(#fun3) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKoreDeclaration{},R} (
        Lbl'Hash'lambda'UndsUnds'{}(VarRETSORT:SortSort{},VarLHS:SortPattern{},VarRHS:SortPattern{}),
        LblaxiomDeclaration{}(LbldotSorts{}(),Lbl'Bash'rewrites'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(VarRETSORT:SortSort{},Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(VarRETSORT:SortSort{},Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(VarRETSORT:SortSort{}),VarLHS:SortPattern{}),Lbl'Bash'and'LBraUndsRBraLParUndsCommUndsRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort'Unds'Pattern'Unds'Pattern{}(VarRETSORT:SortSort{},Lbl'Bash'top'LBraUndsRBraLParRParUnds'KORE-COMMON'Unds'Pattern'Unds'Sort{}(VarRETSORT:SortSort{}),VarRHS:SortPattern{})),LblkoreAttributesLbl{}(LbldotPatterns{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(561,15,567,52)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax {Sort1, Sort2} Sort1 ::= \"#fun\" \"(\" Sort2 \"=>\" Sort1 \")\" \"(\" Sort2 \")\" [klabel(#fun3) symbol()]"), UNIQUE'Unds'ID{}("a9f1b37440ae022b7073c594f0f90cbc6dbb57f1d75b5096a2043e63a84e4149")]

// rule `#open(_)_K-IO_IOInt_String`(S)=>`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r+\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(569335f78fe30a33cbf240624728b69a4b2f754fb86768b85047de1f7ce3b0ef) contentStartColumn(8) contentStartLine(1009) org.kframework.attributes.Location(Location(1009,8,1009,48)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOInt{},R} (
        Lbl'Hash'open'LParUndsRParUnds'K-IO'Unds'IOInt'Unds'String{}(VarS:SortString{}),
        Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r+"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1009"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1009,8,1009,48)"), UNIQUE'Unds'ID{}("569335f78fe30a33cbf240624728b69a4b2f754fb86768b85047de1f7ce3b0ef")]

// rule `#removeKlabelAttr(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(consAttrList(ATTRS,ATTR))=>consPatterns(`#attr2Pattern(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Pattern_Attr`(ATTRS),`#removeKlabelAttr(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(ATTR)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bb41c4d46c49d46a1a39f61b07f93e4ce378edfd2e8f5e850d294a38e1d09ec2) contentStartColumn(8) contentStartLine(498) org.kframework.attributes.Location(Location(498,8,499,53)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAttrList{},
                    \exists{R} (Var'Unds'0:SortK{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortAttrList{}, R} (
                  \and{SortAttrList{}} (
                    LblconsAttrList{}(VarATTRS:SortAttr{},VarATTR:SortAttrList{}),
                    LblconsAttrList{}(LbltagContent{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("klabel")),inj{SortK{}, SortTagContents{}}(Var'Unds'0:SortK{})),Var'Unds'1:SortAttrList{})
                )),
                \top{R} ()
              )
          ))),
          \or{R} (
  \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortAttrList{}, R} (
                  \and{SortAttrList{}} (
                    LblconsAttrList{}(VarATTRS:SortAttr{},VarATTR:SortAttrList{}),
                    LbldotAttrList{}()
                )),
                \top{R} ()
              )
          ),
          \bottom{R}()
        ))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortPatterns{},R} (
        Lbl'Hash'removeKlabelAttr'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(LblconsAttrList{}(VarATTRS:SortAttr{},VarATTR:SortAttrList{})),
        LblconsPatterns{}(Lbl'Hash'attr2Pattern'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Pattern'Unds'Attr{}(VarATTRS:SortAttr{}),Lbl'Hash'removeKlabelAttr'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(VarATTR:SortAttrList{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("498"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(498,8,499,53)"), owise{}(), UNIQUE'Unds'ID{}("bb41c4d46c49d46a1a39f61b07f93e4ce378edfd2e8f5e850d294a38e1d09ec2")]

// rule `#removeKlabelAttr(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(consAttrList(tagContent(inj{LowerName,KEY}(#token("klabel","LowerName")),inj{K,TagContents}(_0)),ATTRS))=>`#attrList2Patterns(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(ATTRS) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(17401d413545788f401e791ac6805b5d4db027b996ff5b1433d533a18b4805b4) contentStartColumn(8) contentStartLine(496) org.kframework.attributes.Location(Location(496,8,497,33)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPatterns{},R} (
        Lbl'Hash'removeKlabelAttr'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(LblconsAttrList{}(LbltagContent{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("klabel")),inj{SortK{}, SortTagContents{}}(Var'Unds'0:SortK{})),VarATTRS:SortAttrList{})),
        Lbl'Hash'attrList2Patterns'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(VarATTRS:SortAttrList{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("496"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(496,8,497,33)"), UNIQUE'Unds'ID{}("17401d413545788f401e791ac6805b5d4db027b996ff5b1433d533a18b4805b4")]

// rule `#removeKlabelAttr(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Patterns_AttrList`(dotAttrList(.KList))=>dotPatterns(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a559b7d277fb9b43ee6fd7c9015bd70e4ced1026c35896b85d66ef83d19c6911) contentStartColumn(8) contentStartLine(500) org.kframework.attributes.Location(Location(500,8,500,49)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPatterns{},R} (
        Lbl'Hash'removeKlabelAttr'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Patterns'Unds'AttrList{}(LbldotAttrList{}()),
        LbldotPatterns{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("500"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(500,8,500,49)"), UNIQUE'Unds'ID{}("a559b7d277fb9b43ee6fd7c9015bd70e4ced1026c35896b85d66ef83d19c6911")]

// rule `#sortsFromProdItem(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Sorts_KProductionItem`(_0)=>dotSorts(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1e39cd6b59c43d9c48ccb46f5436d82adecd1621c4f067b1e7aec0f4af2c8be3) contentStartColumn(8) contentStartLine(527) org.kframework.attributes.Location(Location(527,8,527,39)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortUpperName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortKProductionItem{}, R} (
                  \and{SortKProductionItem{}} (
                    Var'Unds'0:SortKProductionItem{},
                    LblnonTerminalLbl{}(inj{SortUpperName{}, SortKSort{}}(Var'Unds'1:SortUpperName{}))
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSorts{},R} (
        Lbl'Hash'sortsFromProdItem'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProductionItem{}(Var'Unds'0:SortKProductionItem{}),
        LbldotSorts{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("527"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(527,8,527,39)"), owise{}(), UNIQUE'Unds'ID{}("1e39cd6b59c43d9c48ccb46f5436d82adecd1621c4f067b1e7aec0f4af2c8be3")]

// rule `#sortsFromProdItem(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Sorts_KProductionItem`(nonTerminalLbl(inj{UpperName,KSort}(KSORT)))=>consSorts(nameParam(inj{UpperName,SortName}(KSORT),dotSorts(.KList)),dotSorts(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b635ca8e7b9462d2e2964889dcb755b2f43137e9940f60682a311e6e97a2a816) contentStartColumn(8) contentStartLine(525) org.kframework.attributes.Location(Location(525,8,526,33)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSorts{},R} (
        Lbl'Hash'sortsFromProdItem'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProductionItem{}(LblnonTerminalLbl{}(inj{SortUpperName{}, SortKSort{}}(VarKSORT:SortUpperName{}))),
        LblconsSorts{}(LblnameParam{}(inj{SortUpperName{}, SortSortName{}}(VarKSORT:SortUpperName{}),LbldotSorts{}()),LbldotSorts{}())),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("525"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(525,8,526,33)"), UNIQUE'Unds'ID{}("b635ca8e7b9462d2e2964889dcb755b2f43137e9940f60682a311e6e97a2a816")]

// rule `#stderr_K-IO_Int`(.KList)=>#token("2","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(648a904c3812c1cb0fecdba98730749b96204f03d0ceae9cf8dba2a96458d1ea) contentStartColumn(8) contentStartLine(1017) org.kframework.attributes.Location(Location(1017,8,1017,20)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'stderr'Unds'K-IO'Unds'Int{}(),
        \dv{SortInt{}}("2")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1017"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1017,8,1017,20)"), UNIQUE'Unds'ID{}("648a904c3812c1cb0fecdba98730749b96204f03d0ceae9cf8dba2a96458d1ea")]

// rule `#stdin_K-IO_Int`(.KList)=>#token("0","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b272916c87307d1096c0f36d3414bbf8d87233e4d72cb16865787ff20a3f8d74) contentStartColumn(8) contentStartLine(1015) org.kframework.attributes.Location(Location(1015,8,1015,19)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'stdin'Unds'K-IO'Unds'Int{}(),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1015"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1015,8,1015,19)"), UNIQUE'Unds'ID{}("b272916c87307d1096c0f36d3414bbf8d87233e4d72cb16865787ff20a3f8d74")]

// rule `#stdout_K-IO_Int`(.KList)=>#token("1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1cffe88ed4a0ac4f38b38f0ee6d54743fa4052ada718e9cea5f7a0ccb082d65) contentStartColumn(8) contentStartLine(1016) org.kframework.attributes.Location(Location(1016,8,1016,20)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Hash'stdout'Unds'K-IO'Unds'Int{}(),
        \dv{SortInt{}}("1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1016"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1016,8,1016,20)"), UNIQUE'Unds'ID{}("d1cffe88ed4a0ac4f38b38f0ee6d54743fa4052ada718e9cea5f7a0ccb082d65")]

// rule `#symbolArgumentsFromProduction(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Sorts_KProduction`(inj{KProductionItem,KProduction}(PRODITEM))=>`#sortsFromProdItem(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Sorts_KProductionItem`(PRODITEM) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3584cbefbe50d0927973d87ff29f999f39e9a0e5d982e29ce77a5bd3ae03a414) contentStartColumn(8) contentStartLine(519) org.kframework.attributes.Location(Location(519,8,520,36)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSorts{},R} (
        Lbl'Hash'symbolArgumentsFromProduction'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProduction{}(inj{SortKProductionItem{}, SortKProduction{}}(VarPRODITEM:SortKProductionItem{})),
        Lbl'Hash'sortsFromProdItem'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProductionItem{}(VarPRODITEM:SortKProductionItem{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("519"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(519,8,520,36)"), UNIQUE'Unds'ID{}("3584cbefbe50d0927973d87ff29f999f39e9a0e5d982e29ce77a5bd3ae03a414")]

// rule `#symbolArgumentsFromProduction(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Sorts_KProduction`(kProduction(PRODITEM,PROD))=>`_++Sorts__KORE-HELPERS_Sorts_Sorts_Sorts`(`#sortsFromProdItem(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Sorts_KProductionItem`(PRODITEM),`#symbolArgumentsFromProduction(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_Sorts_KProduction`(PROD)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(31d2b2369dfa5d99e2c98b63d52c5125d19f6a270a2829daa359922777ce290c) contentStartColumn(8) contentStartLine(521) org.kframework.attributes.Location(Location(521,8,522,81)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSorts{},R} (
        Lbl'Hash'symbolArgumentsFromProduction'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProduction{}(LblkProduction{}(VarPRODITEM:SortKProductionItem{},VarPROD:SortKProduction{})),
        Lbl'UndsPlusPlus'Sorts'UndsUnds'KORE-HELPERS'Unds'Sorts'Unds'Sorts'Unds'Sorts{}(Lbl'Hash'sortsFromProdItem'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProductionItem{}(VarPRODITEM:SortKProductionItem{}),Lbl'Hash'symbolArgumentsFromProduction'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'Sorts'Unds'KProduction{}(VarPROD:SortKProduction{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("521"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(521,8,522,81)"), UNIQUE'Unds'ID{}("31d2b2369dfa5d99e2c98b63d52c5125d19f6a270a2829daa359922777ce290c")]

// rule `#symbolNameFromAttrList(_)_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_SymbolName_AttrList`(ATTRS,_Configuration)=>`project:SymbolName`(`parseSymbolName(_)_PARSER-UTIL_KItem_String`(`tokenToString(_)_PARSER-UTIL_String_K`(inj{TagContents,KItem}(`#getAttributeContent(_,_)_META-ACCESSORS_TagContents_KEY_AttrList`(inj{LowerName,KEY}(#token("klabel","LowerName")),ATTRS))),_Configuration)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(373d5a6d5cbe0a8bce9a819ceee79f3b0698b83c5572d1e90c9fd7c42942bd16) contentStartColumn(8) contentStartLine(492) org.kframework.attributes.Location(Location(492,8,493,89)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSymbolName{},R} (
        Lbl'Hash'symbolNameFromAttrList'LParUndsRParUnds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'SymbolName'Unds'AttrList{}(VarATTRS:SortAttrList{},Var'Unds'Configuration:SortGeneratedTopCell{}),
        Lblproject'Coln'SymbolName{}(kseq{}(LblparseSymbolName'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortTagContents{}, SortKItem{}}(Lbl'Hash'getAttributeContent'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'TagContents'Unds'KEY'Unds'AttrList{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("klabel")),VarATTRS:SortAttrList{})),dotk{}())),Var'Unds'Configuration:SortGeneratedTopCell{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("492"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(492,8,493,89)"), UNIQUE'Unds'ID{}("373d5a6d5cbe0a8bce9a819ceee79f3b0698b83c5572d1e90c9fd7c42942bd16")]

// rule `<generatedTop>`(`<k>`(`#filterKoreDeclarations_REMOVE-FRONTEND-DECLARATIONS_KItem`(.KList)~>DotVar1) #as _9,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_0,_1,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(DECL)),DotVar5)),_2)),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_6,_7)=>`<generatedTop>`(_9,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_0,_1,`<declarations>`(`_DeclCellSet_`(`.DeclCellSet`(.KList),DotVar5)),_2)),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_6,_7) requires `notBool_`(isKoreDeclaration(inj{Declaration,KItem}(DECL))) ensures #token("true","Bool") [UNIQUE_ID(608704ef9d8c28de435d3c62a9eaa3aa0ad52e1c36e9ef7f3ab3ba49ddc54c59) contentStartColumn(8) contentStartLine(589) org.kframework.attributes.Location(Location(589,8,591,45)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblisKoreDeclaration{}(kseq{}(inj{SortDeclaration{}, SortKItem{}}(VarDECL:SortDeclaration{}),dotk{}()))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'9:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'0:SortNameCell{},Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(VarDECL:SortDeclaration{})),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'9:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'0:SortNameCell{},Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Stop'DeclCellSet{}(),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("589"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(589,8,591,45)"), UNIQUE'Unds'ID{}("608704ef9d8c28de435d3c62a9eaa3aa0ad52e1c36e9ef7f3ab3ba49ddc54c59")]

// rule `<generatedTop>`(`<k>`(`#flattenProductions_FLATTEN-PRODUCTIONS_KItem`(.KList)~>DotVar1) #as _10,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_1,_2,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,prioritySeqBlock(P1,_0,P2))))),DotVar5)),_3)),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _20))~>SREST),_7,_8)=>`<generatedTop>`(_10,`<definition>`(_4,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_1,_2,`<declarations>`(`_DeclCellSet_`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,P1)))),`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,inj{ProdBlock,PrioritySeqBlock}(P2)))))),DotVar5)),_3)),DotVar3)),_5),_6,`<s>`(inj{Strategy,KItem}(#appliedRule(_20))~>SREST),_7,_8) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0d82865c6af14e9faaf6f8a7e5cecaf6f8d7260b121da6a2905e797cacc928e5) contentStartColumn(8) contentStartLine(362) org.kframework.attributes.Location(Location(362,8,371,14)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'10:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'1:SortNameCell{},Var'Unds'2:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},LblprioritySeqBlock{}(VarP1:SortPrioritySeqBlock{},Var'Unds'0:SortAssocAttribute{},VarP2:SortProdBlock{}))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'3:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'20:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'10:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'4:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'1:SortNameCell{},Var'Unds'2:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},VarP1:SortPrioritySeqBlock{})))),LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortProdBlock{}, SortPrioritySeqBlock{}}(VarP2:SortProdBlock{})))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'3:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'5:SortConfigInfoCell{}),Var'Unds'6:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'20:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'7:SortGeneratedCounterCell{},Var'Unds'8:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("362"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(362,8,371,14)"), UNIQUE'Unds'ID{}("0d82865c6af14e9faaf6f8a7e5cecaf6f8d7260b121da6a2905e797cacc928e5")]

// rule `<generatedTop>`(`<k>`(`#flattenProductions_FLATTEN-PRODUCTIONS_KItem`(.KList)~>DotVar1) #as _9,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_0,_1,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,inj{ProdBlock,PrioritySeqBlock}(prodBlock(P1,P2)))))),DotVar5)),_2)),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_6,_7)=>`<generatedTop>`(_9,`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_0,_1,`<declarations>`(`_DeclCellSet_`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,inj{ProdBlock,PrioritySeqBlock}(P1))))),`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,inj{KProductionWAttr,PrioritySeqBlock}(P2)))))),DotVar5)),_2)),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_6,_7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a380f70a43f1610fa7aeff4e8ea4b752e1c6e9324814cbeb6d8788e9ff96993e) contentStartColumn(8) contentStartLine(372) org.kframework.attributes.Location(Location(372,8,381,14)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'9:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'0:SortNameCell{},Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortProdBlock{}, SortPrioritySeqBlock{}}(LblprodBlock{}(VarP1:SortProdBlock{},VarP2:SortKProductionWAttr{})))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'9:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'0:SortNameCell{},Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortProdBlock{}, SortPrioritySeqBlock{}}(VarP1:SortProdBlock{}))))),LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(VarP2:SortKProductionWAttr{})))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("372"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(372,8,381,14)"), UNIQUE'Unds'ID{}("a380f70a43f1610fa7aeff4e8ea4b752e1c6e9324814cbeb6d8788e9ff96993e")]

// rule `<generatedTop>`(`<k>`(`#nonFunctionProductionsToConstructors_NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS_KItem`(.KList)~>DotVar1) #as _8,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(inj{K,KProduction}(PROD),inj{KAttributesDeclaration,OptionalAttributes}(kAttributesDeclaration(ATTRS)))))))),DotVar5)),_1)),DotVar3)),_3),_4,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _18))~>SREST),_5,_6)=>`<generatedTop>`(_8,`<definition>`(_2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_0,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{SyntaxDeclaration,Declaration}(kSyntaxProductionLbl(SORT,inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(inj{K,KProduction}(PROD),inj{KAttributesDeclaration,OptionalAttributes}(kAttributesDeclaration(consAttrList(tagSimple(inj{LowerName,KEY}(#token("functional","LowerName"))),consAttrList(tagSimple(inj{LowerName,KEY}(#token("constructor","LowerName"))),consAttrList(tagSimple(inj{LowerName,KEY}(#token("injective","LowerName"))),ATTRS))))))))))),DotVar5)),_1)),DotVar3)),_3),_4,`<s>`(inj{Strategy,KItem}(#appliedRule(_18))~>SREST),_5,_6) requires `_andBool_`(`notBool_`(`#keyInAttributes(_,_)_META-ACCESSORS_Bool_KEY_AttrList`(inj{LowerName,KEY}(#token("constructor","LowerName")),ATTRS)),`notBool_`(`#keyInAttributes(_,_)_META-ACCESSORS_Bool_KEY_AttrList`(inj{LowerName,KEY}(#token("function","LowerName")),ATTRS))) ensures #token("true","Bool") [UNIQUE_ID(22ccce118c01052a0dccd69580276778b9336600acfdad916324065538938e59) contentStartColumn(8) contentStartLine(434) org.kframework.attributes.Location(Location(434,8,449,55)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'Unds'andBool'Unds'{}(LblnotBool'Unds'{}(Lbl'Hash'keyInAttributes'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'KEY'Unds'AttrList{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("constructor")),VarATTRS:SortAttrList{})),LblnotBool'Unds'{}(Lbl'Hash'keyInAttributes'LParUndsCommUndsRParUnds'META-ACCESSORS'Unds'Bool'Unds'KEY'Unds'AttrList{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("function")),VarATTRS:SortAttrList{}))),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(\and{SortKCell{}}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'8:SortKCell{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(inj{SortK{}, SortKProduction{}}(VarPROD:SortK{}),inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}}(LblkAttributesDeclaration{}(VarATTRS:SortAttrList{})))))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'18:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'8:SortKCell{},Lbl'-LT-'definition'-GT-'{}(Var'Unds'2:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'0:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortSyntaxDeclaration{}, SortDeclaration{}}(LblkSyntaxProductionLbl{}(VarSORT:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(inj{SortK{}, SortKProduction{}}(VarPROD:SortK{}),inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}}(LblkAttributesDeclaration{}(LblconsAttrList{}(LbltagSimple{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("functional"))),LblconsAttrList{}(LbltagSimple{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("constructor"))),LblconsAttrList{}(LbltagSimple{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("injective"))),VarATTRS:SortAttrList{}))))))))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'1:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'3:SortConfigInfoCell{}),Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'18:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("434"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(434,8,449,55)"), UNIQUE'Unds'ID{}("22ccce118c01052a0dccd69580276778b9336600acfdad916324065538938e59")]

// rule `<generatedTop>`(_0,_1,_2,`<s>`(S~>DotVar1),_3,_4)=>`<generatedTop>`(_0,_1,_2,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>S~>DotVar1),_3,_4) requires `_=/=K_`(S,inj{Strategy,KItem}(#STUCK(.KList))) ensures #token("true","Bool") [owise()]
  axiom{} \implies{SortGeneratedTopCell{}}(\bottom{SortGeneratedTopCell{}}(),\rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(VarS:SortKItem{},dotk{}()),kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'0:SortKCell{},Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(VarS:SortKItem{},VarDotVar1:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'0:SortKCell{},Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),kseq{}(VarS:SortKItem{},VarDotVar1:SortK{}))),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{}))))
  [owise{}()]

// rule `<generatedTop>`(`<k>`(`` `#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList) #as _11``~>inj{Module,KItem}(koreModuleLbl(MNAME,consDeclarations(DECL,DECLS),_0))~>DotVar1),`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_1,`<declarations>`(`_DeclCellSet_`(`.DeclCellSet`(.KList),DotVar5)),_2)),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _22))~>SREST),_6,_7)=>`<generatedTop>`(`<k>`(_11~>inj{Module,KItem}(koreModuleLbl(MNAME,DECLS,_0))~>DotVar1),`<definition>`(_3,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),_1,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(DECL)),DotVar5)),_2)),DotVar3)),_4),_5,`<s>`(inj{Strategy,KItem}(#appliedRule(_22))~>SREST),_6,_7) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9687a9e8e56a7c904786af5b716cb023ca11c6699df1f777f994edae112961f9) contentStartColumn(8) contentStartLine(323) org.kframework.attributes.Location(Location(323,8,325,70)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),Var'Unds'11:SortKItem{}),kseq{}(inj{SortModule{}, SortKItem{}}(LblkoreModuleLbl{}(VarMNAME:SortModuleName{},LblconsDeclarations{}(VarDECL:SortDeclaration{},VarDECLS:SortDeclarations{}),Var'Unds'0:SortAttribute{})),VarDotVar1:SortK{}))),Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(Lbl'Stop'DeclCellSet{}(),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'22:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'11:SortKItem{},kseq{}(inj{SortModule{}, SortKItem{}}(LblkoreModuleLbl{}(VarMNAME:SortModuleName{},VarDECLS:SortDeclarations{},Var'Unds'0:SortAttribute{})),VarDotVar1:SortK{}))),Lbl'-LT-'definition'-GT-'{}(Var'Unds'3:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(VarDECL:SortDeclaration{})),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'4:SortConfigInfoCell{}),Var'Unds'5:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'22:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'6:SortGeneratedCounterCell{},Var'Unds'7:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("323"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(323,8,325,70)"), UNIQUE'Unds'ID{}("9687a9e8e56a7c904786af5b716cb023ca11c6699df1f777f994edae112961f9")]

// rule `<generatedTop>`(`<k>`(`` `#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList) #as _7``~>inj{KDefinition,KItem}(kDefinitionLbl(emptyKRequireList(.KList),MODS))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _15))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(_7~>inj{KoreDefinition,KItem}(koreDefinitionLbl(koreAttributesLbl(dotPatterns(.KList)),MODS))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_15))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(37c1486157b79621bcda6633114a89f528c2561d78a640ff96f4224498bef53c) contentStartColumn(8) contentStartLine(257) org.kframework.attributes.Location(Location(257,8,262,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),Var'Unds'7:SortKItem{}),kseq{}(inj{SortKDefinition{}, SortKItem{}}(LblkDefinitionLbl{}(LblemptyKRequireList{}(),VarMODS:SortModules{})),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'15:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'7:SortKItem{},kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(LblkoreDefinitionLbl{}(LblkoreAttributesLbl{}(LbldotPatterns{}()),VarMODS:SortModules{})),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'15:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("257"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(257,8,262,12)"), UNIQUE'Unds'ID{}("37c1486157b79621bcda6633114a89f528c2561d78a640ff96f4224498bef53c")]

// rule `<generatedTop>`(`<k>`(`` `#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList) #as _8``~>inj{KoreDefinition,KItem}(koreDefinitionLbl(DEFATTRS,consModules(koreModuleLbl(MNAME,DECLS,koreAttributesLbl(ATTS)) #as _12,MODS)))~>DotVar1),`<definition>`(_0,`<modules>`(`_ModCellSet_`(`.ModCellSet`(.KList),DotVar3)),_1),_2,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _21))~>SREST),_3,_4)=>`<generatedTop>`(`<k>`(_8~>inj{Module,KItem}(_12)~>inj{KoreDefinition,KItem}(koreDefinitionLbl(DEFATTRS,MODS))~>DotVar1),`<definition>`(_0,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(`<name>`(MNAME),`<attributes>`(ATTS),initDeclarationsCell(.KList),initParserGeneratorCell(.KList))),DotVar3)),_1),_2,`<s>`(inj{Strategy,KItem}(#appliedRule(_21))~>SREST),_3,_4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d6fab1f1a06dc4cf40508dd50eeb30c0ae2b520914d1f7185fa4ec2448ceeb7a) contentStartColumn(8) contentStartLine(295) org.kframework.attributes.Location(Location(295,8,310,18)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),Var'Unds'8:SortKItem{}),kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(LblkoreDefinitionLbl{}(VarDEFATTRS:SortAttribute{},LblconsModules{}(\and{SortModule{}}(LblkoreModuleLbl{}(VarMNAME:SortModuleName{},VarDECLS:SortDeclarations{},LblkoreAttributesLbl{}(VarATTS:SortPatterns{})),Var'Unds'12:SortModule{}),VarMODS:SortModules{}))),VarDotVar1:SortK{}))),Lbl'-LT-'definition'-GT-'{}(Var'Unds'0:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(Lbl'Stop'ModCellSet{}(),VarDotVar3:SortModCellSet{})),Var'Unds'1:SortConfigInfoCell{}),Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'21:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'8:SortKItem{},kseq{}(inj{SortModule{}, SortKItem{}}(Var'Unds'12:SortModule{}),kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(LblkoreDefinitionLbl{}(VarDEFATTRS:SortAttribute{},VarMODS:SortModules{})),VarDotVar1:SortK{})))),Lbl'-LT-'definition'-GT-'{}(Var'Unds'0:SortDefnAttrsCell{},Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Lbl'-LT-'name'-GT-'{}(VarMNAME:SortModuleName{}),Lbl'-LT-'attributes'-GT-'{}(VarATTS:SortPatterns{}),LblinitDeclarationsCell{}(),LblinitParserGeneratorCell{}())),VarDotVar3:SortModCellSet{})),Var'Unds'1:SortConfigInfoCell{}),Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'21:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("295"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(295,8,310,18)"), UNIQUE'Unds'ID{}("d6fab1f1a06dc4cf40508dd50eeb30c0ae2b520914d1f7185fa4ec2448ceeb7a")]

// rule `<generatedTop>`(`<k>`(`` `#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList) #as _8``~>inj{KoreDefinition,KItem}(koreDefinitionLbl(_0,consModules(kModuleLbl(MNAME,ATTS,kImportList(IMPORTS,kImportLbl(I)),DECLS),MODS)))~>DotVar1),_1,_2,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_3,_4)=>`<generatedTop>`(`<k>`(_8~>inj{KoreDefinition,KItem}(koreDefinitionLbl(_0,consModules(kModuleLbl(MNAME,ATTS,IMPORTS,consDeclarations(inj{KoreDeclaration,Declaration}(koreImportLbl(I,koreAttributesLbl(dotPatterns(.KList)))),DECLS)),MODS)))~>DotVar1),_1,_2,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_3,_4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(281f9df6b9ba5306b4ad0d70140e80c3ba190b1020c9438238192eab4f5c7114) contentStartColumn(8) contentStartLine(268) org.kframework.attributes.Location(Location(268,8,275,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),Var'Unds'8:SortKItem{}),kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(LblkoreDefinitionLbl{}(Var'Unds'0:SortAttribute{},LblconsModules{}(LblkModuleLbl{}(VarMNAME:SortKModuleName{},VarATTS:SortOptionalAttributes{},LblkImportList{}(VarIMPORTS:SortKImportList{},LblkImportLbl{}(VarI:SortModuleName{})),VarDECLS:SortDeclarations{}),VarMODS:SortModules{}))),VarDotVar1:SortK{}))),Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'8:SortKItem{},kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(LblkoreDefinitionLbl{}(Var'Unds'0:SortAttribute{},LblconsModules{}(LblkModuleLbl{}(VarMNAME:SortKModuleName{},VarATTS:SortOptionalAttributes{},VarIMPORTS:SortKImportList{},LblconsDeclarations{}(inj{SortKoreDeclaration{}, SortDeclaration{}}(LblkoreImportLbl{}(VarI:SortModuleName{},LblkoreAttributesLbl{}(LbldotPatterns{}()))),VarDECLS:SortDeclarations{})),VarMODS:SortModules{}))),VarDotVar1:SortK{}))),Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("268"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(268,8,275,12)"), UNIQUE'Unds'ID{}("281f9df6b9ba5306b4ad0d70140e80c3ba190b1020c9438238192eab4f5c7114")]

// rule `<generatedTop>`(`<k>`(`` `#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList) #as _8``~>inj{KoreDefinition,KItem}(koreDefinitionLbl(_0,consModules(kModuleLbl(MNAME,noKAttributesDeclaration(.KList),emptyKImportList(.KList),DECLS),MODS)))~>DotVar1),_1,_2,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_3,_4)=>`<generatedTop>`(`<k>`(_8~>inj{KoreDefinition,KItem}(koreDefinitionLbl(_0,consModules(koreModuleLbl(inj{KModuleName,ModuleName}(MNAME),DECLS,koreAttributesLbl(dotPatterns(.KList))),MODS)))~>DotVar1),_1,_2,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_3,_4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6ddffbfc4c0451fa5e4970d48ca50e178470ce7468b4c8fe540ee5b2cb2550d1) contentStartColumn(8) contentStartLine(281) org.kframework.attributes.Location(Location(281,8,289,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),Var'Unds'8:SortKItem{}),kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(LblkoreDefinitionLbl{}(Var'Unds'0:SortAttribute{},LblconsModules{}(LblkModuleLbl{}(VarMNAME:SortKModuleName{},LblnoKAttributesDeclaration{}(),LblemptyKImportList{}(),VarDECLS:SortDeclarations{}),VarMODS:SortModules{}))),VarDotVar1:SortK{}))),Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'8:SortKItem{},kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(LblkoreDefinitionLbl{}(Var'Unds'0:SortAttribute{},LblconsModules{}(LblkoreModuleLbl{}(inj{SortKModuleName{}, SortModuleName{}}(VarMNAME:SortKModuleName{}),VarDECLS:SortDeclarations{},LblkoreAttributesLbl{}(LbldotPatterns{}())),VarMODS:SortModules{}))),VarDotVar1:SortK{}))),Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("281"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(281,8,289,12)"), UNIQUE'Unds'ID{}("6ddffbfc4c0451fa5e4970d48ca50e178470ce7468b4c8fe540ee5b2cb2550d1")]

// rule `<generatedTop>`(`<k>`(`` `#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList) #as _8``~>inj{Module,KItem}(koreModuleLbl(MNAME,dotDeclarations(.KList),_0))~>DotVar1),_1,_2,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _16))~>SREST),_3,_4)=>`<generatedTop>`(`<k>`(_8~>DotVar1),_1,_2,`<s>`(inj{Strategy,KItem}(#appliedRule(_16))~>SREST),_3,_4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(48c9c128f05f64ff7ff128ae3083258bae6ca26d5da3d3e322d5414ac987db1b) contentStartColumn(8) contentStartLine(326) org.kframework.attributes.Location(Location(326,8,326,80)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),Var'Unds'8:SortKItem{}),kseq{}(inj{SortModule{}, SortKItem{}}(LblkoreModuleLbl{}(VarMNAME:SortModuleName{},LbldotDeclarations{}(),Var'Unds'0:SortAttribute{})),VarDotVar1:SortK{}))),Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'16:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'8:SortKItem{},VarDotVar1:SortK{})),Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'16:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("326"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(326,8,326,80)"), UNIQUE'Unds'ID{}("48c9c128f05f64ff7ff128ae3083258bae6ca26d5da3d3e322d5414ac987db1b")]

// rule `<generatedTop>`(`<k>`(`` `#extractConfigInfo_PARSE-CONFIG_KItem`(.KList) #as _9``~>DotVar1),`<definition>`(DotVar2,`<modules>`(`_ModCellSet_`(`ModCellSetItem`(`<mod>`(_0,_1,`<declarations>`(`_DeclCellSet_`(`DeclCellSetItem`(`<decl>`(inj{EKoreDeclaration,Declaration}(kConfigurationLbl(noAttrsP(P))))),DotVar5)),_2)),DotVar3)) #as _11,`<configInfo>`(DotVar6,`<collected>`(Configs))),_3,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_4,_5)=>`<generatedTop>`(`<k>`(`collectCellName(_)_PARSE-CONFIG_KItem_Patterns`(consPatterns(P,dotPatterns(.KList)))~>_9~>DotVar1),`<definition>`(DotVar2,_11,`<configInfo>`(DotVar6,`<collected>`(`_Set_`(Configs,`SetItem`(inj{Pattern,KItem}(P)))))),_3,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_4,_5) requires `notBool_`(`Set:in`(inj{Pattern,KItem}(P),Configs)) ensures #token("true","Bool") [UNIQUE_ID(1572b40d6fdc66b73f0e6d29cd98108aca93f89ba6d339482c5895bee595936c) contentStartColumn(8) contentStartLine(176) org.kframework.attributes.Location(Location(176,8,179,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(inj{SortPattern{}, SortKItem{}}(VarP:SortPattern{}),VarConfigs:SortSet{})),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(),Var'Unds'9:SortKItem{}),VarDotVar1:SortK{})),Lbl'-LT-'definition'-GT-'{}(VarDotVar2:SortDefnAttrsCell{},\and{SortModulesCell{}}(Lbl'-LT-'modules'-GT-'{}(Lbl'Unds'ModCellSet'Unds'{}(LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(Var'Unds'0:SortNameCell{},Var'Unds'1:SortAttributesCell{},Lbl'-LT-'declarations'-GT-'{}(Lbl'Unds'DeclCellSet'Unds'{}(LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(inj{SortEKoreDeclaration{}, SortDeclaration{}}(LblkConfigurationLbl{}(LblnoAttrsP{}(VarP:SortPattern{}))))),VarDotVar5:SortDeclCellSet{})),Var'Unds'2:SortParserGeneratorCell{})),VarDotVar3:SortModCellSet{})),Var'Unds'11:SortModulesCell{}),Lbl'-LT-'configInfo'-GT-'{}(VarDotVar6:SortCellNameCell{},Lbl'-LT-'collected'-GT-'{}(VarConfigs:SortSet{}))),Var'Unds'3:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'4:SortGeneratedCounterCell{},Var'Unds'5:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(LblconsPatterns{}(VarP:SortPattern{},LbldotPatterns{}())),kseq{}(Var'Unds'9:SortKItem{},VarDotVar1:SortK{}))),Lbl'-LT-'definition'-GT-'{}(VarDotVar2:SortDefnAttrsCell{},Var'Unds'11:SortModulesCell{},Lbl'-LT-'configInfo'-GT-'{}(VarDotVar6:SortCellNameCell{},Lbl'-LT-'collected'-GT-'{}(Lbl'Unds'Set'Unds'{}(VarConfigs:SortSet{},LblSetItem{}(inj{SortPattern{}, SortKItem{}}(VarP:SortPattern{})))))),Var'Unds'3:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'4:SortGeneratedCounterCell{},Var'Unds'5:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("176"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(176,8,179,35)"), UNIQUE'Unds'ID{}("1572b40d6fdc66b73f0e6d29cd98108aca93f89ba6d339482c5895bee595936c")]

// rule `<generatedTop>`(`<k>`(``inj{Pattern,KItem}(P) #as _7``~>`#success_COMMAND-LINE_KItem`(.KList)~>DotVar1),_1,`<exit-code>`(_0),`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _14))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(_7~>DotVar1),_1,`<exit-code>`(#token("0","Int")),`<s>`(inj{Strategy,KItem}(#appliedRule(_14))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(66f8cb22cb3f22ad4778a9a3ac13cbbcc3fd26cb34f947cc45b8a3b29c9b4f8b) contentStartColumn(8) contentStartLine(91) cool-like() org.kframework.attributes.Location(Location(91,8,92,39)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortPattern{}, SortKItem{}}(VarP:SortPattern{}),Var'Unds'7:SortKItem{}),kseq{}(Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(),VarDotVar1:SortK{}))),Var'Unds'1:SortDefinitionCell{},Lbl'-LT-'exit-code'-GT-'{}(Var'Unds'0:SortInt{}),Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'14:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'7:SortKItem{},VarDotVar1:SortK{})),Var'Unds'1:SortDefinitionCell{},Lbl'-LT-'exit-code'-GT-'{}(\dv{SortInt{}}("0")),Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'14:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), cool-like{}(), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("91"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,8,92,39)"), UNIQUE'Unds'ID{}("66f8cb22cb3f22ad4778a9a3ac13cbbcc3fd26cb34f947cc45b8a3b29c9b4f8b")]

// rule `<generatedTop>`(`<k>`(``inj{Definition,KItem}(PGM) #as _7``~>`` `#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList) #as _8``~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(_8~>_7~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(887855d2082b97e425eedd05eae8468bdfc11f3a25c2b06156732603842b8fc9) contentStartColumn(8) contentStartLine(248) org.kframework.attributes.Location(Location(248,8,251,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\and{SortKItem{}}(inj{SortDefinition{}, SortKItem{}}(VarPGM:SortDefinition{}),Var'Unds'7:SortKItem{}),kseq{}(\and{SortKItem{}}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),Var'Unds'8:SortKItem{}),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Var'Unds'8:SortKItem{},kseq{}(Var'Unds'7:SortKItem{},VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("248"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(248,8,251,12)"), UNIQUE'Unds'ID{}("887855d2082b97e425eedd05eae8468bdfc11f3a25c2b06156732603842b8fc9")]

// rule `<generatedTop>`(`<k>`(`#collectPgmGrammar_PARSE-PROGRAM_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1ac86f95d01a57ab86cd78705edb0b716dc6f94f2c0ad0c1eece79f9a3dd2544) contentStartColumn(8) contentStartLine(128) org.kframework.attributes.Location(Location(128,8,129,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'collectPgmGrammar'Unds'PARSE-PROGRAM'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("128"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,8,129,35)"), UNIQUE'Unds'ID{}("1ac86f95d01a57ab86cd78705edb0b716dc6f94f2c0ad0c1eece79f9a3dd2544")]

// rule `<generatedTop>`(`<k>`(`#createRuleGrammar_PARSE-RULE_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fa50122bcbe8d9676b04c613f49b5e7b6f5cd20fa19cdac258e6a7a3e203b950) contentStartColumn(8) contentStartLine(222) org.kframework.attributes.Location(Location(222,8,223,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'createRuleGrammar'Unds'PARSE-RULE'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("222"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(222,8,223,35)"), UNIQUE'Unds'ID{}("fa50122bcbe8d9676b04c613f49b5e7b6f5cd20fa19cdac258e6a7a3e203b950")]

// rule `<generatedTop>`(`<k>`(`#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList)~>inj{KoreDefinition,KItem}(koreDefinitionLbl(koreAttributesLbl(dotPatterns(.KList)),dotModules(.KList)))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _17))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_17))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c5926083dcea989f4604669095b7f29ee5672a0aa09e5f6f658f04ab760f1f30) contentStartColumn(8) contentStartLine(316) org.kframework.attributes.Location(Location(316,8,319,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(LblkoreDefinitionLbl{}(LblkoreAttributesLbl{}(LbldotPatterns{}()),LbldotModules{}())),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'17:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'17:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("316"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(316,8,319,12)"), UNIQUE'Unds'ID{}("c5926083dcea989f4604669095b7f29ee5672a0aa09e5f6f658f04ab760f1f30")]

// rule `<generatedTop>`(`<k>`(`#ekorePipeline_COMMAND-LINE_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _12))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(`#parseToEKore_PARSE-TO-EKORE_KItem`(.KList)~>`#defnToConfig_FRONTEND-MODULES-TO-KORE-MODULES_KItem`(.KList)~>`#flattenProductions_FLATTEN-PRODUCTIONS_KItem`(.KList)~>`#nonFunctionProductionsToConstructors_NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS_KItem`(.KList)~>`#productionsToSortDeclarations_PRODUCTIONS-TO-SORT-DECLARATIONS_KItem`(.KList)~>`#productionsToSymbolDeclarations_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_KItem`(.KList)~>`#translateRules_TRANSLATE-FUNCTION-RULES_KItem`(.KList)~>`#success_COMMAND-LINE_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_12))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(88209099bfac13cb42b779b5e9b6afd88da4b50c847d4a459d548915131fb061) contentStartColumn(8) contentStartLine(112) org.kframework.attributes.Location(Location(112,8,120,16)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'12:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseToEKore'Unds'PARSE-TO-EKORE'Unds'KItem{}(),kseq{}(Lbl'Hash'defnToConfig'Unds'FRONTEND-MODULES-TO-KORE-MODULES'Unds'KItem{}(),kseq{}(Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(),kseq{}(Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(),kseq{}(Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(),kseq{}(Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(),kseq{}(Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}(),kseq{}(Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(),VarDotVar1:SortK{}))))))))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'12:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("112"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,8,120,16)"), UNIQUE'Unds'ID{}("88209099bfac13cb42b779b5e9b6afd88da4b50c847d4a459d548915131fb061")]

// rule `<generatedTop>`(`<k>`(`#extractConfigInfo_PARSE-CONFIG_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9955db9a3f5859a40ca30880574d98a650e9fa526d944cdb3e416d5557eeedfa) contentStartColumn(8) contentStartLine(190) org.kframework.attributes.Location(Location(190,8,191,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'extractConfigInfo'Unds'PARSE-CONFIG'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("190"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(190,8,191,35)"), UNIQUE'Unds'ID{}("9955db9a3f5859a40ca30880574d98a650e9fa526d944cdb3e416d5557eeedfa")]

// rule `<generatedTop>`(`<k>`(`#filterKoreDeclarations_REMOVE-FRONTEND-DECLARATIONS_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(279dae0fc9414bc0b5677f91a19c3c5e811b5f20a824adb784e20d9c59e99b60) contentStartColumn(8) contentStartLine(592) org.kframework.attributes.Location(Location(592,8,593,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("592"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(592,8,593,35)"), UNIQUE'Unds'ID{}("279dae0fc9414bc0b5677f91a19c3c5e811b5f20a824adb784e20d9c59e99b60")]

// rule `<generatedTop>`(`<k>`(`#flattenProductions_FLATTEN-PRODUCTIONS_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c2620e94915255b94ab0e80632701bac10a7a69922975d88ed22023cd207d184) contentStartColumn(8) contentStartLine(383) org.kframework.attributes.Location(Location(383,8,384,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'flattenProductions'Unds'FLATTEN-PRODUCTIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("383"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(383,8,384,35)"), UNIQUE'Unds'ID{}("c2620e94915255b94ab0e80632701bac10a7a69922975d88ed22023cd207d184")]

// rule `<generatedTop>`(`<k>`(`#nonFunctionProductionsToConstructors_NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bbe9920e39fd73ff6dbb9315684a475ff4a6ab02a01e623570dbdd7b22b63b3b) contentStartColumn(8) contentStartLine(450) org.kframework.attributes.Location(Location(450,8,451,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'nonFunctionProductionsToConstructors'Unds'NON-FUNCTIONAL-PRODUCTIONS-TO-CONSTRUCTORS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("450"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(450,8,451,35)"), UNIQUE'Unds'ID{}("bbe9920e39fd73ff6dbb9315684a475ff4a6ab02a01e623570dbdd7b22b63b3b")]

// rule `<generatedTop>`(`<k>`(`#parseCommandLine(_,_)_COMMAND-LINE-SYNTAX_KItem_CommandLine_Pgm`(`ekore-to-kore_COMMAND-LINE-SYNTAX_CommandLine`(.KList),PGM)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(inj{Pgm,KItem}(PGM)~>`#ekorePipeline_COMMAND-LINE_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(40dba6d8d340511a8a087a880db785a1da6a38bc967e99be945a2bbff509857c) contentStartColumn(8) contentStartLine(83) org.kframework.attributes.Location(Location(83,8,86,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Lblekore-to-kore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(),VarPGM:SortPgm{}),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarPGM:SortPgm{}),kseq{}(Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("83"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,8,86,12)"), UNIQUE'Unds'ID{}("40dba6d8d340511a8a087a880db785a1da6a38bc967e99be945a2bbff509857c")]

// rule `<generatedTop>`(`<k>`(`#parseCommandLine(_,_)_COMMAND-LINE-SYNTAX_KItem_CommandLine_Pgm`(`frontend-to-ekore_COMMAND-LINE-SYNTAX_CommandLine`(.KList),PGM)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(inj{Pgm,KItem}(PGM)~>`#frontendPipeline_COMMAND-LINE_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a5be159912c398880ed4e3abcc980ea181187d15c52ef7a23e3c7ab014215643) contentStartColumn(8) contentStartLine(71) org.kframework.attributes.Location(Location(71,8,74,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Lblfrontend-to-ekore'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(),VarPGM:SortPgm{}),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarPGM:SortPgm{}),kseq{}(Lbl'Hash'frontendPipeline'Unds'COMMAND-LINE'Unds'KItem{}(),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("71"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,8,74,12)"), UNIQUE'Unds'ID{}("a5be159912c398880ed4e3abcc980ea181187d15c52ef7a23e3c7ab014215643")]

// rule `<generatedTop>`(`<k>`(`#parseCommandLine(_,_)_COMMAND-LINE-SYNTAX_KItem_CommandLine_Pgm`(`kast__COMMAND-LINE-SYNTAX_CommandLine_Path`(PATH),PGM)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(inj{Pgm,KItem}(PGM)~>`#kastPipeline(_)_COMMAND-LINE_KItem_String`(`token2String(_)_COMMAND-LINE-SYNTAX_String_Path`(PATH))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f74c6ee8c0fccae9050df0900f91abfeea19ec0a13c33cbaa28f69d4287ecc1e) contentStartColumn(8) contentStartLine(57) org.kframework.attributes.Location(Location(57,8,60,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Lblkast'UndsUnds'COMMAND-LINE-SYNTAX'Unds'CommandLine'Unds'Path{}(VarPATH:SortPath{}),VarPGM:SortPgm{}),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarPGM:SortPgm{}),kseq{}(Lbl'Hash'kastPipeline'LParUndsRParUnds'COMMAND-LINE'Unds'KItem'Unds'String{}(Lbltoken2String'LParUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'String'Unds'Path{}(VarPATH:SortPath{})),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("57"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(57,8,60,12)"), UNIQUE'Unds'ID{}("f74c6ee8c0fccae9050df0900f91abfeea19ec0a13c33cbaa28f69d4287ecc1e")]

// rule `<generatedTop>`(`<k>`(`#parseCommandLine(_,_)_COMMAND-LINE-SYNTAX_KItem_CommandLine_Pgm`(`kompile_COMMAND-LINE-SYNTAX_CommandLine`(.KList),PGM)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(inj{Pgm,KItem}(PGM)~>`#ekorePipeline_COMMAND-LINE_KItem`(.KList)~>`#filterKoreDeclarations_REMOVE-FRONTEND-DECLARATIONS_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b0419022cf4e1950f764a0869837fed5be0cbd09fda1a4cdaaf47235fbcc9cb5) contentStartColumn(8) contentStartLine(46) org.kframework.attributes.Location(Location(46,8,49,12)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Lblkompile'Unds'COMMAND-LINE-SYNTAX'Unds'CommandLine{}(),VarPGM:SortPgm{}),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarPGM:SortPgm{}),kseq{}(Lbl'Hash'ekorePipeline'Unds'COMMAND-LINE'Unds'KItem{}(),kseq{}(Lbl'Hash'filterKoreDeclarations'Unds'REMOVE-FRONTEND-DECLARATIONS'Unds'KItem{}(),VarDotVar1:SortK{})))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("46"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,8,49,12)"), UNIQUE'Unds'ID{}("b0419022cf4e1950f764a0869837fed5be0cbd09fda1a4cdaaf47235fbcc9cb5")]

// rule `<generatedTop>`(`<k>`(`#parseConfigBubbles_PARSE-CONFIG_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(544288ca46766e945a07264d1647da889346163f21377f30b3684e1a27dd4361) contentStartColumn(8) contentStartLine(168) org.kframework.attributes.Location(Location(168,8,169,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseConfigBubbles'Unds'PARSE-CONFIG'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("168"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(168,8,169,35)"), UNIQUE'Unds'ID{}("544288ca46766e945a07264d1647da889346163f21377f30b3684e1a27dd4361")]

// rule `<generatedTop>`(`<k>`(`#parseProgramPath(_)_PARSE-PROGRAM_KItem_String`(PGM_FILENAME)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _12))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(`#parseProgram(_)_PARSE-PROGRAM_KItem_IOString`(`readFile(_)_FILE-UTIL_IOString_String`(PGM_FILENAME))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_12))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a1bf3b5c1e1dfa8289b890c63d4c819c89720d009077251376ca256e918a5403) contentStartColumn(8) contentStartLine(115) org.kframework.attributes.Location(Location(115,8,115,93)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseProgramPath'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'String{}(VarPGM'Unds'FILENAME:SortString{}),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'12:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseProgram'LParUndsRParUnds'PARSE-PROGRAM'Unds'KItem'Unds'IOString{}(LblreadFile'LParUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'String{}(VarPGM'Unds'FILENAME:SortString{})),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'12:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("115"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(115,8,115,93)"), UNIQUE'Unds'ID{}("a1bf3b5c1e1dfa8289b890c63d4c819c89720d009077251376ca256e918a5403")]

// rule `<generatedTop>`(`<k>`(`#parseRuleBubbles_PARSE-RULE_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0be49165379cfcb7d077b6b567fe06273e09db1bc83a26e71296503e6f8d03a2) contentStartColumn(8) contentStartLine(234) org.kframework.attributes.Location(Location(234,8,235,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseRuleBubbles'Unds'PARSE-RULE'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("234"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(234,8,235,35)"), UNIQUE'Unds'ID{}("0be49165379cfcb7d077b6b567fe06273e09db1bc83a26e71296503e6f8d03a2")]

// rule `<generatedTop>`(`<k>`(`#productionsToSortDeclarations_PRODUCTIONS-TO-SORT-DECLARATIONS_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6f8d405e5659b8c9fbd924c8db44f2f1877ed77571b027a1a91bb36a8cbd2645) contentStartColumn(8) contentStartLine(414) org.kframework.attributes.Location(Location(414,8,415,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'productionsToSortDeclarations'Unds'PRODUCTIONS-TO-SORT-DECLARATIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("414"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(414,8,415,35)"), UNIQUE'Unds'ID{}("6f8d405e5659b8c9fbd924c8db44f2f1877ed77571b027a1a91bb36a8cbd2645")]

// rule `<generatedTop>`(`<k>`(`#productionsToSymbolDeclarations_PRODUCTIONS-TO-SYMBOL-DECLARATIONS_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ee15151cd625590c7a2f080796d5dbc39d4e25a7aead087c802aebd570717eea) contentStartColumn(8) contentStartLine(484) org.kframework.attributes.Location(Location(484,8,485,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'productionsToSymbolDeclarations'Unds'PRODUCTIONS-TO-SYMBOL-DECLARATIONS'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("484"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(484,8,485,35)"), UNIQUE'Unds'ID{}("ee15151cd625590c7a2f080796d5dbc39d4e25a7aead087c802aebd570717eea")]

// rule `<generatedTop>`(`<k>`(`#success_COMMAND-LINE_KItem`(.KList)~>DotVar1),_1,`<exit-code>`(_0),`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_1,`<exit-code>`(#token("0","Int")),`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5d2ca019faad27e6b4726eb10e09653766c83e6d8b85ce421957d4ae5fe4233f) contentStartColumn(8) contentStartLine(93) org.kframework.attributes.Location(Location(93,8,94,39)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/command-line.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'success'Unds'COMMAND-LINE'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'1:SortDefinitionCell{},Lbl'-LT-'exit-code'-GT-'{}(Var'Unds'0:SortInt{}),Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'1:SortDefinitionCell{},Lbl'-LT-'exit-code'-GT-'{}(\dv{SortInt{}}("0")),Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/command-line.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("93"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(93,8,94,39)"), UNIQUE'Unds'ID{}("5d2ca019faad27e6b4726eb10e09653766c83e6d8b85ce421957d4ae5fe4233f")]

// rule `<generatedTop>`(`<k>`(`#translateRules_TRANSLATE-FUNCTION-RULES_KItem`(.KList)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#STUCK(.KList))~>DotVar2),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(DotVar2),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3e95ecc159845b90a2e40f0b0306ab8804f4e105f2909d96dea0747306441652) contentStartColumn(8) contentStartLine(571) org.kframework.attributes.Location(Location(571,8,572,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'translateRules'Unds'TRANSLATE-FUNCTION-RULES'Unds'KItem{}(),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'STUCK{}()),VarDotVar2:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(VarDotVar2:SortK{}),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("571"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(571,8,572,35)"), UNIQUE'Unds'ID{}("3e95ecc159845b90a2e40f0b0306ab8804f4e105f2909d96dea0747306441652")]

// rule `<generatedTop>`(`<k>`(`collectCellName(_)_PARSE-CONFIG_KItem_Patterns`(consPatterns(A,B))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(`collectCellName(_)_PARSE-CONFIG_KItem_Patterns`(consPatterns(A,dotPatterns(.KList)))~>`collectCellName(_)_PARSE-CONFIG_KItem_Patterns`(B)~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires `_=/=K_`(inj{Patterns,KItem}(B),inj{Patterns,KItem}(dotPatterns(.KList))) ensures #token("true","Bool") [UNIQUE_ID(c4671f309c6bbf3dbee67a3a4ac67a1f39d43732da7b830f5fc096099eab703b) contentStartColumn(8) contentStartLine(182) org.kframework.attributes.Location(Location(182,8,183,30)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(kseq{}(inj{SortPatterns{}, SortKItem{}}(VarB:SortPatterns{}),dotk{}()),kseq{}(inj{SortPatterns{}, SortKItem{}}(LbldotPatterns{}()),dotk{}())),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(LblconsPatterns{}(VarA:SortPattern{},VarB:SortPatterns{})),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(LblconsPatterns{}(VarA:SortPattern{},LbldotPatterns{}())),kseq{}(LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(VarB:SortPatterns{}),VarDotVar1:SortK{}))),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("182"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(182,8,183,30)"), UNIQUE'Unds'ID{}("c4671f309c6bbf3dbee67a3a4ac67a1f39d43732da7b830f5fc096099eab703b")]

// rule `<generatedTop>`(`<k>`(`collectCellName(_)_PARSE-CONFIG_KItem_Patterns`(consPatterns(application(symbolSorts(_0,_1),A),dotPatterns(.KList)))~>DotVar1),_2,_3,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _18))~>SREST),_4,_5)=>`<generatedTop>`(`<k>`(`collectCellName(_)_PARSE-CONFIG_KItem_Patterns`(A)~>DotVar1),_2,_3,`<s>`(inj{Strategy,KItem}(#appliedRule(_18))~>SREST),_4,_5) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b571462e83b5e48a554c7a2722c6bce9713b2a771823d856f238e831d7fc04de) contentStartColumn(8) contentStartLine(181) org.kframework.attributes.Location(Location(181,8,181,83)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(LblconsPatterns{}(Lblapplication{}(LblsymbolSorts{}(Var'Unds'0:SortSymbolName{},Var'Unds'1:SortSorts{}),VarA:SortPatterns{}),LbldotPatterns{}())),VarDotVar1:SortK{})),Var'Unds'2:SortDefinitionCell{},Var'Unds'3:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'18:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'4:SortGeneratedCounterCell{},Var'Unds'5:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(VarA:SortPatterns{}),VarDotVar1:SortK{})),Var'Unds'2:SortDefinitionCell{},Var'Unds'3:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'18:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'4:SortGeneratedCounterCell{},Var'Unds'5:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("181"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(181,8,181,83)"), UNIQUE'Unds'ID{}("b571462e83b5e48a554c7a2722c6bce9713b2a771823d856f238e831d7fc04de")]

// rule `<generatedTop>`(`<k>`(`collectCellName(_)_PARSE-CONFIG_KItem_Patterns`(consPatterns(dv(nameParam(inj{UpperName,SortName}(Srt),dotSorts(.KList)),CellName),dotPatterns(.KList)))~>DotVar1),`<definition>`(_0,_1,`<configInfo>`(`<cellName>`(`_Map_`(`.Map`(.KList),DotVar4)),DotVar3)),_2,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _23))~>SREST),_3,_4)=>`<generatedTop>`(`<k>`(DotVar1),`<definition>`(_0,_1,`<configInfo>`(`<cellName>`(`_Map_`(`_|->_`(inj{String,KItem}(`substrString(_,_,_)_STRING_String_String_Int_Int`(`token2String(_)_PARSE-CONFIG_String_KoreString`(CellName),#token("1","Int"),`_-Int_`(`lengthString(_)_STRING_Int_String`(`token2String(_)_PARSE-CONFIG_String_KoreString`(CellName)),#token("1","Int")))),inj{String,KItem}(`token2String(_)_PARSER-GEN-HELPERS_String_UpperName`(Srt))),DotVar4)),DotVar3)),_2,`<s>`(inj{Strategy,KItem}(#appliedRule(_23))~>SREST),_3,_4) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5c756deaf11b6c6187ca47f665930276e4e1056b1c2aaae637dfdb6f8a056fbb) contentStartColumn(8) contentStartLine(187) org.kframework.attributes.Location(Location(187,8,188,149)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(LblconsPatterns{}(Lbldv{}(LblnameParam{}(inj{SortUpperName{}, SortSortName{}}(VarSrt:SortUpperName{}),LbldotSorts{}()),VarCellName:SortKoreString{}),LbldotPatterns{}())),VarDotVar1:SortK{})),Lbl'-LT-'definition'-GT-'{}(Var'Unds'0:SortDefnAttrsCell{},Var'Unds'1:SortModulesCell{},Lbl'-LT-'configInfo'-GT-'{}(Lbl'-LT-'cellName'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'Stop'Map{}(),VarDotVar4:SortMap{})),VarDotVar3:SortCollectedCell{})),Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'23:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Lbl'-LT-'definition'-GT-'{}(Var'Unds'0:SortDefnAttrsCell{},Var'Unds'1:SortModulesCell{},Lbl'-LT-'configInfo'-GT-'{}(Lbl'-LT-'cellName'-GT-'{}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortString{}, SortKItem{}}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(Lbltoken2String'LParUndsRParUnds'PARSE-CONFIG'Unds'String'Unds'KoreString{}(VarCellName:SortKoreString{}),\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(Lbltoken2String'LParUndsRParUnds'PARSE-CONFIG'Unds'String'Unds'KoreString{}(VarCellName:SortKoreString{})),\dv{SortInt{}}("1")))),inj{SortString{}, SortKItem{}}(Lbltoken2String'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'String'Unds'UpperName{}(VarSrt:SortUpperName{}))),VarDotVar4:SortMap{})),VarDotVar3:SortCollectedCell{})),Var'Unds'2:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'23:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("187"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(187,8,188,149)"), UNIQUE'Unds'ID{}("5c756deaf11b6c6187ca47f665930276e4e1056b1c2aaae637dfdb6f8a056fbb")]

// rule `<generatedTop>`(`<k>`(`collectCellName(_)_PARSE-CONFIG_KItem_Patterns`(dotPatterns(.KList))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(00c5f7287d25d366b4c3d8ee6d04dddd14caf89d207ad065fa111e6c146a2d3d) contentStartColumn(8) contentStartLine(184) org.kframework.attributes.Location(Location(184,8,184,55)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(LblcollectCellName'LParUndsRParUnds'PARSE-CONFIG'Unds'KItem'Unds'Patterns{}(LbldotPatterns{}()),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(VarDotVar1:SortK{}),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("184"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(184,8,184,55)"), UNIQUE'Unds'ID{}("00c5f7287d25d366b4c3d8ee6d04dddd14caf89d207ad065fa111e6c146a2d3d")]

// rule `<generatedTop>`(`<k>`(inj{Pattern,KItem}(`applyTypeCheck(_,_,_,_)_DISAMBIGUATE_Pattern_Pattern_Map_Set_Set`(P,Sigs,Subs,Types))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _13))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(inj{Pattern,KItem}(`checkType(_,_,_,_,_)_DISAMBIGUATE_Pattern_Pattern_SortName_Map_Set_Set`(P,inj{UpperName,SortName}(#token("K","UpperName")),Sigs,Subs,Types))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_13))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(57863f1156c77110f46910638ec92b5d2e3a4b8df84babf17c2284a1eb2d9da6) contentStartColumn(8) contentStartLine(77) org.kframework.attributes.Location(Location(77,8,77,104)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPattern{}, SortKItem{}}(LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(VarP:SortPattern{},VarSigs:SortMap{},VarSubs:SortSet{},VarTypes:SortSet{})),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'13:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPattern{}, SortKItem{}}(LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(VarP:SortPattern{},inj{SortUpperName{}, SortSortName{}}(\dv{SortUpperName{}}("K")),VarSigs:SortMap{},VarSubs:SortSet{},VarTypes:SortSet{})),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'13:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("77"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(77,8,77,104)"), UNIQUE'Unds'ID{}("57863f1156c77110f46910638ec92b5d2e3a4b8df84babf17c2284a1eb2d9da6")]

// rule `<generatedTop>`(`<k>`(inj{Pattern,KItem}(`checkType(_,_,_,_,_)_DISAMBIGUATE_Pattern_Pattern_SortName_Map_Set_Set`(application(symbolSorts(SName,_0),Ps),UpSort,`_Map_`(`_|->_`(inj{SymbolName,KItem}(SName),inj{List,KItem}(`_List_`(`ListItem`(inj{Sort,KItem}(SSort)),Sig))),_1) #as Sigs,Subs,Types))~>DotVar1),_2,_3,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _19))~>SREST),_4,_5)=>`<generatedTop>`(`<k>`(inj{Patterns,KItem}(`checkType2(_,_,_,_,_)_DISAMBIGUATE_Patterns_Patterns_List_Map_Set_Set`(Ps,Sig,Sigs,Subs,Types))~>DotVar1),_2,_3,`<s>`(inj{Strategy,KItem}(#appliedRule(_19))~>SREST),_4,_5) requires `isSubsortedEq(_,_,_)_DISAMBIGUATE_Bool_Sort_Sort_Set`(inj{SortName,Sort}(UpSort),SSort,Subs) ensures #token("true","Bool") [UNIQUE_ID(c5b717d52a4bfd952add6221b1d95a5a88986e3a3525a48901912f177701e3b6) contentStartColumn(8) contentStartLine(78) org.kframework.attributes.Location(Location(78,8,80,47)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \equals{SortBool{},SortGeneratedTopCell{}}(
        LblisSubsortedEq'LParUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Bool'Unds'Sort'Unds'Sort'Unds'Set{}(inj{SortSortName{}, SortSort{}}(VarUpSort:SortSortName{}),VarSSort:SortSort{},VarSubs:SortSet{}),
        \dv{SortBool{}}("true")), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPattern{}, SortKItem{}}(LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(Lblapplication{}(LblsymbolSorts{}(VarSName:SortSymbolName{},Var'Unds'0:SortSorts{}),VarPs:SortPatterns{}),VarUpSort:SortSortName{},\and{SortMap{}}(Lbl'Unds'Map'Unds'{}(Lbl'UndsPipe'-'-GT-Unds'{}(inj{SortSymbolName{}, SortKItem{}}(VarSName:SortSymbolName{}),inj{SortList{}, SortKItem{}}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortSort{}, SortKItem{}}(VarSSort:SortSort{})),VarSig:SortList{}))),Var'Unds'1:SortMap{}),VarSigs:SortMap{}),VarSubs:SortSet{},VarTypes:SortSet{})),VarDotVar1:SortK{})),Var'Unds'2:SortDefinitionCell{},Var'Unds'3:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'19:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'4:SortGeneratedCounterCell{},Var'Unds'5:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPatterns{}, SortKItem{}}(LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(VarPs:SortPatterns{},VarSig:SortList{},VarSigs:SortMap{},VarSubs:SortSet{},VarTypes:SortSet{})),VarDotVar1:SortK{})),Var'Unds'2:SortDefinitionCell{},Var'Unds'3:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'19:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'4:SortGeneratedCounterCell{},Var'Unds'5:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("78"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(78,8,80,47)"), UNIQUE'Unds'ID{}("c5b717d52a4bfd952add6221b1d95a5a88986e3a3525a48901912f177701e3b6")]

// rule `<generatedTop>`(`<k>`(inj{Patterns,KItem}(`checkType2(_,_,_,_,_)_DISAMBIGUATE_Patterns_Patterns_List_Map_Set_Set`(dotPatterns(.KList) #as _12,`.List`(.KList),_0,_1,_2))~>DotVar1),_3,_4,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _18))~>SREST),_5,_6)=>`<generatedTop>`(`<k>`(inj{Patterns,KItem}(_12)~>DotVar1),_3,_4,`<s>`(inj{Strategy,KItem}(#appliedRule(_18))~>SREST),_5,_6) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2461e72f1b242a7a4863eec5c6fb727a4a149f20a7f3c50affd68a3a74505cd1) contentStartColumn(8) contentStartLine(83) org.kframework.attributes.Location(Location(83,8,84,17)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPatterns{}, SortKItem{}}(LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(\and{SortPatterns{}}(LbldotPatterns{}(),Var'Unds'12:SortPatterns{}),Lbl'Stop'List{}(),Var'Unds'0:SortMap{},Var'Unds'1:SortSet{},Var'Unds'2:SortSet{})),VarDotVar1:SortK{})),Var'Unds'3:SortDefinitionCell{},Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'18:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPatterns{}, SortKItem{}}(Var'Unds'12:SortPatterns{}),VarDotVar1:SortK{})),Var'Unds'3:SortDefinitionCell{},Var'Unds'4:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'18:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'5:SortGeneratedCounterCell{},Var'Unds'6:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("83"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,8,84,17)"), UNIQUE'Unds'ID{}("2461e72f1b242a7a4863eec5c6fb727a4a149f20a7f3c50affd68a3a74505cd1")]

// rule `<generatedTop>`(`<k>`(inj{Patterns,KItem}(`checkType2(_,_,_,_,_)_DISAMBIGUATE_Patterns_Patterns_List_Map_Set_Set`(consPatterns(P,Ps),`_List_`(`ListItem`(inj{SortName,KItem}(S)),Sig),Sigs,Subs,Types))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag") #as _15))~>SREST),_2,_3)=>`<generatedTop>`(`<k>`(inj{Patterns,KItem}(consPatterns(`checkType(_,_,_,_,_)_DISAMBIGUATE_Pattern_Pattern_SortName_Map_Set_Set`(P,S,Sigs,Subs,Types),`checkType2(_,_,_,_,_)_DISAMBIGUATE_Patterns_Patterns_List_Map_Set_Set`(Ps,Sig,Sigs,Subs,Types)))~>DotVar1),_0,_1,`<s>`(inj{Strategy,KItem}(#appliedRule(_15))~>SREST),_2,_3) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9bd16e5529374fb0348602a4b6b94060443553fec400bc550137046e6f81ddd7) contentStartColumn(8) contentStartLine(81) org.kframework.attributes.Location(Location(81,8,82,82)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{} \rewrites{SortGeneratedTopCell{}} (
      \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPatterns{}, SortKItem{}}(LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(LblconsPatterns{}(VarP:SortPattern{},VarPs:SortPatterns{}),Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortSortName{}, SortKItem{}}(VarS:SortSortName{})),VarSig:SortList{}),VarSigs:SortMap{},VarSubs:SortSet{},VarTypes:SortSet{})),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\and{Sort'Hash'RuleTag{}}(\dv{Sort'Hash'RuleTag{}}("regular"),Var'Unds'15:Sort'Hash'RuleTag{}))),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})), \and{SortGeneratedTopCell{}} (
      \top{SortGeneratedTopCell{}}(), Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(inj{SortPatterns{}, SortKItem{}}(LblconsPatterns{}(LblcheckType'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'SortName'Unds'Map'Unds'Set'Unds'Set{}(VarP:SortPattern{},VarS:SortSortName{},VarSigs:SortMap{},VarSubs:SortSet{},VarTypes:SortSet{}),LblcheckType2'LParUndsCommUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Patterns'Unds'Patterns'Unds'List'Unds'Map'Unds'Set'Unds'Set{}(VarPs:SortPatterns{},VarSig:SortList{},VarSigs:SortMap{},VarSubs:SortSet{},VarTypes:SortSet{}))),VarDotVar1:SortK{})),Var'Unds'0:SortDefinitionCell{},Var'Unds'1:SortExitCodeCell{},Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'appliedRule{}(Var'Unds'15:Sort'Hash'RuleTag{})),VarSREST:SortK{})),Var'Unds'2:SortGeneratedCounterCell{},Var'Unds'3:SortKinkDeployedDirCell{})))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("81"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(81,8,82,82)"), UNIQUE'Unds'ID{}("9bd16e5529374fb0348602a4b6b94060443553fec400bc550137046e6f81ddd7")]

// rule `AttrListToString(_)_PARSER-UTIL_String_AttrList`(consAttrList(ATTR,ATTRs))=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`AttrToString(_)_PARSER-UTIL_String_Attr`(ATTR),#token("\",\"","String")),`AttrListToString(_)_PARSER-UTIL_String_AttrList`(ATTRs)) requires `notBool_`(`_==K_`(inj{AttrList,KItem}(ATTRs),inj{AttrList,KItem}(dotAttrList(.KList)))) ensures #token("true","Bool") [UNIQUE_ID(8a89e3fceb6639fe371eefb4f673ccbf92c9ac375284ac82036b6151cd5a2675) contentStartColumn(8) contentStartLine(135) org.kframework.attributes.Location(Location(135,8,136,41)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortAttrList{}, SortKItem{}}(VarATTRs:SortAttrList{}),dotk{}()),kseq{}(inj{SortAttrList{}, SortKItem{}}(LbldotAttrList{}()),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblAttrListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'AttrList{}(LblconsAttrList{}(VarATTR:SortAttr{},VarATTRs:SortAttrList{})),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblAttrToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Attr{}(VarATTR:SortAttr{}),\dv{SortString{}}(",")),LblAttrListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'AttrList{}(VarATTRs:SortAttrList{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("135"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(135,8,136,41)"), UNIQUE'Unds'ID{}("8a89e3fceb6639fe371eefb4f673ccbf92c9ac375284ac82036b6151cd5a2675")]

// rule `AttrListToString(_)_PARSER-UTIL_String_AttrList`(consAttrList(ATTR,dotAttrList(.KList)))=>`AttrToString(_)_PARSER-UTIL_String_Attr`(ATTR) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cdfe9c0b7a43d9a65e6d2ba502dc5cfa32361b18d183e6bc6b31b49f87ae39bb) contentStartColumn(8) contentStartLine(134) org.kframework.attributes.Location(Location(134,8,134,63)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblAttrListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'AttrList{}(LblconsAttrList{}(VarATTR:SortAttr{},LbldotAttrList{}())),
        LblAttrToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Attr{}(VarATTR:SortAttr{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("134"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(134,8,134,63)"), UNIQUE'Unds'ID{}("cdfe9c0b7a43d9a65e6d2ba502dc5cfa32361b18d183e6bc6b31b49f87ae39bb")]

// rule `AttrListToString(_)_PARSER-UTIL_String_AttrList`(dotAttrList(.KList))=>#token("\"dummy\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e33a18c435d5d9a319b6267746c6264cf03be97a51b43cc8e13a85288f8485b0) contentStartColumn(8) contentStartLine(133) org.kframework.attributes.Location(Location(133,8,133,52)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblAttrListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'AttrList{}(LbldotAttrList{}()),
        \dv{SortString{}}("dummy")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("133"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(133,8,133,52)"), UNIQUE'Unds'ID{}("e33a18c435d5d9a319b6267746c6264cf03be97a51b43cc8e13a85288f8485b0")]

// rule `AttrToString(_)_PARSER-UTIL_String_Attr`(tagContent(KEY,CONTENTS))=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`tokenToString(_)_PARSER-UTIL_String_K`(inj{KEY,KItem}(KEY)),#token("\"(\"","String")),`tokenToString(_)_PARSER-UTIL_String_K`(inj{TagContents,KItem}(CONTENTS))),#token("\")\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b224e20f0e77409537fe48bf6366625a8552bf01a68fde0d848c2fe6e7170ca3) contentStartColumn(8) contentStartLine(141) org.kframework.attributes.Location(Location(141,8,142,82)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblAttrToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Attr{}(LbltagContent{}(VarKEY:SortKEY{},VarCONTENTS:SortTagContents{})),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortKEY{}, SortKItem{}}(VarKEY:SortKEY{}),dotk{}())),\dv{SortString{}}("(")),LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortTagContents{}, SortKItem{}}(VarCONTENTS:SortTagContents{}),dotk{}()))),\dv{SortString{}}(")"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("141"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(141,8,142,82)"), UNIQUE'Unds'ID{}("b224e20f0e77409537fe48bf6366625a8552bf01a68fde0d848c2fe6e7170ca3")]

// rule `AttrToString(_)_PARSER-UTIL_String_Attr`(tagSimple(KEY))=>`tokenToString(_)_PARSER-UTIL_String_K`(inj{KEY,KItem}(KEY)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0113e42325db63a507975a752ce064360674d266d2898113a4230a49021ff16c) contentStartColumn(8) contentStartLine(139) org.kframework.attributes.Location(Location(139,8,140,26)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblAttrToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Attr{}(LbltagSimple{}(VarKEY:SortKEY{})),
        LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortKEY{}, SortKItem{}}(VarKEY:SortKEY{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("139"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(139,8,140,26)"), UNIQUE'Unds'ID{}("0113e42325db63a507975a752ce064360674d266d2898113a4230a49021ff16c")]

// rule `KProductionItemToString(_)_PARSER-UTIL_String_KProductionItem`(nonTerminalLbl(N))=>`tokenToString(_)_PARSER-UTIL_String_K`(inj{KSort,KItem}(N)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d6fd39ed27badfe814ebc66359965f7cd73a593d9540671b3562bb38cb61bafb) contentStartColumn(8) contentStartLine(123) org.kframework.attributes.Location(Location(123,8,123,67)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblKProductionItemToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProductionItem{}(LblnonTerminalLbl{}(VarN:SortKSort{})),
        LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortKSort{}, SortKItem{}}(VarN:SortKSort{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("123"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(123,8,123,67)"), UNIQUE'Unds'ID{}("d6fd39ed27badfe814ebc66359965f7cd73a593d9540671b3562bb38cb61bafb")]

// rule `KProductionItemToString(_)_PARSER-UTIL_String_KProductionItem`(regexTerminalLbl(R))=>`_+String__STRING_String_String_String`(#token("\"r\"","String"),`tokenToString(_)_PARSER-UTIL_String_K`(inj{EKoreKString,KItem}(R))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bbd40e61dd788bd729fa938e69dac59b3ef72e504ff977099242dc1604d92fe3) contentStartColumn(8) contentStartLine(125) org.kframework.attributes.Location(Location(125,8,125,81)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblKProductionItemToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProductionItem{}(LblregexTerminalLbl{}(VarR:SortEKoreKString{})),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("r"),LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortEKoreKString{}, SortKItem{}}(VarR:SortEKoreKString{}),dotk{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("125"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(125,8,125,81)"), UNIQUE'Unds'ID{}("bbd40e61dd788bd729fa938e69dac59b3ef72e504ff977099242dc1604d92fe3")]

// rule `KProductionItemToString(_)_PARSER-UTIL_String_KProductionItem`(terminalLbl(T))=>`tokenToString(_)_PARSER-UTIL_String_K`(inj{EKoreKString,KItem}(T)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(477c6f3cbb43d232ddbf97e40903526d43868568e6a0fe651b51f5dc9709982d) contentStartColumn(8) contentStartLine(124) org.kframework.attributes.Location(Location(124,8,124,67)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblKProductionItemToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProductionItem{}(LblterminalLbl{}(VarT:SortEKoreKString{})),
        LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortEKoreKString{}, SortKItem{}}(VarT:SortEKoreKString{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("124"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(124,8,124,67)"), UNIQUE'Unds'ID{}("477c6f3cbb43d232ddbf97e40903526d43868568e6a0fe651b51f5dc9709982d")]

// rule `KProductionToString(_)_PARSER-UTIL_String_KProduction`(inj{KProductionItem,KProduction}(PI))=>`KProductionItemToString(_)_PARSER-UTIL_String_KProductionItem`(PI) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1c7c16becc462aba03d00b723477f7775687e4648f21b0f12a0c7ed1f25c0772) contentStartColumn(8) contentStartLine(115) org.kframework.attributes.Location(Location(115,8,116,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblKProductionToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProduction{}(inj{SortKProductionItem{}, SortKProduction{}}(VarPI:SortKProductionItem{})),
        LblKProductionItemToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProductionItem{}(VarPI:SortKProductionItem{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("115"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(115,8,116,35)"), UNIQUE'Unds'ID{}("1c7c16becc462aba03d00b723477f7775687e4648f21b0f12a0c7ed1f25c0772")]

// rule `KProductionToString(_)_PARSER-UTIL_String_KProduction`(kFuncProduction(TAG,KSORTLIST))=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`tokenToString(_)_PARSER-UTIL_String_K`(inj{Tag,KItem}(TAG)),#token("\"(\"","String")),`KSortListToString(_)_PARSER-UTIL_String_KSortList`(KSORTLIST)),#token("\")\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(cd5dc6e8a489b88eccf1b6d7cd657cb07b7abd70126460a71ac218589d63bc10) contentStartColumn(8) contentStartLine(119) org.kframework.attributes.Location(Location(119,8,120,87)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblKProductionToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProduction{}(LblkFuncProduction{}(VarTAG:SortTag{},VarKSORTLIST:SortKSortList{})),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortTag{}, SortKItem{}}(VarTAG:SortTag{}),dotk{}())),\dv{SortString{}}("(")),LblKSortListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KSortList{}(VarKSORTLIST:SortKSortList{})),\dv{SortString{}}(")"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("119"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(119,8,120,87)"), UNIQUE'Unds'ID{}("cd5dc6e8a489b88eccf1b6d7cd657cb07b7abd70126460a71ac218589d63bc10")]

// rule `KProductionToString(_)_PARSER-UTIL_String_KProduction`(kProduction(PI,PIs))=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`KProductionItemToString(_)_PARSER-UTIL_String_KProductionItem`(PI),#token("\" \"","String")),`KProductionToString(_)_PARSER-UTIL_String_KProduction`(PIs)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5f33a5f5f947207ba5b901592320722ee449d30ed61ce93332b8ef1d3f6390f3) contentStartColumn(8) contentStartLine(117) org.kframework.attributes.Location(Location(117,8,118,80)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblKProductionToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProduction{}(LblkProduction{}(VarPI:SortKProductionItem{},VarPIs:SortKProduction{})),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblKProductionItemToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProductionItem{}(VarPI:SortKProductionItem{}),\dv{SortString{}}(" ")),LblKProductionToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProduction{}(VarPIs:SortKProduction{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("117"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(117,8,118,80)"), UNIQUE'Unds'ID{}("5f33a5f5f947207ba5b901592320722ee449d30ed61ce93332b8ef1d3f6390f3")]

// rule `KSortListToString(_)_PARSER-UTIL_String_KSortList`(inj{KSort,KSortList}(S))=>`tokenToString(_)_PARSER-UTIL_String_K`(inj{KSort,KItem}(S)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ab03afcc072aba0a29f1ecf0c2332de37fff48152bbc076a44aca746d47bf3b6) contentStartColumn(8) contentStartLine(111) org.kframework.attributes.Location(Location(111,8,111,54)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblKSortListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KSortList{}(inj{SortKSort{}, SortKSortList{}}(VarS:SortKSort{})),
        LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortKSort{}, SortKItem{}}(VarS:SortKSort{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("111"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(111,8,111,54)"), UNIQUE'Unds'ID{}("ab03afcc072aba0a29f1ecf0c2332de37fff48152bbc076a44aca746d47bf3b6")]

// rule `KSortListToString(_)_PARSER-UTIL_String_KSortList`(kSortList(Ss,S))=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`KSortListToString(_)_PARSER-UTIL_String_KSortList`(Ss),#token("\",\"","String")),`tokenToString(_)_PARSER-UTIL_String_K`(inj{KSort,KItem}(S))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5b060489f6af2a69cd67954bd2dc25f23a9b65fac3b8b93824edc7529ded0508) contentStartColumn(8) contentStartLine(112) org.kframework.attributes.Location(Location(112,8,112,94)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblKSortListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KSortList{}(LblkSortList{}(VarSs:SortKSortList{},VarS:SortKSort{})),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblKSortListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KSortList{}(VarSs:SortKSortList{}),\dv{SortString{}}(",")),LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortKSort{}, SortKItem{}}(VarS:SortKSort{}),dotk{}())))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("112"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(112,8,112,94)"), UNIQUE'Unds'ID{}("5b060489f6af2a69cd67954bd2dc25f23a9b65fac3b8b93824edc7529ded0508")]

// rule `OptionalAttributesToString(_)_PARSER-UTIL_String_OptionalAttributes`(inj{KAttributesDeclaration,OptionalAttributes}(kAttributesDeclaration(ATTRLIST)))=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(#token("\"[\"","String"),`AttrListToString(_)_PARSER-UTIL_String_AttrList`(ATTRLIST)),#token("\"]\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d57777ddacf0a27f6aae49f47c0de47587914bf924049731963440964c2074bd) contentStartColumn(8) contentStartLine(129) org.kframework.attributes.Location(Location(129,8,130,58)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblOptionalAttributesToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'OptionalAttributes{}(inj{SortKAttributesDeclaration{}, SortOptionalAttributes{}}(LblkAttributesDeclaration{}(VarATTRLIST:SortAttrList{}))),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("["),LblAttrListToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'AttrList{}(VarATTRLIST:SortAttrList{})),\dv{SortString{}}("]"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("129"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(129,8,130,58)"), UNIQUE'Unds'ID{}("d57777ddacf0a27f6aae49f47c0de47587914bf924049731963440964c2074bd")]

// rule `OptionalAttributesToString(_)_PARSER-UTIL_String_OptionalAttributes`(noKAttributesDeclaration(.KList))=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(91855ae595539c02775c88a28b0c27089c2b7fb25d9d02f57afe7f8eddc33a6d) contentStartColumn(8) contentStartLine(128) org.kframework.attributes.Location(Location(128,8,128,47)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblOptionalAttributesToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'OptionalAttributes{}(LblnoKAttributesDeclaration{}()),
        \dv{SortString{}}("")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("128"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(128,8,128,47)"), UNIQUE'Unds'ID{}("91855ae595539c02775c88a28b0c27089c2b7fb25d9d02f57afe7f8eddc33a6d")]

// rule `TagContentsToString(_)_PARSER-UTIL_String_TagContents`(dotTagContents(.KList))=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2d8f1dcb29cc075c40fd4225c0f0f3ede711f7c50eee11f7b10b4aa33ad314f3) contentStartColumn(8) contentStartLine(147) org.kframework.attributes.Location(Location(147,8,148,10)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblTagContentsToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'TagContents{}(LbldotTagContents{}()),
        \dv{SortString{}}("")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("147"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(147,8,148,10)"), UNIQUE'Unds'ID{}("2d8f1dcb29cc075c40fd4225c0f0f3ede711f7c50eee11f7b10b4aa33ad314f3")]

// rule `TagContentsToString(_)_PARSER-UTIL_String_TagContents`(tagContents(inj{K,TagContent}(TC),TCs))=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`tokenToString(_)_PARSER-UTIL_String_K`(TC),#token("\" \"","String")),`TagContentsToString(_)_PARSER-UTIL_String_TagContents`(TCs)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(47036c333130205532d9690fec987ea7e62bfc9af38f7c5bacf6741c82ff205c) contentStartColumn(8) contentStartLine(145) org.kframework.attributes.Location(Location(145,8,146,70)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblTagContentsToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'TagContents{}(LbltagContents{}(inj{SortK{}, SortTagContent{}}(VarTC:SortK{}),VarTCs:SortTagContents{})),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(VarTC:SortK{}),\dv{SortString{}}(" ")),LblTagContentsToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'TagContents{}(VarTCs:SortTagContents{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("145"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(145,8,146,70)"), UNIQUE'Unds'ID{}("47036c333130205532d9690fec987ea7e62bfc9af38f7c5bacf6741c82ff205c")]

// rule `_++Declarations__KORE-HELPERS_Declarations_Declarations_Declarations`(consDeclarations(D1,DS1),DS2)=>consDeclarations(D1,`_++Declarations__KORE-HELPERS_Declarations_Declarations_Declarations`(DS1,DS2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d64233ee27d6c9cdf6e881c1d79d47d960041db0a11af20ec98484083e895943) contentStartColumn(8) contentStartLine(83) org.kframework.attributes.Location(Location(83,8,83,66)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclarations{},R} (
        Lbl'UndsPlusPlus'Declarations'UndsUnds'KORE-HELPERS'Unds'Declarations'Unds'Declarations'Unds'Declarations{}(LblconsDeclarations{}(VarD1:SortDeclaration{},VarDS1:SortDeclarations{}),VarDS2:SortDeclarations{}),
        LblconsDeclarations{}(VarD1:SortDeclaration{},Lbl'UndsPlusPlus'Declarations'UndsUnds'KORE-HELPERS'Unds'Declarations'Unds'Declarations'Unds'Declarations{}(VarDS1:SortDeclarations{},VarDS2:SortDeclarations{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("83"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,8,83,66)"), UNIQUE'Unds'ID{}("d64233ee27d6c9cdf6e881c1d79d47d960041db0a11af20ec98484083e895943")]

// rule `_++Declarations__KORE-HELPERS_Declarations_Declarations_Declarations`(dotDeclarations(.KList),DS2)=>DS2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(01375d23d67bf95d6b01929bf5abd8e989d46ee49aefc3c899d16e1d12d8fea5) contentStartColumn(8) contentStartLine(84) org.kframework.attributes.Location(Location(84,8,84,47)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclarations{},R} (
        Lbl'UndsPlusPlus'Declarations'UndsUnds'KORE-HELPERS'Unds'Declarations'Unds'Declarations'Unds'Declarations{}(LbldotDeclarations{}(),VarDS2:SortDeclarations{}),
        VarDS2:SortDeclarations{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("84"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(84,8,84,47)"), UNIQUE'Unds'ID{}("01375d23d67bf95d6b01929bf5abd8e989d46ee49aefc3c899d16e1d12d8fea5")]

// rule `_++Modules__KORE-HELPERS_Modules_Modules_Modules`(consModules(M1,MS1),MS2)=>consModules(M1,`_++Modules__KORE-HELPERS_Modules_Modules_Modules`(MS1,MS2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0a1038e6b4a67158844c383f4ebcd764aab55506d1af032e1b5f8859f0a94b98) contentStartColumn(8) contentStartLine(87) org.kframework.attributes.Location(Location(87,8,87,56)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModules{},R} (
        Lbl'UndsPlusPlus'Modules'UndsUnds'KORE-HELPERS'Unds'Modules'Unds'Modules'Unds'Modules{}(LblconsModules{}(VarM1:SortModule{},VarMS1:SortModules{}),VarMS2:SortModules{}),
        LblconsModules{}(VarM1:SortModule{},Lbl'UndsPlusPlus'Modules'UndsUnds'KORE-HELPERS'Unds'Modules'Unds'Modules'Unds'Modules{}(VarMS1:SortModules{},VarMS2:SortModules{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("87"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(87,8,87,56)"), UNIQUE'Unds'ID{}("0a1038e6b4a67158844c383f4ebcd764aab55506d1af032e1b5f8859f0a94b98")]

// rule `_++Modules__KORE-HELPERS_Modules_Modules_Modules`(dotModules(.KList),MS2)=>MS2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(314254eeec9122e27b256cc6ce13e7784c0a434281bc5aa2254b394b426d9170) contentStartColumn(8) contentStartLine(88) org.kframework.attributes.Location(Location(88,8,88,37)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModules{},R} (
        Lbl'UndsPlusPlus'Modules'UndsUnds'KORE-HELPERS'Unds'Modules'Unds'Modules'Unds'Modules{}(LbldotModules{}(),VarMS2:SortModules{}),
        VarMS2:SortModules{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("88"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(88,8,88,37)"), UNIQUE'Unds'ID{}("314254eeec9122e27b256cc6ce13e7784c0a434281bc5aa2254b394b426d9170")]

// rule `_++Sorts__KORE-HELPERS_Sorts_Sorts_Sorts`(consSorts(S1,SS1),SS2)=>consSorts(S1,`_++Sorts__KORE-HELPERS_Sorts_Sorts_Sorts`(SS1,SS2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b6761eedc09afbac3d88b12f13b4fe429587d153e5031a0086458f98f07975bc) contentStartColumn(8) contentStartLine(91) org.kframework.attributes.Location(Location(91,8,91,54)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSorts{},R} (
        Lbl'UndsPlusPlus'Sorts'UndsUnds'KORE-HELPERS'Unds'Sorts'Unds'Sorts'Unds'Sorts{}(LblconsSorts{}(VarS1:SortSort{},VarSS1:SortSorts{}),VarSS2:SortSorts{}),
        LblconsSorts{}(VarS1:SortSort{},Lbl'UndsPlusPlus'Sorts'UndsUnds'KORE-HELPERS'Unds'Sorts'Unds'Sorts'Unds'Sorts{}(VarSS1:SortSorts{},VarSS2:SortSorts{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("91"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(91,8,91,54)"), UNIQUE'Unds'ID{}("b6761eedc09afbac3d88b12f13b4fe429587d153e5031a0086458f98f07975bc")]

// rule `_++Sorts__KORE-HELPERS_Sorts_Sorts_Sorts`(dotSorts(.KList),SS2)=>SS2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(88dfbead8419c0b22f02a437801adcfa235861d232babd2cd0e723ff14a571d3) contentStartColumn(8) contentStartLine(92) org.kframework.attributes.Location(Location(92,8,92,33)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSorts{},R} (
        Lbl'UndsPlusPlus'Sorts'UndsUnds'KORE-HELPERS'Unds'Sorts'Unds'Sorts'Unds'Sorts{}(LbldotSorts{}(),VarSS2:SortSorts{}),
        VarSS2:SortSorts{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("92"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(92,8,92,33)"), UNIQUE'Unds'ID{}("88dfbead8419c0b22f02a437801adcfa235861d232babd2cd0e723ff14a571d3")]

// rule `_<=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING_Bool_String_String`(S2,S1)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b845027eb9a8c978d2dfe3ec05a6eff77ba88b8f5c3ab2cb696a29aeae2db3b8) contentStartColumn(8) contentStartLine(623) org.kframework.attributes.Location(Location(623,8,623,63)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-LT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("623"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(623,8,623,63)"), UNIQUE'Unds'ID{}("b845027eb9a8c978d2dfe3ec05a6eff77ba88b8f5c3ab2cb696a29aeae2db3b8")]

// rule `_=/=Bool_`(B1,B2)=>`notBool_`(`_==Bool_`(B1,B2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8082ec9e8ff1aaf1e4594a6b86a75f2a67d244a719944f7f727338912cec93c1) contentStartColumn(8) contentStartLine(359) org.kframework.attributes.Location(Location(359,8,359,57)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Bool'Unds'{}(VarB1:SortBool{},VarB2:SortBool{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("359"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(359,8,359,57)"), UNIQUE'Unds'ID{}("8082ec9e8ff1aaf1e4594a6b86a75f2a67d244a719944f7f727338912cec93c1")]

// rule `_=/=Int_`(I1,I2)=>`notBool_`(`_==Int_`(I1,I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1268ef8223300f719d2c898f934c4a0dd4d5d94e2224e9d2139c61b6a7fd7621) contentStartColumn(8) contentStartLine(479) org.kframework.attributes.Location(Location(479,8,479,53)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("479"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(479,8,479,53)"), UNIQUE'Unds'ID{}("1268ef8223300f719d2c898f934c4a0dd4d5d94e2224e9d2139c61b6a7fd7621")]

// rule `_=/=K_`(K1,K2)=>`notBool_`(`_==K_`(K1,K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(be43f022db407512c682c661ea25224c02085b8ae4fc4e4122c1ffda4d9c10dc) contentStartColumn(8) contentStartLine(863) org.kframework.attributes.Location(Location(863,8,863,45)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(VarK1:SortK{},VarK2:SortK{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("863"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(863,8,863,45)"), UNIQUE'Unds'ID{}("be43f022db407512c682c661ea25224c02085b8ae4fc4e4122c1ffda4d9c10dc")]

// rule `_=/=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_==String__STRING_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a78bcc075d04a4fc9a360ddd678304c36ad82d78aed5298cf3ca840ff9a64c6c) contentStartColumn(8) contentStartLine(610) org.kframework.attributes.Location(Location(610,8,610,65)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("610"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(610,8,610,65)"), UNIQUE'Unds'ID{}("a78bcc075d04a4fc9a360ddd678304c36ad82d78aed5298cf3ca840ff9a64c6c")]

// rule `_==Bool_`(K1,K2)=>`_==K_`(inj{Bool,KItem}(K1),inj{Bool,KItem}(K2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f80f7fe83e61312531fc419ec0b0880a6d89d056a322bd6e29a1f8082203f4f5) contentStartColumn(8) contentStartLine(865) org.kframework.attributes.Location(Location(865,8,865,43)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Bool'Unds'{}(VarK1:SortBool{},VarK2:SortBool{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK1:SortBool{}),dotk{}()),kseq{}(inj{SortBool{}, SortKItem{}}(VarK2:SortBool{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("865"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(865,8,865,43)"), UNIQUE'Unds'ID{}("f80f7fe83e61312531fc419ec0b0880a6d89d056a322bd6e29a1f8082203f4f5")]

// rule `_==Int_`(I1,I2)=>`_==K_`(inj{Int,KItem}(I1),inj{Int,KItem}(I2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e92e4aa4a18bee70f2627cdafb8687e2dfcc0dd6a7f8cbb8d1bd17d751c2da2a) contentStartColumn(8) contentStartLine(478) org.kframework.attributes.Location(Location(478,8,478,40)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarI1:SortInt{}),dotk{}()),kseq{}(inj{SortInt{}, SortKItem{}}(VarI2:SortInt{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("478"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(478,8,478,40)"), UNIQUE'Unds'ID{}("e92e4aa4a18bee70f2627cdafb8687e2dfcc0dd6a7f8cbb8d1bd17d751c2da2a")]

// rule `_==String__STRING_Bool_String_String`(S1,S2)=>`_==K_`(inj{String,KItem}(S1),inj{String,KItem}(S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d866d86c70a0259cfd553051351e356373b3c533c9a7b9974500e5dd032f7ca9) contentStartColumn(8) contentStartLine(611) org.kframework.attributes.Location(Location(611,8,611,49)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'UndsEqlsEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS1:SortString{}),dotk{}()),kseq{}(inj{SortString{}, SortKItem{}}(VarS2:SortString{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("611"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(611,8,611,49)"), UNIQUE'Unds'ID{}("d866d86c70a0259cfd553051351e356373b3c533c9a7b9974500e5dd032f7ca9")]

// rule `_>=String__STRING_Bool_String_String`(S1,S2)=>`notBool_`(`_<String__STRING_Bool_String_String`(S1,S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8307efe6b82cfb4a21276b92acefe5869f724f1def05bc54f10b09ba49b56f33) contentStartColumn(8) contentStartLine(625) org.kframework.attributes.Location(Location(625,8,625,63)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-Eqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        LblnotBool'Unds'{}(Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("625"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(625,8,625,63)"), UNIQUE'Unds'ID{}("8307efe6b82cfb4a21276b92acefe5869f724f1def05bc54f10b09ba49b56f33")]

// rule `_>String__STRING_Bool_String_String`(S1,S2)=>`_<String__STRING_Bool_String_String`(S2,S1) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(24e2c6676f433dc8124ed0562f1c81405451eb8a338e395aa96f1325c51dea92) contentStartColumn(8) contentStartLine(624) org.kframework.attributes.Location(Location(624,8,624,52)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds-GT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS1:SortString{},VarS2:SortString{}),
        Lbl'Unds-LT-'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},VarS1:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("624"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(624,8,624,52)"), UNIQUE'Unds'ID{}("24e2c6676f433dc8124ed0562f1c81405451eb8a338e395aa96f1325c51dea92")]

// rule `_andBool_`(#token("false","Bool") #as _2,_0)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e6ebe927ba416a1602679eb0166f22d394adf70452e0505c00f11c036a896253) contentStartColumn(8) contentStartLine(332) org.kframework.attributes.Location(Location(332,8,332,37)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'2:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("332"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(332,8,332,37)"), UNIQUE'Unds'ID{}("e6ebe927ba416a1602679eb0166f22d394adf70452e0505c00f11c036a896253")]

// rule `_andBool_`(#token("true","Bool") #as _1,B)=>B requires _1 ensures _1 [UNIQUE_ID(cd0a9b340fae24c9a05126d8df860cb7145fc64875711e36efaa694085559dc0) contentStartColumn(8) contentStartLine(330) org.kframework.attributes.Location(Location(330,8,330,37)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("330"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(330,8,330,37)"), UNIQUE'Unds'ID{}("cd0a9b340fae24c9a05126d8df860cb7145fc64875711e36efaa694085559dc0")]

// rule `_andBool_`(B,#token("true","Bool") #as _1)=>B requires _1 ensures _1 [UNIQUE_ID(b598bf51d1c959b7112e06b7f85a391ee5a18108acd52bb65ea27ef0381ed0e0) contentStartColumn(8) contentStartLine(331) org.kframework.attributes.Location(Location(331,8,331,37)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(VarB:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("331"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(331,8,331,37)"), UNIQUE'Unds'ID{}("b598bf51d1c959b7112e06b7f85a391ee5a18108acd52bb65ea27ef0381ed0e0")]

// rule `_andBool_`(_0,#token("false","Bool") #as _2)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1a7512841ede635d09556466797d23f3f3cec57fe0fb6a68ce0c3a1cccb0b68f) contentStartColumn(8) contentStartLine(333) org.kframework.attributes.Location(Location(333,8,333,37)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("333"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(333,8,333,37)"), UNIQUE'Unds'ID{}("1a7512841ede635d09556466797d23f3f3cec57fe0fb6a68ce0c3a1cccb0b68f")]

// rule `_andThenBool_`(#token("false","Bool") #as _2,_0)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5655ee866bbbb608f1f964220ab1530b0ef7135eeda23603dff05807b6d16b64) contentStartColumn(8) contentStartLine(337) org.kframework.attributes.Location(Location(337,8,337,36)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'2:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("337"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(337,8,337,36)"), UNIQUE'Unds'ID{}("5655ee866bbbb608f1f964220ab1530b0ef7135eeda23603dff05807b6d16b64")]

// rule `_andThenBool_`(#token("true","Bool") #as _1,K)=>K requires _1 ensures _1 [UNIQUE_ID(7222515db4659f9d91276b956c8ae62254acb676f0a77a32927a2f9664a0277f) contentStartColumn(8) contentStartLine(335) org.kframework.attributes.Location(Location(335,8,335,37)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),VarK:SortBool{}),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("335"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(335,8,335,37)"), UNIQUE'Unds'ID{}("7222515db4659f9d91276b956c8ae62254acb676f0a77a32927a2f9664a0277f")]

// rule `_andThenBool_`(K,#token("true","Bool") #as _1)=>K requires _1 ensures _1 [UNIQUE_ID(3bbe6cf1318a61acb32fba25030cb15ff73ba968cd584d9b07573260cfd5542d) contentStartColumn(8) contentStartLine(336) org.kframework.attributes.Location(Location(336,8,336,37)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(VarK:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        VarK:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("336"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(336,8,336,37)"), UNIQUE'Unds'ID{}("3bbe6cf1318a61acb32fba25030cb15ff73ba968cd584d9b07573260cfd5542d")]

// rule `_andThenBool_`(_0,#token("false","Bool") #as _2)=>_2 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f9686d847651f3e51fa10373f3a2f282ece21460a20353e2e97d8100b357eae8) contentStartColumn(8) contentStartLine(338) org.kframework.attributes.Location(Location(338,8,338,36)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'andThenBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("false"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("338"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(338,8,338,36)"), UNIQUE'Unds'ID{}("f9686d847651f3e51fa10373f3a2f282ece21460a20353e2e97d8100b357eae8")]

// rule `_divInt_`(I1,I2)=>`_/Int_`(`_-Int_`(I1,`_modInt_`(I1,I2)),I2) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(98da5640fc5e6ee59b397ff504565399b7ff03664f67915c80712fa0cdb0a8f4) contentStartColumn(8) contentStartLine(467) org.kframework.attributes.Location(Location(467,8,468,23)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'divInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsSlsh'Int'Unds'{}(Lbl'Unds'-Int'Unds'{}(VarI1:SortInt{},Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{})),VarI2:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("467"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(467,8,468,23)"), UNIQUE'Unds'ID{}("98da5640fc5e6ee59b397ff504565399b7ff03664f67915c80712fa0cdb0a8f4")]

// rule `_dividesInt__INT-COMMON_Bool_Int_Int`(I1,I2)=>`_==Int_`(`_%Int_`(I2,I1),#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9695792871716095ab52385178d2734b9ea1a429bd7b0c82d3eeeba2c43573a1) contentStartColumn(8) contentStartLine(480) org.kframework.attributes.Location(Location(480,8,480,58)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'dividesInt'UndsUnds'INT-COMMON'Unds'Bool'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsEqlsEqls'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI2:SortInt{},VarI1:SortInt{}),\dv{SortInt{}}("0"))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("480"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(480,8,480,58)"), UNIQUE'Unds'ID{}("9695792871716095ab52385178d2734b9ea1a429bd7b0c82d3eeeba2c43573a1")]

// rule `_impliesBool_`(#token("true","Bool") #as _1,B)=>B requires _1 ensures _1 [UNIQUE_ID(a14afb572fbb3cafc70cb9d12559ea76b3cadc10fe7660cbfc3ac421d8c83472) contentStartColumn(8) contentStartLine(354) org.kframework.attributes.Location(Location(354,8,354,36)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{}),VarB:SortBool{}),
        VarB:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("354"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(354,8,354,36)"), UNIQUE'Unds'ID{}("a14afb572fbb3cafc70cb9d12559ea76b3cadc10fe7660cbfc3ac421d8c83472")]

// rule `_impliesBool_`(B,#token("false","Bool"))=>`notBool_`(B) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1b7a876afdaa257c8b3f634d4e2a8b25d443ca975cd70924532f97c11b5436a3) contentStartColumn(8) contentStartLine(357) org.kframework.attributes.Location(Location(357,8,357,45)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        LblnotBool'Unds'{}(VarB:SortBool{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("357"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(357,8,357,45)"), UNIQUE'Unds'ID{}("1b7a876afdaa257c8b3f634d4e2a8b25d443ca975cd70924532f97c11b5436a3")]

// rule `_impliesBool_`(_0,#token("true","Bool") #as _2)=>_2 requires _2 ensures _2 [UNIQUE_ID(dd9b1a472eea37abb732383a93435249ef41975a934479c3ad416fe808fbe42f) contentStartColumn(8) contentStartLine(356) org.kframework.attributes.Location(Location(356,8,356,39)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("356"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(356,8,356,39)"), UNIQUE'Unds'ID{}("dd9b1a472eea37abb732383a93435249ef41975a934479c3ad416fe808fbe42f")]

// rule `_impliesBool_`(#token("false","Bool"),_0)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1f2244d9b271fbf663741428beb3049daf5dd0a60f428c146b07d2595095f548) contentStartColumn(8) contentStartLine(355) org.kframework.attributes.Location(Location(355,8,355,40)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'impliesBool'Unds'{}(\dv{SortBool{}}("false"),Var'Unds'0:SortBool{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("355"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(355,8,355,40)"), UNIQUE'Unds'ID{}("1f2244d9b271fbf663741428beb3049daf5dd0a60f428c146b07d2595095f548")]

// rule `_inPatterns__KORE-HELPERS_Bool_Pattern_Patterns`(P,consPatterns(P,PS))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f10276873a5c535707138afd7d6de43c2f9ab9fca9da70bda553ab0d1f31dcd7) contentStartColumn(8) contentStartLine(96) org.kframework.attributes.Location(Location(96,8,96,50)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'inPatterns'UndsUnds'KORE-HELPERS'Unds'Bool'Unds'Pattern'Unds'Patterns{}(VarP:SortPattern{},LblconsPatterns{}(VarP:SortPattern{},VarPS:SortPatterns{})),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("96"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(96,8,96,50)"), UNIQUE'Unds'ID{}("f10276873a5c535707138afd7d6de43c2f9ab9fca9da70bda553ab0d1f31dcd7")]

// rule `_inPatterns__KORE-HELPERS_Bool_Pattern_Patterns`(P,consPatterns(P1,PS))=>`_inPatterns__KORE-HELPERS_Bool_Pattern_Patterns`(P,PS) requires `notBool_`(`_==K_`(inj{Pattern,KItem}(P),inj{Pattern,KItem}(P1))) ensures #token("true","Bool") [UNIQUE_ID(b30e00556a093183b3772be02480482f0ee3739bb452a53b70a0a7e2709575a0) contentStartColumn(8) contentStartLine(97) org.kframework.attributes.Location(Location(97,8,99,30)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortPattern{}, SortKItem{}}(VarP:SortPattern{}),dotk{}()),kseq{}(inj{SortPattern{}, SortKItem{}}(VarP1:SortPattern{}),dotk{}()))),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'inPatterns'UndsUnds'KORE-HELPERS'Unds'Bool'Unds'Pattern'Unds'Patterns{}(VarP:SortPattern{},LblconsPatterns{}(VarP1:SortPattern{},VarPS:SortPatterns{})),
        Lbl'Unds'inPatterns'UndsUnds'KORE-HELPERS'Unds'Bool'Unds'Pattern'Unds'Patterns{}(VarP:SortPattern{},VarPS:SortPatterns{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("97"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(97,8,99,30)"), UNIQUE'Unds'ID{}("b30e00556a093183b3772be02480482f0ee3739bb452a53b70a0a7e2709575a0")]

// rule `_inPatterns__KORE-HELPERS_Bool_Pattern_Patterns`(P,dotPatterns(.KList))=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f544d60677b3c2a2735a01b8bcf83bcf931c4f17a6c21ab62fea4e1ff6802ea7) contentStartColumn(8) contentStartLine(95) org.kframework.attributes.Location(Location(95,8,95,51)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/./kink.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'inPatterns'UndsUnds'KORE-HELPERS'Unds'Bool'Unds'Pattern'Unds'Patterns{}(VarP:SortPattern{},LbldotPatterns{}()),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("95"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(95,8,95,51)"), UNIQUE'Unds'ID{}("f544d60677b3c2a2735a01b8bcf83bcf931c4f17a6c21ab62fea4e1ff6802ea7")]

// rule `_modInt_`(I1,I2)=>`_%Int_`(`_+Int_`(`_%Int_`(I1,`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)),`absInt(_)_INT-COMMON_Int_Int`(I2)) requires `_=/=Int_`(I2,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(06049b365f7975e4498cb4e762dcb432b2fbb5b4e91f53d1554c5a2c6bfac7a4) concrete() contentStartColumn(5) contentStartLine(470) org.kframework.attributes.Location(Location(470,5,473,23)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(VarI2:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        Lbl'Unds'modInt'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        Lbl'UndsPerc'Int'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(Lbl'UndsPerc'Int'Unds'{}(VarI1:SortInt{},LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{})),LblabsInt'LParUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int{}(VarI2:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), concrete{}(), contentStartLine{}("470"), contentStartColumn{}("5"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(470,5,473,23)"), UNIQUE'Unds'ID{}("06049b365f7975e4498cb4e762dcb432b2fbb5b4e91f53d1554c5a2c6bfac7a4")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(#token("true","Bool") #as _2,_0)=>_2 requires _2 ensures _2 [UNIQUE_ID(dc3966c0487ffc67c7b2138883703d82c0ca3707d493d7ecbeed16591eda4002) contentStartColumn(8) contentStartLine(344) org.kframework.attributes.Location(Location(344,8,344,34)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("344"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(344,8,344,34)"), UNIQUE'Unds'ID{}("dc3966c0487ffc67c7b2138883703d82c0ca3707d493d7ecbeed16591eda4002")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ec0c7ff02d00be2a1ad79d358b0298a044942a1b87d9d60c5c00ad5022700119) contentStartColumn(8) contentStartLine(347) org.kframework.attributes.Location(Location(347,8,347,32)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("347"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(347,8,347,32)"), UNIQUE'Unds'ID{}("ec0c7ff02d00be2a1ad79d358b0298a044942a1b87d9d60c5c00ad5022700119")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(_0,#token("true","Bool") #as _2)=>_2 requires _2 ensures _2 [UNIQUE_ID(50b5fa147c0e5b9e6c6e24d3de018f312a796c662ac8cf4f82a65141b5c1c7ba) contentStartColumn(8) contentStartLine(345) org.kframework.attributes.Location(Location(345,8,345,34)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("345"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(345,8,345,34)"), UNIQUE'Unds'ID{}("50b5fa147c0e5b9e6c6e24d3de018f312a796c662ac8cf4f82a65141b5c1c7ba")]

// rule `_orBool__BOOL_Bool_Bool_Bool`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fd354715c1ec4875a94c348cc1369a78bd9c7d7ea16a377b110867d2d6b9d976) contentStartColumn(8) contentStartLine(346) org.kframework.attributes.Location(Location(346,8,346,32)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("346"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(346,8,346,32)"), UNIQUE'Unds'ID{}("fd354715c1ec4875a94c348cc1369a78bd9c7d7ea16a377b110867d2d6b9d976")]

// rule `_orElseBool_`(#token("true","Bool") #as _2,_0)=>_2 requires _2 ensures _2 [UNIQUE_ID(73e5640668de4bd9a9bc557aa9f2ab264a44a4afc44099933ed18b2d9fb7ecda) contentStartColumn(8) contentStartLine(349) org.kframework.attributes.Location(Location(349,8,349,33)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{}),Var'Unds'0:SortBool{}),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("349"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(349,8,349,33)"), UNIQUE'Unds'ID{}("73e5640668de4bd9a9bc557aa9f2ab264a44a4afc44099933ed18b2d9fb7ecda")]

// rule `_orElseBool_`(K,#token("false","Bool"))=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0943d1ee643c9b20db8186b069d596390234d7ae17deef0eb5df56d604652df5) contentStartColumn(8) contentStartLine(352) org.kframework.attributes.Location(Location(352,8,352,37)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(VarK:SortBool{},\dv{SortBool{}}("false")),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("352"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(352,8,352,37)"), UNIQUE'Unds'ID{}("0943d1ee643c9b20db8186b069d596390234d7ae17deef0eb5df56d604652df5")]

// rule `_orElseBool_`(_0,#token("true","Bool") #as _2)=>_2 requires _2 ensures _2 [UNIQUE_ID(53eb8e839f826d23ba5ac5b4c664ba890f66acecb1700ae2afae906c5ad31fde) contentStartColumn(8) contentStartLine(350) org.kframework.attributes.Location(Location(350,8,350,33)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(Var'Unds'0:SortBool{},\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'2:SortBool{})),
        Var'Unds'2:SortBool{}),
      \equals{SortBool{},R}(
        Var'Unds'2:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("350"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(350,8,350,33)"), UNIQUE'Unds'ID{}("53eb8e839f826d23ba5ac5b4c664ba890f66acecb1700ae2afae906c5ad31fde")]

// rule `_orElseBool_`(#token("false","Bool"),K)=>K requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(93c62e2a1ad3d088f4f73f7239196b7745782f7646fa90eb12c2c42741d645f0) contentStartColumn(8) contentStartLine(351) org.kframework.attributes.Location(Location(351,8,351,37)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'orElseBool'Unds'{}(\dv{SortBool{}}("false"),VarK:SortBool{}),
        VarK:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("351"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(351,8,351,37)"), UNIQUE'Unds'ID{}("93c62e2a1ad3d088f4f73f7239196b7745782f7646fa90eb12c2c42741d645f0")]

// rule `_xorBool_`(B,B)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(acf02bbb1c02949b2bfee30178d6cdd980414738448a5f9c5576e7522a683b4f) contentStartColumn(8) contentStartLine(342) org.kframework.attributes.Location(Location(342,8,342,38)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},VarB:SortBool{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("342"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(342,8,342,38)"), UNIQUE'Unds'ID{}("acf02bbb1c02949b2bfee30178d6cdd980414738448a5f9c5576e7522a683b4f")]

// rule `_xorBool_`(B,#token("false","Bool"))=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(bc1d9558787d9b5f86fbd50908b7841cd343eaf620351d6791f03fb9434badc8) contentStartColumn(8) contentStartLine(341) org.kframework.attributes.Location(Location(341,8,341,38)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(VarB:SortBool{},\dv{SortBool{}}("false")),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("341"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(341,8,341,38)"), UNIQUE'Unds'ID{}("bc1d9558787d9b5f86fbd50908b7841cd343eaf620351d6791f03fb9434badc8")]

// rule `_xorBool_`(#token("false","Bool"),B)=>B requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(20ee6a1a4ec1a9203558107910a0bf65c612a140ecce3ca920bc69806b8ccf3a) contentStartColumn(8) contentStartLine(340) org.kframework.attributes.Location(Location(340,8,340,38)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lbl'Unds'xorBool'Unds'{}(\dv{SortBool{}}("false"),VarB:SortBool{}),
        VarB:SortBool{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("340"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(340,8,340,38)"), UNIQUE'Unds'ID{}("20ee6a1a4ec1a9203558107910a0bf65c612a140ecce3ca920bc69806b8ccf3a")]

// rule `bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_modInt_`(`_>>Int_`(I,IDX),`_<<Int_`(#token("1","Int"),LEN)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6d2521bec62ae0624c366eac1bef561e6cfe867154f1dc263fede52ab2e3cd35) contentStartColumn(8) contentStartLine(463) org.kframework.attributes.Location(Location(463,8,463,85)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'modInt'Unds'{}(Lbl'Unds-GT--GT-'Int'Unds'{}(VarI:SortInt{},VarIDX:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("463"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(463,8,463,85)"), UNIQUE'Unds'ID{}("6d2521bec62ae0624c366eac1bef561e6cfe867154f1dc263fede52ab2e3cd35")]

// rule `collectCasts(_)_DISAMBIGUATE_Set_Pattern`(application(symbolSorts(SName,_0),Ps))=>`collectCastsPs(_)_DISAMBIGUATE_Set_Patterns`(Ps) requires `_=/=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(`tokenToString(_)_PARSER-UTIL_String_K`(inj{SymbolName,KItem}(SName)),#token("\"SemanticCastTo\"","String"),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(f3f9ff8cbb038f63cc0da308b8dc47c6c5f6935dd74ab160ade47c0114d43208) contentStartColumn(8) contentStartLine(19) org.kframework.attributes.Location(Location(19,8,20,76)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortSymbolName{}, SortKItem{}}(VarSName:SortSymbolName{}),dotk{}())),\dv{SortString{}}("SemanticCastTo"),\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortSet{},R} (
        LblcollectCasts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern{}(Lblapplication{}(LblsymbolSorts{}(VarSName:SortSymbolName{},Var'Unds'0:SortSorts{}),VarPs:SortPatterns{})),
        LblcollectCastsPs'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Patterns{}(VarPs:SortPatterns{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("19"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,8,20,76)"), UNIQUE'Unds'ID{}("f3f9ff8cbb038f63cc0da308b8dc47c6c5f6935dd74ab160ade47c0114d43208")]

// rule `collectCasts(_)_DISAMBIGUATE_Set_Pattern`(application(symbolSorts(SName,_0),consPatterns(P,dotPatterns(.KList))))=>`collectCasts2(_,_)_DISAMBIGUATE_Set_Pattern_String`(P,`substrString(_,_,_)_STRING_String_String_Int_Int`(`tokenToString(_)_PARSER-UTIL_String_K`(inj{SymbolName,KItem}(SName)),#token("14","Int"),`lengthString(_)_STRING_Int_String`(`tokenToString(_)_PARSER-UTIL_String_K`(inj{SymbolName,KItem}(SName))))) requires `_==Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(`tokenToString(_)_PARSER-UTIL_String_K`(inj{SymbolName,KItem}(SName)),#token("\"SemanticCastTo\"","String"),#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(e5603ad3773a2e8518ccc7504683b8fd875120ff7692d8cdd80c78d2fd175bbe) contentStartColumn(8) contentStartLine(21) org.kframework.attributes.Location(Location(21,8,22,75)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortSymbolName{}, SortKItem{}}(VarSName:SortSymbolName{}),dotk{}())),\dv{SortString{}}("SemanticCastTo"),\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortSet{},R} (
        LblcollectCasts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern{}(Lblapplication{}(LblsymbolSorts{}(VarSName:SortSymbolName{},Var'Unds'0:SortSorts{}),LblconsPatterns{}(VarP:SortPattern{},LbldotPatterns{}()))),
        LblcollectCasts2'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern'Unds'String{}(VarP:SortPattern{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortSymbolName{}, SortKItem{}}(VarSName:SortSymbolName{}),dotk{}())),\dv{SortInt{}}("14"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortSymbolName{}, SortKItem{}}(VarSName:SortSymbolName{}),dotk{}())))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("21"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,8,22,75)"), UNIQUE'Unds'ID{}("e5603ad3773a2e8518ccc7504683b8fd875120ff7692d8cdd80c78d2fd175bbe")]

// rule `collectCasts2(_,_)_DISAMBIGUATE_Set_Pattern_String`(P,_0)=>`collectCasts(_)_DISAMBIGUATE_Set_Pattern`(P) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(758cc8795feab9050269cfb6338e2ebcd43741cc71e31bdc868224ee92ff04a0) contentStartColumn(8) contentStartLine(25) org.kframework.attributes.Location(Location(25,8,25,46)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'3:SortSort{},
                    \exists{R} (Var'Unds'5:SortString{},
                    \exists{R} (Var'Unds'4:SortKoreString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortPattern{}, R} (
                  \and{SortPattern{}} (
                    VarP:SortPattern{},
                    Lbldv{}(Var'Unds'3:SortSort{},Var'Unds'4:SortKoreString{})
                )),\and{R} (
                \ceil{SortString{}, R} (
                  \and{SortString{}} (
                    Var'Unds'0:SortString{},
                    Var'Unds'5:SortString{}
                )),
                \top{R} ()
              ))
          )))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        LblcollectCasts2'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern'Unds'String{}(VarP:SortPattern{},Var'Unds'0:SortString{}),
        LblcollectCasts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern{}(VarP:SortPattern{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("25"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(25,8,25,46)"), owise{}(), UNIQUE'Unds'ID{}("758cc8795feab9050269cfb6338e2ebcd43741cc71e31bdc868224ee92ff04a0")]

// rule `collectCasts2(_,_)_DISAMBIGUATE_Set_Pattern_String`(dv(_0,VarName),SortName)=>`SetItem`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(inj{KoreString,KItem}(VarName),inj{String,KItem}(SortName))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(641329d4ea07bb43606136b063c228cd051599a2312e192c91b679e9d908f930) contentStartColumn(8) contentStartLine(24) org.kframework.attributes.Location(Location(24,8,24,84)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        LblcollectCasts2'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern'Unds'String{}(Lbldv{}(Var'Unds'0:SortSort{},VarVarName:SortKoreString{}),VarSortName:SortString{}),
        LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(inj{SortKoreString{}, SortKItem{}}(VarVarName:SortKoreString{}),inj{SortString{}, SortKItem{}}(VarSortName:SortString{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("24"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,8,24,84)"), UNIQUE'Unds'ID{}("641329d4ea07bb43606136b063c228cd051599a2312e192c91b679e9d908f930")]

// rule `collectCastsPs(_)_DISAMBIGUATE_Set_Patterns`(consPatterns(P,Ps))=>`_Set_`(`collectCasts(_)_DISAMBIGUATE_Set_Pattern`(P),`collectCastsPs(_)_DISAMBIGUATE_Set_Patterns`(Ps)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8c814a31c2b46e841930e2a54569f396591baf9c9b589691548cef98af5cd7c8) contentStartColumn(8) contentStartLine(27) org.kframework.attributes.Location(Location(27,8,27,67)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        LblcollectCastsPs'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Patterns{}(LblconsPatterns{}(VarP:SortPattern{},VarPs:SortPatterns{})),
        Lbl'Unds'Set'Unds'{}(LblcollectCasts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern{}(VarP:SortPattern{}),LblcollectCastsPs'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Patterns{}(VarPs:SortPatterns{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("27"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(27,8,27,67)"), UNIQUE'Unds'ID{}("8c814a31c2b46e841930e2a54569f396591baf9c9b589691548cef98af5cd7c8")]

// rule `collectCastsPs(_)_DISAMBIGUATE_Set_Patterns`(dotPatterns(.KList))=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a8fc48ab34e413cc3b52278a269819bde0d05ca242370217ca699b927ba38515) contentStartColumn(8) contentStartLine(28) org.kframework.attributes.Location(Location(28,8,28,41)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        LblcollectCastsPs'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Patterns{}(LbldotPatterns{}()),
        Lbl'Stop'Set{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("28"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,8,28,41)"), UNIQUE'Unds'ID{}("a8fc48ab34e413cc3b52278a269819bde0d05ca242370217ca699b927ba38515")]

// rule `collectSignature(_,_)_DISAMBIGUATE_Map_Map_Set`(M,`.Set`(.KList))=>M requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8179d39e62adef7d877f379e25d5b0d1df100ebd6e48316cbdb74ace06fa30a4) contentStartColumn(8) contentStartLine(51) org.kframework.attributes.Location(Location(51,8,51,38)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        LblcollectSignature'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Map'Unds'Map'Unds'Set{}(VarM:SortMap{},Lbl'Stop'Set{}()),
        VarM:SortMap{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("51"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(51,8,51,38)"), UNIQUE'Unds'ID{}("8179d39e62adef7d877f379e25d5b0d1df100ebd6e48316cbdb74ace06fa30a4")]

// rule `collectSignature(_,_)_DISAMBIGUATE_Map_Map_Set`(M,`_Set_`(`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(S1,inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(Pi,inj{K,OptionalAttributes}(Args)))))),S))=>`collectSignature(_,_)_DISAMBIGUATE_Map_Map_Set`(`Map:update`(M,inj{String,KItem}(`getKLabelFromArgs(_)_DISAMBIGUATE_String_K`(Args)),inj{List,KItem}(`_List_`(`ListItem`(inj{KSort,KItem}(S1)),`getSortArguments(_)_DISAMBIGUATE_List_KProduction`(Pi)))),`_Set_`(`.Set`(.KList),S)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a992f889fc518235d33429bda356cd54e970ba864046526ce920f20ca5afc5f) contentStartColumn(8) contentStartLine(50) org.kframework.attributes.Location(Location(50,8,50,180)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        LblcollectSignature'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Map'Unds'Map'Unds'Set{}(VarM:SortMap{},Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(VarS1:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(VarPi:SortKProduction{},inj{SortK{}, SortOptionalAttributes{}}(VarArgs:SortK{})))))),VarS:SortSet{})),
        LblcollectSignature'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Map'Unds'Map'Unds'Set{}(LblMap'Coln'update{}(VarM:SortMap{},inj{SortString{}, SortKItem{}}(LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(VarArgs:SortK{})),inj{SortList{}, SortKItem{}}(Lbl'Unds'List'Unds'{}(LblListItem{}(inj{SortKSort{}, SortKItem{}}(VarS1:SortKSort{})),LblgetSortArguments'LParUndsRParUnds'DISAMBIGUATE'Unds'List'Unds'KProduction{}(VarPi:SortKProduction{})))),Lbl'Unds'Set'Unds'{}(Lbl'Stop'Set{}(),VarS:SortSet{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("50"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(50,8,50,180)"), UNIQUE'Unds'ID{}("9a992f889fc518235d33429bda356cd54e970ba864046526ce920f20ca5afc5f")]

// rule `countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToCount)=>`_+Int_`(#token("1","Int"),`countAllOccurrences(_,_)_STRING_Int_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToCount)),`lengthString(_)_STRING_Int_String`(Source)),ToCount)) requires `_>=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(4bccfa06c644e08f8bc72d06c14c533f32eee6cde071a3b29aa26ff23c922baf) contentStartColumn(8) contentStartLine(634) org.kframework.attributes.Location(Location(634,8,635,60)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        Lbl'UndsPlus'Int'Unds'{}(\dv{SortInt{}}("1"),LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToCount:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToCount:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("634"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(634,8,635,60)"), UNIQUE'Unds'ID{}("4bccfa06c644e08f8bc72d06c14c533f32eee6cde071a3b29aa26ff23c922baf")]

// rule `countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToCount)=>#token("0","Int") requires `_<Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToCount,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(dfa3f190163a3253c79d99a66ad7826cdaebf15d32e558c2e1c1c28d223401ec) contentStartColumn(8) contentStartLine(632) org.kframework.attributes.Location(Location(632,8,633,59)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToCount:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToCount:SortString{}),
        \dv{SortInt{}}("0")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("632"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(632,8,633,59)"), UNIQUE'Unds'ID{}("dfa3f190163a3253c79d99a66ad7826cdaebf15d32e558c2e1c1c28d223401ec")]

// rule `disambiguate(_,_)_DISAMBIGUATE_Pattern_Pattern_Set`(P,Prods)=>`applyTypeCheck(_,_,_,_)_DISAMBIGUATE_Pattern_Pattern_Map_Set_Set`(P,`collectSignature(_,_)_DISAMBIGUATE_Map_Map_Set`(`.Map`(.KList),Prods),`tclosure(_)_DISAMBIGUATE_Set_Set`(`getSubsorts(_)_DISAMBIGUATE_Set_Set`(Prods)),`collectCasts(_)_DISAMBIGUATE_Set_Pattern`(P)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(72ff297a7ad84977a3c3b6f026f35e47ef6204ff3d7140d3996837208b89d902) contentStartColumn(8) contentStartLine(71) org.kframework.attributes.Location(Location(71,8,71,129)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPattern{},R} (
        Lbldisambiguate'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Set{}(VarP:SortPattern{},VarProds:SortSet{}),
        LblapplyTypeCheck'LParUndsCommUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Pattern'Unds'Pattern'Unds'Map'Unds'Set'Unds'Set{}(VarP:SortPattern{},LblcollectSignature'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Map'Unds'Map'Unds'Set{}(Lbl'Stop'Map{}(),VarProds:SortSet{}),Lbltclosure'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(LblgetSubsorts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(VarProds:SortSet{})),LblcollectCasts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Pattern{}(VarP:SortPattern{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("71"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(71,8,71,129)"), UNIQUE'Unds'ID{}("72ff297a7ad84977a3c3b6f026f35e47ef6204ff3d7140d3996837208b89d902")]

// rule `doParseKAST(_)_PARSER-UTIL_KItem_K`(inj{String,KItem}(S))=>inj{KDefinition,KItem}(`#parseKORE(_)_K-REFLECTION_Sort_String`{KDefinition}(S)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(8942f117f220057277678c5f29bbc701c1aa2a1924841a1de622efa85cf82aaa) contentStartColumn(8) contentStartLine(46) org.kframework.attributes.Location(Location(46,8,46,58)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LbldoParseKAST'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'K{}(kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}())),
        inj{SortKDefinition{}, SortKItem{}}(Lbl'Hash'parseKORE'LParUndsRParUnds'K-REFLECTION'Unds'Sort'Unds'String{SortKDefinition{}}(VarS:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("46"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(46,8,46,58)"), UNIQUE'Unds'ID{}("8942f117f220057277678c5f29bbc701c1aa2a1924841a1de622efa85cf82aaa")]

// rule `findChar(_,_,_)_STRING_Int_String_String_Int`(S1,S2,I)=>`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),#token("-1","Int")),`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I),`#if_#then_#else_#fi_K-EQUAL_Sort_Bool_Sort_Sort`{Int}(`_==Int_`(`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I),#token("-1","Int")),`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`minInt(_,_)_INT-COMMON_Int_Int_Int`(`findString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`findChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I)))) requires `_=/=String__STRING_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(0d56eed034d2fa4ad082122b8d6b80f1e82c06fb05ba24f8cec9dcc22391f3c5) contentStartColumn(8) contentStartLine(627) org.kframework.attributes.Location(Location(627,8,627,431)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),Lbl'Hash'if'UndsHash'then'UndsHash'else'UndsHash'fi'Unds'K-EQUAL'Unds'Sort'Unds'Bool'Unds'Sort'Unds'Sort{SortInt{}}(Lbl'UndsEqlsEqls'Int'Unds'{}(LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}),\dv{SortInt{}}("-1")),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("627"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(627,8,627,431)"), UNIQUE'Unds'ID{}("0d56eed034d2fa4ad082122b8d6b80f1e82c06fb05ba24f8cec9dcc22391f3c5")]

// rule `findChar(_,_,_)_STRING_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0591f2bf9f969151282b463b90a46889c2f24b2ccc17d5e7d0f4a39bac3b9431) contentStartColumn(8) contentStartLine(628) org.kframework.attributes.Location(Location(628,8,628,32)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'0:SortString{},\dv{SortString{}}(""),Var'Unds'1:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("628"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(628,8,628,32)"), UNIQUE'Unds'ID{}("0591f2bf9f969151282b463b90a46889c2f24b2ccc17d5e7d0f4a39bac3b9431")]

// rule `freshId(_)_ID-SYNTAX_Id_Int`(I)=>`String2Id(_)_ID-SYNTAX_Id_String`(`_+String__STRING_String_String_String`(#token("\"_\"","String"),`Int2String(_)_STRING_String_Int`(I))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(9a9b9b8184277146c09eab2a3b04c692bacf9ab5bb4505273f0b73df25d23d2a) contentStartColumn(8) contentStartLine(845) org.kframework.attributes.Location(Location(845,8,845,62)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortId{},R} (
        LblfreshId'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'Int{}(VarI:SortInt{}),
        LblString2Id'LParUndsRParUnds'ID-SYNTAX'Unds'Id'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("_"),LblInt2String'LParUndsRParUnds'STRING'Unds'String'Unds'Int{}(VarI:SortInt{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("845"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(845,8,845,62)"), UNIQUE'Unds'ID{}("9a9b9b8184277146c09eab2a3b04c692bacf9ab5bb4505273f0b73df25d23d2a")]

// rule `freshInt(_)_INT_Int_Int`(I)=>I requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(f1540ca30a8409b2d12d93dbe87ce1795c0b21bbb9e38cb622cd6b5997b7273d) contentStartColumn(8) contentStartLine(483) org.kframework.attributes.Location(Location(483,8,483,28)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblfreshInt'LParUndsRParUnds'INT'Unds'Int'Unds'Int{}(VarI:SortInt{}),
        VarI:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("483"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(483,8,483,28)"), UNIQUE'Unds'ID{}("f1540ca30a8409b2d12d93dbe87ce1795c0b21bbb9e38cb622cd6b5997b7273d")]

// rule getExitCode(`<generatedTop>`(_0,_1,`<exit-code>`(Exit),_2,_3,_4))=>Exit requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblgetExitCode{}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'0:SortKCell{},Var'Unds'1:SortDefinitionCell{},Lbl'-LT-'exit-code'-GT-'{}(VarExit:SortInt{}),Var'Unds'2:SortSCell{},Var'Unds'3:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})),
        VarExit:SortInt{}),
      \top{R}()))
  []

// rule getGeneratedCounterCell(`<generatedTop>`(_0,_1,_2,_3,Cell,_4))=>Cell requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblgetGeneratedCounterCell{}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'0:SortKCell{},Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Var'Unds'3:SortSCell{},VarCell:SortGeneratedCounterCell{},Var'Unds'4:SortKinkDeployedDirCell{})),
        VarCell:SortGeneratedCounterCell{}),
      \top{R}()))
  []

// rule `getKLabelFromArgs(_)_DISAMBIGUATE_String_K`(inj{AttrList,KItem}(consAttrList(inj{K,Attr}(_0),inj{K,AttrList}(A))))=>`getKLabelFromArgs(_)_DISAMBIGUATE_String_K`(A) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e710462acffa12b4a63b69c98c18c3924e24f2cf31ca48b4ad5ead420202d6fa) contentStartColumn(8) contentStartLine(62) org.kframework.attributes.Location(Location(62,8,62,50)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
  \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    kseq{}(inj{SortAttrList{}, SortKItem{}}(LblconsAttrList{}(inj{SortK{}, SortAttr{}}(Var'Unds'0:SortK{}),inj{SortK{}, SortAttrList{}}(VarA:SortK{}))),dotk{}()),
                    kseq{}(inj{SortAttrList{}, SortKItem{}}(LbldotAttrList{}()),dotk{}())
                )),
                \top{R} ()
              )
          ),
          \or{R} (
          \exists{R} (Var'Unds'3:SortK{},
                    \exists{R} (Var'Unds'4:SortK{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    kseq{}(inj{SortAttrList{}, SortKItem{}}(LblconsAttrList{}(inj{SortK{}, SortAttr{}}(Var'Unds'0:SortK{}),inj{SortK{}, SortAttrList{}}(VarA:SortK{}))),dotk{}()),
                    kseq{}(inj{SortAttrList{}, SortKItem{}}(LblconsAttrList{}(LbltagContent{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("klabel")),inj{SortK{}, SortTagContents{}}(Var'Unds'3:SortK{})),inj{SortK{}, SortAttrList{}}(Var'Unds'4:SortK{}))),dotk{}())
                )),
                \top{R} ()
              )
          ))),
          \or{R} (
  \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    kseq{}(inj{SortAttrList{}, SortKItem{}}(LblconsAttrList{}(inj{SortK{}, SortAttr{}}(Var'Unds'0:SortK{}),inj{SortK{}, SortAttrList{}}(VarA:SortK{}))),dotk{}()),
                    kseq{}(inj{SortOptionalAttributes{}, SortKItem{}}(LblnoKAttributesDeclaration{}()),dotk{}())
                )),
                \top{R} ()
              )
          ),
          \or{R} (
          \exists{R} (Var'Unds'5:SortK{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    kseq{}(inj{SortAttrList{}, SortKItem{}}(LblconsAttrList{}(inj{SortK{}, SortAttr{}}(Var'Unds'0:SortK{}),inj{SortK{}, SortAttrList{}}(VarA:SortK{}))),dotk{}()),
                    kseq{}(inj{SortKAttributesDeclaration{}, SortKItem{}}(LblkAttributesDeclaration{}(inj{SortK{}, SortAttrList{}}(Var'Unds'5:SortK{}))),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        ))))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortString{},R} (
        LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(kseq{}(inj{SortAttrList{}, SortKItem{}}(LblconsAttrList{}(inj{SortK{}, SortAttr{}}(Var'Unds'0:SortK{}),inj{SortK{}, SortAttrList{}}(VarA:SortK{}))),dotk{}())),
        LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(VarA:SortK{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("62"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,8,62,50)"), owise{}(), UNIQUE'Unds'ID{}("e710462acffa12b4a63b69c98c18c3924e24f2cf31ca48b4ad5ead420202d6fa")]

// rule `getKLabelFromArgs(_)_DISAMBIGUATE_String_K`(inj{AttrList,KItem}(consAttrList(tagContent(inj{LowerName,KEY}(#token("klabel","LowerName")),inj{K,TagContents}(KL)),inj{K,AttrList}(_0))))=>`tokenToString(_)_PARSER-UTIL_String_K`(KL) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(12f31ad33bb1fa6c084d508305a0e48c92e01d96c7ffacddb6704684515dcfce) contentStartColumn(8) contentStartLine(61) org.kframework.attributes.Location(Location(61,8,61,109)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(kseq{}(inj{SortAttrList{}, SortKItem{}}(LblconsAttrList{}(LbltagContent{}(inj{SortLowerName{}, SortKEY{}}(\dv{SortLowerName{}}("klabel")),inj{SortK{}, SortTagContents{}}(VarKL:SortK{})),inj{SortK{}, SortAttrList{}}(Var'Unds'0:SortK{}))),dotk{}())),
        LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(VarKL:SortK{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("61"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(61,8,61,109)"), UNIQUE'Unds'ID{}("12f31ad33bb1fa6c084d508305a0e48c92e01d96c7ffacddb6704684515dcfce")]

// rule `getKLabelFromArgs(_)_DISAMBIGUATE_String_K`(inj{AttrList,KItem}(dotAttrList(.KList)))=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1af6eb5143b9a946777a6f28d9f99e989877cd6ef34fc2a231ea133c021de2e0) contentStartColumn(8) contentStartLine(59) org.kframework.attributes.Location(Location(59,8,59,42)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(kseq{}(inj{SortAttrList{}, SortKItem{}}(LbldotAttrList{}()),dotk{}())),
        \dv{SortString{}}("")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("59"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(59,8,59,42)"), UNIQUE'Unds'ID{}("1af6eb5143b9a946777a6f28d9f99e989877cd6ef34fc2a231ea133c021de2e0")]

// rule `getKLabelFromArgs(_)_DISAMBIGUATE_String_K`(inj{KAttributesDeclaration,KItem}(kAttributesDeclaration(inj{K,AttrList}(A))))=>`getKLabelFromArgs(_)_DISAMBIGUATE_String_K`(A) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ccef55a2020ccaad6994f5c350ce4e402103fe6154f5abfe342478bd6a1c598d) contentStartColumn(8) contentStartLine(60) org.kframework.attributes.Location(Location(60,8,60,57)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(kseq{}(inj{SortKAttributesDeclaration{}, SortKItem{}}(LblkAttributesDeclaration{}(inj{SortK{}, SortAttrList{}}(VarA:SortK{}))),dotk{}())),
        LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(VarA:SortK{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("60"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(60,8,60,57)"), UNIQUE'Unds'ID{}("ccef55a2020ccaad6994f5c350ce4e402103fe6154f5abfe342478bd6a1c598d")]

// rule `getKLabelFromArgs(_)_DISAMBIGUATE_String_K`(inj{OptionalAttributes,KItem}(noKAttributesDeclaration(.KList)))=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ca3f4667ee338c787e1bb673f85f483b0f3650b38ed2885cd043bf44ef1a53c0) contentStartColumn(8) contentStartLine(58) org.kframework.attributes.Location(Location(58,8,58,38)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblgetKLabelFromArgs'LParUndsRParUnds'DISAMBIGUATE'Unds'String'Unds'K{}(kseq{}(inj{SortOptionalAttributes{}, SortKItem{}}(LblnoKAttributesDeclaration{}()),dotk{}())),
        \dv{SortString{}}("")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("58"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(58,8,58,38)"), UNIQUE'Unds'ID{}("ca3f4667ee338c787e1bb673f85f483b0f3650b38ed2885cd043bf44ef1a53c0")]

// rule `getSortArguments(_)_DISAMBIGUATE_List_KProduction`(inj{KProductionItem,KProduction}(nonTerminalLbl(S2)))=>`ListItem`(inj{KSort,KItem}(S2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(fafdb789a86c9a2688a91501d2363bbf2e0735d82e49235137331ee8dc4449cd) contentStartColumn(8) contentStartLine(54) org.kframework.attributes.Location(Location(54,8,54,63)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortList{},R} (
        LblgetSortArguments'LParUndsRParUnds'DISAMBIGUATE'Unds'List'Unds'KProduction{}(inj{SortKProductionItem{}, SortKProduction{}}(LblnonTerminalLbl{}(VarS2:SortKSort{}))),
        LblListItem{}(inj{SortKSort{}, SortKItem{}}(VarS2:SortKSort{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("54"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(54,8,54,63)"), UNIQUE'Unds'ID{}("fafdb789a86c9a2688a91501d2363bbf2e0735d82e49235137331ee8dc4449cd")]

// rule `getSortArguments(_)_DISAMBIGUATE_List_KProduction`(inj{KProductionItem,KProduction}(regexTerminalLbl(_0)))=>`.List`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(83ad598f7316bcf9874e1bbe7b2b9e20b05d63dd77127fb80000c86fd3f03251) contentStartColumn(8) contentStartLine(56) org.kframework.attributes.Location(Location(56,8,56,51)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortList{},R} (
        LblgetSortArguments'LParUndsRParUnds'DISAMBIGUATE'Unds'List'Unds'KProduction{}(inj{SortKProductionItem{}, SortKProduction{}}(LblregexTerminalLbl{}(Var'Unds'0:SortEKoreKString{}))),
        Lbl'Stop'List{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("56"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(56,8,56,51)"), UNIQUE'Unds'ID{}("83ad598f7316bcf9874e1bbe7b2b9e20b05d63dd77127fb80000c86fd3f03251")]

// rule `getSortArguments(_)_DISAMBIGUATE_List_KProduction`(inj{KProductionItem,KProduction}(terminalLbl(_0)))=>`.List`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7f37f3276f62916f714ffb3f4a0a54f424b7824ec104112beb83ace529ed18f7) contentStartColumn(8) contentStartLine(55) org.kframework.attributes.Location(Location(55,8,55,46)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortList{},R} (
        LblgetSortArguments'LParUndsRParUnds'DISAMBIGUATE'Unds'List'Unds'KProduction{}(inj{SortKProductionItem{}, SortKProduction{}}(LblterminalLbl{}(Var'Unds'0:SortEKoreKString{}))),
        Lbl'Stop'List{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("55"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(55,8,55,46)"), UNIQUE'Unds'ID{}("7f37f3276f62916f714ffb3f4a0a54f424b7824ec104112beb83ace529ed18f7")]

// rule `getSortArguments(_)_DISAMBIGUATE_List_KProduction`(kProduction(inj{KProduction,KProductionItem}(P1),P2))=>`_List_`(`getSortArguments(_)_DISAMBIGUATE_List_KProduction`(P1),`getSortArguments(_)_DISAMBIGUATE_List_KProduction`(P2)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(78fd40ac615292f188a7280a6793f8d15d29ea4b2570e4de1d717256de93ea18) contentStartColumn(8) contentStartLine(53) org.kframework.attributes.Location(Location(53,8,53,90)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortList{},R} (
        LblgetSortArguments'LParUndsRParUnds'DISAMBIGUATE'Unds'List'Unds'KProduction{}(LblkProduction{}(inj{SortKProduction{}, SortKProductionItem{}}(VarP1:SortKProduction{}),VarP2:SortKProduction{})),
        Lbl'Unds'List'Unds'{}(LblgetSortArguments'LParUndsRParUnds'DISAMBIGUATE'Unds'List'Unds'KProduction{}(VarP1:SortKProduction{}),LblgetSortArguments'LParUndsRParUnds'DISAMBIGUATE'Unds'List'Unds'KProduction{}(VarP2:SortKProduction{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("53"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(53,8,53,90)"), UNIQUE'Unds'ID{}("78fd40ac615292f188a7280a6793f8d15d29ea4b2570e4de1d717256de93ea18")]

// rule `getSubsorts(_)_DISAMBIGUATE_Set_Set`(`.Set`(.KList) #as _1)=>_1 requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(b760ced47c818320ff00d5f80a3547352001098b8e73d91ea06151dc68308fd8) contentStartColumn(8) contentStartLine(33) org.kframework.attributes.Location(Location(33,8,33,33)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        LblgetSubsorts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(\and{SortSet{}}(Lbl'Stop'Set{}(),Var'Unds'1:SortSet{})),
        Var'Unds'1:SortSet{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("33"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,8,33,33)"), UNIQUE'Unds'ID{}("b760ced47c818320ff00d5f80a3547352001098b8e73d91ea06151dc68308fd8")]

// rule `getSubsorts(_)_DISAMBIGUATE_Set_Set`(`_Set_`(`SetItem`(S),Ss))=>`_Set_`(`getSubsorts2(_)_DISAMBIGUATE_Set_K`(S),`getSubsorts(_)_DISAMBIGUATE_Set_Set`(Ss)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(15c4cacbc53fa96c96bf1accf61c918f6882574299fbda656cbaa85fd9950603) contentStartColumn(8) contentStartLine(32) org.kframework.attributes.Location(Location(32,8,32,73)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        LblgetSubsorts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(VarS:SortKItem{}),VarSs:SortSet{})),
        Lbl'Unds'Set'Unds'{}(LblgetSubsorts2'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'K{}(kseq{}(VarS:SortKItem{},dotk{}())),LblgetSubsorts'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(VarSs:SortSet{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("32"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,8,32,73)"), UNIQUE'Unds'ID{}("15c4cacbc53fa96c96bf1accf61c918f6882574299fbda656cbaa85fd9950603")]

// rule `getSubsorts2(_)_DISAMBIGUATE_Set_K`(_0)=>`.Set`(.KList) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(3055d42364f284ea699363d9e7168f02da936ed5e3ce46d31053f5d204f383aa) contentStartColumn(8) contentStartLine(37) org.kframework.attributes.Location(Location(37,8,37,31)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortKSort{},
                    \exists{R} (Var'Unds'3:SortK{},
                    \exists{R} (Var'Unds'1:SortKSort{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    Var'Unds'0:SortK{},
                    kseq{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(Var'Unds'1:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(inj{SortKProductionItem{}, SortKProduction{}}(LblnonTerminalLbl{}(Var'Unds'2:SortKSort{})),inj{SortK{}, SortOptionalAttributes{}}(Var'Unds'3:SortK{}))))),dotk{}())
                )),
                \top{R} ()
              )
          )))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        LblgetSubsorts2'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'K{}(Var'Unds'0:SortK{}),
        Lbl'Stop'Set{}()),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("37"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(37,8,37,31)"), owise{}(), UNIQUE'Unds'ID{}("3055d42364f284ea699363d9e7168f02da936ed5e3ce46d31053f5d204f383aa")]

// rule `getSubsorts2(_)_DISAMBIGUATE_Set_K`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(S1,inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(inj{KProductionItem,KProduction}(nonTerminalLbl(S2)),inj{K,OptionalAttributes}(_0))))))=>`SetItem`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(inj{KSort,KItem}(S1),inj{KSort,KItem}(S2))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ea935dbe390272ab3c51880c2bfc4b1a7ff886b1441bb3c56508d798292ae319) contentStartColumn(8) contentStartLine(36) org.kframework.attributes.Location(Location(36,8,36,118)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        LblgetSubsorts2'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'K{}(kseq{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(VarS1:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(inj{SortKProductionItem{}, SortKProduction{}}(LblnonTerminalLbl{}(VarS2:SortKSort{})),inj{SortK{}, SortOptionalAttributes{}}(Var'Unds'0:SortK{}))))),dotk{}())),
        LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(inj{SortKSort{}, SortKItem{}}(VarS1:SortKSort{}),inj{SortKSort{}, SortKItem{}}(VarS2:SortKSort{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("36"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(36,8,36,118)"), UNIQUE'Unds'ID{}("ea935dbe390272ab3c51880c2bfc4b1a7ff886b1441bb3c56508d798292ae319")]

// rule `grammarToString(_)_PARSER-UTIL_String_Set`(`.Set`(.KList))=>#token("\"\"","String") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e38013e27516563df572de84b4e1cfa3d297ccce45a4450045a24f400ade8a2f) contentStartColumn(8) contentStartLine(102) org.kframework.attributes.Location(Location(102,8,102,35)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblgrammarToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Set{}(Lbl'Stop'Set{}()),
        \dv{SortString{}}("")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("102"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(102,8,102,35)"), UNIQUE'Unds'ID{}("e38013e27516563df572de84b4e1cfa3d297ccce45a4450045a24f400ade8a2f")]

// rule `grammarToString(_)_PARSER-UTIL_String_Set`(`_Set_`(`SetItem`(inj{SyntaxDeclaration,KItem}(kSyntaxProductionLbl(S,inj{KProductionWAttr,PrioritySeqBlock}(kProductionWAttr(P,ATTRS))))),DECLS))=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(#token("\"syntax \"","String"),`tokenToString(_)_PARSER-UTIL_String_K`(inj{KSort,KItem}(S))),#token("\" ::= \"","String")),`KProductionToString(_)_PARSER-UTIL_String_KProduction`(P)),#token("\" \"","String")),`OptionalAttributesToString(_)_PARSER-UTIL_String_OptionalAttributes`(ATTRS)),#token("\"\\n\"","String")),`grammarToString(_)_PARSER-UTIL_String_Set`(DECLS)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(187581517f3c20159f99a7a59dd5f5f668123937569f434fbc01e271f46314f0) contentStartColumn(8) contentStartLine(103) org.kframework.attributes.Location(Location(103,8,108,38)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblgrammarToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Set{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(LblkSyntaxProductionLbl{}(VarS:SortKSort{},inj{SortKProductionWAttr{}, SortPrioritySeqBlock{}}(LblkProductionWAttr{}(VarP:SortKProduction{},VarATTRS:SortOptionalAttributes{}))))),VarDECLS:SortSet{})),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("syntax "),LbltokenToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'K{}(kseq{}(inj{SortKSort{}, SortKItem{}}(VarS:SortKSort{}),dotk{}()))),\dv{SortString{}}(" ::= ")),LblKProductionToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'KProduction{}(VarP:SortKProduction{})),\dv{SortString{}}(" ")),LblOptionalAttributesToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'OptionalAttributes{}(VarATTRS:SortOptionalAttributes{})),\dv{SortString{}}("\n")),LblgrammarToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Set{}(VarDECLS:SortSet{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("103"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(103,8,108,38)"), UNIQUE'Unds'ID{}("187581517f3c20159f99a7a59dd5f5f668123937569f434fbc01e271f46314f0")]

// rule initAttributesCell(.KList)=>`<attributes>`(dotPatterns(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAttributesCell{},R} (
        LblinitAttributesCell{}(),
        Lbl'-LT-'attributes'-GT-'{}(LbldotPatterns{}())),
      \top{R}()))
  [initializer{}()]

// rule initCellNameCell(.KList)=>`<cellName>`(`.Map`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCellNameCell{},R} (
        LblinitCellNameCell{}(),
        Lbl'-LT-'cellName'-GT-'{}(Lbl'Stop'Map{}())),
      \top{R}()))
  [initializer{}()]

// rule initCollectedCell(.KList)=>`<collected>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCollectedCell{},R} (
        LblinitCollectedCell{}(),
        Lbl'-LT-'collected'-GT-'{}(Lbl'Stop'Set{}())),
      \top{R}()))
  [initializer{}()]

// rule initConfigGrammarCell(.KList)=>`<configGrammar>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortConfigGrammarCell{},R} (
        LblinitConfigGrammarCell{}(),
        Lbl'-LT-'configGrammar'-GT-'{}(Lbl'Stop'Set{}())),
      \top{R}()))
  [initializer{}()]

// rule initConfigInfoCell(.KList)=>`<configInfo>`(initCellNameCell(.KList),initCollectedCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortConfigInfoCell{},R} (
        LblinitConfigInfoCell{}(),
        Lbl'-LT-'configInfo'-GT-'{}(LblinitCellNameCell{}(),LblinitCollectedCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initDeclCell(.KList)=>`DeclCellSetItem`(`<decl>`(`nullDecl_KINK-CONFIGURATION_Declaration`(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclCellSet{},R} (
        LblinitDeclCell{}(),
        LblDeclCellSetItem{}(Lbl'-LT-'decl'-GT-'{}(LblnullDecl'Unds'KINK-CONFIGURATION'Unds'Declaration{}()))),
      \top{R}()))
  [initializer{}()]

// rule initDeclarationsCell(.KList)=>`<declarations>`(`.DeclCellSet`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclarationsCell{},R} (
        LblinitDeclarationsCell{}(),
        Lbl'-LT-'declarations'-GT-'{}(Lbl'Stop'DeclCellSet{}())),
      \top{R}()))
  [initializer{}()]

// rule initDefinitionCell(.KList)=>`<definition>`(initDefnAttrsCell(.KList),initModulesCell(.KList),initConfigInfoCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefinitionCell{},R} (
        LblinitDefinitionCell{}(),
        Lbl'-LT-'definition'-GT-'{}(LblinitDefnAttrsCell{}(),LblinitModulesCell{}(),LblinitConfigInfoCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initDefnAttrsCell(.KList)=>`<defnAttrs>`(dotPatterns(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefnAttrsCell{},R} (
        LblinitDefnAttrsCell{}(),
        Lbl'-LT-'defnAttrs'-GT-'{}(LbldotPatterns{}())),
      \top{R}()))
  [initializer{}()]

// rule initExitCodeCell(.KList)=>`<exit-code>`(#token("1","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExitCodeCell{},R} (
        LblinitExitCodeCell{}(),
        Lbl'-LT-'exit-code'-GT-'{}(\dv{SortInt{}}("1"))),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedCounterCell(.KList)=>`<generatedCounter>`(#token("0","Int")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        LblinitGeneratedCounterCell{}(),
        Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0"))),
      \top{R}()))
  [initializer{}()]

// rule initGeneratedTopCell(Init)=>`<generatedTop>`(initKCell(Init),initDefinitionCell(.KList),initExitCodeCell(.KList),initSCell(`.Map`(.KList)),initGeneratedCounterCell(.KList),initKinkDeployedDirCell(Init)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        LblinitGeneratedTopCell{}(VarInit:SortMap{}),
        Lbl'-LT-'generatedTop'-GT-'{}(LblinitKCell{}(VarInit:SortMap{}),LblinitDefinitionCell{}(),LblinitExitCodeCell{}(),LblinitSCell{}(Lbl'Stop'Map{}()),LblinitGeneratedCounterCell{}(),LblinitKinkDeployedDirCell{}(VarInit:SortMap{}))),
      \top{R}()))
  [initializer{}()]

// rule initKCell(Init)=>`<k>`(`#parseCommandLine(_,_)_COMMAND-LINE-SYNTAX_KItem_CommandLine_Pgm`(`project:CommandLine`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$COMMANDLINE","KConfigVar")))),inj{Any,Pgm}(`project:Any`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$PGM","KConfigVar"))))))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        LblinitKCell{}(VarInit:SortMap{}),
        Lbl'-LT-'k'-GT-'{}(kseq{}(Lbl'Hash'parseCommandLine'LParUndsCommUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'KItem'Unds'CommandLine'Unds'Pgm{}(Lblproject'Coln'CommandLine{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$COMMANDLINE"))),dotk{}())),inj{SortAny{}, SortPgm{}}(Lblproject'Coln'Any{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$PGM"))),dotk{}())))),dotk{}()))),
      \top{R}()))
  [initializer{}()]

// rule initKinkDeployedDirCell(Init)=>`<kinkDeployedDir>`(`token2String(_)_COMMAND-LINE-SYNTAX_String_Path`(`project:Path`(`Map:lookup`(Init,inj{KConfigVar,KItem}(#token("$KINKDEPLOYEDDIR","KConfigVar")))))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKinkDeployedDirCell{},R} (
        LblinitKinkDeployedDirCell{}(VarInit:SortMap{}),
        Lbl'-LT-'kinkDeployedDir'-GT-'{}(Lbltoken2String'LParUndsRParUnds'COMMAND-LINE-SYNTAX'Unds'String'Unds'Path{}(Lblproject'Coln'Path{}(kseq{}(LblMap'Coln'lookup{}(VarInit:SortMap{},inj{SortKConfigVar{}, SortKItem{}}(\dv{SortKConfigVar{}}("$KINKDEPLOYEDDIR"))),dotk{}()))))),
      \top{R}()))
  [initializer{}()]

// rule initModCell(.KList)=>`ModCellSetItem`(`<mod>`(initNameCell(.KList),initAttributesCell(.KList),initDeclarationsCell(.KList),initParserGeneratorCell(.KList))) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModCellSet{},R} (
        LblinitModCell{}(),
        LblModCellSetItem{}(Lbl'-LT-'mod'-GT-'{}(LblinitNameCell{}(),LblinitAttributesCell{}(),LblinitDeclarationsCell{}(),LblinitParserGeneratorCell{}()))),
      \top{R}()))
  [initializer{}()]

// rule initModulesCell(.KList)=>`<modules>`(`.ModCellSet`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModulesCell{},R} (
        LblinitModulesCell{}(),
        Lbl'-LT-'modules'-GT-'{}(Lbl'Stop'ModCellSet{}())),
      \top{R}()))
  [initializer{}()]

// rule initNameCell(.KList)=>`<name>`(#token("UNNAMED","ModuleName")) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNameCell{},R} (
        LblinitNameCell{}(),
        Lbl'-LT-'name'-GT-'{}(\dv{SortModuleName{}}("UNNAMED"))),
      \top{R}()))
  [initializer{}()]

// rule initParserGeneratorCell(.KList)=>`<parserGenerator>`(initPrgGrammarCell(.KList),initConfigGrammarCell(.KList),initRuleGrammarCell(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortParserGeneratorCell{},R} (
        LblinitParserGeneratorCell{}(),
        Lbl'-LT-'parserGenerator'-GT-'{}(LblinitPrgGrammarCell{}(),LblinitConfigGrammarCell{}(),LblinitRuleGrammarCell{}())),
      \top{R}()))
  [initializer{}()]

// rule initPrgGrammarCell(.KList)=>`<prgGrammar>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPrgGrammarCell{},R} (
        LblinitPrgGrammarCell{}(),
        Lbl'-LT-'prgGrammar'-GT-'{}(Lbl'Stop'Set{}())),
      \top{R}()))
  [initializer{}()]

// rule initRuleGrammarCell(.KList)=>`<ruleGrammar>`(`.Set`(.KList)) requires #token("true","Bool") ensures #token("true","Bool") [initializer()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortRuleGrammarCell{},R} (
        LblinitRuleGrammarCell{}(),
        Lbl'-LT-'ruleGrammar'-GT-'{}(Lbl'Stop'Set{}())),
      \top{R}()))
  [initializer{}()]

// rule initSCell(_0)=>`<s>`(inj{Strategy,KItem}(#applyRule(#token("regular","#RuleTag")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0258cd4989a4e677b830e0c0b1bb66fda62ca76eb24d3e18864b6c3b727162a5) contentStartColumn(10) contentStartLine(1382) org.kframework.attributes.Location(Location(1382,10,1382,44)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSCell{},R} (
        LblinitSCell{}(Var'Unds'0:SortMap{}),
        Lbl'-LT-'s'-GT-'{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(Lbl'Hash'applyRule{}(\dv{Sort'Hash'RuleTag{}}("regular"))),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("1382"), contentStartColumn{}("10"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(1382,10,1382,44)"), UNIQUE'Unds'ID{}("0258cd4989a4e677b830e0c0b1bb66fda62ca76eb24d3e18864b6c3b727162a5")]

// rule `is#KVariable`(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:Sort'Hash'KVariable{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{Sort'Hash'KVariable{}, SortKItem{}}(Var'Unds'1:Sort'Hash'KVariable{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'KVariable{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `is#KVariable`(inj{#KVariable,KItem}(#KVariable))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'KVariable{}(kseq{}(inj{Sort'Hash'KVariable{}, SortKItem{}}(Var'Hash'KVariable:Sort'Hash'KVariable{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `is#LowerId`(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:Sort'Hash'LowerId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{Sort'Hash'LowerId{}, SortKItem{}}(Var'Unds'1:Sort'Hash'LowerId{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'LowerId{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `is#LowerId`(inj{#LowerId,KItem}(#LowerId))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'LowerId{}(kseq{}(inj{Sort'Hash'LowerId{}, SortKItem{}}(Var'Hash'LowerId:Sort'Hash'LowerId{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `is#RuleTag`(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:Sort'Hash'RuleTag{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{Sort'Hash'RuleTag{}, SortKItem{}}(Var'Unds'0:Sort'Hash'RuleTag{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'RuleTag{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `is#RuleTag`(inj{#RuleTag,KItem}(#RuleTag))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'RuleTag{}(kseq{}(inj{Sort'Hash'RuleTag{}, SortKItem{}}(Var'Hash'RuleTag:Sort'Hash'RuleTag{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `is#UpperId`(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:Sort'Hash'UpperId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{Sort'Hash'UpperId{}, SortKItem{}}(Var'Unds'0:Sort'Hash'UpperId{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'UpperId{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule `is#UpperId`(inj{#UpperId,KItem}(#UpperId))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblis'Hash'UpperId{}(kseq{}(inj{Sort'Hash'UpperId{}, SortKItem{}}(Var'Hash'UpperId:Sort'Hash'UpperId{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAny(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAny{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAny{}, SortKItem{}}(Var'Unds'1:SortAny{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAny{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAny(inj{Any,KItem}(Any))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAny{}(kseq{}(inj{SortAny{}, SortKItem{}}(VarAny:SortAny{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAssocAttribute(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAssocAttribute{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAssocAttribute{}, SortKItem{}}(Var'Unds'1:SortAssocAttribute{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAssocAttribute{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAssocAttribute(inj{AssocAttribute,KItem}(AssocAttribute))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAssocAttribute{}(kseq{}(inj{SortAssocAttribute{}, SortKItem{}}(VarAssocAttribute:SortAssocAttribute{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAttr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortAttr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAttr{}, SortKItem{}}(Var'Unds'0:SortAttr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAttr(inj{Attr,KItem}(Attr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttr{}(kseq{}(inj{SortAttr{}, SortKItem{}}(VarAttr:SortAttr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAttrList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAttrList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAttrList{}, SortKItem{}}(Var'Unds'1:SortAttrList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttrList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAttrList(inj{AttrList,KItem}(AttrList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttrList{}(kseq{}(inj{SortAttrList{}, SortKItem{}}(VarAttrList:SortAttrList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAttribute(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAttribute{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAttribute{}, SortKItem{}}(Var'Unds'1:SortAttribute{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttribute{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAttribute(inj{Attribute,KItem}(Attribute))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttribute{}(kseq{}(inj{SortAttribute{}, SortKItem{}}(VarAttribute:SortAttribute{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAttributesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAttributesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAttributesCell{}, SortKItem{}}(Var'Unds'1:SortAttributesCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttributesCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAttributesCell(inj{AttributesCell,KItem}(AttributesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttributesCell{}(kseq{}(inj{SortAttributesCell{}, SortKItem{}}(VarAttributesCell:SortAttributesCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isAttributesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortAttributesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortAttributesCellOpt{}, SortKItem{}}(Var'Unds'1:SortAttributesCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttributesCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isAttributesCellOpt(inj{AttributesCellOpt,KItem}(AttributesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisAttributesCellOpt{}(kseq{}(inj{SortAttributesCellOpt{}, SortKItem{}}(VarAttributesCellOpt:SortAttributesCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBacktickName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBacktickName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBacktickName{}, SortKItem{}}(Var'Unds'1:SortBacktickName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBacktickName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBacktickName(inj{BacktickName,KItem}(BacktickName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBacktickName{}(kseq{}(inj{SortBacktickName{}, SortKItem{}}(VarBacktickName:SortBacktickName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBool(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortBool{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBool{}, SortKItem{}}(Var'Unds'0:SortBool{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBool(inj{Bool,KItem}(Bool))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarBool:SortBool{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBubble(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBubble{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBubble{}, SortKItem{}}(Var'Unds'1:SortBubble{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBubble{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBubble(inj{Bubble,KItem}(Bubble))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBubble{}(kseq{}(inj{SortBubble{}, SortKItem{}}(VarBubble:SortBubble{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBubbleItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBubbleItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBubbleItem{}, SortKItem{}}(Var'Unds'1:SortBubbleItem{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBubbleItem{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBubbleItem(inj{BubbleItem,KItem}(BubbleItem))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBubbleItem{}(kseq{}(inj{SortBubbleItem{}, SortKItem{}}(VarBubbleItem:SortBubbleItem{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isBubbleWithAttr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortBubbleWithAttr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortBubbleWithAttr{}, SortKItem{}}(Var'Unds'1:SortBubbleWithAttr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBubbleWithAttr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isBubbleWithAttr(inj{BubbleWithAttr,KItem}(BubbleWithAttr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisBubbleWithAttr{}(kseq{}(inj{SortBubbleWithAttr{}, SortKItem{}}(VarBubbleWithAttr:SortBubbleWithAttr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCell{}, SortKItem{}}(Var'Unds'1:SortCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCell(inj{Cell,KItem}(Cell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarCell:SortCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCellNameCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCellNameCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCellNameCell{}, SortKItem{}}(Var'Unds'1:SortCellNameCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCellNameCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCellNameCell(inj{CellNameCell,KItem}(CellNameCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCellNameCell{}(kseq{}(inj{SortCellNameCell{}, SortKItem{}}(VarCellNameCell:SortCellNameCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCellNameCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortCellNameCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCellNameCellOpt{}, SortKItem{}}(Var'Unds'0:SortCellNameCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCellNameCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCellNameCellOpt(inj{CellNameCellOpt,KItem}(CellNameCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCellNameCellOpt{}(kseq{}(inj{SortCellNameCellOpt{}, SortKItem{}}(VarCellNameCellOpt:SortCellNameCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCollectedCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCollectedCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCollectedCell{}, SortKItem{}}(Var'Unds'1:SortCollectedCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCollectedCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCollectedCell(inj{CollectedCell,KItem}(CollectedCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCollectedCell{}(kseq{}(inj{SortCollectedCell{}, SortKItem{}}(VarCollectedCell:SortCollectedCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCollectedCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCollectedCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCollectedCellOpt{}, SortKItem{}}(Var'Unds'1:SortCollectedCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCollectedCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCollectedCellOpt(inj{CollectedCellOpt,KItem}(CollectedCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCollectedCellOpt{}(kseq{}(inj{SortCollectedCellOpt{}, SortKItem{}}(VarCollectedCellOpt:SortCollectedCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isCommandLine(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortCommandLine{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortCommandLine{}, SortKItem{}}(Var'Unds'1:SortCommandLine{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCommandLine{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isCommandLine(inj{CommandLine,KItem}(CommandLine))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisCommandLine{}(kseq{}(inj{SortCommandLine{}, SortKItem{}}(VarCommandLine:SortCommandLine{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isConfigGrammarCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortConfigGrammarCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortConfigGrammarCell{}, SortKItem{}}(Var'Unds'0:SortConfigGrammarCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigGrammarCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isConfigGrammarCell(inj{ConfigGrammarCell,KItem}(ConfigGrammarCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigGrammarCell{}(kseq{}(inj{SortConfigGrammarCell{}, SortKItem{}}(VarConfigGrammarCell:SortConfigGrammarCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isConfigGrammarCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortConfigGrammarCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortConfigGrammarCellOpt{}, SortKItem{}}(Var'Unds'1:SortConfigGrammarCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigGrammarCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isConfigGrammarCellOpt(inj{ConfigGrammarCellOpt,KItem}(ConfigGrammarCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigGrammarCellOpt{}(kseq{}(inj{SortConfigGrammarCellOpt{}, SortKItem{}}(VarConfigGrammarCellOpt:SortConfigGrammarCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isConfigInfoCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortConfigInfoCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortConfigInfoCell{}, SortKItem{}}(Var'Unds'0:SortConfigInfoCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigInfoCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isConfigInfoCell(inj{ConfigInfoCell,KItem}(ConfigInfoCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigInfoCell{}(kseq{}(inj{SortConfigInfoCell{}, SortKItem{}}(VarConfigInfoCell:SortConfigInfoCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isConfigInfoCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortConfigInfoCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortConfigInfoCellFragment{}, SortKItem{}}(Var'Unds'1:SortConfigInfoCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigInfoCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isConfigInfoCellFragment(inj{ConfigInfoCellFragment,KItem}(ConfigInfoCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigInfoCellFragment{}(kseq{}(inj{SortConfigInfoCellFragment{}, SortKItem{}}(VarConfigInfoCellFragment:SortConfigInfoCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isConfigInfoCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortConfigInfoCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortConfigInfoCellOpt{}, SortKItem{}}(Var'Unds'1:SortConfigInfoCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigInfoCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isConfigInfoCellOpt(inj{ConfigInfoCellOpt,KItem}(ConfigInfoCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisConfigInfoCellOpt{}(kseq{}(inj{SortConfigInfoCellOpt{}, SortKItem{}}(VarConfigInfoCellOpt:SortConfigInfoCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeclCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeclCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeclCell{}, SortKItem{}}(Var'Unds'1:SortDeclCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeclCell(inj{DeclCell,KItem}(DeclCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclCell{}(kseq{}(inj{SortDeclCell{}, SortKItem{}}(VarDeclCell:SortDeclCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeclCellSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeclCellSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeclCellSet{}, SortKItem{}}(Var'Unds'1:SortDeclCellSet{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclCellSet{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeclCellSet(inj{DeclCellSet,KItem}(DeclCellSet))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclCellSet{}(kseq{}(inj{SortDeclCellSet{}, SortKItem{}}(VarDeclCellSet:SortDeclCellSet{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeclaration(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeclaration{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeclaration{}, SortKItem{}}(Var'Unds'1:SortDeclaration{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclaration{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeclaration(inj{Declaration,KItem}(Declaration))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclaration{}(kseq{}(inj{SortDeclaration{}, SortKItem{}}(VarDeclaration:SortDeclaration{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeclarations(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeclarations{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeclarations{}, SortKItem{}}(Var'Unds'1:SortDeclarations{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclarations{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeclarations(inj{Declarations,KItem}(Declarations))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclarations{}(kseq{}(inj{SortDeclarations{}, SortKItem{}}(VarDeclarations:SortDeclarations{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeclarationsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeclarationsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeclarationsCell{}, SortKItem{}}(Var'Unds'1:SortDeclarationsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclarationsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeclarationsCell(inj{DeclarationsCell,KItem}(DeclarationsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclarationsCell{}(kseq{}(inj{SortDeclarationsCell{}, SortKItem{}}(VarDeclarationsCell:SortDeclarationsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeclarationsCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDeclarationsCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeclarationsCellFragment{}, SortKItem{}}(Var'Unds'1:SortDeclarationsCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclarationsCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeclarationsCellFragment(inj{DeclarationsCellFragment,KItem}(DeclarationsCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclarationsCellFragment{}(kseq{}(inj{SortDeclarationsCellFragment{}, SortKItem{}}(VarDeclarationsCellFragment:SortDeclarationsCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDeclarationsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDeclarationsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDeclarationsCellOpt{}, SortKItem{}}(Var'Unds'0:SortDeclarationsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclarationsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDeclarationsCellOpt(inj{DeclarationsCellOpt,KItem}(DeclarationsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDeclarationsCellOpt{}(kseq{}(inj{SortDeclarationsCellOpt{}, SortKItem{}}(VarDeclarationsCellOpt:SortDeclarationsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefinition(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDefinition{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefinition{}, SortKItem{}}(Var'Unds'1:SortDefinition{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefinition{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefinition(inj{Definition,KItem}(Definition))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefinition{}(kseq{}(inj{SortDefinition{}, SortKItem{}}(VarDefinition:SortDefinition{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefinitionCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDefinitionCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefinitionCell{}, SortKItem{}}(Var'Unds'1:SortDefinitionCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefinitionCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefinitionCell(inj{DefinitionCell,KItem}(DefinitionCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefinitionCell{}(kseq{}(inj{SortDefinitionCell{}, SortKItem{}}(VarDefinitionCell:SortDefinitionCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefinitionCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDefinitionCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefinitionCellFragment{}, SortKItem{}}(Var'Unds'0:SortDefinitionCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefinitionCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefinitionCellFragment(inj{DefinitionCellFragment,KItem}(DefinitionCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefinitionCellFragment{}(kseq{}(inj{SortDefinitionCellFragment{}, SortKItem{}}(VarDefinitionCellFragment:SortDefinitionCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefinitionCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDefinitionCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefinitionCellOpt{}, SortKItem{}}(Var'Unds'1:SortDefinitionCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefinitionCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefinitionCellOpt(inj{DefinitionCellOpt,KItem}(DefinitionCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefinitionCellOpt{}(kseq{}(inj{SortDefinitionCellOpt{}, SortKItem{}}(VarDefinitionCellOpt:SortDefinitionCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefnAttrsCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDefnAttrsCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefnAttrsCell{}, SortKItem{}}(Var'Unds'1:SortDefnAttrsCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefnAttrsCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefnAttrsCell(inj{DefnAttrsCell,KItem}(DefnAttrsCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefnAttrsCell{}(kseq{}(inj{SortDefnAttrsCell{}, SortKItem{}}(VarDefnAttrsCell:SortDefnAttrsCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDefnAttrsCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortDefnAttrsCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDefnAttrsCellOpt{}, SortKItem{}}(Var'Unds'1:SortDefnAttrsCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefnAttrsCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDefnAttrsCellOpt(inj{DefnAttrsCellOpt,KItem}(DefnAttrsCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDefnAttrsCellOpt{}(kseq{}(inj{SortDefnAttrsCellOpt{}, SortKItem{}}(VarDefnAttrsCellOpt:SortDefnAttrsCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isDollarName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortDollarName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortDollarName{}, SortKItem{}}(Var'Unds'0:SortDollarName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDollarName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isDollarName(inj{DollarName,KItem}(DollarName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisDollarName{}(kseq{}(inj{SortDollarName{}, SortKItem{}}(VarDollarName:SortDollarName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEKoreDeclaration(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEKoreDeclaration{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEKoreDeclaration{}, SortKItem{}}(Var'Unds'1:SortEKoreDeclaration{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEKoreDeclaration{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEKoreDeclaration(inj{EKoreDeclaration,KItem}(EKoreDeclaration))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEKoreDeclaration{}(kseq{}(inj{SortEKoreDeclaration{}, SortKItem{}}(VarEKoreDeclaration:SortEKoreDeclaration{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isEKoreKString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortEKoreKString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortEKoreKString{}, SortKItem{}}(Var'Unds'1:SortEKoreKString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEKoreKString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isEKoreKString(inj{EKoreKString,KItem}(EKoreKString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisEKoreKString{}(kseq{}(inj{SortEKoreKString{}, SortKItem{}}(VarEKoreKString:SortEKoreKString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExitCodeCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortExitCodeCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExitCodeCell{}, SortKItem{}}(Var'Unds'1:SortExitCodeCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExitCodeCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExitCodeCell(inj{ExitCodeCell,KItem}(ExitCodeCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExitCodeCell{}(kseq{}(inj{SortExitCodeCell{}, SortKItem{}}(VarExitCodeCell:SortExitCodeCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isExitCodeCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortExitCodeCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortExitCodeCellOpt{}, SortKItem{}}(Var'Unds'1:SortExitCodeCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExitCodeCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isExitCodeCellOpt(inj{ExitCodeCellOpt,KItem}(ExitCodeCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisExitCodeCellOpt{}(kseq{}(inj{SortExitCodeCellOpt{}, SortKItem{}}(VarExitCodeCellOpt:SortExitCodeCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isFloat(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortFloat{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortFloat{}, SortKItem{}}(Var'Unds'1:SortFloat{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isFloat(inj{Float,KItem}(Float))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisFloat{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarFloat:SortFloat{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedCounterCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedCounterCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(Var'Unds'0:SortGeneratedCounterCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedCounterCell(inj{GeneratedCounterCell,KItem}(GeneratedCounterCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarGeneratedCounterCell:SortGeneratedCounterCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortGeneratedTopCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(Var'Unds'1:SortGeneratedTopCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCell(inj{GeneratedTopCell,KItem}(GeneratedTopCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarGeneratedTopCell:SortGeneratedTopCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isGeneratedTopCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortGeneratedTopCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(Var'Unds'0:SortGeneratedTopCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isGeneratedTopCellFragment(inj{GeneratedTopCellFragment,KItem}(GeneratedTopCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisGeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarGeneratedTopCellFragment:SortGeneratedTopCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIOError(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIOError{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIOError{}, SortKItem{}}(Var'Unds'1:SortIOError{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOError{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIOError(inj{IOError,KItem}(IOError))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOError{}(kseq{}(inj{SortIOError{}, SortKItem{}}(VarIOError:SortIOError{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIOFile(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIOFile{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIOFile{}, SortKItem{}}(Var'Unds'1:SortIOFile{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOFile{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIOFile(inj{IOFile,KItem}(IOFile))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOFile{}(kseq{}(inj{SortIOFile{}, SortKItem{}}(VarIOFile:SortIOFile{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIOInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIOInt{}, SortKItem{}}(Var'Unds'1:SortIOInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIOInt(inj{IOInt,KItem}(IOInt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOInt{}(kseq{}(inj{SortIOInt{}, SortKItem{}}(VarIOInt:SortIOInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isIOString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortIOString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortIOString{}, SortKItem{}}(Var'Unds'1:SortIOString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isIOString(inj{IOString,KItem}(IOString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisIOString{}(kseq{}(inj{SortIOString{}, SortKItem{}}(VarIOString:SortIOString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isId(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortId{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortId{}, SortKItem{}}(Var'Unds'1:SortId{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisId{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isId(inj{Id,KItem}(Id))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisId{}(kseq{}(inj{SortId{}, SortKItem{}}(VarId:SortId{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isInt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortInt{}, SortKItem{}}(Var'Unds'0:SortInt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isInt(inj{Int,KItem}(Int))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisInt{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarInt:SortInt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isK(K)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisK{}(VarK:SortK{}),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKAttributesDeclaration(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKAttributesDeclaration{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKAttributesDeclaration{}, SortKItem{}}(Var'Unds'1:SortKAttributesDeclaration{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKAttributesDeclaration{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKAttributesDeclaration(inj{KAttributesDeclaration,KItem}(KAttributesDeclaration))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKAttributesDeclaration{}(kseq{}(inj{SortKAttributesDeclaration{}, SortKItem{}}(VarKAttributesDeclaration:SortKAttributesDeclaration{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCell{}, SortKItem{}}(Var'Unds'1:SortKCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCell(inj{KCell,KItem}(KCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarKCell:SortKCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKCellOpt{}, SortKItem{}}(Var'Unds'1:SortKCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKCellOpt(inj{KCellOpt,KItem}(KCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarKCellOpt:SortKCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKConfigVar(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKConfigVar{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKConfigVar{}, SortKItem{}}(Var'Unds'1:SortKConfigVar{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKConfigVar(inj{KConfigVar,KItem}(KConfigVar))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKConfigVar{}(kseq{}(inj{SortKConfigVar{}, SortKItem{}}(VarKConfigVar:SortKConfigVar{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKDefinition(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKDefinition{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKDefinition{}, SortKItem{}}(Var'Unds'1:SortKDefinition{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKDefinition{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKDefinition(inj{KDefinition,KItem}(KDefinition))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKDefinition{}(kseq{}(inj{SortKDefinition{}, SortKItem{}}(VarKDefinition:SortKDefinition{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKEY(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKEY{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKEY{}, SortKItem{}}(Var'Unds'1:SortKEY{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKEY{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKEY(inj{KEY,KItem}(KEY))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKEY{}(kseq{}(inj{SortKEY{}, SortKItem{}}(VarKEY:SortKEY{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKImport(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKImport{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKImport{}, SortKItem{}}(Var'Unds'1:SortKImport{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKImport{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKImport(inj{KImport,KItem}(KImport))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKImport{}(kseq{}(inj{SortKImport{}, SortKItem{}}(VarKImport:SortKImport{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKImportList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKImportList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKImportList{}, SortKItem{}}(Var'Unds'0:SortKImportList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKImportList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKImportList(inj{KImportList,KItem}(KImportList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKImportList{}(kseq{}(inj{SortKImportList{}, SortKItem{}}(VarKImportList:SortKImportList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(Var'Unds'0:SortKItem{},dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKItem(KItem)=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKItem{}(kseq{}(VarKItem:SortKItem{},dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKLabel2(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKLabel2{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKLabel2{}, SortKItem{}}(Var'Unds'0:SortKLabel2{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKLabel2{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKLabel2(inj{KLabel2,KItem}(KLabel2))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKLabel2{}(kseq{}(inj{SortKLabel2{}, SortKItem{}}(VarKLabel2:SortKLabel2{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKModuleName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKModuleName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKModuleName{}, SortKItem{}}(Var'Unds'0:SortKModuleName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKModuleName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKModuleName(inj{KModuleName,KItem}(KModuleName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKModuleName{}(kseq{}(inj{SortKModuleName{}, SortKItem{}}(VarKModuleName:SortKModuleName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKNeTagSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKNeTagSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKNeTagSet{}, SortKItem{}}(Var'Unds'0:SortKNeTagSet{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKNeTagSet{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKNeTagSet(inj{KNeTagSet,KItem}(KNeTagSet))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKNeTagSet{}(kseq{}(inj{SortKNeTagSet{}, SortKItem{}}(VarKNeTagSet:SortKNeTagSet{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKPrioritySeq(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKPrioritySeq{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKPrioritySeq{}, SortKItem{}}(Var'Unds'1:SortKPrioritySeq{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKPrioritySeq{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKPrioritySeq(inj{KPrioritySeq,KItem}(KPrioritySeq))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKPrioritySeq{}(kseq{}(inj{SortKPrioritySeq{}, SortKItem{}}(VarKPrioritySeq:SortKPrioritySeq{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKProduction(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKProduction{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKProduction{}, SortKItem{}}(Var'Unds'1:SortKProduction{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKProduction{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKProduction(inj{KProduction,KItem}(KProduction))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKProduction{}(kseq{}(inj{SortKProduction{}, SortKItem{}}(VarKProduction:SortKProduction{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKProductionItem(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKProductionItem{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKProductionItem{}, SortKItem{}}(Var'Unds'0:SortKProductionItem{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKProductionItem{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKProductionItem(inj{KProductionItem,KItem}(KProductionItem))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKProductionItem{}(kseq{}(inj{SortKProductionItem{}, SortKItem{}}(VarKProductionItem:SortKProductionItem{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKProductionWAttr(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKProductionWAttr{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKProductionWAttr{}, SortKItem{}}(Var'Unds'0:SortKProductionWAttr{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKProductionWAttr{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKProductionWAttr(inj{KProductionWAttr,KItem}(KProductionWAttr))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKProductionWAttr{}(kseq{}(inj{SortKProductionWAttr{}, SortKItem{}}(VarKProductionWAttr:SortKProductionWAttr{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKRequire(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKRequire{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKRequire{}, SortKItem{}}(Var'Unds'1:SortKRequire{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKRequire{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKRequire(inj{KRequire,KItem}(KRequire))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKRequire{}(kseq{}(inj{SortKRequire{}, SortKItem{}}(VarKRequire:SortKRequire{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKRequireList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKRequireList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKRequireList{}, SortKItem{}}(Var'Unds'0:SortKRequireList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKRequireList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKRequireList(inj{KRequireList,KItem}(KRequireList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKRequireList{}(kseq{}(inj{SortKRequireList{}, SortKItem{}}(VarKRequireList:SortKRequireList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKSort(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKSort{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKSort{}, SortKItem{}}(Var'Unds'1:SortKSort{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKSort{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKSort(inj{KSort,KItem}(KSort))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKSort{}(kseq{}(inj{SortKSort{}, SortKItem{}}(VarKSort:SortKSort{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKSortList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKSortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKSortList{}, SortKItem{}}(Var'Unds'1:SortKSortList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKSortList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKSortList(inj{KSortList,KItem}(KSortList))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKSortList{}(kseq{}(inj{SortKSortList{}, SortKItem{}}(VarKSortList:SortKSortList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKinkDeployedDirCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKinkDeployedDirCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKinkDeployedDirCell{}, SortKItem{}}(Var'Unds'1:SortKinkDeployedDirCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKinkDeployedDirCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKinkDeployedDirCell(inj{KinkDeployedDirCell,KItem}(KinkDeployedDirCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKinkDeployedDirCell{}(kseq{}(inj{SortKinkDeployedDirCell{}, SortKItem{}}(VarKinkDeployedDirCell:SortKinkDeployedDirCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKinkDeployedDirCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKinkDeployedDirCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKinkDeployedDirCellOpt{}, SortKItem{}}(Var'Unds'0:SortKinkDeployedDirCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKinkDeployedDirCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKinkDeployedDirCellOpt(inj{KinkDeployedDirCellOpt,KItem}(KinkDeployedDirCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKinkDeployedDirCellOpt{}(kseq{}(inj{SortKinkDeployedDirCellOpt{}, SortKItem{}}(VarKinkDeployedDirCellOpt:SortKinkDeployedDirCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKoreDeclaration(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKoreDeclaration{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKoreDeclaration{}, SortKItem{}}(Var'Unds'0:SortKoreDeclaration{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKoreDeclaration{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKoreDeclaration(inj{KoreDeclaration,KItem}(KoreDeclaration))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKoreDeclaration{}(kseq{}(inj{SortKoreDeclaration{}, SortKItem{}}(VarKoreDeclaration:SortKoreDeclaration{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKoreDefinition(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortKoreDefinition{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(Var'Unds'0:SortKoreDefinition{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKoreDefinition{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKoreDefinition(inj{KoreDefinition,KItem}(KoreDefinition))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKoreDefinition{}(kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(VarKoreDefinition:SortKoreDefinition{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isKoreString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortKoreString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortKoreString{}, SortKItem{}}(Var'Unds'1:SortKoreString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKoreString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isKoreString(inj{KoreString,KItem}(KoreString))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisKoreString{}(kseq{}(inj{SortKoreString{}, SortKItem{}}(VarKoreString:SortKoreString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isList(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortList{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortList{}, SortKItem{}}(Var'Unds'0:SortList{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isList(inj{List,KItem}(List))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisList{}(kseq{}(inj{SortList{}, SortKItem{}}(VarList:SortList{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isLowerName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortLowerName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortLowerName{}, SortKItem{}}(Var'Unds'0:SortLowerName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLowerName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isLowerName(inj{LowerName,KItem}(LowerName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisLowerName{}(kseq{}(inj{SortLowerName{}, SortKItem{}}(VarLowerName:SortLowerName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isMap(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortMap{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortMap{}, SortKItem{}}(Var'Unds'1:SortMap{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isMap(inj{Map,KItem}(Map))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisMap{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarMap:SortMap{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModCell{}, SortKItem{}}(Var'Unds'1:SortModCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModCell(inj{ModCell,KItem}(ModCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModCell{}(kseq{}(inj{SortModCell{}, SortKItem{}}(VarModCell:SortModCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModCellFragment{}, SortKItem{}}(Var'Unds'0:SortModCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModCellFragment(inj{ModCellFragment,KItem}(ModCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModCellFragment{}(kseq{}(inj{SortModCellFragment{}, SortKItem{}}(VarModCellFragment:SortModCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModCellSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModCellSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModCellSet{}, SortKItem{}}(Var'Unds'1:SortModCellSet{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModCellSet{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModCellSet(inj{ModCellSet,KItem}(ModCellSet))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModCellSet{}(kseq{}(inj{SortModCellSet{}, SortKItem{}}(VarModCellSet:SortModCellSet{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModule(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModule{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModule{}, SortKItem{}}(Var'Unds'0:SortModule{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModule{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModule(inj{Module,KItem}(Module))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModule{}(kseq{}(inj{SortModule{}, SortKItem{}}(VarModule:SortModule{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModuleName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModuleName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModuleName{}, SortKItem{}}(Var'Unds'1:SortModuleName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModuleName(inj{ModuleName,KItem}(ModuleName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModuleName{}(kseq{}(inj{SortModuleName{}, SortKItem{}}(VarModuleName:SortModuleName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModules(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortModules{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModules{}, SortKItem{}}(Var'Unds'1:SortModules{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModules{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModules(inj{Modules,KItem}(Modules))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModules{}(kseq{}(inj{SortModules{}, SortKItem{}}(VarModules:SortModules{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModulesCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModulesCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModulesCell{}, SortKItem{}}(Var'Unds'0:SortModulesCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModulesCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModulesCell(inj{ModulesCell,KItem}(ModulesCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModulesCell{}(kseq{}(inj{SortModulesCell{}, SortKItem{}}(VarModulesCell:SortModulesCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModulesCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModulesCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModulesCellFragment{}, SortKItem{}}(Var'Unds'0:SortModulesCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModulesCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModulesCellFragment(inj{ModulesCellFragment,KItem}(ModulesCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModulesCellFragment{}(kseq{}(inj{SortModulesCellFragment{}, SortKItem{}}(VarModulesCellFragment:SortModulesCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isModulesCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortModulesCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortModulesCellOpt{}, SortKItem{}}(Var'Unds'0:SortModulesCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModulesCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isModulesCellOpt(inj{ModulesCellOpt,KItem}(ModulesCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisModulesCellOpt{}(kseq{}(inj{SortModulesCellOpt{}, SortKItem{}}(VarModulesCellOpt:SortModulesCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNameCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortNameCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNameCell{}, SortKItem{}}(Var'Unds'0:SortNameCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNameCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNameCell(inj{NameCell,KItem}(NameCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNameCell{}(kseq{}(inj{SortNameCell{}, SortKItem{}}(VarNameCell:SortNameCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNameCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNameCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNameCellOpt{}, SortKItem{}}(Var'Unds'1:SortNameCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNameCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNameCellOpt(inj{NameCellOpt,KItem}(NameCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNameCellOpt{}(kseq{}(inj{SortNameCellOpt{}, SortKItem{}}(VarNameCellOpt:SortNameCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isNumbers(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortNumbers{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortNumbers{}, SortKItem{}}(Var'Unds'1:SortNumbers{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNumbers{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isNumbers(inj{Numbers,KItem}(Numbers))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisNumbers{}(kseq{}(inj{SortNumbers{}, SortKItem{}}(VarNumbers:SortNumbers{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isOptionalAttributes(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortOptionalAttributes{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortOptionalAttributes{}, SortKItem{}}(Var'Unds'1:SortOptionalAttributes{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalAttributes{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isOptionalAttributes(inj{OptionalAttributes,KItem}(OptionalAttributes))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisOptionalAttributes{}(kseq{}(inj{SortOptionalAttributes{}, SortKItem{}}(VarOptionalAttributes:SortOptionalAttributes{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isParserGeneratorCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortParserGeneratorCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortParserGeneratorCell{}, SortKItem{}}(Var'Unds'1:SortParserGeneratorCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParserGeneratorCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isParserGeneratorCell(inj{ParserGeneratorCell,KItem}(ParserGeneratorCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParserGeneratorCell{}(kseq{}(inj{SortParserGeneratorCell{}, SortKItem{}}(VarParserGeneratorCell:SortParserGeneratorCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isParserGeneratorCellFragment(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortParserGeneratorCellFragment{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortParserGeneratorCellFragment{}, SortKItem{}}(Var'Unds'1:SortParserGeneratorCellFragment{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParserGeneratorCellFragment{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isParserGeneratorCellFragment(inj{ParserGeneratorCellFragment,KItem}(ParserGeneratorCellFragment))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParserGeneratorCellFragment{}(kseq{}(inj{SortParserGeneratorCellFragment{}, SortKItem{}}(VarParserGeneratorCellFragment:SortParserGeneratorCellFragment{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isParserGeneratorCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortParserGeneratorCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortParserGeneratorCellOpt{}, SortKItem{}}(Var'Unds'1:SortParserGeneratorCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParserGeneratorCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isParserGeneratorCellOpt(inj{ParserGeneratorCellOpt,KItem}(ParserGeneratorCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisParserGeneratorCellOpt{}(kseq{}(inj{SortParserGeneratorCellOpt{}, SortKItem{}}(VarParserGeneratorCellOpt:SortParserGeneratorCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPath(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPath{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPath{}, SortKItem{}}(Var'Unds'1:SortPath{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPath{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPath(inj{Path,KItem}(Path))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPath{}(kseq{}(inj{SortPath{}, SortKItem{}}(VarPath:SortPath{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPattern(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPattern{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPattern{}, SortKItem{}}(Var'Unds'1:SortPattern{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPattern{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPattern(inj{Pattern,KItem}(Pattern))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPattern{}(kseq{}(inj{SortPattern{}, SortKItem{}}(VarPattern:SortPattern{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPatterns(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPatterns{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPatterns{}, SortKItem{}}(Var'Unds'1:SortPatterns{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPatterns{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPatterns(inj{Patterns,KItem}(Patterns))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPatterns{}(kseq{}(inj{SortPatterns{}, SortKItem{}}(VarPatterns:SortPatterns{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPgm(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortPgm{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPgm{}, SortKItem{}}(Var'Unds'0:SortPgm{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPgm{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPgm(inj{Pgm,KItem}(Pgm))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPgm{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarPgm:SortPgm{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPrgGrammarCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPrgGrammarCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPrgGrammarCell{}, SortKItem{}}(Var'Unds'1:SortPrgGrammarCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPrgGrammarCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPrgGrammarCell(inj{PrgGrammarCell,KItem}(PrgGrammarCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPrgGrammarCell{}(kseq{}(inj{SortPrgGrammarCell{}, SortKItem{}}(VarPrgGrammarCell:SortPrgGrammarCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPrgGrammarCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPrgGrammarCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPrgGrammarCellOpt{}, SortKItem{}}(Var'Unds'1:SortPrgGrammarCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPrgGrammarCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPrgGrammarCellOpt(inj{PrgGrammarCellOpt,KItem}(PrgGrammarCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPrgGrammarCellOpt{}(kseq{}(inj{SortPrgGrammarCellOpt{}, SortKItem{}}(VarPrgGrammarCellOpt:SortPrgGrammarCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isPrioritySeqBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortPrioritySeqBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortPrioritySeqBlock{}, SortKItem{}}(Var'Unds'1:SortPrioritySeqBlock{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPrioritySeqBlock{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isPrioritySeqBlock(inj{PrioritySeqBlock,KItem}(PrioritySeqBlock))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisPrioritySeqBlock{}(kseq{}(inj{SortPrioritySeqBlock{}, SortKItem{}}(VarPrioritySeqBlock:SortPrioritySeqBlock{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isProdBlock(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortProdBlock{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortProdBlock{}, SortKItem{}}(Var'Unds'0:SortProdBlock{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisProdBlock{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isProdBlock(inj{ProdBlock,KItem}(ProdBlock))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisProdBlock{}(kseq{}(inj{SortProdBlock{}, SortKItem{}}(VarProdBlock:SortProdBlock{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isRuleContents(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortRuleContents{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortRuleContents{}, SortKItem{}}(Var'Unds'0:SortRuleContents{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisRuleContents{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isRuleContents(inj{RuleContents,KItem}(RuleContents))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisRuleContents{}(kseq{}(inj{SortRuleContents{}, SortKItem{}}(VarRuleContents:SortRuleContents{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isRuleGrammarCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortRuleGrammarCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortRuleGrammarCell{}, SortKItem{}}(Var'Unds'0:SortRuleGrammarCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisRuleGrammarCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isRuleGrammarCell(inj{RuleGrammarCell,KItem}(RuleGrammarCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisRuleGrammarCell{}(kseq{}(inj{SortRuleGrammarCell{}, SortKItem{}}(VarRuleGrammarCell:SortRuleGrammarCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isRuleGrammarCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortRuleGrammarCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortRuleGrammarCellOpt{}, SortKItem{}}(Var'Unds'1:SortRuleGrammarCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisRuleGrammarCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isRuleGrammarCellOpt(inj{RuleGrammarCellOpt,KItem}(RuleGrammarCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisRuleGrammarCellOpt{}(kseq{}(inj{SortRuleGrammarCellOpt{}, SortKItem{}}(VarRuleGrammarCellOpt:SortRuleGrammarCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSCell(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortSCell{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSCell{}, SortKItem{}}(Var'Unds'0:SortSCell{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSCell{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSCell(inj{SCell,KItem}(SCell))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSCell{}(kseq{}(inj{SortSCell{}, SortKItem{}}(VarSCell:SortSCell{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSCellOpt(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSCellOpt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSCellOpt{}, SortKItem{}}(Var'Unds'1:SortSCellOpt{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSCellOpt{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSCellOpt(inj{SCellOpt,KItem}(SCellOpt))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSCellOpt{}(kseq{}(inj{SortSCellOpt{}, SortKItem{}}(VarSCellOpt:SortSCellOpt{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSet(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSet{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSet{}, SortKItem{}}(Var'Unds'1:SortSet{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSet(inj{Set,KItem}(Set))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSet{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarSet:SortSet{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSort(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortSort{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSort{}, SortKItem{}}(Var'Unds'0:SortSort{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSort{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSort(inj{Sort,KItem}(Sort))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSort{}(kseq{}(inj{SortSort{}, SortKItem{}}(VarSort:SortSort{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSortName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortSortName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSortName{}, SortKItem{}}(Var'Unds'0:SortSortName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSortName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSortName(inj{SortName,KItem}(SortName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSortName{}(kseq{}(inj{SortSortName{}, SortKItem{}}(VarSortName:SortSortName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSorts(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSorts{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSorts{}, SortKItem{}}(Var'Unds'1:SortSorts{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSorts{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSorts(inj{Sorts,KItem}(Sorts))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSorts{}(kseq{}(inj{SortSorts{}, SortKItem{}}(VarSorts:SortSorts{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStrategy(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortStrategy{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStrategy{}, SortKItem{}}(Var'Unds'1:SortStrategy{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStrategy{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStrategy(inj{Strategy,KItem}(Strategy))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStrategy{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(VarStrategy:SortStrategy{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isStream(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortStream{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortStream{}, SortKItem{}}(Var'Unds'0:SortStream{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStream{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isStream(inj{Stream,KItem}(Stream))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisStream{}(kseq{}(inj{SortStream{}, SortKItem{}}(VarStream:SortStream{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isString(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortString{}, SortKItem{}}(Var'Unds'1:SortString{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isString(inj{String,KItem}(String))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisString{}(kseq{}(inj{SortString{}, SortKItem{}}(VarString:SortString{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `isSubsorted(_,_,_)_DISAMBIGUATE_Bool_Sort_Sort_Set`(S1,S2,S)=>`Set:in`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(inj{Sort,KItem}(S1),inj{Sort,KItem}(S2)),S) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0c75eb1954cc4961f35779bd225caaf9866f214dd454604f7bc46a2d0f63a32e) contentStartColumn(8) contentStartLine(67) org.kframework.attributes.Location(Location(67,8,67,51)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSubsorted'LParUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Bool'Unds'Sort'Unds'Sort'Unds'Set{}(VarS1:SortSort{},VarS2:SortSort{},VarS:SortSet{}),
        LblSet'Coln'in{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(inj{SortSort{}, SortKItem{}}(VarS1:SortSort{}),inj{SortSort{}, SortKItem{}}(VarS2:SortSort{})),VarS:SortSet{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("67"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,8,67,51)"), UNIQUE'Unds'ID{}("0c75eb1954cc4961f35779bd225caaf9866f214dd454604f7bc46a2d0f63a32e")]

// rule `isSubsortedEq(_,_,_)_DISAMBIGUATE_Bool_Sort_Sort_Set`(S1,S2,S)=>`_orBool__BOOL_Bool_Bool_Bool`(`_==K_`(inj{Sort,KItem}(S1),inj{Sort,KItem}(S2)),`isSubsorted(_,_,_)_DISAMBIGUATE_Bool_Sort_Sort_Set`(S1,S2,S)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(0e4755b9505d9843e1c245cfd7697311ca8153f59d90f72b49463fdc9f809b6a) contentStartColumn(8) contentStartLine(68) org.kframework.attributes.Location(Location(68,8,68,75)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSubsortedEq'LParUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Bool'Unds'Sort'Unds'Sort'Unds'Set{}(VarS1:SortSort{},VarS2:SortSort{},VarS:SortSet{}),
        Lbl'Unds'orBool'UndsUnds'BOOL'Unds'Bool'Unds'Bool'Unds'Bool{}(Lbl'UndsEqlsEqls'K'Unds'{}(kseq{}(inj{SortSort{}, SortKItem{}}(VarS1:SortSort{}),dotk{}()),kseq{}(inj{SortSort{}, SortKItem{}}(VarS2:SortSort{}),dotk{}())),LblisSubsorted'LParUndsCommUndsCommUndsRParUnds'DISAMBIGUATE'Unds'Bool'Unds'Sort'Unds'Sort'Unds'Set{}(VarS1:SortSort{},VarS2:SortSort{},VarS:SortSet{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("68"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,8,68,75)"), UNIQUE'Unds'ID{}("0e4755b9505d9843e1c245cfd7697311ca8153f59d90f72b49463fdc9f809b6a")]

// rule isSymbol(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortSymbol{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSymbol{}, SortKItem{}}(Var'Unds'0:SortSymbol{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSymbol{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSymbol(inj{Symbol,KItem}(Symbol))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSymbol{}(kseq{}(inj{SortSymbol{}, SortKItem{}}(VarSymbol:SortSymbol{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSymbolName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortSymbolName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSymbolName{}, SortKItem{}}(Var'Unds'1:SortSymbolName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSymbolName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSymbolName(inj{SymbolName,KItem}(SymbolName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSymbolName{}(kseq{}(inj{SortSymbolName{}, SortKItem{}}(VarSymbolName:SortSymbolName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isSyntaxDeclaration(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortSyntaxDeclaration{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(Var'Unds'0:SortSyntaxDeclaration{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSyntaxDeclaration{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isSyntaxDeclaration(inj{SyntaxDeclaration,KItem}(SyntaxDeclaration))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisSyntaxDeclaration{}(kseq{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(VarSyntaxDeclaration:SortSyntaxDeclaration{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTag(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTag{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTag{}, SortKItem{}}(Var'Unds'0:SortTag{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTag{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTag(inj{Tag,KItem}(Tag))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTag{}(kseq{}(inj{SortTag{}, SortKItem{}}(VarTag:SortTag{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTagContent(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortTagContent{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTagContent{}, SortKItem{}}(Var'Unds'1:SortTagContent{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTagContent{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTagContent(inj{TagContent,KItem}(TagContent))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTagContent{}(kseq{}(inj{SortTagContent{}, SortKItem{}}(VarTagContent:SortTagContent{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isTagContents(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortTagContents{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortTagContents{}, SortKItem{}}(Var'Unds'0:SortTagContents{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTagContents{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isTagContents(inj{TagContents,KItem}(TagContents))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisTagContents{}(kseq{}(inj{SortTagContents{}, SortKItem{}}(VarTagContents:SortTagContents{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isUpperName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortUpperName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortUpperName{}, SortKItem{}}(Var'Unds'0:SortUpperName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisUpperName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isUpperName(inj{UpperName,KItem}(UpperName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisUpperName{}(kseq{}(inj{SortUpperName{}, SortKItem{}}(VarUpperName:SortUpperName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVarName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortVarName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVarName{}, SortKItem{}}(Var'Unds'1:SortVarName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVarName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVarName(inj{VarName,KItem}(VarName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVarName{}(kseq{}(inj{SortVarName{}, SortKItem{}}(VarVarName:SortVarName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVariable(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortVariable{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVariable{}, SortKItem{}}(Var'Unds'0:SortVariable{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVariable{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVariable(inj{Variable,KItem}(Variable))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVariable{}(kseq{}(inj{SortVariable{}, SortKItem{}}(VarVariable:SortVariable{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule isVariableName(K)=>#token("false","Bool") requires #token("true","Bool") ensures #token("true","Bool") [owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'0:SortVariableName{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    VarK:SortK{},
                    kseq{}(inj{SortVariableName{}, SortKItem{}}(Var'Unds'0:SortVariableName{}),dotk{}())
                )),
                \top{R} ()
              )
          )),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVariableName{}(VarK:SortK{}),
        \dv{SortBool{}}("false")),
      \top{R}()))
  [owise{}()]

// rule isVariableName(inj{VariableName,KItem}(VariableName))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") []
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblisVariableName{}(kseq{}(inj{SortVariableName{}, SortKItem{}}(VarVariableName:SortVariableName{}),dotk{}())),
        \dv{SortBool{}}("true")),
      \top{R}()))
  []

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I1 requires `_<=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(38650d96d25c007c33eb715dd4181e4a42c220f5e5176d70f1681d38a912778c) contentStartColumn(8) contentStartLine(475) org.kframework.attributes.Location(Location(475,8,475,57)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI1:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("475"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(475,8,475,57)"), UNIQUE'Unds'ID{}("38650d96d25c007c33eb715dd4181e4a42c220f5e5176d70f1681d38a912778c")]

// rule `minInt(_,_)_INT-COMMON_Int_Int_Int`(I1,I2)=>I2 requires `_>=Int_`(I1,I2) ensures #token("true","Bool") [UNIQUE_ID(ed79be21493dc628c839ab8c3af1a0a402499df0f71a6d5566fdf35fdd7b16c4) contentStartColumn(8) contentStartLine(476) org.kframework.attributes.Location(Location(476,8,476,57)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(VarI1:SortInt{},VarI2:SortInt{}),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblminInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(VarI1:SortInt{},VarI2:SortInt{}),
        VarI2:SortInt{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("476"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(476,8,476,57)"), UNIQUE'Unds'ID{}("ed79be21493dc628c839ab8c3af1a0a402499df0f71a6d5566fdf35fdd7b16c4")]

// rule `noCastSortsInit_PARSER-GEN-HELPERS_Set`(.KList)=>`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"Cell\"","String")))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"CellName\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"CellProperties\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"CellProperty\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KConfigVar\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KLabel\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KList\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KString\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KVariable\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"Layout\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"RuleBody\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"RuleContent\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"OptionalDots\"","String"))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(83447bba0985e6aea49f1397569bdee8e870029083271ac3754422300e6e4e6d) contentStartColumn(8) contentStartLine(13) org.kframework.attributes.Location(Location(13,8,26,50)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        LblnoCastSortsInit'Unds'PARSER-GEN-HELPERS'Unds'Set{}(),
        Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("Cell")))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("CellName"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("CellProperties"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("CellProperty"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KConfigVar"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KLabel"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KList"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KString"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KVariable"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("Layout"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("RuleBody"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("RuleContent"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("OptionalDots")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("13"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,8,26,50)"), UNIQUE'Unds'ID{}("83447bba0985e6aea49f1397569bdee8e870029083271ac3754422300e6e4e6d")]

// rule `noLatticeSortsInit_PARSER-GEN-HELPERS_Set`(.KList)=>`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`_Set_`(`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"Cell\"","String")))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"CellName\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"CellProperties\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"CellProperty\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"K\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KBott\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KConfigVar\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KLabel\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KList\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KString\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"KVariable\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"Layout\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"RuleBody\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"RuleContent\"","String"))))),`SetItem`(inj{UpperName,KItem}(`String2UpperName(_)_PARSER-GEN-HELPERS_UpperName_String`(#token("\"OptionalDots\"","String"))))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(49d5da0891950a486297d85d227326ed432e8cce9a6f91f0d598458478b0cd70) contentStartColumn(8) contentStartLine(28) org.kframework.attributes.Location(Location(28,8,43,50)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-gen.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        LblnoLatticeSortsInit'Unds'PARSER-GEN-HELPERS'Unds'Set{}(),
        Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("Cell")))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("CellName"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("CellProperties"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("CellProperty"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("K"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KBott"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KConfigVar"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KLabel"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KList"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KString"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("KVariable"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("Layout"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("RuleBody"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("RuleContent"))))),LblSetItem{}(inj{SortUpperName{}, SortKItem{}}(LblString2UpperName'LParUndsRParUnds'PARSER-GEN-HELPERS'Unds'UpperName'Unds'String{}(\dv{SortString{}}("OptionalDots")))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-gen.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("28"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(28,8,43,50)"), UNIQUE'Unds'ID{}("49d5da0891950a486297d85d227326ed432e8cce9a6f91f0d598458478b0cd70")]

// rule `notBool_`(#token("true","Bool") #as _1)=>#token("false","Bool") requires _1 ensures _1 [UNIQUE_ID(de18dba5cb1b6e56941a63279edb1d16da29d7a997a3e82cbc2b81b066eadf47) contentStartColumn(8) contentStartLine(327) org.kframework.attributes.Location(Location(327,8,327,29)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\and{SortBool{}}(\dv{SortBool{}}("true"),Var'Unds'1:SortBool{})),
        \dv{SortBool{}}("false")),
      \equals{SortBool{},R}(
        Var'Unds'1:SortBool{},
        \dv{SortBool{}}("true"))))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("327"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(327,8,327,29)"), UNIQUE'Unds'ID{}("de18dba5cb1b6e56941a63279edb1d16da29d7a997a3e82cbc2b81b066eadf47")]

// rule `notBool_`(#token("false","Bool"))=>#token("true","Bool") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(dbe4d83961158619e994f90623f08be11020d80c56685ef1ec2dd2b15760c474) contentStartColumn(8) contentStartLine(328) org.kframework.attributes.Location(Location(328,8,328,29)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        LblnotBool'Unds'{}(\dv{SortBool{}}("false")),
        \dv{SortBool{}}("true")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("328"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(328,8,328,29)"), UNIQUE'Unds'ID{}("dbe4d83961158619e994f90623f08be11020d80c56685ef1ec2dd2b15760c474")]

// rule `parseEKore(_)_PARSER-UTIL_KItem_String`(S,`<generatedTop>`(_0,_1,_2,_3,_4,`<kinkDeployedDir>`(DEPLOY_DIR)) #as _Configuration)=>`doParseKAST(_)_PARSER-UTIL_KItem_K`(`parseHelper(module=_,grammarFile=_,start=_,input=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_KItem_String`(#token("\"EKORE-SYNTAX\"","String"),inj{String,IOString}(`_+String__STRING_String_String_String`(DEPLOY_DIR,#token("\"/src/ekore.k\"","String"))),#token("\"Definition\"","String"),inj{String,KItem}(S),#token("\"kore\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(a20cf098db286cf25425e4224949abb64bab446a3b00c5b8449ac7c8230c22be) contentStartColumn(8) contentStartLine(24) org.kframework.attributes.Location(Location(24,8,32,55)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblparseEKore'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(VarS:SortString{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'0:SortKCell{},Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Var'Unds'3:SortSCell{},Var'Unds'4:SortGeneratedCounterCell{},Lbl'-LT-'kinkDeployedDir'-GT-'{}(VarDEPLOY'Unds'DIR:SortString{})),Var'Unds'Configuration:SortGeneratedTopCell{})),
        LbldoParseKAST'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'K{}(kseq{}(LblparseHelper'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'input'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'KItem'Unds'String{}(\dv{SortString{}}("EKORE-SYNTAX"),inj{SortString{}, SortIOString{}}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarDEPLOY'Unds'DIR:SortString{},\dv{SortString{}}("/src/ekore.k"))),\dv{SortString{}}("Definition"),inj{SortString{}, SortKItem{}}(VarS:SortString{}),\dv{SortString{}}("kore")),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("24"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(24,8,32,55)"), UNIQUE'Unds'ID{}("a20cf098db286cf25425e4224949abb64bab446a3b00c5b8449ac7c8230c22be")]

// rule `parseHelper(module=_,grammarFile=_,start=_,input=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_KItem_String`(MOD,GRAMMAR,START,inj{String,KItem}(INPUT),OUTPUT)=>`parseHelper1(module=_,grammarFile=_,start=_,inputFile=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_IOString_String`(MOD,GRAMMAR,START,`saveToTempFile(_,_)_FILE-UTIL_IOString_String_String`(INPUT,#token("\"/tmp/parseHelperXXXXXX\"","String")),OUTPUT) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(e6b6b6bfe9e21209bed0d9f0c2b325564f8b61d0122391b9ebe6979bc4bb19c2) contentStartColumn(8) contentStartLine(62) org.kframework.attributes.Location(Location(62,8,66,21)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblparseHelper'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'input'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'KItem'Unds'String{}(VarMOD:SortString{},VarGRAMMAR:SortIOString{},VarSTART:SortString{},inj{SortString{}, SortKItem{}}(VarINPUT:SortString{}),VarOUTPUT:SortString{}),
        LblparseHelper1'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'inputFile'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'IOString'Unds'String{}(VarMOD:SortString{},VarGRAMMAR:SortIOString{},VarSTART:SortString{},LblsaveToTempFile'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'String'Unds'String{}(VarINPUT:SortString{},\dv{SortString{}}("/tmp/parseHelperXXXXXX")),VarOUTPUT:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("62"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(62,8,66,21)"), UNIQUE'Unds'ID{}("e6b6b6bfe9e21209bed0d9f0c2b325564f8b61d0122391b9ebe6979bc4bb19c2")]

// rule `parseHelper1(module=_,grammarFile=_,start=_,inputFile=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_IOString_String`(MOD,inj{String,IOString}(GRAMMAR),START,inj{String,IOString}(INPUTFILE),OUTPUT)=>`parseHelper2(_)_PARSER-UTIL_KItem_KItem`(`#system(_)_K-IO_KItem_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(#token("\"k-light2k5.sh --output \"","String"),OUTPUT),#token("\" --module \"","String")),MOD),#token("\" \"","String")),GRAMMAR),#token("\" \"","String")),START),#token("\" \"","String")),INPUTFILE))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(818ba9ecc296699776186f1d0eff4af7d90655747c94b0087ed50deae61a9d94) contentStartColumn(8) contentStartLine(69) org.kframework.attributes.Location(Location(69,8,75,29)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblparseHelper1'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'inputFile'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'IOString'Unds'String{}(VarMOD:SortString{},inj{SortString{}, SortIOString{}}(VarGRAMMAR:SortString{}),VarSTART:SortString{},inj{SortString{}, SortIOString{}}(VarINPUTFILE:SortString{}),VarOUTPUT:SortString{}),
        LblparseHelper2'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'KItem{}(Lbl'Hash'system'LParUndsRParUnds'K-IO'Unds'KItem'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("k-light2k5.sh --output "),VarOUTPUT:SortString{}),\dv{SortString{}}(" --module ")),VarMOD:SortString{}),\dv{SortString{}}(" ")),VarGRAMMAR:SortString{}),\dv{SortString{}}(" ")),VarSTART:SortString{}),\dv{SortString{}}(" ")),VarINPUTFILE:SortString{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("69"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(69,8,75,29)"), UNIQUE'Unds'ID{}("818ba9ecc296699776186f1d0eff4af7d90655747c94b0087ed50deae61a9d94")]

// rule `parseHelper1(module=_,grammarFile=_,start=_,inputFile=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_IOString_String`(_0,_1,_2,inj{IOError,IOString}(E),_3)=>inj{IOError,KItem}(E) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d812a039a790aa4cb4b20445ced4f9862e7ab220383f2aa55c17e90151b8a6eb) contentStartColumn(8) contentStartLine(67) org.kframework.attributes.Location(Location(67,8,68,9)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblparseHelper1'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'inputFile'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'IOString'Unds'String{}(Var'Unds'0:SortString{},Var'Unds'1:SortIOString{},Var'Unds'2:SortString{},inj{SortIOError{}, SortIOString{}}(VarE:SortIOError{}),Var'Unds'3:SortString{}),
        inj{SortIOError{}, SortKItem{}}(VarE:SortIOError{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("67"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(67,8,68,9)"), UNIQUE'Unds'ID{}("d812a039a790aa4cb4b20445ced4f9862e7ab220383f2aa55c17e90151b8a6eb")]

// rule `parseHelper2(_)_PARSER-UTIL_KItem_KItem`(#systemResult(#token("0","Int"),STDOUT,_0))=>inj{String,KItem}(STDOUT) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(85347638ef78534d5a02a957849b06a67bcbab75ace6cb18ebbe07c04ff07197) contentStartColumn(8) contentStartLine(76) org.kframework.attributes.Location(Location(76,8,77,14)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblparseHelper2'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'KItem{}(Lbl'Hash'systemResult{}(\dv{SortInt{}}("0"),VarSTDOUT:SortString{},Var'Unds'0:SortString{})),
        inj{SortString{}, SortKItem{}}(VarSTDOUT:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("76"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(76,8,77,14)"), UNIQUE'Unds'ID{}("85347638ef78534d5a02a957849b06a67bcbab75ace6cb18ebbe07c04ff07197")]

// rule `parseOuter(_)_PARSER-UTIL_KItem_String`(S,`<generatedTop>`(_0,_1,_2,_3,_4,`<kinkDeployedDir>`(DEPLOY_DIR)) #as _Configuration)=>`doParseKAST(_)_PARSER-UTIL_KItem_K`(`parseHelper(module=_,grammarFile=_,start=_,input=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_KItem_String`(#token("\"OUTER-SYNTAX\"","String"),inj{String,IOString}(`_+String__STRING_String_String_String`(DEPLOY_DIR,#token("\"/src/ekore.k\"","String"))),#token("\"Definition\"","String"),inj{String,KItem}(S),#token("\"kore\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(1d52d7a91498116dc99b6131bc82c81506f946ad09085c7725b8971033a80273) contentStartColumn(8) contentStartLine(13) org.kframework.attributes.Location(Location(13,8,21,55)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblparseOuter'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(VarS:SortString{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'0:SortKCell{},Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Var'Unds'3:SortSCell{},Var'Unds'4:SortGeneratedCounterCell{},Lbl'-LT-'kinkDeployedDir'-GT-'{}(VarDEPLOY'Unds'DIR:SortString{})),Var'Unds'Configuration:SortGeneratedTopCell{})),
        LbldoParseKAST'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'K{}(kseq{}(LblparseHelper'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'input'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'KItem'Unds'String{}(\dv{SortString{}}("OUTER-SYNTAX"),inj{SortString{}, SortIOString{}}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarDEPLOY'Unds'DIR:SortString{},\dv{SortString{}}("/src/ekore.k"))),\dv{SortString{}}("Definition"),inj{SortString{}, SortKItem{}}(VarS:SortString{}),\dv{SortString{}}("kore")),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("13"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(13,8,21,55)"), UNIQUE'Unds'ID{}("1d52d7a91498116dc99b6131bc82c81506f946ad09085c7725b8971033a80273")]

// rule `parseSymbolName(_)_PARSER-UTIL_KItem_String`(S,`<generatedTop>`(_0,_1,_2,_3,_4,`<kinkDeployedDir>`(DEPLOY_DIR)) #as _Configuration)=>`doParseKAST(_)_PARSER-UTIL_KItem_K`(`parseHelper(module=_,grammarFile=_,start=_,input=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_KItem_String`(#token("\"EKORE-SYNTAX\"","String"),inj{String,IOString}(`_+String__STRING_String_String_String`(DEPLOY_DIR,#token("\"/src/ekore.k\"","String"))),#token("\"SymbolName\"","String"),inj{String,KItem}(S),#token("\"kore\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(139608a116c59b3675f25991b0ebd1d8a9de4994e6d7d0675c8415484e76aa38) contentStartColumn(8) contentStartLine(35) org.kframework.attributes.Location(Location(35,8,43,55)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblparseSymbolName'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String{}(VarS:SortString{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'0:SortKCell{},Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Var'Unds'3:SortSCell{},Var'Unds'4:SortGeneratedCounterCell{},Lbl'-LT-'kinkDeployedDir'-GT-'{}(VarDEPLOY'Unds'DIR:SortString{})),Var'Unds'Configuration:SortGeneratedTopCell{})),
        LbldoParseKAST'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'K{}(kseq{}(LblparseHelper'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'input'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'KItem'Unds'String{}(\dv{SortString{}}("EKORE-SYNTAX"),inj{SortString{}, SortIOString{}}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarDEPLOY'Unds'DIR:SortString{},\dv{SortString{}}("/src/ekore.k"))),\dv{SortString{}}("SymbolName"),inj{SortString{}, SortKItem{}}(VarS:SortString{}),\dv{SortString{}}("kore")),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("35"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(35,8,43,55)"), UNIQUE'Unds'ID{}("139608a116c59b3675f25991b0ebd1d8a9de4994e6d7d0675c8415484e76aa38")]

// rule `parseWithProductions(_,_,_)_PARSER-UTIL_KItem_Set_String_String`(GRAMMAR,START,INPUT,`<generatedTop>`(_0,_1,_2,_3,_4,`<kinkDeployedDir>`(DEPLOY_DIR)) #as _Configuration)=>`doParseKAST(_)_PARSER-UTIL_KItem_K`(`parseHelper(module=_,grammarFile=_,start=_,input=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_KItem_String`(#token("\"KORE-SYNTAX\"","String"),inj{String,IOString}(`_+String__STRING_String_String_String`(DEPLOY_DIR,#token("\"/src/kore.k\"","String"))),#token("\"Pattern\"","String"),`parseHelper(module=_,grammarFile=_,start=_,input=_,output=_)_PARSER-UTIL_KItem_String_IOString_String_KItem_String`(#token("\"LANGUAGE-GRAMMAR\"","String"),`saveToTempFile(_,_)_FILE-UTIL_IOString_String_String`(`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(#token("\"module LANGUAGE-GRAMMAR\\n\"","String"),`grammarToString(_)_PARSER-UTIL_String_Set`(GRAMMAR)),#token("\"endmodule\"","String")),#token("\"/tmp/parseKASTXXXXXXXX\"","String")),START,inj{String,KItem}(INPUT),#token("\"kore\"","String")),#token("\"kore\"","String"))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(777860669c155466f1b392d7a29621f7b7568a098598cc4e5f4518ffebd63156) contentStartColumn(8) contentStartLine(83) org.kframework.attributes.Location(Location(83,8,99,55)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        LblparseWithProductions'LParUndsCommUndsCommUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'Set'Unds'String'Unds'String{}(VarGRAMMAR:SortSet{},VarSTART:SortString{},VarINPUT:SortString{},\and{SortGeneratedTopCell{}}(Lbl'-LT-'generatedTop'-GT-'{}(Var'Unds'0:SortKCell{},Var'Unds'1:SortDefinitionCell{},Var'Unds'2:SortExitCodeCell{},Var'Unds'3:SortSCell{},Var'Unds'4:SortGeneratedCounterCell{},Lbl'-LT-'kinkDeployedDir'-GT-'{}(VarDEPLOY'Unds'DIR:SortString{})),Var'Unds'Configuration:SortGeneratedTopCell{})),
        LbldoParseKAST'LParUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'K{}(kseq{}(LblparseHelper'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'input'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'KItem'Unds'String{}(\dv{SortString{}}("KORE-SYNTAX"),inj{SortString{}, SortIOString{}}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarDEPLOY'Unds'DIR:SortString{},\dv{SortString{}}("/src/kore.k"))),\dv{SortString{}}("Pattern"),LblparseHelper'LPar'module'EqlsUndsComm'grammarFile'EqlsUndsComm'start'EqlsUndsComm'input'EqlsUndsComm'output'EqlsUndsRParUnds'PARSER-UTIL'Unds'KItem'Unds'String'Unds'IOString'Unds'String'Unds'KItem'Unds'String{}(\dv{SortString{}}("LANGUAGE-GRAMMAR"),LblsaveToTempFile'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(\dv{SortString{}}("module LANGUAGE-GRAMMAR\n"),LblgrammarToString'LParUndsRParUnds'PARSER-UTIL'Unds'String'Unds'Set{}(VarGRAMMAR:SortSet{})),\dv{SortString{}}("endmodule")),\dv{SortString{}}("/tmp/parseKASTXXXXXXXX")),VarSTART:SortString{},inj{SortString{}, SortKItem{}}(VarINPUT:SortString{}),\dv{SortString{}}("kore")),\dv{SortString{}}("kore")),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("83"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(83,8,99,55)"), UNIQUE'Unds'ID{}("777860669c155466f1b392d7a29621f7b7568a098598cc4e5f4518ffebd63156")]

// rule `project:Any`(inj{Any,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAny{},R} (
        Lblproject'Coln'Any{}(kseq{}(inj{SortAny{}, SortKItem{}}(VarK:SortAny{}),dotk{}())),
        VarK:SortAny{}),
      \top{R}()))
  [projection{}()]

// rule `project:AssocAttribute`(inj{AssocAttribute,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAssocAttribute{},R} (
        Lblproject'Coln'AssocAttribute{}(kseq{}(inj{SortAssocAttribute{}, SortKItem{}}(VarK:SortAssocAttribute{}),dotk{}())),
        VarK:SortAssocAttribute{}),
      \top{R}()))
  [projection{}()]

// rule `project:Attr`(inj{Attr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAttr{},R} (
        Lblproject'Coln'Attr{}(kseq{}(inj{SortAttr{}, SortKItem{}}(VarK:SortAttr{}),dotk{}())),
        VarK:SortAttr{}),
      \top{R}()))
  [projection{}()]

// rule `project:AttrList`(inj{AttrList,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAttrList{},R} (
        Lblproject'Coln'AttrList{}(kseq{}(inj{SortAttrList{}, SortKItem{}}(VarK:SortAttrList{}),dotk{}())),
        VarK:SortAttrList{}),
      \top{R}()))
  [projection{}()]

// rule `project:Attribute`(inj{Attribute,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAttribute{},R} (
        Lblproject'Coln'Attribute{}(kseq{}(inj{SortAttribute{}, SortKItem{}}(VarK:SortAttribute{}),dotk{}())),
        VarK:SortAttribute{}),
      \top{R}()))
  [projection{}()]

// rule `project:AttributesCell`(inj{AttributesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAttributesCell{},R} (
        Lblproject'Coln'AttributesCell{}(kseq{}(inj{SortAttributesCell{}, SortKItem{}}(VarK:SortAttributesCell{}),dotk{}())),
        VarK:SortAttributesCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:AttributesCellOpt`(inj{AttributesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortAttributesCellOpt{},R} (
        Lblproject'Coln'AttributesCellOpt{}(kseq{}(inj{SortAttributesCellOpt{}, SortKItem{}}(VarK:SortAttributesCellOpt{}),dotk{}())),
        VarK:SortAttributesCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:BacktickName`(inj{BacktickName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBacktickName{},R} (
        Lblproject'Coln'BacktickName{}(kseq{}(inj{SortBacktickName{}, SortKItem{}}(VarK:SortBacktickName{}),dotk{}())),
        VarK:SortBacktickName{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bool`(inj{Bool,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBool{},R} (
        Lblproject'Coln'Bool{}(kseq{}(inj{SortBool{}, SortKItem{}}(VarK:SortBool{}),dotk{}())),
        VarK:SortBool{}),
      \top{R}()))
  [projection{}()]

// rule `project:Bubble`(inj{Bubble,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBubble{},R} (
        Lblproject'Coln'Bubble{}(kseq{}(inj{SortBubble{}, SortKItem{}}(VarK:SortBubble{}),dotk{}())),
        VarK:SortBubble{}),
      \top{R}()))
  [projection{}()]

// rule `project:BubbleItem`(inj{BubbleItem,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBubbleItem{},R} (
        Lblproject'Coln'BubbleItem{}(kseq{}(inj{SortBubbleItem{}, SortKItem{}}(VarK:SortBubbleItem{}),dotk{}())),
        VarK:SortBubbleItem{}),
      \top{R}()))
  [projection{}()]

// rule `project:BubbleWithAttr`(inj{BubbleWithAttr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortBubbleWithAttr{},R} (
        Lblproject'Coln'BubbleWithAttr{}(kseq{}(inj{SortBubbleWithAttr{}, SortKItem{}}(VarK:SortBubbleWithAttr{}),dotk{}())),
        VarK:SortBubbleWithAttr{}),
      \top{R}()))
  [projection{}()]

// rule `project:Cell`(inj{Cell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCell{},R} (
        Lblproject'Coln'Cell{}(kseq{}(inj{SortCell{}, SortKItem{}}(VarK:SortCell{}),dotk{}())),
        VarK:SortCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CellNameCell`(inj{CellNameCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCellNameCell{},R} (
        Lblproject'Coln'CellNameCell{}(kseq{}(inj{SortCellNameCell{}, SortKItem{}}(VarK:SortCellNameCell{}),dotk{}())),
        VarK:SortCellNameCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CellNameCellOpt`(inj{CellNameCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCellNameCellOpt{},R} (
        Lblproject'Coln'CellNameCellOpt{}(kseq{}(inj{SortCellNameCellOpt{}, SortKItem{}}(VarK:SortCellNameCellOpt{}),dotk{}())),
        VarK:SortCellNameCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:CollectedCell`(inj{CollectedCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCollectedCell{},R} (
        Lblproject'Coln'CollectedCell{}(kseq{}(inj{SortCollectedCell{}, SortKItem{}}(VarK:SortCollectedCell{}),dotk{}())),
        VarK:SortCollectedCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:CollectedCellOpt`(inj{CollectedCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCollectedCellOpt{},R} (
        Lblproject'Coln'CollectedCellOpt{}(kseq{}(inj{SortCollectedCellOpt{}, SortKItem{}}(VarK:SortCollectedCellOpt{}),dotk{}())),
        VarK:SortCollectedCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:CommandLine`(inj{CommandLine,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortCommandLine{},R} (
        Lblproject'Coln'CommandLine{}(kseq{}(inj{SortCommandLine{}, SortKItem{}}(VarK:SortCommandLine{}),dotk{}())),
        VarK:SortCommandLine{}),
      \top{R}()))
  [projection{}()]

// rule `project:ConfigGrammarCell`(inj{ConfigGrammarCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortConfigGrammarCell{},R} (
        Lblproject'Coln'ConfigGrammarCell{}(kseq{}(inj{SortConfigGrammarCell{}, SortKItem{}}(VarK:SortConfigGrammarCell{}),dotk{}())),
        VarK:SortConfigGrammarCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ConfigGrammarCellOpt`(inj{ConfigGrammarCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortConfigGrammarCellOpt{},R} (
        Lblproject'Coln'ConfigGrammarCellOpt{}(kseq{}(inj{SortConfigGrammarCellOpt{}, SortKItem{}}(VarK:SortConfigGrammarCellOpt{}),dotk{}())),
        VarK:SortConfigGrammarCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:ConfigInfoCell`(inj{ConfigInfoCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortConfigInfoCell{},R} (
        Lblproject'Coln'ConfigInfoCell{}(kseq{}(inj{SortConfigInfoCell{}, SortKItem{}}(VarK:SortConfigInfoCell{}),dotk{}())),
        VarK:SortConfigInfoCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ConfigInfoCellFragment`(inj{ConfigInfoCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortConfigInfoCellFragment{},R} (
        Lblproject'Coln'ConfigInfoCellFragment{}(kseq{}(inj{SortConfigInfoCellFragment{}, SortKItem{}}(VarK:SortConfigInfoCellFragment{}),dotk{}())),
        VarK:SortConfigInfoCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ConfigInfoCellOpt`(inj{ConfigInfoCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortConfigInfoCellOpt{},R} (
        Lblproject'Coln'ConfigInfoCellOpt{}(kseq{}(inj{SortConfigInfoCellOpt{}, SortKItem{}}(VarK:SortConfigInfoCellOpt{}),dotk{}())),
        VarK:SortConfigInfoCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeclCell`(inj{DeclCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclCell{},R} (
        Lblproject'Coln'DeclCell{}(kseq{}(inj{SortDeclCell{}, SortKItem{}}(VarK:SortDeclCell{}),dotk{}())),
        VarK:SortDeclCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeclCellSet`(inj{DeclCellSet,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclCellSet{},R} (
        Lblproject'Coln'DeclCellSet{}(kseq{}(inj{SortDeclCellSet{}, SortKItem{}}(VarK:SortDeclCellSet{}),dotk{}())),
        VarK:SortDeclCellSet{}),
      \top{R}()))
  [projection{}()]

// rule `project:Declaration`(inj{Declaration,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclaration{},R} (
        Lblproject'Coln'Declaration{}(kseq{}(inj{SortDeclaration{}, SortKItem{}}(VarK:SortDeclaration{}),dotk{}())),
        VarK:SortDeclaration{}),
      \top{R}()))
  [projection{}()]

// rule `project:Declarations`(inj{Declarations,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclarations{},R} (
        Lblproject'Coln'Declarations{}(kseq{}(inj{SortDeclarations{}, SortKItem{}}(VarK:SortDeclarations{}),dotk{}())),
        VarK:SortDeclarations{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeclarationsCell`(inj{DeclarationsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclarationsCell{},R} (
        Lblproject'Coln'DeclarationsCell{}(kseq{}(inj{SortDeclarationsCell{}, SortKItem{}}(VarK:SortDeclarationsCell{}),dotk{}())),
        VarK:SortDeclarationsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeclarationsCellFragment`(inj{DeclarationsCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclarationsCellFragment{},R} (
        Lblproject'Coln'DeclarationsCellFragment{}(kseq{}(inj{SortDeclarationsCellFragment{}, SortKItem{}}(VarK:SortDeclarationsCellFragment{}),dotk{}())),
        VarK:SortDeclarationsCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:DeclarationsCellOpt`(inj{DeclarationsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDeclarationsCellOpt{},R} (
        Lblproject'Coln'DeclarationsCellOpt{}(kseq{}(inj{SortDeclarationsCellOpt{}, SortKItem{}}(VarK:SortDeclarationsCellOpt{}),dotk{}())),
        VarK:SortDeclarationsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Definition`(inj{Definition,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefinition{},R} (
        Lblproject'Coln'Definition{}(kseq{}(inj{SortDefinition{}, SortKItem{}}(VarK:SortDefinition{}),dotk{}())),
        VarK:SortDefinition{}),
      \top{R}()))
  [projection{}()]

// rule `project:DefinitionCell`(inj{DefinitionCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefinitionCell{},R} (
        Lblproject'Coln'DefinitionCell{}(kseq{}(inj{SortDefinitionCell{}, SortKItem{}}(VarK:SortDefinitionCell{}),dotk{}())),
        VarK:SortDefinitionCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:DefinitionCellFragment`(inj{DefinitionCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefinitionCellFragment{},R} (
        Lblproject'Coln'DefinitionCellFragment{}(kseq{}(inj{SortDefinitionCellFragment{}, SortKItem{}}(VarK:SortDefinitionCellFragment{}),dotk{}())),
        VarK:SortDefinitionCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:DefinitionCellOpt`(inj{DefinitionCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefinitionCellOpt{},R} (
        Lblproject'Coln'DefinitionCellOpt{}(kseq{}(inj{SortDefinitionCellOpt{}, SortKItem{}}(VarK:SortDefinitionCellOpt{}),dotk{}())),
        VarK:SortDefinitionCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:DefnAttrsCell`(inj{DefnAttrsCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefnAttrsCell{},R} (
        Lblproject'Coln'DefnAttrsCell{}(kseq{}(inj{SortDefnAttrsCell{}, SortKItem{}}(VarK:SortDefnAttrsCell{}),dotk{}())),
        VarK:SortDefnAttrsCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:DefnAttrsCellOpt`(inj{DefnAttrsCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDefnAttrsCellOpt{},R} (
        Lblproject'Coln'DefnAttrsCellOpt{}(kseq{}(inj{SortDefnAttrsCellOpt{}, SortKItem{}}(VarK:SortDefnAttrsCellOpt{}),dotk{}())),
        VarK:SortDefnAttrsCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:DollarName`(inj{DollarName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortDollarName{},R} (
        Lblproject'Coln'DollarName{}(kseq{}(inj{SortDollarName{}, SortKItem{}}(VarK:SortDollarName{}),dotk{}())),
        VarK:SortDollarName{}),
      \top{R}()))
  [projection{}()]

// rule `project:EKoreDeclaration`(inj{EKoreDeclaration,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEKoreDeclaration{},R} (
        Lblproject'Coln'EKoreDeclaration{}(kseq{}(inj{SortEKoreDeclaration{}, SortKItem{}}(VarK:SortEKoreDeclaration{}),dotk{}())),
        VarK:SortEKoreDeclaration{}),
      \top{R}()))
  [projection{}()]

// rule `project:EKoreKString`(inj{EKoreKString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortEKoreKString{},R} (
        Lblproject'Coln'EKoreKString{}(kseq{}(inj{SortEKoreKString{}, SortKItem{}}(VarK:SortEKoreKString{}),dotk{}())),
        VarK:SortEKoreKString{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExitCodeCell`(inj{ExitCodeCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExitCodeCell{},R} (
        Lblproject'Coln'ExitCodeCell{}(kseq{}(inj{SortExitCodeCell{}, SortKItem{}}(VarK:SortExitCodeCell{}),dotk{}())),
        VarK:SortExitCodeCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ExitCodeCellOpt`(inj{ExitCodeCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortExitCodeCellOpt{},R} (
        Lblproject'Coln'ExitCodeCellOpt{}(kseq{}(inj{SortExitCodeCellOpt{}, SortKItem{}}(VarK:SortExitCodeCellOpt{}),dotk{}())),
        VarK:SortExitCodeCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Float`(inj{Float,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortFloat{},R} (
        Lblproject'Coln'Float{}(kseq{}(inj{SortFloat{}, SortKItem{}}(VarK:SortFloat{}),dotk{}())),
        VarK:SortFloat{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedCounterCell`(inj{GeneratedCounterCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedCounterCell{},R} (
        Lblproject'Coln'GeneratedCounterCell{}(kseq{}(inj{SortGeneratedCounterCell{}, SortKItem{}}(VarK:SortGeneratedCounterCell{}),dotk{}())),
        VarK:SortGeneratedCounterCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCell`(inj{GeneratedTopCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCell{},R} (
        Lblproject'Coln'GeneratedTopCell{}(kseq{}(inj{SortGeneratedTopCell{}, SortKItem{}}(VarK:SortGeneratedTopCell{}),dotk{}())),
        VarK:SortGeneratedTopCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:GeneratedTopCellFragment`(inj{GeneratedTopCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortGeneratedTopCellFragment{},R} (
        Lblproject'Coln'GeneratedTopCellFragment{}(kseq{}(inj{SortGeneratedTopCellFragment{}, SortKItem{}}(VarK:SortGeneratedTopCellFragment{}),dotk{}())),
        VarK:SortGeneratedTopCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:IOError`(inj{IOError,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOError{},R} (
        Lblproject'Coln'IOError{}(kseq{}(inj{SortIOError{}, SortKItem{}}(VarK:SortIOError{}),dotk{}())),
        VarK:SortIOError{}),
      \top{R}()))
  [projection{}()]

// rule `project:IOFile`(inj{IOFile,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOFile{},R} (
        Lblproject'Coln'IOFile{}(kseq{}(inj{SortIOFile{}, SortKItem{}}(VarK:SortIOFile{}),dotk{}())),
        VarK:SortIOFile{}),
      \top{R}()))
  [projection{}()]

// rule `project:IOInt`(inj{IOInt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOInt{},R} (
        Lblproject'Coln'IOInt{}(kseq{}(inj{SortIOInt{}, SortKItem{}}(VarK:SortIOInt{}),dotk{}())),
        VarK:SortIOInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:IOString`(inj{IOString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        Lblproject'Coln'IOString{}(kseq{}(inj{SortIOString{}, SortKItem{}}(VarK:SortIOString{}),dotk{}())),
        VarK:SortIOString{}),
      \top{R}()))
  [projection{}()]

// rule `project:Id`(inj{Id,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortId{},R} (
        Lblproject'Coln'Id{}(kseq{}(inj{SortId{}, SortKItem{}}(VarK:SortId{}),dotk{}())),
        VarK:SortId{}),
      \top{R}()))
  [projection{}()]

// rule `project:Int`(inj{Int,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        Lblproject'Coln'Int{}(kseq{}(inj{SortInt{}, SortKItem{}}(VarK:SortInt{}),dotk{}())),
        VarK:SortInt{}),
      \top{R}()))
  [projection{}()]

// rule `project:KAttributesDeclaration`(inj{KAttributesDeclaration,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKAttributesDeclaration{},R} (
        Lblproject'Coln'KAttributesDeclaration{}(kseq{}(inj{SortKAttributesDeclaration{}, SortKItem{}}(VarK:SortKAttributesDeclaration{}),dotk{}())),
        VarK:SortKAttributesDeclaration{}),
      \top{R}()))
  [projection{}()]

// rule `project:KCell`(inj{KCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCell{},R} (
        Lblproject'Coln'KCell{}(kseq{}(inj{SortKCell{}, SortKItem{}}(VarK:SortKCell{}),dotk{}())),
        VarK:SortKCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:KCellOpt`(inj{KCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKCellOpt{},R} (
        Lblproject'Coln'KCellOpt{}(kseq{}(inj{SortKCellOpt{}, SortKItem{}}(VarK:SortKCellOpt{}),dotk{}())),
        VarK:SortKCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:KDefinition`(inj{KDefinition,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKDefinition{},R} (
        Lblproject'Coln'KDefinition{}(kseq{}(inj{SortKDefinition{}, SortKItem{}}(VarK:SortKDefinition{}),dotk{}())),
        VarK:SortKDefinition{}),
      \top{R}()))
  [projection{}()]

// rule `project:KEY`(inj{KEY,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKEY{},R} (
        Lblproject'Coln'KEY{}(kseq{}(inj{SortKEY{}, SortKItem{}}(VarK:SortKEY{}),dotk{}())),
        VarK:SortKEY{}),
      \top{R}()))
  [projection{}()]

// rule `project:KImport`(inj{KImport,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKImport{},R} (
        Lblproject'Coln'KImport{}(kseq{}(inj{SortKImport{}, SortKItem{}}(VarK:SortKImport{}),dotk{}())),
        VarK:SortKImport{}),
      \top{R}()))
  [projection{}()]

// rule `project:KImportList`(inj{KImportList,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKImportList{},R} (
        Lblproject'Coln'KImportList{}(kseq{}(inj{SortKImportList{}, SortKItem{}}(VarK:SortKImportList{}),dotk{}())),
        VarK:SortKImportList{}),
      \top{R}()))
  [projection{}()]

// rule `project:KItem`(K)=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKItem{},R} (
        Lblproject'Coln'KItem{}(kseq{}(VarK:SortKItem{},dotk{}())),
        VarK:SortKItem{}),
      \top{R}()))
  [projection{}()]

// rule `project:KLabel2`(inj{KLabel2,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKLabel2{},R} (
        Lblproject'Coln'KLabel2{}(kseq{}(inj{SortKLabel2{}, SortKItem{}}(VarK:SortKLabel2{}),dotk{}())),
        VarK:SortKLabel2{}),
      \top{R}()))
  [projection{}()]

// rule `project:KModuleName`(inj{KModuleName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKModuleName{},R} (
        Lblproject'Coln'KModuleName{}(kseq{}(inj{SortKModuleName{}, SortKItem{}}(VarK:SortKModuleName{}),dotk{}())),
        VarK:SortKModuleName{}),
      \top{R}()))
  [projection{}()]

// rule `project:KNeTagSet`(inj{KNeTagSet,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKNeTagSet{},R} (
        Lblproject'Coln'KNeTagSet{}(kseq{}(inj{SortKNeTagSet{}, SortKItem{}}(VarK:SortKNeTagSet{}),dotk{}())),
        VarK:SortKNeTagSet{}),
      \top{R}()))
  [projection{}()]

// rule `project:KPrioritySeq`(inj{KPrioritySeq,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKPrioritySeq{},R} (
        Lblproject'Coln'KPrioritySeq{}(kseq{}(inj{SortKPrioritySeq{}, SortKItem{}}(VarK:SortKPrioritySeq{}),dotk{}())),
        VarK:SortKPrioritySeq{}),
      \top{R}()))
  [projection{}()]

// rule `project:KProduction`(inj{KProduction,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKProduction{},R} (
        Lblproject'Coln'KProduction{}(kseq{}(inj{SortKProduction{}, SortKItem{}}(VarK:SortKProduction{}),dotk{}())),
        VarK:SortKProduction{}),
      \top{R}()))
  [projection{}()]

// rule `project:KProductionItem`(inj{KProductionItem,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKProductionItem{},R} (
        Lblproject'Coln'KProductionItem{}(kseq{}(inj{SortKProductionItem{}, SortKItem{}}(VarK:SortKProductionItem{}),dotk{}())),
        VarK:SortKProductionItem{}),
      \top{R}()))
  [projection{}()]

// rule `project:KProductionWAttr`(inj{KProductionWAttr,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKProductionWAttr{},R} (
        Lblproject'Coln'KProductionWAttr{}(kseq{}(inj{SortKProductionWAttr{}, SortKItem{}}(VarK:SortKProductionWAttr{}),dotk{}())),
        VarK:SortKProductionWAttr{}),
      \top{R}()))
  [projection{}()]

// rule `project:KRequire`(inj{KRequire,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKRequire{},R} (
        Lblproject'Coln'KRequire{}(kseq{}(inj{SortKRequire{}, SortKItem{}}(VarK:SortKRequire{}),dotk{}())),
        VarK:SortKRequire{}),
      \top{R}()))
  [projection{}()]

// rule `project:KRequireList`(inj{KRequireList,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKRequireList{},R} (
        Lblproject'Coln'KRequireList{}(kseq{}(inj{SortKRequireList{}, SortKItem{}}(VarK:SortKRequireList{}),dotk{}())),
        VarK:SortKRequireList{}),
      \top{R}()))
  [projection{}()]

// rule `project:KSort`(inj{KSort,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKSort{},R} (
        Lblproject'Coln'KSort{}(kseq{}(inj{SortKSort{}, SortKItem{}}(VarK:SortKSort{}),dotk{}())),
        VarK:SortKSort{}),
      \top{R}()))
  [projection{}()]

// rule `project:KSortList`(inj{KSortList,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKSortList{},R} (
        Lblproject'Coln'KSortList{}(kseq{}(inj{SortKSortList{}, SortKItem{}}(VarK:SortKSortList{}),dotk{}())),
        VarK:SortKSortList{}),
      \top{R}()))
  [projection{}()]

// rule `project:KinkDeployedDirCell`(inj{KinkDeployedDirCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKinkDeployedDirCell{},R} (
        Lblproject'Coln'KinkDeployedDirCell{}(kseq{}(inj{SortKinkDeployedDirCell{}, SortKItem{}}(VarK:SortKinkDeployedDirCell{}),dotk{}())),
        VarK:SortKinkDeployedDirCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:KinkDeployedDirCellOpt`(inj{KinkDeployedDirCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKinkDeployedDirCellOpt{},R} (
        Lblproject'Coln'KinkDeployedDirCellOpt{}(kseq{}(inj{SortKinkDeployedDirCellOpt{}, SortKItem{}}(VarK:SortKinkDeployedDirCellOpt{}),dotk{}())),
        VarK:SortKinkDeployedDirCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:KoreDeclaration`(inj{KoreDeclaration,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKoreDeclaration{},R} (
        Lblproject'Coln'KoreDeclaration{}(kseq{}(inj{SortKoreDeclaration{}, SortKItem{}}(VarK:SortKoreDeclaration{}),dotk{}())),
        VarK:SortKoreDeclaration{}),
      \top{R}()))
  [projection{}()]

// rule `project:KoreDefinition`(inj{KoreDefinition,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKoreDefinition{},R} (
        Lblproject'Coln'KoreDefinition{}(kseq{}(inj{SortKoreDefinition{}, SortKItem{}}(VarK:SortKoreDefinition{}),dotk{}())),
        VarK:SortKoreDefinition{}),
      \top{R}()))
  [projection{}()]

// rule `project:KoreString`(inj{KoreString,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortKoreString{},R} (
        Lblproject'Coln'KoreString{}(kseq{}(inj{SortKoreString{}, SortKItem{}}(VarK:SortKoreString{}),dotk{}())),
        VarK:SortKoreString{}),
      \top{R}()))
  [projection{}()]

// rule `project:List`(inj{List,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortList{},R} (
        Lblproject'Coln'List{}(kseq{}(inj{SortList{}, SortKItem{}}(VarK:SortList{}),dotk{}())),
        VarK:SortList{}),
      \top{R}()))
  [projection{}()]

// rule `project:LowerName`(inj{LowerName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortLowerName{},R} (
        Lblproject'Coln'LowerName{}(kseq{}(inj{SortLowerName{}, SortKItem{}}(VarK:SortLowerName{}),dotk{}())),
        VarK:SortLowerName{}),
      \top{R}()))
  [projection{}()]

// rule `project:Map`(inj{Map,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortMap{},R} (
        Lblproject'Coln'Map{}(kseq{}(inj{SortMap{}, SortKItem{}}(VarK:SortMap{}),dotk{}())),
        VarK:SortMap{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModCell`(inj{ModCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModCell{},R} (
        Lblproject'Coln'ModCell{}(kseq{}(inj{SortModCell{}, SortKItem{}}(VarK:SortModCell{}),dotk{}())),
        VarK:SortModCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModCellFragment`(inj{ModCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModCellFragment{},R} (
        Lblproject'Coln'ModCellFragment{}(kseq{}(inj{SortModCellFragment{}, SortKItem{}}(VarK:SortModCellFragment{}),dotk{}())),
        VarK:SortModCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModCellSet`(inj{ModCellSet,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModCellSet{},R} (
        Lblproject'Coln'ModCellSet{}(kseq{}(inj{SortModCellSet{}, SortKItem{}}(VarK:SortModCellSet{}),dotk{}())),
        VarK:SortModCellSet{}),
      \top{R}()))
  [projection{}()]

// rule `project:Module`(inj{Module,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModule{},R} (
        Lblproject'Coln'Module{}(kseq{}(inj{SortModule{}, SortKItem{}}(VarK:SortModule{}),dotk{}())),
        VarK:SortModule{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModuleName`(inj{ModuleName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModuleName{},R} (
        Lblproject'Coln'ModuleName{}(kseq{}(inj{SortModuleName{}, SortKItem{}}(VarK:SortModuleName{}),dotk{}())),
        VarK:SortModuleName{}),
      \top{R}()))
  [projection{}()]

// rule `project:Modules`(inj{Modules,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModules{},R} (
        Lblproject'Coln'Modules{}(kseq{}(inj{SortModules{}, SortKItem{}}(VarK:SortModules{}),dotk{}())),
        VarK:SortModules{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModulesCell`(inj{ModulesCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModulesCell{},R} (
        Lblproject'Coln'ModulesCell{}(kseq{}(inj{SortModulesCell{}, SortKItem{}}(VarK:SortModulesCell{}),dotk{}())),
        VarK:SortModulesCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModulesCellFragment`(inj{ModulesCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModulesCellFragment{},R} (
        Lblproject'Coln'ModulesCellFragment{}(kseq{}(inj{SortModulesCellFragment{}, SortKItem{}}(VarK:SortModulesCellFragment{}),dotk{}())),
        VarK:SortModulesCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ModulesCellOpt`(inj{ModulesCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortModulesCellOpt{},R} (
        Lblproject'Coln'ModulesCellOpt{}(kseq{}(inj{SortModulesCellOpt{}, SortKItem{}}(VarK:SortModulesCellOpt{}),dotk{}())),
        VarK:SortModulesCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:NameCell`(inj{NameCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNameCell{},R} (
        Lblproject'Coln'NameCell{}(kseq{}(inj{SortNameCell{}, SortKItem{}}(VarK:SortNameCell{}),dotk{}())),
        VarK:SortNameCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:NameCellOpt`(inj{NameCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNameCellOpt{},R} (
        Lblproject'Coln'NameCellOpt{}(kseq{}(inj{SortNameCellOpt{}, SortKItem{}}(VarK:SortNameCellOpt{}),dotk{}())),
        VarK:SortNameCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Numbers`(inj{Numbers,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortNumbers{},R} (
        Lblproject'Coln'Numbers{}(kseq{}(inj{SortNumbers{}, SortKItem{}}(VarK:SortNumbers{}),dotk{}())),
        VarK:SortNumbers{}),
      \top{R}()))
  [projection{}()]

// rule `project:OptionalAttributes`(inj{OptionalAttributes,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortOptionalAttributes{},R} (
        Lblproject'Coln'OptionalAttributes{}(kseq{}(inj{SortOptionalAttributes{}, SortKItem{}}(VarK:SortOptionalAttributes{}),dotk{}())),
        VarK:SortOptionalAttributes{}),
      \top{R}()))
  [projection{}()]

// rule `project:ParserGeneratorCell`(inj{ParserGeneratorCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortParserGeneratorCell{},R} (
        Lblproject'Coln'ParserGeneratorCell{}(kseq{}(inj{SortParserGeneratorCell{}, SortKItem{}}(VarK:SortParserGeneratorCell{}),dotk{}())),
        VarK:SortParserGeneratorCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:ParserGeneratorCellFragment`(inj{ParserGeneratorCellFragment,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortParserGeneratorCellFragment{},R} (
        Lblproject'Coln'ParserGeneratorCellFragment{}(kseq{}(inj{SortParserGeneratorCellFragment{}, SortKItem{}}(VarK:SortParserGeneratorCellFragment{}),dotk{}())),
        VarK:SortParserGeneratorCellFragment{}),
      \top{R}()))
  [projection{}()]

// rule `project:ParserGeneratorCellOpt`(inj{ParserGeneratorCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortParserGeneratorCellOpt{},R} (
        Lblproject'Coln'ParserGeneratorCellOpt{}(kseq{}(inj{SortParserGeneratorCellOpt{}, SortKItem{}}(VarK:SortParserGeneratorCellOpt{}),dotk{}())),
        VarK:SortParserGeneratorCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Path`(inj{Path,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPath{},R} (
        Lblproject'Coln'Path{}(kseq{}(inj{SortPath{}, SortKItem{}}(VarK:SortPath{}),dotk{}())),
        VarK:SortPath{}),
      \top{R}()))
  [projection{}()]

// rule `project:Pattern`(inj{Pattern,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPattern{},R} (
        Lblproject'Coln'Pattern{}(kseq{}(inj{SortPattern{}, SortKItem{}}(VarK:SortPattern{}),dotk{}())),
        VarK:SortPattern{}),
      \top{R}()))
  [projection{}()]

// rule `project:Patterns`(inj{Patterns,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPatterns{},R} (
        Lblproject'Coln'Patterns{}(kseq{}(inj{SortPatterns{}, SortKItem{}}(VarK:SortPatterns{}),dotk{}())),
        VarK:SortPatterns{}),
      \top{R}()))
  [projection{}()]

// rule `project:Pgm`(inj{Pgm,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPgm{},R} (
        Lblproject'Coln'Pgm{}(kseq{}(inj{SortPgm{}, SortKItem{}}(VarK:SortPgm{}),dotk{}())),
        VarK:SortPgm{}),
      \top{R}()))
  [projection{}()]

// rule `project:PrgGrammarCell`(inj{PrgGrammarCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPrgGrammarCell{},R} (
        Lblproject'Coln'PrgGrammarCell{}(kseq{}(inj{SortPrgGrammarCell{}, SortKItem{}}(VarK:SortPrgGrammarCell{}),dotk{}())),
        VarK:SortPrgGrammarCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:PrgGrammarCellOpt`(inj{PrgGrammarCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPrgGrammarCellOpt{},R} (
        Lblproject'Coln'PrgGrammarCellOpt{}(kseq{}(inj{SortPrgGrammarCellOpt{}, SortKItem{}}(VarK:SortPrgGrammarCellOpt{}),dotk{}())),
        VarK:SortPrgGrammarCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:PrioritySeqBlock`(inj{PrioritySeqBlock,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortPrioritySeqBlock{},R} (
        Lblproject'Coln'PrioritySeqBlock{}(kseq{}(inj{SortPrioritySeqBlock{}, SortKItem{}}(VarK:SortPrioritySeqBlock{}),dotk{}())),
        VarK:SortPrioritySeqBlock{}),
      \top{R}()))
  [projection{}()]

// rule `project:ProdBlock`(inj{ProdBlock,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortProdBlock{},R} (
        Lblproject'Coln'ProdBlock{}(kseq{}(inj{SortProdBlock{}, SortKItem{}}(VarK:SortProdBlock{}),dotk{}())),
        VarK:SortProdBlock{}),
      \top{R}()))
  [projection{}()]

// rule `project:RuleContents`(inj{RuleContents,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortRuleContents{},R} (
        Lblproject'Coln'RuleContents{}(kseq{}(inj{SortRuleContents{}, SortKItem{}}(VarK:SortRuleContents{}),dotk{}())),
        VarK:SortRuleContents{}),
      \top{R}()))
  [projection{}()]

// rule `project:RuleGrammarCell`(inj{RuleGrammarCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortRuleGrammarCell{},R} (
        Lblproject'Coln'RuleGrammarCell{}(kseq{}(inj{SortRuleGrammarCell{}, SortKItem{}}(VarK:SortRuleGrammarCell{}),dotk{}())),
        VarK:SortRuleGrammarCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:RuleGrammarCellOpt`(inj{RuleGrammarCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortRuleGrammarCellOpt{},R} (
        Lblproject'Coln'RuleGrammarCellOpt{}(kseq{}(inj{SortRuleGrammarCellOpt{}, SortKItem{}}(VarK:SortRuleGrammarCellOpt{}),dotk{}())),
        VarK:SortRuleGrammarCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:SCell`(inj{SCell,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSCell{},R} (
        Lblproject'Coln'SCell{}(kseq{}(inj{SortSCell{}, SortKItem{}}(VarK:SortSCell{}),dotk{}())),
        VarK:SortSCell{}),
      \top{R}()))
  [projection{}()]

// rule `project:SCellOpt`(inj{SCellOpt,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSCellOpt{},R} (
        Lblproject'Coln'SCellOpt{}(kseq{}(inj{SortSCellOpt{}, SortKItem{}}(VarK:SortSCellOpt{}),dotk{}())),
        VarK:SortSCellOpt{}),
      \top{R}()))
  [projection{}()]

// rule `project:Set`(inj{Set,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSet{},R} (
        Lblproject'Coln'Set{}(kseq{}(inj{SortSet{}, SortKItem{}}(VarK:SortSet{}),dotk{}())),
        VarK:SortSet{}),
      \top{R}()))
  [projection{}()]

// rule `project:Sort`(inj{Sort,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSort{},R} (
        Lblproject'Coln'Sort{}(kseq{}(inj{SortSort{}, SortKItem{}}(VarK:SortSort{}),dotk{}())),
        VarK:SortSort{}),
      \top{R}()))
  [projection{}()]

// rule `project:SortName`(inj{SortName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSortName{},R} (
        Lblproject'Coln'SortName{}(kseq{}(inj{SortSortName{}, SortKItem{}}(VarK:SortSortName{}),dotk{}())),
        VarK:SortSortName{}),
      \top{R}()))
  [projection{}()]

// rule `project:Sorts`(inj{Sorts,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSorts{},R} (
        Lblproject'Coln'Sorts{}(kseq{}(inj{SortSorts{}, SortKItem{}}(VarK:SortSorts{}),dotk{}())),
        VarK:SortSorts{}),
      \top{R}()))
  [projection{}()]

// rule `project:Strategy`(inj{Strategy,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStrategy{},R} (
        Lblproject'Coln'Strategy{}(kseq{}(inj{SortStrategy{}, SortKItem{}}(VarK:SortStrategy{}),dotk{}())),
        VarK:SortStrategy{}),
      \top{R}()))
  [projection{}()]

// rule `project:Stream`(inj{Stream,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortStream{},R} (
        Lblproject'Coln'Stream{}(kseq{}(inj{SortStream{}, SortKItem{}}(VarK:SortStream{}),dotk{}())),
        VarK:SortStream{}),
      \top{R}()))
  [projection{}()]

// rule `project:String`(inj{String,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblproject'Coln'String{}(kseq{}(inj{SortString{}, SortKItem{}}(VarK:SortString{}),dotk{}())),
        VarK:SortString{}),
      \top{R}()))
  [projection{}()]

// rule `project:Symbol`(inj{Symbol,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSymbol{},R} (
        Lblproject'Coln'Symbol{}(kseq{}(inj{SortSymbol{}, SortKItem{}}(VarK:SortSymbol{}),dotk{}())),
        VarK:SortSymbol{}),
      \top{R}()))
  [projection{}()]

// rule `project:SymbolName`(inj{SymbolName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSymbolName{},R} (
        Lblproject'Coln'SymbolName{}(kseq{}(inj{SortSymbolName{}, SortKItem{}}(VarK:SortSymbolName{}),dotk{}())),
        VarK:SortSymbolName{}),
      \top{R}()))
  [projection{}()]

// rule `project:SyntaxDeclaration`(inj{SyntaxDeclaration,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortSyntaxDeclaration{},R} (
        Lblproject'Coln'SyntaxDeclaration{}(kseq{}(inj{SortSyntaxDeclaration{}, SortKItem{}}(VarK:SortSyntaxDeclaration{}),dotk{}())),
        VarK:SortSyntaxDeclaration{}),
      \top{R}()))
  [projection{}()]

// rule `project:Tag`(inj{Tag,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTag{},R} (
        Lblproject'Coln'Tag{}(kseq{}(inj{SortTag{}, SortKItem{}}(VarK:SortTag{}),dotk{}())),
        VarK:SortTag{}),
      \top{R}()))
  [projection{}()]

// rule `project:TagContent`(inj{TagContent,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTagContent{},R} (
        Lblproject'Coln'TagContent{}(kseq{}(inj{SortTagContent{}, SortKItem{}}(VarK:SortTagContent{}),dotk{}())),
        VarK:SortTagContent{}),
      \top{R}()))
  [projection{}()]

// rule `project:TagContents`(inj{TagContents,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortTagContents{},R} (
        Lblproject'Coln'TagContents{}(kseq{}(inj{SortTagContents{}, SortKItem{}}(VarK:SortTagContents{}),dotk{}())),
        VarK:SortTagContents{}),
      \top{R}()))
  [projection{}()]

// rule `project:UpperName`(inj{UpperName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortUpperName{},R} (
        Lblproject'Coln'UpperName{}(kseq{}(inj{SortUpperName{}, SortKItem{}}(VarK:SortUpperName{}),dotk{}())),
        VarK:SortUpperName{}),
      \top{R}()))
  [projection{}()]

// rule `project:VarName`(inj{VarName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVarName{},R} (
        Lblproject'Coln'VarName{}(kseq{}(inj{SortVarName{}, SortKItem{}}(VarK:SortVarName{}),dotk{}())),
        VarK:SortVarName{}),
      \top{R}()))
  [projection{}()]

// rule `project:Variable`(inj{Variable,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVariable{},R} (
        Lblproject'Coln'Variable{}(kseq{}(inj{SortVariable{}, SortKItem{}}(VarK:SortVariable{}),dotk{}())),
        VarK:SortVariable{}),
      \top{R}()))
  [projection{}()]

// rule `project:VariableName`(inj{VariableName,KItem}(K))=>K requires #token("true","Bool") ensures #token("true","Bool") [projection()]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortVariableName{},R} (
        Lblproject'Coln'VariableName{}(kseq{}(inj{SortVariableName{}, SortKItem{}}(VarK:SortVariableName{}),dotk{}())),
        VarK:SortVariableName{}),
      \top{R}()))
  [projection{}()]

// rule `readFile(_)_FILE-UTIL_IOString_String`(S)=>`readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(`#open(_,_)_K-IO_IOInt_String_String`(S,#token("\"r\"","String")),.K,#token("\"\"","String")) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2941d20a0293812bdd5140e78cfabe8a175b7e2b488dff6ffd0cd2c3b91bbfa1) contentStartColumn(8) contentStartLine(29) org.kframework.attributes.Location(Location(29,8,29,86)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        LblreadFile'LParUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'String{}(VarS:SortString{}),
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarS:SortString{},\dv{SortString{}}("r")),dotk{}(),\dv{SortString{}}(""))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("29"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(29,8,29,86)"), UNIQUE'Unds'ID{}("2941d20a0293812bdd5140e78cfabe8a175b7e2b488dff6ffd0cd2c3b91bbfa1")]

// rule `readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(inj{Int,IOInt}(Fd) #as _1,.K,Acc)=>`readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(_1,inj{IOString,KItem}(`#read(_,_)_K-IO_IOString_Int_Int`(Fd,#token("4096","Int"))),Acc) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(eacb9577f320333a32b13b1a45d30a7fc19d3d93300522eb747f20a2f404b6f4) contentStartColumn(8) contentStartLine(30) org.kframework.attributes.Location(Location(30,8,30,89)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(\and{SortIOInt{}}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),Var'Unds'1:SortIOInt{}),dotk{}(),VarAcc:SortString{}),
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(Var'Unds'1:SortIOInt{},kseq{}(inj{SortIOString{}, SortKItem{}}(Lbl'Hash'read'LParUndsCommUndsRParUnds'K-IO'Unds'IOString'Unds'Int'Unds'Int{}(VarFd:SortInt{},\dv{SortInt{}}("4096"))),dotk{}()),VarAcc:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("30"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(30,8,30,89)"), UNIQUE'Unds'ID{}("eacb9577f320333a32b13b1a45d30a7fc19d3d93300522eb747f20a2f404b6f4")]

// rule `readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(inj{Int,IOInt}(Fd) #as _1,inj{String,KItem}(S),Acc)=>`readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(_1,.K,`_+String__STRING_String_String_String`(Acc,S)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(6a9e0f5eb16c370079099f03e723dc4761b488194747390d8190037fefcf2faf) contentStartColumn(8) contentStartLine(32) org.kframework.attributes.Location(Location(32,8,32,86)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortString{},
                    \exists{R} (Var'Unds'0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortIOInt{}, R} (
                  \and{SortIOInt{}} (
                    \and{SortIOInt{}}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),Var'Unds'1:SortIOInt{}),
                    inj{SortInt{}, SortIOInt{}}(Var'Unds'0:SortInt{})
                )),\and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()),
                    kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}())
                )),\and{R} (
                \ceil{SortString{}, R} (
                  \and{SortString{}} (
                    VarAcc:SortString{},
                    Var'Unds'2:SortString{}
                )),
                \top{R} ()
              )))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'3:SortInt{},
                    \exists{R} (Var'Unds'5:SortString{},
                    \exists{R} (Var'Unds'4:SortIOInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortIOInt{}, R} (
                  \and{SortIOInt{}} (
                    \and{SortIOInt{}}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),Var'Unds'1:SortIOInt{}),
                    \and{SortIOInt{}}(inj{SortInt{}, SortIOInt{}}(Var'Unds'3:SortInt{}),Var'Unds'4:SortIOInt{})
                )),\and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()),
                    dotk{}()
                )),\and{R} (
                \ceil{SortString{}, R} (
                  \and{SortString{}} (
                    VarAcc:SortString{},
                    Var'Unds'5:SortString{}
                )),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'12:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortIOInt{}, R} (
                  \and{SortIOInt{}} (
                    \and{SortIOInt{}}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),Var'Unds'1:SortIOInt{}),
                    inj{SortIOError{}, SortIOInt{}}(Lbl'Hash'EBADF{}())
                )),\and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()),
                    dotk{}()
                )),\and{R} (
                \ceil{SortString{}, R} (
                  \and{SortString{}} (
                    VarAcc:SortString{},
                    Var'Unds'12:SortString{}
                )),
                \top{R} ()
              )))
          )),
          \bottom{R}()
        )))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortIOString{},R} (
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(\and{SortIOInt{}}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),Var'Unds'1:SortIOInt{}),kseq{}(inj{SortString{}, SortKItem{}}(VarS:SortString{}),dotk{}()),VarAcc:SortString{}),
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(Var'Unds'1:SortIOInt{},dotk{}(),Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(VarAcc:SortString{},VarS:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("32"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(32,8,32,86)"), owise{}(), UNIQUE'Unds'ID{}("6a9e0f5eb16c370079099f03e723dc4761b488194747390d8190037fefcf2faf")]

// rule `readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(inj{IOError,IOInt}(ERR),.K,Acc)=>inj{IOError,IOString}(ERR) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ab1ec82559680d983e3564f599a93000d970bcf633981afa00d6d867685df73a) contentStartColumn(8) contentStartLine(34) org.kframework.attributes.Location(Location(34,8,34,52)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'1:SortString{},
                    \exists{R} (Var'Unds'0:SortInt{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortIOInt{}, R} (
                  \and{SortIOInt{}} (
                    inj{SortIOError{}, SortIOInt{}}(VarERR:SortIOError{}),
                    inj{SortInt{}, SortIOInt{}}(Var'Unds'0:SortInt{})
                )),\and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    dotk{}(),
                    kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}())
                )),\and{R} (
                \ceil{SortString{}, R} (
                  \and{SortString{}} (
                    VarAcc:SortString{},
                    Var'Unds'1:SortString{}
                )),
                \top{R} ()
              )))
          ))),
          \or{R} (
          \exists{R} (Var'Unds'2:SortInt{},
                    \exists{R} (Var'Unds'3:SortIOInt{},
                    \exists{R} (Var'Unds'4:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortIOInt{}, R} (
                  \and{SortIOInt{}} (
                    inj{SortIOError{}, SortIOInt{}}(VarERR:SortIOError{}),
                    \and{SortIOInt{}}(inj{SortInt{}, SortIOInt{}}(Var'Unds'2:SortInt{}),Var'Unds'3:SortIOInt{})
                )),\and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    dotk{}(),
                    dotk{}()
                )),\and{R} (
                \ceil{SortString{}, R} (
                  \and{SortString{}} (
                    VarAcc:SortString{},
                    Var'Unds'4:SortString{}
                )),
                \top{R} ()
              )))
          )))),
          \or{R} (
          \exists{R} (Var'Unds'11:SortString{},
            \and{R} (
              \top{R}(),
              \and{R} (
                \ceil{SortIOInt{}, R} (
                  \and{SortIOInt{}} (
                    inj{SortIOError{}, SortIOInt{}}(VarERR:SortIOError{}),
                    inj{SortIOError{}, SortIOInt{}}(Lbl'Hash'EBADF{}())
                )),\and{R} (
                \ceil{SortK{}, R} (
                  \and{SortK{}} (
                    dotk{}(),
                    dotk{}()
                )),\and{R} (
                \ceil{SortString{}, R} (
                  \and{SortString{}} (
                    VarAcc:SortString{},
                    Var'Unds'11:SortString{}
                )),
                \top{R} ()
              )))
          )),
          \bottom{R}()
        )))
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortIOString{},R} (
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(inj{SortIOError{}, SortIOInt{}}(VarERR:SortIOError{}),dotk{}(),VarAcc:SortString{}),
        inj{SortIOError{}, SortIOString{}}(VarERR:SortIOError{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("34"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(34,8,34,52)"), owise{}(), UNIQUE'Unds'ID{}("ab1ec82559680d983e3564f599a93000d970bcf633981afa00d6d867685df73a")]

// rule `readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(inj{Int,IOInt}(Fd),inj{String,KItem}(#token("\"\"","String")),Acc)=>`readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(inj{IOError,IOInt}(#EBADF(.KList)),`#close(_)_K-IO_K_Int`(Fd),Acc) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(7d4660cb64a6303bf2bbae5723218f633e6b6b489530d4cc022cf7d39fbcd5ad) contentStartColumn(8) contentStartLine(31) org.kframework.attributes.Location(Location(31,8,31,88)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),kseq{}(inj{SortString{}, SortKItem{}}(\dv{SortString{}}("")),dotk{}()),VarAcc:SortString{}),
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(inj{SortIOError{}, SortIOInt{}}(Lbl'Hash'EBADF{}()),Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(VarFd:SortInt{}),VarAcc:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("31"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(31,8,31,88)"), UNIQUE'Unds'ID{}("7d4660cb64a6303bf2bbae5723218f633e6b6b489530d4cc022cf7d39fbcd5ad")]

// rule `readFileHelper(_,_,_)_FILE-UTIL_IOString_IOInt_K_String`(inj{IOError,IOInt}(#EBADF(.KList)),.K,Acc)=>inj{String,IOString}(Acc) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5c1b572b1091c36814280ce5ab8dff712f87c06242f35f070de321eb437b3dd3) contentStartColumn(8) contentStartLine(33) org.kframework.attributes.Location(Location(33,8,33,52)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        LblreadFileHelper'LParUndsCommUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'IOInt'Unds'K'Unds'String{}(inj{SortIOError{}, SortIOInt{}}(Lbl'Hash'EBADF{}()),dotk{}(),VarAcc:SortString{}),
        inj{SortString{}, SortIOString{}}(VarAcc:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("33"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(33,8,33,52)"), UNIQUE'Unds'ID{}("5c1b572b1091c36814280ce5ab8dff712f87c06242f35f070de321eb437b3dd3")]

// rule `replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,ToReplace,Replacement,Count)=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`replace(_,_,_,_)_STRING_String_String_String_String_Int`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToReplace)),`lengthString(_)_STRING_Int_String`(Source)),ToReplace,Replacement,`_-Int_`(Count,#token("1","Int")))) requires `_>Int_`(Count,#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(b3981a47a7a07dd2dfde8ebb3ce68e70d6c5156c17d5c09d66b69ea0e87e0fc7) contentStartColumn(8) contentStartLine(644) org.kframework.attributes.Location(Location(644,8,647,30)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-'Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},VarCount:SortInt{}),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})),VarToReplace:SortString{},VarReplacement:SortString{},Lbl'Unds'-Int'Unds'{}(VarCount:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("644"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(644,8,647,30)"), UNIQUE'Unds'ID{}("b3981a47a7a07dd2dfde8ebb3ce68e70d6c5156c17d5c09d66b69ea0e87e0fc7")]

// rule `replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,_0,_1,#token("0","Int"))=>Source requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2e9795f7b294b7323b7f94a3bf4f1e087cb354583562eeef3dc19404700a9842) contentStartColumn(8) contentStartLine(648) org.kframework.attributes.Location(Location(648,8,648,49)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},Var'Unds'0:SortString{},Var'Unds'1:SortString{},\dv{SortInt{}}("0")),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("648"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(648,8,648,49)"), UNIQUE'Unds'ID{}("2e9795f7b294b7323b7f94a3bf4f1e087cb354583562eeef3dc19404700a9842")]

// rule `replaceAll(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,Replacement)=>`replace(_,_,_,_)_STRING_String_String_String_String_Int`(Source,ToReplace,Replacement,`countAllOccurrences(_,_)_STRING_Int_String_String`(Source,ToReplace)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(2131063d78b401e8a24c24b15e0e699b923c56e90f2a19d1bb495d839d0b7839) contentStartColumn(8) contentStartLine(649) org.kframework.attributes.Location(Location(649,8,649,154)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceAll'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lblreplace'LParUndsCommUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{},LblcountAllOccurrences'LParUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("649"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(649,8,649,154)"), UNIQUE'Unds'ID{}("2131063d78b401e8a24c24b15e0e699b923c56e90f2a19d1bb495d839d0b7839")]

// rule `replaceFirst(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,Replacement)=>`_+String__STRING_String_String_String`(`_+String__STRING_String_String_String`(`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,#token("0","Int"),`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int"))),Replacement),`substrString(_,_,_)_STRING_String_String_Int_Int`(Source,`_+Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),`lengthString(_)_STRING_Int_String`(ToReplace)),`lengthString(_)_STRING_Int_String`(Source))) requires `_>=Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(39191889a120cf96dbb556bc016de17e654b155631892bfbdd3bac9737b6ed8d) contentStartColumn(8) contentStartLine(637) org.kframework.attributes.Location(Location(637,8,639,66)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-GT-Eqls'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},VarReplacement:SortString{}),
        Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(Lbl'UndsPlus'String'UndsUnds'STRING'Unds'String'Unds'String'Unds'String{}(LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},\dv{SortInt{}}("0"),LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0"))),VarReplacement:SortString{}),LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarSource:SortString{},Lbl'UndsPlus'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarToReplace:SortString{})),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarSource:SortString{})))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("637"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(637,8,639,66)"), UNIQUE'Unds'ID{}("39191889a120cf96dbb556bc016de17e654b155631892bfbdd3bac9737b6ed8d")]

// rule `replaceFirst(_,_,_)_STRING_String_String_String_String`(Source,ToReplace,_0)=>Source requires `_<Int_`(`findString(_,_,_)_STRING_Int_String_String_Int`(Source,ToReplace,#token("0","Int")),#token("0","Int")) ensures #token("true","Bool") [UNIQUE_ID(16736238f7cc0d390af2ede3c6b2c558825a4e3886423d22ebadf36e7a6719cc) contentStartColumn(8) contentStartLine(640) org.kframework.attributes.Location(Location(640,8,641,57)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'Unds-LT-'Int'Unds'{}(LblfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarSource:SortString{},VarToReplace:SortString{},\dv{SortInt{}}("0")),\dv{SortInt{}}("0")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortString{},R} (
        LblreplaceFirst'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'String'Unds'String{}(VarSource:SortString{},VarToReplace:SortString{},Var'Unds'0:SortString{}),
        VarSource:SortString{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("640"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(640,8,641,57)"), UNIQUE'Unds'ID{}("16736238f7cc0d390af2ede3c6b2c558825a4e3886423d22ebadf36e7a6719cc")]

// rule `rfindChar(_,_,_)_STRING_Int_String_String_Int`(S1,S2,I)=>`maxInt(_,_)_INT-COMMON_Int_Int_Int`(`rfindString(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("0","Int"),#token("1","Int")),I),`rfindChar(_,_,_)_STRING_Int_String_String_Int`(S1,`substrString(_,_,_)_STRING_String_String_Int_Int`(S2,#token("1","Int"),`lengthString(_)_STRING_Int_String`(S2)),I)) requires `_=/=String__STRING_Bool_String_String`(S2,#token("\"\"","String")) ensures #token("true","Bool") [UNIQUE_ID(0cc10e4d97a5f59dbff5a408dd91a50a37b30f9d6c8cddf135d58308b14dc956) contentStartColumn(8) contentStartLine(629) org.kframework.attributes.Location(Location(629,8,629,182)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        Lbl'UndsEqlsSlshEqls'String'UndsUnds'STRING'Unds'Bool'Unds'String'Unds'String{}(VarS2:SortString{},\dv{SortString{}}("")),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},VarS2:SortString{},VarI:SortInt{}),
        LblmaxInt'LParUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int{}(LblrfindString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("0"),\dv{SortInt{}}("1")),VarI:SortInt{}),LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(VarS1:SortString{},LblsubstrString'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'String'Unds'String'Unds'Int'Unds'Int{}(VarS2:SortString{},\dv{SortInt{}}("1"),LbllengthString'LParUndsRParUnds'STRING'Unds'Int'Unds'String{}(VarS2:SortString{})),VarI:SortInt{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("629"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(629,8,629,182)"), UNIQUE'Unds'ID{}("0cc10e4d97a5f59dbff5a408dd91a50a37b30f9d6c8cddf135d58308b14dc956")]

// rule `rfindChar(_,_,_)_STRING_Int_String_String_Int`(_0,#token("\"\"","String"),_1)=>#token("-1","Int") requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(60f67db6063490c1850c8b9f1b0e73e5a3fcba11fc6a2f020e382010ab4c4a2d) contentStartColumn(8) contentStartLine(630) org.kframework.attributes.Location(Location(630,8,630,33)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblrfindChar'LParUndsCommUndsCommUndsRParUnds'STRING'Unds'Int'Unds'String'Unds'String'Unds'Int{}(Var'Unds'0:SortString{},\dv{SortString{}}(""),Var'Unds'1:SortInt{}),
        \dv{SortInt{}}("-1")),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("630"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(630,8,630,33)"), UNIQUE'Unds'ID{}("60f67db6063490c1850c8b9f1b0e73e5a3fcba11fc6a2f020e382010ab4c4a2d")]

// rule `saveToFile(_,_)_FILE-UTIL_K_String_String`(Contents,Path)=>`saveToFileHelper(_,_)_FILE-UTIL_K_IOInt_K`(`#open(_,_)_K-IO_IOInt_String_String`(Path,#token("\"w\"","String")),inj{String,KItem}(Contents)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(ae562667946d07949ca0b21184f2db4d5720731fd8342e40746ee83709fbb7bf) contentStartColumn(8) contentStartLine(10) org.kframework.attributes.Location(Location(10,8,10,82)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortK{},R} (
        LblsaveToFile'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'K'Unds'String'Unds'String{}(VarContents:SortString{},VarPath:SortString{}),
        LblsaveToFileHelper'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'K'Unds'IOInt'Unds'K{}(Lbl'Hash'open'LParUndsCommUndsRParUnds'K-IO'Unds'IOInt'Unds'String'Unds'String{}(VarPath:SortString{},\dv{SortString{}}("w")),kseq{}(inj{SortString{}, SortKItem{}}(VarContents:SortString{}),dotk{}()))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("10"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(10,8,10,82)"), UNIQUE'Unds'ID{}("ae562667946d07949ca0b21184f2db4d5720731fd8342e40746ee83709fbb7bf")]

// rule `saveToFileHelper(_,_)_FILE-UTIL_K_IOInt_K`(inj{Int,IOInt}(Fd) #as _1,inj{String,KItem}(Contents))=>`saveToFileHelper(_,_)_FILE-UTIL_K_IOInt_K`(_1,`#write(_,_)_K-IO_K_Int_String`(Fd,Contents)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(d1dd090e6196b482ef4a889149087ddfd27273a29b445fe89703eae65c9fdbf9) contentStartColumn(8) contentStartLine(11) org.kframework.attributes.Location(Location(11,8,11,95)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortK{},R} (
        LblsaveToFileHelper'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'K'Unds'IOInt'Unds'K{}(\and{SortIOInt{}}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),Var'Unds'1:SortIOInt{}),kseq{}(inj{SortString{}, SortKItem{}}(VarContents:SortString{}),dotk{}())),
        LblsaveToFileHelper'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'K'Unds'IOInt'Unds'K{}(Var'Unds'1:SortIOInt{},Lbl'Hash'write'LParUndsCommUndsRParUnds'K-IO'Unds'K'Unds'Int'Unds'String{}(VarFd:SortInt{},VarContents:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("11"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(11,8,11,95)"), UNIQUE'Unds'ID{}("d1dd090e6196b482ef4a889149087ddfd27273a29b445fe89703eae65c9fdbf9")]

// rule `saveToFileHelper(_,_)_FILE-UTIL_K_IOInt_K`(inj{Int,IOInt}(Fd),.K)=>`#close(_)_K-IO_K_Int`(Fd) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(23e5e758c26751e8ebce36e9b44b0c9efee03095395b619594e319f7584ec7ba) contentStartColumn(8) contentStartLine(12) org.kframework.attributes.Location(Location(12,8,12,50)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortK{},R} (
        LblsaveToFileHelper'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'K'Unds'IOInt'Unds'K{}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),dotk{}()),
        Lbl'Hash'close'LParUndsRParUnds'K-IO'Unds'K'Unds'Int{}(VarFd:SortInt{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("12"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(12,8,12,50)"), UNIQUE'Unds'ID{}("23e5e758c26751e8ebce36e9b44b0c9efee03095395b619594e319f7584ec7ba")]

// rule `saveToTempFile(_,_)_FILE-UTIL_IOString_String_String`(CONTENTS,FTEMPLATE)=>`saveToTempFileHelper1(_,_)_FILE-UTIL_IOString_K_IOFile`(inj{String,KItem}(CONTENTS),`#mkstemp(_)_K-IO_IOFile_String`(FTEMPLATE)) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(723befbf9f746fee3a94b09c00e62c9b9c02a864f12814d8dbcc9e1722f7a293) contentStartColumn(8) contentStartLine(19) org.kframework.attributes.Location(Location(19,8,20,60)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        LblsaveToTempFile'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'String'Unds'String{}(VarCONTENTS:SortString{},VarFTEMPLATE:SortString{}),
        LblsaveToTempFileHelper1'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'K'Unds'IOFile{}(kseq{}(inj{SortString{}, SortKItem{}}(VarCONTENTS:SortString{}),dotk{}()),Lbl'Hash'mkstemp'LParUndsRParUnds'K-IO'Unds'IOFile'Unds'String{}(VarFTEMPLATE:SortString{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("19"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(19,8,20,60)"), UNIQUE'Unds'ID{}("723befbf9f746fee3a94b09c00e62c9b9c02a864f12814d8dbcc9e1722f7a293")]

// rule `saveToTempFileHelper1(_,_)_FILE-UTIL_IOString_K_IOFile`(CONTENTS,#tempFile(FILENAME,Fd))=>`saveToTempFileHelper2(_,_)_FILE-UTIL_IOString_K_String`(`saveToFileHelper(_,_)_FILE-UTIL_K_IOInt_K`(inj{Int,IOInt}(Fd),CONTENTS),FILENAME) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(631e94dc5cdddfe7dc1b3138e4e9747d048cc88bba6f7340f3df987b8c43d3ab) contentStartColumn(8) contentStartLine(21) org.kframework.attributes.Location(Location(21,8,22,78)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        LblsaveToTempFileHelper1'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'K'Unds'IOFile{}(VarCONTENTS:SortK{},Lbl'Hash'tempFile{}(VarFILENAME:SortString{},VarFd:SortInt{})),
        LblsaveToTempFileHelper2'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'K'Unds'String{}(LblsaveToFileHelper'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'K'Unds'IOInt'Unds'K{}(inj{SortInt{}, SortIOInt{}}(VarFd:SortInt{}),VarCONTENTS:SortK{}),VarFILENAME:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("21"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(21,8,22,78)"), UNIQUE'Unds'ID{}("631e94dc5cdddfe7dc1b3138e4e9747d048cc88bba6f7340f3df987b8c43d3ab")]

// rule `saveToTempFileHelper2(_,_)_FILE-UTIL_IOString_K_String`(.K,FILENAME)=>inj{String,IOString}(FILENAME) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(5510e38160f1674636bc0a446e6024829bb3f10b8a13e3dec56ceef7a7ad711d) contentStartColumn(8) contentStartLine(23) org.kframework.attributes.Location(Location(23,8,24,16)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/file-util.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortIOString{},R} (
        LblsaveToTempFileHelper2'LParUndsCommUndsRParUnds'FILE-UTIL'Unds'IOString'Unds'K'Unds'String{}(dotk{}(),VarFILENAME:SortString{}),
        inj{SortString{}, SortIOString{}}(VarFILENAME:SortString{})),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/file-util.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("23"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(23,8,24,16)"), UNIQUE'Unds'ID{}("5510e38160f1674636bc0a446e6024829bb3f10b8a13e3dec56ceef7a7ad711d")]

// rule `signExtendBitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN)=>`_-Int_`(`_modInt_`(`_+Int_`(`bitRangeInt(_,_,_)_INT-COMMON_Int_Int_Int_Int`(I,IDX,LEN),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))),`_<<Int_`(#token("1","Int"),LEN)),`_<<Int_`(#token("1","Int"),`_-Int_`(LEN,#token("1","Int")))) requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(29482d9e60834a65e556af057119896573413bf32b20b7340707b02780d5895c) contentStartColumn(8) contentStartLine(465) org.kframework.attributes.Location(Location(465,8,465,164)) org.kframework.attributes.Source(Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()])]
  axiom{R} \implies{R} (
    \top{R}(),
    \and{R} (
      \equals{SortInt{},R} (
        LblsignExtendBitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),
        Lbl'Unds'-Int'Unds'{}(Lbl'Unds'modInt'Unds'{}(Lbl'UndsPlus'Int'Unds'{}(LblbitRangeInt'LParUndsCommUndsCommUndsRParUnds'INT-COMMON'Unds'Int'Unds'Int'Unds'Int'Unds'Int{}(VarI:SortInt{},VarIDX:SortInt{},VarLEN:SortInt{}),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1")))),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),VarLEN:SortInt{})),Lbl'Unds-LT--LT-'Int'Unds'{}(\dv{SortInt{}}("1"),Lbl'Unds'-Int'Unds'{}(VarLEN:SortInt{},\dv{SortInt{}}("1"))))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/kframework-5.0.0/k-distribution/target/release/k/include/builtin/domains.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("465"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(465,8,465,164)"), UNIQUE'Unds'ID{}("29482d9e60834a65e556af057119896573413bf32b20b7340707b02780d5895c")]

// rule `tclosure(_)_DISAMBIGUATE_Set_Set`(R)=>R requires #token("true","Bool") ensures #token("true","Bool") [UNIQUE_ID(c8292a1e57912d83e2af687c4ab424a5b174c14e9889f004f0a5db80d0ac625d) contentStartColumn(8) contentStartLine(43) org.kframework.attributes.Location(Location(43,8,43,24)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]) owise()]
  axiom{R} \implies{R} (
    \and{R} (
      \not{R} (
        \or{R} (
          \exists{R} (Var'Unds'2:SortKItem{},
                    \exists{R} (Var'Unds'3:SortKItem{},
                    \exists{R} (Var'Unds'1:SortKItem{},
                    \exists{R} (Var'Unds'4:SortSet{},
            \and{R} (
              \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Var'Unds'1:SortKItem{},Var'Unds'3:SortKItem{}),Var'Unds'4:SortSet{})),
        \dv{SortBool{}}("true")),
              \and{R} (
                \ceil{SortSet{}, R} (
                  \and{SortSet{}} (
                    VarR:SortSet{},
                    Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Var'Unds'1:SortKItem{},Var'Unds'2:SortKItem{})),LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(Var'Unds'2:SortKItem{},Var'Unds'3:SortKItem{}))),Var'Unds'4:SortSet{})
                )),
                \top{R} ()
              )
          ))))),
          \bottom{R}()
        )
      ),
      \top{R}()
    ),
    \and{R} (
      \equals{SortSet{},R} (
        Lbltclosure'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(VarR:SortSet{}),
        VarR:SortSet{}),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody [klabel(#ruleNoConditions) symbol()]"), contentStartLine{}("43"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(43,8,43,24)"), owise{}(), UNIQUE'Unds'ID{}("c8292a1e57912d83e2af687c4ab424a5b174c14e9889f004f0a5db80d0ac625d")]

// rule `tclosure(_)_DISAMBIGUATE_Set_Set`(`_Set_`(`_Set_`(`SetItem`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(A,B)),`SetItem`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(B,C))),R))=>`tclosure(_)_DISAMBIGUATE_Set_Set`(`_Set_`(`_Set_`(`_Set_`(`SetItem`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(A,B)),`SetItem`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(B,C))),`SetItem`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(A,C))),R)) requires `notBool_`(`Set:in`(`pair(_,_)_DISAMBIGUATE_KItem_KItem_KItem`(A,C),R)) ensures #token("true","Bool") [UNIQUE_ID(94d9f2d8aee78bf5e1451d2504de6a17ab40b0f156b9430126ae21a2fdebd20a) contentStartColumn(8) contentStartLine(40) org.kframework.attributes.Location(Location(40,8,42,39)) org.kframework.attributes.Source(Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)) org.kframework.definition.Production(syntax #RuleContent ::= #RuleBody "requires" K [klabel(#ruleRequires) symbol()])]
  axiom{R} \implies{R} (
    \equals{SortBool{},R}(
        LblnotBool'Unds'{}(LblSet'Coln'in{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(VarA:SortKItem{},VarC:SortKItem{}),VarR:SortSet{})),
        \dv{SortBool{}}("true")),
    \and{R} (
      \equals{SortSet{},R} (
        Lbltclosure'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(VarA:SortKItem{},VarB:SortKItem{})),LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(VarB:SortKItem{},VarC:SortKItem{}))),VarR:SortSet{})),
        Lbltclosure'LParUndsRParUnds'DISAMBIGUATE'Unds'Set'Unds'Set{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(VarA:SortKItem{},VarB:SortKItem{})),LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(VarB:SortKItem{},VarC:SortKItem{}))),LblSetItem{}(Lblpair'LParUndsCommUndsRParUnds'DISAMBIGUATE'Unds'KItem'Unds'KItem'Unds'KItem{}(VarA:SortKItem{},VarC:SortKItem{}))),VarR:SortSet{}))),
      \top{R}()))
  [org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/parser-disamb.k)"), org'Stop'kframework'Stop'definition'Stop'Production{}("syntax #RuleContent ::= #RuleBody \"requires\" K [klabel(#ruleRequires) symbol()]"), contentStartLine{}("40"), contentStartColumn{}("8"), org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(40,8,42,39)"), UNIQUE'Unds'ID{}("94d9f2d8aee78bf5e1451d2504de6a17ab40b0f156b9430126ae21a2fdebd20a")]

endmodule [org'Stop'kframework'Stop'attributes'Stop'Location{}("Location(68,1,70,9)"), org'Stop'kframework'Stop'attributes'Stop'Source{}("Source(/home/dwightguth/k-in-k/bug/./kink.k)")]
