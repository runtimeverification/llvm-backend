version: 13
hook: SET.element LblSetItem{} ()
  arg: kore[Lblc'Unds'SET-FUN-SYNTAX'Unds'Key{}()]
hook result: kore[LblSetItem{}(Lblc'Unds'SET-FUN-SYNTAX'Unds'Key{}())]
hook: SET.element LblSetItem{} ()
  arg: kore[Lblb'Unds'SET-FUN-SYNTAX'Unds'Key{}()]
hook result: kore[LblSetItem{}(Lblb'Unds'SET-FUN-SYNTAX'Unds'Key{}())]
hook: SET.element LblSetItem{} ()
  arg: kore[Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}()]
hook result: kore[LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}())]
hook: SET.concat Lbl'Unds'Set'Unds'{} ()
  arg: kore[LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}())]
  arg: kore[LblSetItem{}(Lblb'Unds'SET-FUN-SYNTAX'Unds'Key{}())]
hook result: kore[Lbl'Unds'Set'Unds'{}(LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}()),LblSetItem{}(Lblb'Unds'SET-FUN-SYNTAX'Unds'Key{}()))]
hook: SET.concat Lbl'Unds'Set'Unds'{} ()
  arg: kore[Lbl'Unds'Set'Unds'{}(LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}()),LblSetItem{}(Lblb'Unds'SET-FUN-SYNTAX'Unds'Key{}()))]
  arg: kore[LblSetItem{}(Lblc'Unds'SET-FUN-SYNTAX'Unds'Key{}())]
hook result: kore[Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(Lblc'Unds'SET-FUN-SYNTAX'Unds'Key{}()),LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}())),LblSetItem{}(Lblb'Unds'SET-FUN-SYNTAX'Unds'Key{}()))]
function: Lbl'Hash'hasKey'LParUndsCommUndsRParUnds'SET-FUN-SYNTAX'Unds'Bool'Unds'Key'Unds'Set{} ()
rule: 98 2
  VarK = kore[Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}()]
  VarS = kore[Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(Lblc'Unds'SET-FUN-SYNTAX'Unds'Key{}()),LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}())),LblSetItem{}(Lblb'Unds'SET-FUN-SYNTAX'Unds'Key{}()))]
hook: SET.element LblSetItem{} (0)
  arg: kore[Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}()]
hook result: kore[LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}())]
hook: SET.in LblSet'Coln'in{} ()
  arg: kore[LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}())]
  arg: kore[Lbl'Unds'Set'Unds'{}(Lbl'Unds'Set'Unds'{}(LblSetItem{}(Lblc'Unds'SET-FUN-SYNTAX'Unds'Key{}()),LblSetItem{}(Lbla'Unds'SET-FUN-SYNTAX'Unds'Key{}())),LblSetItem{}(Lblb'Unds'SET-FUN-SYNTAX'Unds'Key{}()))]
hook result: kore[\dv{SortBool{}}("false")]
hook: MAP.element Lbl'UndsPipe'-'-GT-Unds'{} ()
  arg: kore[\dv{SortKConfigVar{}}("$PGM")]
  arg: kore[\dv{SortBool{}}("false")]
hook result: kore[Lbl'UndsPipe'-'-GT-Unds'{}(\dv{SortKConfigVar{}}("$PGM"),\dv{SortBool{}}("false"))]
hook: MAP.unit Lbl'Stop'Map{} ()
hook result: kore[Lbl'Stop'Map{}()]
hook: MAP.concat Lbl'Unds'Map'Unds'{} ()
  arg: kore[Lbl'Stop'Map{}()]
  arg: kore[Lbl'UndsPipe'-'-GT-Unds'{}(\dv{SortKConfigVar{}}("$PGM"),\dv{SortBool{}}("false"))]
hook result: kore[Lbl'UndsPipe'-'-GT-Unds'{}(\dv{SortKConfigVar{}}("$PGM"),\dv{SortBool{}}("false"))]
function: LblinitGeneratedTopCell{} ()
rule: 102 1
  VarInit = kore[Lbl'UndsPipe'-'-GT-Unds'{}(\dv{SortKConfigVar{}}("$PGM"),\dv{SortBool{}}("false"))]
function: LblinitKCell{} (0)
rule: 103 1
  VarInit = kore[Lbl'UndsPipe'-'-GT-Unds'{}(\dv{SortKConfigVar{}}("$PGM"),\dv{SortBool{}}("false"))]
hook: MAP.lookup LblMap'Coln'lookup{} (0:0:0:0)
  arg: kore[Lbl'UndsPipe'-'-GT-Unds'{}(\dv{SortKConfigVar{}}("$PGM"),\dv{SortBool{}}("false"))]
  arg: kore[\dv{SortKConfigVar{}}("$PGM")]
hook result: kore[\dv{SortBool{}}("false")]
function: Lblproject'Coln'KItem{} (0:0)
rule: 142 1
  VarK = kore[\dv{SortBool{}}("false")]
function: LblinitGeneratedCounterCell{} (1)
rule: 101 0
config: kore[Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\dv{SortBool{}}("false"),dotk{}())),Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")))]
config: kore[Lbl'-LT-'generatedTop'-GT-'{}(Lbl'-LT-'k'-GT-'{}(kseq{}(\dv{SortBool{}}("false"),dotk{}())),Lbl'-LT-'generatedCounter'-GT-'{}(\dv{SortInt{}}("0")))]
